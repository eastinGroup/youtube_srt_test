WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:04.319
你好，这是珍贵的小贩，这是该系列影片中的最后一部影片

00:00:04.319 --> 00:00:08.550
解决Rubik's Cube，我们在其中解决最后一层，所以一旦完成

00:00:08.550 --> 00:00:15.480
这样您就可以解决多维数据集了，我们有两层多维数据集

00:00:15.480 --> 00:00:21.689
解决了，现在的任务是解决最终层的第一步

00:00:21.689 --> 00:00:27.060
过程是在我们没有的立方体中创建一个黄色的十字

00:00:27.060 --> 00:00:31.910
黄色十字架中的任何一块完成您的多维数据集可能有两块

00:00:31.910 --> 00:00:37.350
彼此相邻或彼此相对，所以我将介绍那些我们只是

00:00:37.350 --> 00:00:53.239
我们将需要知道一个移动顺序，因此我们可以从FR u R Prime到Prime Prime F prime

00:00:53.239 --> 00:00:59.550
当您这样做时，如果没有黄色叉号，您最终将得到

00:00:59.550 --> 00:01:07.890
黄色十字架上有两个披萨片，所以在这里我们有两个相邻的片，我们

00:01:07.890 --> 00:01:13.439
想要调整它们的方向，以便它们成为左后卫的零件

00:01:13.439 --> 00:01:17.850
无论从什么角度看，都非常重要，您可以确定方向

00:01:17.850 --> 00:01:21.689
我们将以几种不同的方式来看待给人的脸

00:01:21.689 --> 00:01:27.060
这两块分别是黄色十字的左侧和背面，然后我们开始

00:01:27.060 --> 00:01:35.220
向前并进行FR u R Prime u Prime和F Prime，所以移动顺序相同

00:01:35.220 --> 00:01:43.189
现在，这两个相邻的块将是两个相对的块

00:01:45.770 --> 00:02:01.159
然后我们将看着同一张脸，然后再次移动f R u R prime u

00:02:01.159 --> 00:02:07.100
素数和F素数，这将把我们带到黄十字，所以没关系

00:02:07.100 --> 00:02:11.390
无论您是从没有黄色十字开始还是相邻两块开始

00:02:11.390 --> 00:02:18.590
相反的部分，这是您在此时已解决黄色十字的方法

00:02:18.590 --> 00:02:22.880
解决了队列的两层，您解决了白色的层

00:02:22.880 --> 00:02:29.780
中间层，现在您有一个黄色的十字，所以现在我们要

00:02:29.780 --> 00:02:35.300
要做的是将棋子放置在黄色十字上，以使边缘与

00:02:35.300 --> 00:02:42.830
中心，因此将立方体转过来并首先检查它是否没有边缘

00:02:42.830 --> 00:02:46.910
匹配，所以让我们旋转它，直到有一个

00:02:46.910 --> 00:02:52.970
匹配，当您有一个匹配时，要么是两个

00:02:52.970 --> 00:02:57.829
相反的部分，我们有匹配的绿色和蓝色，或者它们会

00:02:57.829 --> 00:03:02.239
如果是两个相邻的部分，在这种情况下，您可能还需要解决所有这四个问题

00:03:02.239 --> 00:03:05.900
您已经完成工作，但让我们从最糟糕的情况开始，他们两岁

00:03:05.900 --> 00:03:11.269
匹配的相对两侧，所以请看相对的一侧之一

00:03:11.269 --> 00:03:30.360
然后执行R u R prime u R uu和R Prime

00:03:30.360 --> 00:03:35.850
这将使我们进入案件，或者我们有两个相邻的案件

00:03:35.850 --> 00:03:43.560
现在，在这种情况下，我们需要对两个都匹配且很好的片段进行转置

00:03:43.560 --> 00:03:47.790
不匹配的部分，让我们看一下匹配的两个部分，

00:03:47.790 --> 00:03:52.770
将它们放在右侧和背面，这就是您要调整其方向的方式

00:03:52.770 --> 00:03:57.090
然后看一张脸，使您要匹配的相邻对象正确

00:03:57.090 --> 00:04:05.660
侧面和背面，然后我们继续进行相同的动作，如果您是Prime

00:04:05.660 --> 00:04:21.030
你是你是总理，最后是你，现在我们将拥有全部四个

00:04:21.030 --> 00:04:28.710
黄色十字的边缘块匹配好了，现在我们有了一个立方体

00:04:28.710 --> 00:04:35.340
完全解决了两层的问题，当我们看黄层时，

00:04:35.340 --> 00:04:39.840
已经制作了白色十字，所以下一步是将角

00:04:39.840 --> 00:04:46.550
正确的位置，因此我们检查是否有任何角在正确的位置

00:04:46.550 --> 00:04:52.050
此蓝色与蓝色匹配，但橙色与红色不匹配，绿色

00:04:52.050 --> 00:04:57.930
匹配绿色，但是橙色不匹配红色，这里我们有红色

00:04:57.930 --> 00:05:08.310
与橙色不匹配，最后我们看到原产地为红色，所以这些都不是

00:05:08.310 --> 00:05:13.800
四个角位于正确的位置，您的多维数据集可能还有几个，但这是

00:05:13.800 --> 00:05:31.430
你要做什么你是素数L素数R R素数u素数

00:05:31.599 --> 00:05:34.619
和我

00:05:36.860 --> 00:05:43.270
因此，这将使至少一个角进入正确的位置，

00:05:43.270 --> 00:05:48.440
这是角落之一，所以这里有绿色和橙色

00:05:48.440 --> 00:05:55.720
正确的位置，以便剩余的角不在正确的位置

00:05:55.720 --> 00:06:00.140
因此，我们将再次执行相同的操作，将正确的角放在

00:06:00.140 --> 00:06:15.680
您正在看的脸的右上角，所以我们走了

00:06:15.680 --> 00:06:26.120
素数u素数和L素数，这将移动其他角，因此不会

00:06:26.120 --> 00:06:31.190
不管他们现在的方向是否正确，我们都看到了

00:06:31.190 --> 00:06:34.850
正确的是，没有一个拐角实际上已经移到正确的位置，所以我们

00:06:34.850 --> 00:06:52.520
继续并再次进行移动u R u Prime L Prime u R prime u Prime和L

00:06:52.520 --> 00:07:01.040
现在我们实际上将所有角落都放置在正确的位置

00:07:01.040 --> 00:07:04.340
他们中的人没有正确的方向，这就是我们要解决的问题

00:07:04.340 --> 00:07:06.970
下一个视频

00:07:10.129 --> 00:07:12.189
你

00:07:13.659 --> 00:07:19.580
好吧，我们快完成了，我们有两层多维数据集完全解决了

00:07:19.580 --> 00:07:24.289
解决了黄色的十字，现在所有的角都在正确的位置

00:07:24.289 --> 00:07:29.900
位置，但方向可能不正确，因此只有一招

00:07:29.900 --> 00:07:35.990
我们需要使用它们将它们放置在正确的方向，以便观察任何

00:07:35.990 --> 00:07:48.610
我们去素D的面孔我们素D的面孔

00:07:53.950 --> 00:07:58.240
我们看了一下黄色是否在顶部，因为不是那样，我们做同样的事情

00:07:58.240 --> 00:08:07.120
再次移动，我们去素数D素色D，现在这个黄色在最上面

00:08:07.120 --> 00:08:12.130
重要的是，我们握住立方体，看着同一张脸，然后旋转

00:08:12.130 --> 00:08:28.020
就在最上面，我们重复相同的顺序，我们去素数D素数我们的D

00:08:28.020 --> 00:08:39.910
黄色不在顶部，所以我们再做一次我们的素数D素数我们的D黄色是

00:08:39.910 --> 00:08:44.710
不在顶部，所以我们将不得不再做两次素数D素数的操作

00:08:44.710 --> 00:08:57.760
我们的D，最后再一次是素数D素数R和D，现在当我们旋转

00:08:57.760 --> 00:09:03.580
在顶层的立方体中，我们有两个角位于正确的位置

00:09:03.580 --> 00:09:11.260
和正确的方向，我们有两个角落需要解决，所以

00:09:11.260 --> 00:09:14.920
我们将重复此过程，我们看看其中一张脸

00:09:14.920 --> 00:09:23.650
角落没有正确的方向，我们走了，我们要解决这些问题

00:09:23.650 --> 00:09:34.350
两个角使用相同的移动顺序，所以我们去素数D素数D

00:09:34.440 --> 00:09:43.300
然后我们的素数D素数我们的T素素我们仍然看不到顶部的黄色，所以我们去了

00:09:43.300 --> 00:09:46.800
向前，再做两次

00:09:49.210 --> 00:09:53.770
在这一点上，我们再次非常重要地看到黄色

00:09:53.770 --> 00:10:00.730
看着同一张绿色的脸，只需将其转至顶部，我们将执行相同的操作

00:10:00.730 --> 00:10:12.310
移动的顺序我们的素数D素数我们的素数D我们的素数D素数我们的D素数

00:10:12.310 --> 00:10:18.210
指向正确的角，我们已经解决了立方体

00:10:19.440 --> 00:10:24.280
还有一种情况需要考虑，假设您有一个具有两层的多维数据集

00:10:24.280 --> 00:10:31.330
解决了您有一个黄色的十字，并且您的角处于正确的位置

00:10:31.330 --> 00:10:38.770
但是其中三个没有正确的方向，所以我们要做

00:10:38.770 --> 00:10:49.240
素数D素数D，我们一直这样做，直到看到黄色

00:10:49.240 --> 00:10:57.880
顶部，所以我们去了素数D，素数是D，我们仍然看不到黄色，所以我们

00:10:57.880 --> 00:11:05.920
继续做我们的素D素D我们的素D素我们D，现在变成黄色

00:11:05.920 --> 00:11:10.720
正确地定位在此角的顶部，因此方向正确

00:11:10.720 --> 00:11:15.160
握住那张脸，我们只把顶部转过来，我们将做同样的事情

00:11:15.160 --> 00:11:22.510
移动顺序再次如此，所以我们的素数D素数我们的素数D我们的素数D素数

00:11:22.510 --> 00:11:29.200
D，所以我们在顶部看不到黄色，所以我们需要做同样的事情

00:11:29.200 --> 00:11:36.310
序列再移动两次R素数D素数Rd我们的素数D素数我们的D现在我们

00:11:36.310 --> 00:11:41.590
在顶部看到黄色，我们再次将顶部转到顶部

00:11:41.590 --> 00:11:47.380
我们正在研究，我们将再次执行此一系列动作

00:11:47.380 --> 00:11:54.460
直到我们以正确的方向找到那个角，所以非常重要的是

00:11:54.460 --> 00:11:58.360
你仔细缓慢地做这些动作，我会做得更快，因为我知道

00:11:58.360 --> 00:12:02.380
我已经做过很多次了，但是最终你会在那儿发黄。

00:12:02.380 --> 00:12:05.889
顶部，然后旋转顶层，您

00:12:05.889 --> 00:12:12.369
解决多维数据集，我希望您喜欢整个系列，请订阅我的

00:12:12.369 --> 00:12:16.749
频道我制作了有关数学和游戏理论的视频，您可以在patreon上为我提供支持

00:12:16.749 --> 00:12:22.509
让我在我的博客上关注您在Twitter压力下在Locker上所做的决定，而您

00:12:22.509 --> 00:12:26.279
可以将我的书列在我的网站上

