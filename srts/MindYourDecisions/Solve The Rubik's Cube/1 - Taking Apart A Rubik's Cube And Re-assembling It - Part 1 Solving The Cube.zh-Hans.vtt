WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:04.290
您好，这是Presto Walker，我将教您如何解决

00:00:04.290 --> 00:00:08.880
在第一个视频中，Rubik's Cube我将解释您如何解决该立方体

00:00:08.880 --> 00:00:13.259
通过作弊这并不是真的，所以你实际上是在作弊，但这是为了解释

00:00:13.259 --> 00:00:18.960
视频中要遵循的立方体我将解释移动符号和

00:00:18.960 --> 00:00:24.390
然后我将解释解决多维数据集图层的图层方法

00:00:24.390 --> 00:00:29.340
依次解决第一层，中间层和最后一层

00:00:29.340 --> 00:00:41.399
魔方的方块是一个3D拼图，它是最畅销的玩具之一

00:00:41.399 --> 00:00:53.070
每次都有六张不同颜色的面孔可以移动立方体

00:00:53.070 --> 00:00:59.640
左右移动颜色，是什么使魔方像这样

00:00:59.640 --> 00:01:05.220
有趣的问题是，即使移动几下，颜色也会变得很混乱

00:01:05.220 --> 00:01:11.189
彻底使它感到沮丧的是，当您尝试将多维数据集放回原位时

00:01:11.189 --> 00:01:15.299
如果您不知道自己在做什么，那么似乎只能得到多维数据集

00:01:15.299 --> 00:01:24.659
混合得更多，所以在沮丧中您可能会想作弊，这就是

00:01:24.659 --> 00:01:29.970
现在我们要做的是将多维数据集拆开，然后

00:01:29.970 --> 00:01:37.079
重新组装零件到正确的位置，现在请多加注意

00:01:37.079 --> 00:01:41.250
不建议您这样做，因为您有时会发现它实际上令人沮丧

00:01:41.250 --> 00:01:46.049
这不是一件容易的事，另一个问题是，这将带给我们

00:01:46.049 --> 00:01:52.170
将其分开将近十分钟，然后将其放回原处，如果相反，

00:01:52.170 --> 00:01:56.340
请按照以下视频中的说明进行操作，即可解决

00:01:56.340 --> 00:02:01.860
在短短的几分钟之内就可以立方体，它比您作弊还要令人印象深刻

00:02:01.860 --> 00:02:07.469
好的，一旦我有一块被网状取出的东西，我将慢慢地将其移除

00:02:07.469 --> 00:02:11.680
剩下的碎片，拆开魔方

00:02:11.680 --> 00:02:15.650
我之所以这样做，是因为很容易在其中丢失一块

00:02:15.650 --> 00:02:22.850
过程，否则它们会飞到任何地方，但我这样做的原因不只是

00:02:22.850 --> 00:02:28.220
请客，然后到盐位，因为我知道如何解决大海，但是

00:02:28.220 --> 00:02:32.870
关键是我想向您展示魔方的解剖结构或骨骼

00:02:32.870 --> 00:02:43.310
立方体有六个具有不同颜色的面，这些面是什么

00:02:43.310 --> 00:02:50.390
重要的是，它们不移动，这些零件是完全固定的，并且

00:02:50.390 --> 00:02:56.060
解决魔方的关键是要将剩余的部分移动到

00:02:56.060 --> 00:03:05.870
匹配它们，因此白色的脸将始终与黄色的脸相对，而橙色

00:03:05.870 --> 00:03:10.519
脸将与红色相对，而蓝色和绿色将相对

00:03:10.519 --> 00:03:15.140
彼此相对，因此您可以旋转零件，但它们永远不会

00:03:15.140 --> 00:03:27.549
现在可以移动到其他位置，然后再将多维数据集放回原处

00:03:27.549 --> 00:03:33.829
将您可以考虑的碎片整理起来，例如解决拼图游戏

00:03:33.829 --> 00:03:39.560
在这里，您将棋子分成角棋子，棋子棋子和棋盘棋子

00:03:39.560 --> 00:03:47.230
魔方的碎片，我们将使用类似的分组

00:03:47.230 --> 00:03:51.920
有些作品上会有白色，这意味着他们将拥有

00:03:51.920 --> 00:03:57.440
匹配白色的中心脸，我们知道这些碎片都可以放在一个

00:03:57.440 --> 00:04:03.140
组其他作品将是黄色的，这意味着他们将不得不继续

00:04:03.140 --> 00:04:08.989
与白脸相对的一面，中间有一个黄色的中心

00:04:08.989 --> 00:04:13.130
这些碎片将既没有白色也没有黄色，并且这些碎片将进入

00:04:13.130 --> 00:04:19.970
中心还有一些细分，这是其中的一些

00:04:19.970 --> 00:04:24.830
件将是角件，将有三种颜色

00:04:24.830 --> 00:04:32.330
在它们上，其中一些将是仅具有两种颜色的边缘块，因此

00:04:32.330 --> 00:04:38.599
我将这些碎片分成五堆，每堆各有四块，现在

00:04:38.599 --> 00:04:43.039
要解决，我们将解释layer方法如何解决

00:04:43.039 --> 00:04:49.129
困惑的第一步是我们要看白居中白脸

00:04:49.129 --> 00:04:55.099
我们将做一个十字架，所以我们将看看边缘的部分，我们

00:04:55.099 --> 00:05:01.280
想要将具有两种颜色的边缘块匹配到的侧面

00:05:01.280 --> 00:05:05.780
其他中心部分不动，所以在这里我们有橙色和白色的边缘

00:05:05.780 --> 00:05:11.120
一块，它必须走到那个位置以匹配白色橙色和白色

00:05:11.120 --> 00:05:20.779
另一面同样是绿色和白色，我们将继续前进

00:05:20.779 --> 00:05:31.539
围绕图层的其余部分，因此我们将红色和白色边缘块放置在适当的位置

00:05:32.620 --> 00:05:43.849
最后，我们将蓝色和白色边缘片放置在适当的位置，这时

00:05:43.849 --> 00:05:51.650
我们已经解决了白色十字，layer方法的下一步是

00:05:51.650 --> 00:06:00.469
解决白色层的角点，所以有四个角点

00:06:00.469 --> 00:06:06.080
我们将找到一组带有白色的角件

00:06:06.080 --> 00:06:16.009
角落，所以在这里我们有橙色，白色和绿色的一面，所以有一个

00:06:16.009 --> 00:06:22.449
有这些颜色的角落，我们将其放置在正确的方向

00:06:25.050 --> 00:06:34.830
然后我们有一个正在问候红色和白色的角落，我们找到了那个角落，

00:06:34.830 --> 00:06:39.540
也将其放置在正确的方向

00:06:44.760 --> 00:06:49.530
如您所见，当我将多维数据集放回去时，有一些

00:06:49.530 --> 00:06:56.070
困难，这是这种作弊方法的另一个问题

00:06:56.070 --> 00:07:00.720
我们放入红色的蓝色和白色，现在很难握住它

00:07:00.720 --> 00:07:05.700
在一起，但是我们只有一个角落要走，那就是蓝色的橙色和白色

00:07:05.700 --> 00:07:17.970
拐角处，所以现在我们把它弄碎了，我们将其放回原处

00:07:17.970 --> 00:07:24.060
所以现在我们解决了多维数据集的一层，所有这些片段都放在了

00:07:24.060 --> 00:07:34.320
正确的位置，它们不仅匹配白色的所有部件

00:07:34.320 --> 00:07:39.900
白色的一面是白色，但它们也与中心部分的颜色相匹配

00:07:39.900 --> 00:07:48.960
另一方面，这很重要。layer方法的下一步是

00:07:48.960 --> 00:07:55.350
求解中间层，所以有四块，每块有两种颜色

00:07:55.350 --> 00:08:01.590
我们将要匹配两种颜色的边，以便获得

00:08:01.590 --> 00:08:07.950
这里有四个，我们要匹配一个绿色和橙色的边缘

00:08:07.950 --> 00:08:12.630
件在中间层，所以我们将找到该件，然后将其放入

00:08:12.630 --> 00:08:21.780
正确的方向，我们将继续围绕我们要匹配的中间层

00:08:21.780 --> 00:08:27.740
正确方向的橙色和蓝色碎片

00:08:33.140 --> 00:08:47.250
我们将继续匹配蓝色和红色的块，最后我们得到红色和

00:08:47.250 --> 00:08:57.360
绿色部分，所以一旦我们将其放置到位，我们就解决了第二个问题

00:08:57.360 --> 00:09:01.170
层，现在我们有两层完全解决了，我们有底部

00:09:01.170 --> 00:09:08.460
层和中间层，我们只有一层要解决的问题是

00:09:08.460 --> 00:09:16.830
黄色的一面，我们将通过创建一个十字来解决这个问题，所以我们去

00:09:16.830 --> 00:09:23.220
向前并匹配一侧有黄色的边缘块并将其匹配到

00:09:23.220 --> 00:09:32.940
另一侧的颜色我们将绕过该层的其余部分并放入

00:09:32.940 --> 00:09:38.010
在剩下的边缘部分中，当我们实际解决顶部视频时

00:09:38.010 --> 00:09:42.630
层，我们将略有不同，我们将创建一个

00:09:42.630 --> 00:09:47.100
黄色十字而不考虑其他方面，但接下来我们要

00:09:47.100 --> 00:09:52.080
向您展示如何移动这些片段，因此最终您将创建一个

00:09:52.080 --> 00:09:59.160
黄色十字线，其中所有边缘块均与中心线块匹配

00:09:59.160 --> 00:10:07.290
两侧，所以我们只剩下一块蓝色和黄色

00:10:07.290 --> 00:10:12.540
开始将这些零件放进去变得越来越困难，因为其他所有零件都在其中

00:10:12.540 --> 00:10:19.290
立方体，但我要继续尝试将其卡入到位，好吧

00:10:19.290 --> 00:10:25.230
实际上我在这里犯了一个错误，我将其颠倒了，如果您愿意，

00:10:25.230 --> 00:10:28.800
像这样犯一个错误，同时将多维数据集放回去，这非常

00:10:28.800 --> 00:10:35.100
重要的是您将其放置在正确的位置，原因是如果您

00:10:35.100 --> 00:10:40.950
翻转其中一块，实际上将立方体放置在无法解决的位置，所以去

00:10:40.950 --> 00:10:44.450
向前并解决该问题，并

00:10:44.850 --> 00:10:49.300
这是一个问题，如果您拆解多维数据集可以将其放回原处

00:10:49.300 --> 00:10:55.720
以错误的方式好吧，最后我们有四个角落，我们将

00:10:55.720 --> 00:11:07.180
匹配正确的颜色，并将所有这四个角放到适当的位置

00:11:07.180 --> 00:11:12.640
变得很难在其中折断碎片也将一点点

00:11:12.640 --> 00:11:17.740
随着我们得到越来越多的零件，机械地解决立方体变得越来越困难，因为

00:11:17.740 --> 00:11:21.970
我们想要在不弄乱其余部分的情况下移动这些片段

00:11:21.970 --> 00:11:30.730
立方体，但是一旦完成，就把最后一块放进去，然后

00:11:30.730 --> 00:11:36.100
将有一个已解决的多维数据集，所以这就是您在解决该魔方的过程中作弊的方法

00:11:36.100 --> 00:11:40.090
在其余的视频中，我将向您展示如何正确地解决多维数据集

00:11:40.090 --> 00:11:45.370
通过学习特定的移动组合来移动边缘和拐角的方式

00:11:45.370 --> 00:11:50.290
我希望您喜欢这部影片，请点阅以观看

00:11:50.290 --> 00:11:56.710
下一个解释移动符号的视频请订阅我的频道

00:11:56.710 --> 00:12:03.430
您可以在patreon上支持我以获得独家奖励，将我吸引到我的博客中

00:12:03.430 --> 00:12:08.350
记住在Locker压力下在Twitter上做出的决定，就可以得到我的书

00:12:08.350 --> 00:12:11.820
在我的网站上列出

