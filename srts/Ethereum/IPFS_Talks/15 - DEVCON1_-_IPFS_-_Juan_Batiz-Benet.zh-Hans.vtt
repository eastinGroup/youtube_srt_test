WEBVTT
Kind: captions
Language: zh-Hans

00:00:16.460 --> 00:00:24.180
好吧，我们开始吧，所以我叫胡安

00:00:24.180 --> 00:00:29.130
ipfs背后的人，今天我将与您谈谈数据和数据

00:00:29.130 --> 00:00:33.420
结构，这样的谈话是这样构成的，我会给你一个简短的

00:00:33.420 --> 00:00:38.100
ipfs简介实际上，这里有多少人已经知道我的想法，如果

00:00:38.100 --> 00:00:44.940
sis Wow太棒了，这是一个很好的发行版，它很快就会发布

00:00:44.940 --> 00:00:50.460
我们将介绍IP LD数据模型，然后再讨论用例和

00:00:50.460 --> 00:00:54.980
ipfs和数据结构等的示例

00:00:54.980 --> 00:01:00.660
好的，因此ipfs的另一个名称是分布式Web或永久Web

00:01:00.660 --> 00:01:07.680
或为了纪念拉尔夫·默克尔而在默克尔网上，从某种意义上讲，就是这种

00:01:07.680 --> 00:01:11.700
网络上NRI的结构演变，我想这里的每个人

00:01:11.700 --> 00:01:17.340
两者都来自以太坊的区块链历史2和一大堆

00:01:17.340 --> 00:01:19.560
现在正在发生的其他有趣的技术

00:01:19.560 --> 00:01:23.580
看看过去三年发生了什么事或发生了什么事

00:01:23.580 --> 00:01:28.740
这样彻底改造了如何进行分布式计算和分布式

00:01:28.740 --> 00:01:34.290
网络以及总体而言，这当然是在旧的基础上进行的分层

00:01:34.290 --> 00:01:38.009
互联网等等，但是真正发生的是我们正在使用网络

00:01:38.009 --> 00:01:44.250
您知道Web 1.0或Web 2.0世界的应用程序，我们正在将它们分开

00:01:44.250 --> 00:01:50.009
从它们在服务器等中的物理位置分布

00:01:50.009 --> 00:01:56.820
它们跨越不同的主机，因此ipfs是升级网络的协议，因为

00:01:56.820 --> 00:02:01.110
网络有一些问题，我不会去解决，这是我想你们中的大多数人

00:02:01.110 --> 00:02:05.549
熟悉它们是一种有效的方法，无法正常工作脱机链接会中断中心

00:02:05.549 --> 00:02:11.080
失败的要点等等，要点是尝试创造出什么

00:02:11.080 --> 00:02:15.280
网页看起来就像是您拿着默克尔树或默克尔链条并将其放置

00:02:15.280 --> 00:02:21.430
在网络本身下面，因此如果您获得了不变性，将会发生什么

00:02:21.430 --> 00:02:26.980
在网络上分发内容我可以想到gits之类的数据结构

00:02:26.980 --> 00:02:30.820
以及您从中获得的分布式计算的强大功能，或者

00:02:30.820 --> 00:02:35.170
只是版本控制就可以考虑以太坊的贡品版本控制

00:02:35.170 --> 00:02:39.820
以及合同和运行程序的惊人力量，您知道

00:02:39.820 --> 00:02:43.450
的意义，当然，在以太坊比特币等等之前，所有这些都是

00:02:43.450 --> 00:02:48.880
默克尔树和ipfs真正是这种巨大的默克尔森林

00:02:48.880 --> 00:02:53.170
就像对IPF资产的直观描述一样，让我们​​来写

00:02:53.170 --> 00:02:58.360
一种传输协议，可在Web之下分层，而其他协议

00:02:58.360 --> 00:03:06.670
并建立所有默克尔的分布式数据结构传输

00:03:06.670 --> 00:03:13.180
解决了很酷的问题，因此请想象能够跨不同的以太坊链进行链接

00:03:13.180 --> 00:03:17.140
并能够跨比特币和以太坊进行链接，并能够链接至

00:03:17.140 --> 00:03:21.610
获取回购协议，并能够链接到BitTorrent种子，或者能够

00:03:21.610 --> 00:03:25.630
直接链接到github内的特定提交中，因此您可以创建一个

00:03:25.630 --> 00:03:29.620
签约并说出您认识的人修补此提交或其他内容

00:03:29.620 --> 00:03:37.540
在ipfs世界（这是一个世界）中成功获得一些钱或其他东西

00:03:37.540 --> 00:03:41.290
本身就有很多不同的协议，我们有这个

00:03:41.290 --> 00:03:45.310
整个世界看起来有点像这样

00:03:45.310 --> 00:03:48.610
这些协议的不同部分

00:03:48.610 --> 00:03:53.170
处于较低层网络的顶部，这当然是所有问题

00:03:53.170 --> 00:03:58.269
在IP之上，尽管它不需要在传输之上

00:03:58.269 --> 00:04:04.000
路由不同的路由方式，我们想对我们所谓的IPL进行分层

00:04:04.000 --> 00:04:09.519
D是默克尔狗或默克尔网，是这种常见的数据结构，

00:04:09.519 --> 00:04:15.280
我们都可以用它来表达我们的数据结构，这与

00:04:15.280 --> 00:04:19.780
语义网，而不是仅仅具有对象定义，想象一下如果

00:04:19.780 --> 00:04:23.560
带有散列的对象之间链接的对象定义

00:04:23.560 --> 00:04:28.630
那就是ipfs的核心，就像核心一样

00:04:28.630 --> 00:04:34.360
URL使用位置从一个对象指向另一个对象的过程

00:04:34.360 --> 00:04:39.520
当您使用散列点时会发生这种情况，而此视频已经存在了

00:04:39.520 --> 00:04:44.470
一段时间，但这次演讲主要是关于我们的松散情况

00:04:44.470 --> 00:04:48.490
描述为数据互联网或要写入的数据结构互联网

00:04:48.490 --> 00:04:53.680
IP LD的顶部，因此您可能已经在ipfs模型中看到过类似的内容

00:04:53.680 --> 00:04:59.740
您是将dns名称映射到IP地址的原始HTTP世界吗？

00:04:59.740 --> 00:05:03.010
看起来像这样，您要通过网络来解决

00:05:03.010 --> 00:05:07.900
特定的主持人，而您却说嘿，让我们仅获取内容的哈希值

00:05:07.900 --> 00:05:14.620
本身，并使用它来解决文件，它看起来而不是你得到

00:05:14.620 --> 00:05:17.889
这样的事情，网络中任何拥有该文件的人都可以为它提供服务

00:05:17.889 --> 00:05:24.970
在您看来，这都是超级介绍ipfs的内容，从某种意义上说，真正的含义是

00:05:24.970 --> 00:05:29.590
内幕下面是，该哈希是指向目录的指针

00:05:29.590 --> 00:05:34.030
您可以检索目录，因为您可以检查并询问网络

00:05:34.030 --> 00:05:37.060
对于目录的人可以将目录返回给您，您可以检查

00:05:37.060 --> 00:05:40.750
内容确保它与哈希匹配，这样您就不必信任任何人

00:05:40.750 --> 00:05:46.180
然后在其中查找foo，这意味着在其中

00:05:46.180 --> 00:05:51.039
对象，该对象是指向另一个哈希的链接，并且您正在使用

00:05:51.039 --> 00:05:55.810
解决下一步的问题，依此类推，这就是

00:05:55.810 --> 00:06:02.350
带有inode的文件系统，但用哈希替换inode，当然这是

00:06:02.350 --> 00:06:08.370
默克尔链接，您将获得这种图的全路径逆转

00:06:08.370 --> 00:06:13.120
因此，如果您想象一个像这样分层的区块链，那么您将拥有一条巨大的道路

00:06:13.120 --> 00:06:15.759
像父母父母父母Peron Peron Peron

00:06:15.759 --> 00:06:18.729
和某人右下，但您想像自己就能直接建立索引

00:06:18.729 --> 00:06:24.490
进入特定的区块，并能够进行交易等等

00:06:24.490 --> 00:06:30.400
因此，我猜想IPS链接领域是您首先要解决的内容

00:06:30.400 --> 00:06:36.340
链接，它们以斜杠ipfs开头，然后有一个哈希，然后剩下的

00:06:36.340 --> 00:06:40.360
这些东西，顺便说一下，这些是缩短的哈希值，我还没有找到

00:06:40.360 --> 00:06:43.479
神奇地压缩信息的方法，这就是我应该拍摄的

00:06:43.479 --> 00:06:48.190
256，但它已经转过身，因此适合这里，是的，我们当然有该方案

00:06:48.190 --> 00:06:52.659
标识符，如果您想使用它，但我们建议您不要使用该方案

00:06:52.659 --> 00:06:59.590
标识符，因为我们看待世界的方式基于常规的基于w3c的方案

00:06:59.590 --> 00:07:03.789
标识符破坏了与Unix的兼容性，所以您不能做所有事情，所以

00:07:03.789 --> 00:07:08.500
您可以将其直接放置在任何政治机器之上，以便将其安装

00:07:08.500 --> 00:07:12.909
直接，这样您就可以挂载ipfs，并且可以获取数据并将数据写入到

00:07:12.909 --> 00:07:16.870
您无需教的带有标准老式应用程序的网络

00:07:16.870 --> 00:07:22.630
他们说一些其他协议，并在默克尔之上

00:07:22.630 --> 00:07:28.240
链接起来有点像URI，我用引号说URI，因为我们

00:07:28.240 --> 00:07:34.000
确实希望人们不要使用模式标识符，我们将使一切正常

00:07:34.000 --> 00:07:38.500
并以直截了当的路径来解决问题，我们对我们进行了分层

00:07:38.500 --> 00:07:42.909
也称Meszaros链接为David Missouri的Kadhim作者

00:07:42.909 --> 00:07:47.080
利亚（Leah）在此之前是SF方式的杰出作者，他想出了一个很棒的方法

00:07:47.080 --> 00:07:52.000
在nessip中有一个想法，并且贯穿了整个过程，但是这里的基本概念是

00:07:52.000 --> 00:07:57.610
在ipfs中实现可变性的方法是使用

00:07:57.610 --> 00:08:01.870
公用密钥，并使用这些密钥来解析已使用签名的指针

00:08:01.870 --> 00:08:05.860
私钥哦，它的解释更好，或者在

00:08:05.860 --> 00:08:09.219
网络，但这里还有更多有趣的东西，但这是一个非常微妙的主意

00:08:09.219 --> 00:08:14.560
这为您提供了一种实现命名的方式，这表明它不是人类

00:08:14.560 --> 00:08:17.289
可读，但这是一种以密码方式实现命名的方式

00:08:17.289 --> 00:08:22.479
寻址或以密码为媒介，而不是通过某些中心

00:08:22.479 --> 00:08:26.430
权限并在该可变链接的顶部，然后您可以对名称进行分层

00:08:26.430 --> 00:08:31.300
这就是旧式DNA世界，我们与DNS完全兼容，因此您

00:08:31.300 --> 00:08:35.889
可以将文本记录添加到您的域中，现在您可以通过IP NS或

00:08:35.889 --> 00:08:40.810
直接到我的PFS中，当然，您可以以相同的方式使用以太坊名称

00:08:40.810 --> 00:08:45.550
这样您就可以想象如果您的名字直接解析为

00:08:45.550 --> 00:08:50.649
ipfs以完全相同的方式满足这些要求的有趣之处

00:08:50.649 --> 00:08:53.889
名称的种类就是您不再需要运行任何计算机

00:08:53.889 --> 00:08:58.180
您自己可以创建内容并将其添加到网络中，然后可以创建

00:08:58.180 --> 00:09:02.500
名称和密钥名称以及签名内容，并分发到网络

00:09:02.500 --> 00:09:05.920
然后您可以注册一些名称并将其指向公共密钥的房子

00:09:05.920 --> 00:09:10.269
现在您可以消失，只需将内容添加到网络并走开，

00:09:10.269 --> 00:09:13.600
如果网络将继续为您提供服务，那您知道

00:09:13.600 --> 00:09:17.829
星号，一切将继续正常运行，这就是

00:09:17.829 --> 00:09:24.370
这是非常不同的，您不必维护自己的基础架构，因此

00:09:24.370 --> 00:09:30.459
通常不是很明显，所以我将仔细研究ifs内容和复制

00:09:30.459 --> 00:09:34.390
建模这就像大多数人在这里不期望的那样

00:09:34.390 --> 00:09:39.550
就像什么，但是经过是有意义的，所以有三个重要的方面

00:09:39.550 --> 00:09:43.120
在这里要提到的要点，而不是你提到的其他许多要点

00:09:43.120 --> 00:09:48.190
可能可以假设，但第一要点是我们希望IP FS能够以

00:09:48.190 --> 00:09:53.949
与基础网络一样快，因此我们不需要允许用户

00:09:53.949 --> 00:10:00.850
在效率和隐私之间进行拨号，以便您了解诸如Tour和ITP之类的系统

00:10:00.850 --> 00:10:04.750
以隐私为重点的工作要做很多工作

00:10:04.750 --> 00:10:09.550
路由数据包并四处移动，您将花费大量带宽

00:10:09.550 --> 00:10:16.149
隐藏网络中人们访问的痕迹，这就是方法

00:10:16.149 --> 00:10:23.519
您可以实现隐私保护，但这并不是很快，因此您需要权衡

00:10:23.519 --> 00:10:29.319
转移到那里以获得一些隐私，但是ipfs的用户非常多

00:10:29.319 --> 00:10:33.490
真的希望该用例和层ipfs直接移交给我们的ITP和一些用户

00:10:33.490 --> 00:10:36.699
根本不在乎他们在数据中心内部使用IP FS还是

00:10:36.699 --> 00:10:40.000
他们正在以其他方式使用它，他们真的希望它能够像以前一样高效

00:10:40.000 --> 00:10:43.589
尽可能正确，例如，您是否需要导览路线才能从

00:10:43.589 --> 00:10:48.450
就像您的计算机，笔记本电脑和手机在同一个房间中一样

00:10:48.450 --> 00:10:54.240
也许您要这样做取决于您所拥有的房屋类型，但是您知道并且

00:10:54.240 --> 00:11:00.510
这里的另一点是ipfs仅下载您明确请求的数据

00:11:00.510 --> 00:11:03.750
不要下载别人的东西，这是从

00:11:03.750 --> 00:11:07.890
合法性观点正确，所以周围存在很多问题

00:11:07.890 --> 00:11:12.000
对等系统，它们在其中下载其他数据作为对等系统的一部分

00:11:12.000 --> 00:11:16.080
算法以及下载非法内容的结尾，这可以防止

00:11:16.080 --> 00:11:20.010
在公司中采用这些系统，因为公司负担不起

00:11:20.010 --> 00:11:25.470
这样做，以便ipfs这些策略可以表达并可以添加

00:11:25.470 --> 00:11:28.920
在右上角，因此，如果您要组织一个可以移动并共享的集群

00:11:28.920 --> 00:11:33.510
数据等等，您可以执行此操作，但这是一项政策，

00:11:33.510 --> 00:11:38.070
在ipfs之上分层，因此有一个很强的承诺能够说

00:11:38.070 --> 00:11:41.850
看起来您可以使用ipfs，而不必担心其他人

00:11:41.850 --> 00:11:46.529
人们正在添加到网络中，是的，所以我认为这是能够

00:11:46.529 --> 00:11:52.829
遵循用户程序的内容，因此我们没有这些政策

00:11:52.829 --> 00:11:56.250
在这里完成了尽可能多的工作，将在那里做一些有趣的事情

00:11:56.250 --> 00:12:00.779
表示您如何信任其他密钥并信任其他内容

00:12:00.779 --> 00:12:05.750
按键，并能够赋予人们将内容添加到笔记中的功能

00:12:05.750 --> 00:12:10.200
所以是的，这只下载明确请求的数据，所以这是一个

00:12:10.200 --> 00:12:13.050
对于大多数人来说，这是一个巨大的惊喜，因为他们就像在等您拥有这个

00:12:13.050 --> 00:12:16.920
分布式文件系统应该是纯净的外观，以及为什么我们喜欢

00:12:16.920 --> 00:12:22.470
如果我添加内容，该如何备份它，就像我消失了一样

00:12:22.470 --> 00:12:26.130
从网络上它脉冲掉下来，这里的想法是，当您添加

00:12:26.130 --> 00:12:29.640
内容发布到您明确发布的网络中，其余的

00:12:29.640 --> 00:12:34.829
网络有一种选择，他们可以花精力在网上进行维护，也可以选择

00:12:34.829 --> 00:12:38.160
不，如果他们这样做，是因为他们关心这个东西，所以如果他们不这样做

00:12:38.160 --> 00:12:42.329
在乎您要说什么，因为他们只是您在说什么，不是

00:12:42.329 --> 00:12:46.020
有趣的是，您可以付钱给他们照顾，这是类似

00:12:46.020 --> 00:12:52.900
Falcone进来，因此HTTP映射到ipfs，AWS s3映射到

00:12:52.900 --> 00:12:58.620
Pal造币或蜂拥而至，或者实际上是AWS和Windows Azure等，因此

00:12:58.620 --> 00:13:05.200
在网络中维护东西的方式是不同的

00:13:05.200 --> 00:13:08.860
从您在网络中移动东西的方式来看，因此IP Office严格来说就是您的方式

00:13:08.860 --> 00:13:15.610
寻址和移动网络中的内容以及这些协议

00:13:15.610 --> 00:13:22.089
围绕激励型有组织的分布式存储，这些层位于顶层

00:13:22.089 --> 00:13:26.440
IP FS，所以一个有趣的想法是很多人说

00:13:26.440 --> 00:13:30.850
您曾经希望与您所知道的亚马逊和谷歌这样的大公司竞争，

00:13:30.850 --> 00:13:35.050
微软等拥有如此庞大的基础架构，然后我就

00:13:35.050 --> 00:13:38.470
向他们指出这种正确的方式，所以这是

00:13:38.470 --> 00:13:42.910
比特币网络，就像巨大的峰值，这就是当您

00:13:42.910 --> 00:13:50.230
获得经济模型，再加上非常容易进入的市场，因此

00:13:50.230 --> 00:13:55.420
膝盖前的该图方式中的某处比特币的哈希率

00:13:55.420 --> 00:14:00.370
超过了世界上功能最强大的超级计算机，然后

00:14:00.370 --> 00:14:04.510
世界500强超级计算机集中在曲线的拐角处，

00:14:04.510 --> 00:14:08.800
让您感觉到哈希值的哈希率有多么强大

00:14:08.800 --> 00:14:13.480
可悲的是，网络将浪费一切，因此希望我们能得到证明

00:14:13.480 --> 00:14:17.080
错误地正常工作，因此我们不必浪费这个，但是当您

00:14:17.080 --> 00:14:21.480
当您考虑此模型并将其应用于做一些有用的事情时，例如

00:14:21.480 --> 00:14:27.070
存储内容，您可以将大量的存储连接到

00:14:27.070 --> 00:14:31.870
网络，这样您就可以偷东西了，在接下来的两年和第二年您要标记我的话，

00:14:31.870 --> 00:14:37.150
看到庞大的分布式系统，其中的存储突然弹出网络，并且

00:14:37.150 --> 00:14:41.410
他们已经开始了，但是哦，来吧，所以你有一些东西

00:14:41.410 --> 00:14:47.470
看起来像是比特币的地雷，但现在可以储存了

00:14:47.470 --> 00:14:51.640
我已经对未来提出了要求，让我们像网络一样

00:14:51.640 --> 00:14:54.940
今天的现实就像正确地净化我们的思想，所以网络

00:14:54.940 --> 00:15:01.540
在这里，这些严格来说就像是Web 1.0 Web 2.0公司或网站

00:15:01.540 --> 00:15:07.190
总的来说，我将这些应用程序放置在那里，可以让您的生活如鱼得水

00:15:07.190 --> 00:15:12.200
是的，所以您现在所做的一切都围绕着这些

00:15:12.200 --> 00:15:20.300
正确的应用程序，以便您的个人交流您的工作以及如何学习

00:15:20.300 --> 00:15:26.060
您如何获取食物，如何购买食物现在，不仅是所有媒介都在调解

00:15:26.060 --> 00:15:29.210
通过互联网，但通过专门的Web应用程序

00:15:29.210 --> 00:15:33.880
意味着您的所有能力都与特定组织相关

00:15:33.880 --> 00:15:37.480
在线维护特定的基础架构

00:15:37.480 --> 00:15:41.900
这很吓人，因为那可能是因为它不会在任何时候消失

00:15:41.900 --> 00:15:47.750
随着时间的流逝，否则那些人可能就不再想要为您服务或等等了，但是

00:15:47.750 --> 00:15:52.550
这些我特别喜欢在人群中指出，因为这是

00:15:52.550 --> 00:15:55.339
竞争的权利，所以如果我们要推动这种完全不同的模式

00:15:55.339 --> 00:16:01.400
计算的存储模式截然不同，实际上是如何升级网络

00:16:01.400 --> 00:16:07.010
作品，我们必须至少和这些作品一样出色地工作，并且在理想情况下要比这些作品更好

00:16:07.010 --> 00:16:11.300
实际上，我们不仅必须出色地工作，而且还必须在理想情况下更好地工作

00:16:11.300 --> 00:16:17.660
要增加重量，我们必须具有更高的性能，或者这些都不是

00:16:17.660 --> 00:16:21.620
人们会正确地采用这些东西，所以这就是我的意思，就像一剂

00:16:21.620 --> 00:16:25.250
现实，就像您今天思考网络上的数据时一样

00:16:25.250 --> 00:16:29.330
像这些庞大的基础设施提供商

00:16:29.330 --> 00:16:33.830
性能数据库和某种类型的模型是人们拥有这些

00:16:33.830 --> 00:16:37.870
业务逻辑服务，它们必须对其进行维护，这也许就是其中的地方

00:16:37.870 --> 00:16:41.959
这些系统可以进入并改变人们实际上不使用的模型

00:16:41.959 --> 00:16:45.350
必须自己维护基础架构，如果

00:16:45.350 --> 00:16:49.880
他们不必这样做，但您知道这就是像这样的竞争权

00:16:49.880 --> 00:16:55.279
是来自亚马逊本身的图表，想想有多少

00:16:55.279 --> 00:16:59.660
这里的机器就像一个应用程序一样参与其中

00:16:59.660 --> 00:17:02.540
就像如果您是合法应用程序，这就是您所拥有的

00:17:02.540 --> 00:17:07.670
像DNS解析机一样连接，像CDN一样连接

00:17:07.670 --> 00:17:11.209
静态内容存储桶连接到一堆Web服务器，所有这些

00:17:11.209 --> 00:17:15.079
规模连接到像路由器那样的路由器，这些路由器会打到您的应用服务器上，然后

00:17:15.079 --> 00:17:17.130
像这样一直到数据库

00:17:17.130 --> 00:17:22.740
疯狂吧，这一切都像优化真正的快速访问一样

00:17:22.740 --> 00:17:26.430
网络，例如当我的用户点击您的网页时，他们必须获得诸如

00:17:26.430 --> 00:17:30.180
一秒钟之内或喜欢它，这样游戏就结束了，就像他们会离开，他们会去一样

00:17:30.180 --> 00:17:33.900
到其他地方，所以就像野兽躺在

00:17:33.900 --> 00:17:39.930
骨干只是想能够解决这个问题，但是我们拥有巨大的力量

00:17:39.930 --> 00:17:44.610
类似数据库的爆炸式增长，因此约束就像被

00:17:44.610 --> 00:17:46.970
每秒能够完成数十亿笔交易

00:17:46.970 --> 00:17:51.420
同时处理数十亿用户数百万或数亿

00:17:51.420 --> 00:17:55.800
用户是小于100毫秒延迟的大用户，例如

00:17:55.800 --> 00:18:00.210
用户的骨干网，或者理想情况下，是从用户到应用程序的骨干网，以及

00:18:00.210 --> 00:18:03.870
我们谈论的是TB级PB和EB级，所以如果

00:18:03.870 --> 00:18:07.590
如果您基本上知道Facebook，那么您就是一个EB级的小公司

00:18:07.590 --> 00:18:13.140
等等，当然，所以当我听到像印迹技术一样

00:18:13.140 --> 00:18:19.650
它会像我们如何处理这种权利吗，但这就是魔术

00:18:19.650 --> 00:18:24.290
是的，但这是不可思议的权利，所以事实是，这与

00:18:24.290 --> 00:18:29.850
匹配今天的功能，就是要证明这些功能

00:18:29.850 --> 00:18:34.020
可以实现，但是通过一系列功能对它们进行补充

00:18:34.020 --> 00:18:38.190
就在那之前，所以像想法这样的东西有点被封锁了

00:18:38.190 --> 00:18:41.880
能够进行多方计算，但是您可以验证并且不信任您

00:18:41.880 --> 00:18:45.360
今天根本不了解，Web 2.0能够做到无可信任

00:18:45.360 --> 00:18:48.630
扎账Ledger就像能够说明事物实际上是

00:18:48.630 --> 00:18:52.560
发生时间戳，能够喜欢可验证的运行合同

00:18:52.560 --> 00:18:56.310
但是就像您只是在此处编写源代码，然后将其放在那里

00:18:56.310 --> 00:18:58.860
自行运行，您不必喜欢维护它，没有人需要这样做

00:18:58.860 --> 00:19:02.190
能够喜欢编写去中心化和分布式应用程序的事情

00:19:02.190 --> 00:19:05.820
在您签名后将其写入的位置将其放入网络并消失

00:19:05.820 --> 00:19:09.000
人们可以继续承受它们，而您可能会消失在一个组织中

00:19:09.000 --> 00:19:11.910
公司和人们可以继续使用此应用程序，就像这些是

00:19:11.910 --> 00:19:15.720
真正的功能可以带给您您无法带走的人，而这就是

00:19:15.720 --> 00:19:18.890
非常有趣的是，那里有完全不公平的优势

00:19:18.890 --> 00:19:25.020
相对于Web Web 2.0而言，所以我们正在谈论构建数据采集

00:19:25.020 --> 00:19:30.090
并以完全不同的可验证模型执行代码和执行

00:19:30.090 --> 00:19:33.840
并且当然能够以Web 2.0的方式保护加密

00:19:33.840 --> 00:19:40.020
人们之所以不能这样做，是因为很多Web 2.0都依赖广告等等。

00:19:40.020 --> 00:19:44.130
意味着他们不能真正进行端到端加密，所以这是一个巨大的挑战

00:19:44.130 --> 00:19:48.300
优势权，因为我们不必处理，我们可以结束

00:19:48.300 --> 00:19:53.460
为用户加密，我们根本不需要用户数据，这

00:19:53.460 --> 00:19:58.380
是能够朝这个方向移动的强烈理由很酷，让我检查一下

00:19:58.380 --> 00:20:03.990
时间，因为甜蜜，所以就像插曲，所以人们知道的是

00:20:03.990 --> 00:20:07.410
有点像让这些类似的数据库互相交谈

00:20:07.410 --> 00:20:12.750
幕后的数据以及Web 2.0关于采用逻辑和

00:20:12.750 --> 00:20:16.320
数据本身并将其放入网络并允许它们

00:20:16.320 --> 00:20:22.560
交流并使得轴硬件成为实习生

00:20:22.560 --> 00:20:25.080
好吧好吧，必须赶紧通过这些东西

00:20:25.080 --> 00:20:29.700
五分钟，但我们会看到好的，所以我感到D这是ipfs的核心

00:20:29.700 --> 00:20:34.980
这是散列链或基于以下内容分发数据结构的常用格式

00:20:34.980 --> 00:20:39.000
默克尔树，所以我之前在这些文件中显示的实际上不是

00:20:39.000 --> 00:20:42.300
文件，所以当您向教授添加某些内容时，它看起来像

00:20:42.300 --> 00:20:45.570
这是您您添加的所有这些东西，这些不是文件，实际上是

00:20:45.570 --> 00:20:52.590
图中的节点和图中的这些节点都存储在

00:20:52.590 --> 00:20:57.750
我们称之为IPL D的格式，基本上类似于JSON之类的

00:20:57.750 --> 00:21:03.120
不完全是JSON，因为它的序列化速度很快，但是

00:21:03.120 --> 00:21:05.880
总体而言，您拥有一个非常灵活的数据模型，因此您可以

00:21:05.880 --> 00:21:11.460
今天的整个api，将它们直接转储到ipfs中，这样您就可以

00:21:11.460 --> 00:21:15.810
您拥有的数据API并直接将所有这些数据导入到我们的BFS和

00:21:15.810 --> 00:21:19.410
就像默克尔一样，这并不是一件完美的事情，你必须喜欢工作

00:21:19.410 --> 00:21:22.740
很难使其真正成为一个良好的分布式应用程序，但这有点像步骤

00:21:22.740 --> 00:21:26.040
因此，我们将我们视为新的瘦身方式，因此

00:21:26.040 --> 00:21:30.390
互联网数据结构互联网，它给您像默克尔链接一样

00:21:30.390 --> 00:21:33.630
是安全且不变的，它为您提供了默克尔路径，这意味着您可以解决

00:21:33.630 --> 00:21:37.309
通过图，它们是通用的，在那里

00:21:37.309 --> 00:21:42.049
就像我们之前所说的那样，虽然您的网址不是基于位置的，所以

00:21:42.049 --> 00:21:45.169
我不是在这里提到URL，因为大多数人都熟悉

00:21:45.169 --> 00:21:48.320
该术语，但实际上不是基于位置的

00:21:48.320 --> 00:21:53.809
序列化可以做任何您想做的事情，可以使用JSON协议XML RLP

00:21:53.809 --> 00:21:57.409
或无论您使用什么，都可以使用序列化格式

00:21:57.409 --> 00:22:02.090
在引擎盖下有一种规范的方式来描述哪个序列化

00:22:02.090 --> 00:22:06.409
使用的东西，以便每个人都拥有相同的东西，因此，如果您有

00:22:06.409 --> 00:22:09.770
这样的事情，以防万一你知道你在哪里概述了追随者

00:22:09.770 --> 00:22:15.710
用户的这种方式这就像糊涂一样，看看Vannevar灌木丛是什么

00:22:15.710 --> 00:22:20.570
是说某些用户可以在某个地方使用，但就像您一样，不知道该使用哪种上下文

00:22:20.570 --> 00:22:23.570
从正确的角度来看，您必须知道这将是Twitter之类的东西

00:22:23.570 --> 00:22:27.679
否则只是从您正在从中访问此端点的端点，但是如果这些

00:22:27.679 --> 00:22:32.570
实际链接到内容可以正确地处理诸如资源之类的事物

00:22:32.570 --> 00:22:36.890
基于散列，那么您不必对自己的方式一无所知

00:22:36.890 --> 00:22:40.909
根本就无法访问，因为内容本身或类似内容可以告诉您有关内容的信息

00:22:40.909 --> 00:22:46.640
是的，我想你可以做lamal-你可以做任何形式的事情

00:22:46.640 --> 00:22:52.870
想要等等，所以这里的重点是构建像JSON一样易于使用的东西

00:22:52.870 --> 00:22:58.520
但是当您默克尔注视它并打开这些法线图时，您应该

00:22:58.520 --> 00:23:05.120
能够拥有完全相同的数据架构，但是在哪之前

00:23:05.120 --> 00:23:08.390
只是有一些字符串，然后您必须在这里的数据库中查找

00:23:08.390 --> 00:23:14.570
您具有哈希长度，因此您可以遵循，可以解决哈希问题

00:23:14.570 --> 00:23:18.950
行，所以在第二层中，我要让您遍历哈希，然后

00:23:18.950 --> 00:23:24.200
斜杠跟随者意味着您正在访问json对象，因此

00:23:24.200 --> 00:23:27.770
您就像放置一个JSON对象并通过它进行访问以获得另一个对象

00:23:27.770 --> 00:23:32.840
数据，你可以做任何正确的事，所以你可以像

00:23:32.840 --> 00:23:36.530
某人的追随者那些斜线追随者将其拉出并

00:23:36.530 --> 00:23:40.340
然后像斜杠零一样去拉出第一个条目，现在您得到了一些东西

00:23:40.340 --> 00:23:44.390
这是通过默克尔链接解决的，想法是像你一样

00:23:44.390 --> 00:23:48.080
会拉出一个物体，然后您会查看它，将其拉出

00:23:48.080 --> 00:23:52.410
另一个链接并通过网络解决它，一切都是

00:23:52.410 --> 00:23:55.380
完整性文本，这样您就可以将所有这些内容转储到网络中，并且

00:23:55.380 --> 00:23:59.820
任何人都可以为您服务，您不必担心自己拥有

00:23:59.820 --> 00:24:01.860
担心隐私方面的问题，但这是一个完全不同的问题

00:24:01.860 --> 00:24:06.840
而且无论如何，这样您就可以对事物进行建模，并且几乎可以移动任何东西

00:24:06.840 --> 00:24:11.460
您将能够注释与其他数据的链接，就像

00:24:11.460 --> 00:24:14.730
目录看起来像您可以做的那样，用于版本数据结构

00:24:14.730 --> 00:24:19.170
例如git commit等等，所以这些将完全是本地的

00:24:19.170 --> 00:24:22.380
ipfs，您将能够编写所有这些数据结构并将其写入

00:24:22.380 --> 00:24:24.960
这种运输权就像我之前描述的森林事物

00:24:24.960 --> 00:24:29.010
所以这实际上就是您开始制作Web 2.0的方式，我们将所有这些

00:24:29.010 --> 00:24:32.280
数据结构，而不是这些KPI并围绕我们的应用程序建模

00:24:32.280 --> 00:24:36.630
我们刚刚放入网络并通过寻址解决的内容

00:24:36.630 --> 00:24:41.910
内容编址和键编址等等，在某种意义上，当您考虑

00:24:41.910 --> 00:24:45.120
在您的应用程序中建立模型，然后像数据模型一样思考一下哦

00:24:45.120 --> 00:24:48.080
我有没有让他们彼此关注的用户？

00:24:48.080 --> 00:24:53.790
关系，您可以将那些直接的对象直接放入ipfs

00:24:53.790 --> 00:24:56.790
就像您完全不必去Twitter数据库一样，您只需添加它们

00:24:56.790 --> 00:25:00.720
直接到我的PFS，您会获得的是，当应用程序将那些

00:25:00.720 --> 00:25:04.290
如果没有什么改变，那么就不需要更新，所以您击败了

00:25:04.290 --> 00:25:08.550
光速，因为如果是，如果我在这里使用应用程序，我

00:25:08.550 --> 00:25:11.550
请求一些对象，然后通过网络将它们拉下来，我有

00:25:11.550 --> 00:25:16.620
它们在本地，我必须再次正常获取它们，HTTP会说哦

00:25:16.620 --> 00:25:20.310
知道喜欢去和喜欢与网络交谈，看看它是否已经改变，但是

00:25:20.310 --> 00:25:24.480
ipfs我们可以很好，不，我有哈希，我有它坐在这里的内容

00:25:24.480 --> 00:25:28.170
已经我们不必去网络了，当然您可以做到这一点

00:25:28.170 --> 00:25:31.590
拥有各种类似的法律记录，等等，就像承认法律一样

00:25:31.590 --> 00:25:35.550
记录就是一个很好的例子，说明人们为什么要使用区块链

00:25:35.550 --> 00:25:41.340
就像在现实世界中一样

00:25:41.340 --> 00:25:45.570
合法的文件，这样您就可以做到所有这些，因此实际上我们正在构建

00:25:45.570 --> 00:25:50.190
不完全是网络，但实际上更像是牢固的网格

00:25:50.190 --> 00:25:54.300
就像您可以想到的那样，就像安全的网络或链接无法

00:25:54.300 --> 00:25:57.840
之所以中断，是因为他们解决了他们的内容，因此您不必维护

00:25:57.840 --> 00:26:01.440
基础架构，并担心像您现在的链接一样有些不同，因此

00:26:01.440 --> 00:26:03.840
一切都会瓦解，您只需创建内容就可以了

00:26:03.840 --> 00:26:08.909
安全地将其释放到网络中，所以我提到了

00:26:08.909 --> 00:26:13.140
我去皮的晚上怀疑正在进行中一些有趣的东西

00:26:13.140 --> 00:26:16.309
我们正在做的是我们正在提出一种正确的做事方法

00:26:16.309 --> 00:26:21.360
遍历图形，因此能够表示沿路径下降

00:26:21.360 --> 00:26:25.370
在图中，诸如能够解决一个级别的问题之类的东西

00:26:25.370 --> 00:26:29.390
它下面的所有东西或能够喜欢看东西的东西

00:26:29.390 --> 00:26:33.059
但是还有一些更有趣的事情，比如能够使最后一个表达式

00:26:33.059 --> 00:26:38.789
将能够在一个巨大的图形中表示电影能够

00:26:38.789 --> 00:26:43.080
沿着第一条路径走，并在其中检索第一组块

00:26:43.080 --> 00:26:46.169
这样，您就可以提取出具有

00:26:46.169 --> 00:26:51.299
数据，然后像向电影开头一样向用户展示

00:26:51.299 --> 00:26:54.419
因此能够以这种方式表达这些东西对于

00:26:54.419 --> 00:26:58.350
复制协议，能够喜欢点东西是非常有用的

00:26:58.350 --> 00:27:02.130
签合同等等，这又是一件有趣的事情

00:27:02.130 --> 00:27:05.580
在这里，您想嵌入像是的副本，但是其中一个表达式是

00:27:05.580 --> 00:27:08.760
那另一种表达，所以如果你喜欢这种语言和东西的话

00:27:08.760 --> 00:27:14.250
来谈谈使这些语言正确很重要，所以

00:27:14.250 --> 00:27:18.809
最后一节的用例和示例，因此这可能是最有趣的

00:27:18.809 --> 00:27:21.990
你，所以我BFS很多人都喜欢

00:27:21.990 --> 00:27:26.159
以及IP传递给您什么用途的IP，例如这是什么？

00:27:26.159 --> 00:27:29.549
他们想让我告诉您喜欢的特定用户组

00:27:29.549 --> 00:27:32.940
将其用于一件事，而关于ipfs的事情是，这是一种转移

00:27:32.940 --> 00:27:37.470
协议意味着喜欢帮助网络使用权，并表示喜欢使用什么网络

00:27:37.470 --> 00:27:44.340
对于所有事情，然后人们只是说，哦，那是你还没有想过

00:27:44.340 --> 00:27:48.059
这个，我很不喜欢，我很认真，就像你可以用这个来做所有的事情让我

00:27:48.059 --> 00:27:51.029
让我列出正确原因的原因，您可以使用它进行点对点

00:27:51.029 --> 00:27:55.559
内容交付已准备好考虑CDN，但就像分布式CDN一样，

00:27:55.559 --> 00:27:59.850
超级内容分发网络，您可以像去中心化链接那样

00:27:59.850 --> 00:28:03.659
在没有权限确定链接的情况下，您只需添加内容

00:28:03.659 --> 00:28:06.990
内容上的内容现在已经是我们之前讨论过的网络的一部分

00:28:06.990 --> 00:28:10.500
您可以将应用程序作为整个应用程序，并使用IP对其进行定义

00:28:10.500 --> 00:28:14.549
FS然后为人们提供对该应用程序的引用，这就是他们的链接

00:28:14.549 --> 00:28:17.590
下载它，他们运行代码，然后在那里执行所有操作

00:28:17.590 --> 00:28:21.640
因此，它们不仅是应用程序的分布

00:28:21.640 --> 00:28:26.140
还有一个例子中的应用程序定义，就像人们

00:28:26.140 --> 00:28:29.799
我承认，过去的书面视频播放器已经占据了整个

00:28:29.799 --> 00:28:35.350
人们制定的法律法规，例如成像仪沙拉克隆，人们能够做到

00:28:35.350 --> 00:28:39.279
三种模型的东西，并能够与ipfs共享，因为它们是

00:28:39.279 --> 00:28:43.360
数据密集型的应用程序的人是不是这不是唯一的

00:28:43.360 --> 00:28:46.000
这个集合中的一个不是实际的IP Office应用程序，这是一个

00:28:46.000 --> 00:28:49.029
我的世界，但人们正在使用我的世界并制造它，因此

00:28:49.029 --> 00:28:52.600
世界之间的联系，所以您正在穿越Minecraft世界，然后您

00:28:52.600 --> 00:28:55.510
找到一个链接，然后您就可以在其他地方观看此链接了

00:28:55.510 --> 00:29:01.210
是通过ipfs服务的，人们正在抛出文档博客等

00:29:01.210 --> 00:29:05.110
您可以对虚拟机进行定义和分布的容器，您可以认为

00:29:05.110 --> 00:29:10.750
其中就像默克尔容器一样，整个应用程序和

00:29:10.750 --> 00:29:15.399
图被定义为适当的默克尔默克尔图，我们应该已经

00:29:15.399 --> 00:29:18.760
从一开始的案例，但无论如何您都可以做整个软件包管理器，

00:29:18.760 --> 00:29:22.059
以这种方式分发它们，因此我们已经在对几个

00:29:22.059 --> 00:29:26.520
在这些软件包管理器中，我们将获取所有代码或所有实际代码

00:29:26.520 --> 00:29:31.210
编译二进制文件并将它们通常添加到ipfs首先，您会得到一个巨大的

00:29:31.210 --> 00:29:34.960
节省了空间，因为大量的东西被复制了，但是您也可以

00:29:34.960 --> 00:29:38.740
更快地分发它们，因为如果同一数据中心中的计算机拥有它

00:29:38.740 --> 00:29:43.299
事情就变得更快了。关键地址寻址归档备份所有人

00:29:43.299 --> 00:29:48.130
就像将所有东西都存档一样，在这里您切割了一大堆数据

00:29:48.130 --> 00:29:52.270
可以存档哪些ipfs，现在涉及到

00:29:52.270 --> 00:29:55.870
以太坊，这就像我向定理保证的最后一行

00:29:55.870 --> 00:30:00.850
顺便说一句，徽标真的很好地契合在一起，也很好

00:30:00.850 --> 00:30:05.980
因此，您可以将其用于烷烃数据，这样您就可以做到第一件事

00:30:05.980 --> 00:30:09.010
您可以想到的东西就像不该出现在区块链上的任何东西

00:30:09.010 --> 00:30:13.120
因为太大了，把它放到ipfs上就可以了

00:30:13.120 --> 00:30:16.870
然后使用您自己的注释提供该链接，但这意味着其他任何人都可以

00:30:16.870 --> 00:30:21.309
同时提供服务，这意味着您可以消失而内容不会

00:30:21.309 --> 00:30:27.370
消失正确，所以您知道大的东西，您可以再次使用它们来定义和

00:30:27.370 --> 00:30:30.700
分发这些内容以正确分发应用程序，以便这些集中化

00:30:30.700 --> 00:30:34.090
分发应用程序，您可以编写它们，然后将它们放到所有

00:30:34.090 --> 00:30:38.320
那里的人们已经在做资产了，依此类推，所以您有了代码，

00:30:38.320 --> 00:30:42.280
资产和一切，还有用户数据，这是其中之一的示例

00:30:42.280 --> 00:30:47.559
他们这是我们的，这是我们IP FS节点的Web UI，这是所有代码

00:30:47.559 --> 00:30:54.220
当ipfs将其拉出时，您可以运行它，并且它像所有的一样完全分布

00:30:54.220 --> 00:30:58.179
这是一个非常酷的体验，当您做我像who而不触摸服务器时

00:30:58.179 --> 00:31:02.230
曾经喜欢它，只是我的浏览器在这里做到了。

00:31:02.230 --> 00:31:07.120
像是B型，是用宜家野鸡以太完成的四次舷外作业

00:31:07.120 --> 00:31:12.580
实际支付以太币以便能够发布，因此您可以只为后备箱做基础

00:31:12.580 --> 00:31:17.830
无格式的指出这一点，您可以在这里做两个有趣的事情，

00:31:17.830 --> 00:31:22.450
伦敦卡住这种方式，最有趣的事情在哪里ip

00:31:22.450 --> 00:31:26.440
 FS可能对以太坊有用，我值得仔细研究

00:31:26.440 --> 00:31:31.720
代表整个默克尔·帕特里夏3州的ipfs注释，以便您

00:31:31.720 --> 00:31:36.789
能够直接索引到状态树中并将其拉出并使用

00:31:36.789 --> 00:31:40.690
一堆可能还不会讲以太坊的ipfs节点，但是它们会讲ipfs

00:31:40.690 --> 00:31:44.950
然后可以开始使用它们处理以太状态，并使用它们来

00:31:44.950 --> 00:31:47.919
在定理状态中移动，这真的很酷，您可以对

00:31:47.919 --> 00:31:52.179
区块链本身，您可以采用整个区块链定义，

00:31:52.179 --> 00:31:56.740
就像导入ipfs一样，然后以这种方式分发所有内容，

00:31:56.740 --> 00:32:01.360
所以这是克里斯的博客文章，谈到了一些非常

00:32:01.360 --> 00:32:06.250
很酷，所以可以检查一下，好吧，这是Ivan表哥对Dan老师说的谢谢

00:32:06.250 --> 00:32:08.370
你

