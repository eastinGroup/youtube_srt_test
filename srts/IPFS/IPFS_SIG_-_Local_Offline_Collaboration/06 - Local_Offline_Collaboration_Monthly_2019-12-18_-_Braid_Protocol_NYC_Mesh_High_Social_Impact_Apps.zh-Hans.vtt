WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.920 --> 00:00:06.210
大家好，今天是特里，是12月18日，这是

00:00:06.210 --> 00:00:11.190
ipfs本地和离线协作组我有我们的每月专栏

00:00:11.190 --> 00:00:16.170
非常高兴能开始使用，今天有一些不同的演示，因此我们将跳转

00:00:16.170 --> 00:00:20.189
你想在迈克尔（Michael）上分享您的屏幕吗

00:00:20.189 --> 00:00:26.820
告诉我们一些关于编织的知识，请确保我能找到它们的按钮

00:00:26.820 --> 00:00:41.430
在我的那是底部中心的一个大绿色啊，好的，好的，你能

00:00:41.430 --> 00:00:54.350
看到这个很酷，好吧，我应该花多少时间Terry在这里

00:00:54.350 --> 00:01:01.859
十分钟好吧，好吧，那么，嗯，所以我一直在努力

00:01:01.859 --> 00:01:07.560
辫子没有辫子是使用标准分散网络的尝试

00:01:07.560 --> 00:01:13.170
好吧，所以我想准备一下这个演讲，只是一个基调或争论

00:01:13.170 --> 00:01:16.950
我想看看你们是否同意我们可以集中网络

00:01:16.950 --> 00:01:22.189
就像通过标准的努力一样，所以我们可以将其收回

00:01:22.189 --> 00:01:27.960
像是Web之类的东西曾经是封闭的网络，如AOL和

00:01:27.960 --> 00:01:31.320
CompuServe他们还拥有我们现在在网络上拥有的许多功能

00:01:31.320 --> 00:01:35.460
例如购物和聊天以及论坛之类的东西，但是他们不能

00:01:35.460 --> 00:01:40.229
相互连接，有这些巨大的集中式整体结构和网络

00:01:40.229 --> 00:01:46.500
能够去中心化这是一个去中心化的替代方案

00:01:46.500 --> 00:01:53.159
胜过他们，网络竞争他们，因为它有两个

00:01:53.159 --> 00:02:01.290
它所做的事情使人们更容易添加新内容，因此当您使用它时

00:02:01.290 --> 00:02:05.610
建立网站或网页更容易，任何人都可以轻松完成

00:02:05.610 --> 00:02:09.569
而不是说服AOL Steve Case的首席执行官添加您的内容

00:02:09.569 --> 00:02:13.870
美国在线（AOL），这意味着他们都喜欢

00:02:13.870 --> 00:02:17.590
网上有数百万程序员，他们只是您可能只有一个

00:02:17.590 --> 00:02:20.950
您公司中的一千名程序员和一百万名程序员将能够

00:02:20.950 --> 00:02:25.629
在成千上万的程序员中产生更多的东西，这意味着很多

00:02:25.629 --> 00:02:30.459
网络上增加了更多的内容，这是网络和网络的第二件事

00:02:30.459 --> 00:02:33.970
之所以能够做到这一点，部分原因是因为您不仅拥有一个

00:02:33.970 --> 00:02:37.750
标准，但是您拥有这些库，因此您不必编写

00:02:37.750 --> 00:02:41.680
如果要替换AOL，则大多数代码都是很多代码，但是如果您只是

00:02:41.680 --> 00:02:45.040
想要建立一个网页，您所要做的就是每个人都编写HTML

00:02:45.040 --> 00:02:50.170
已经有浏览器，那里已经有服务器，因此

00:02:50.170 --> 00:02:55.780
现在，我们太相似了，开发人员的工作很容易添加新内容

00:02:55.780 --> 00:03:00.819
我们现在已在更大范围内以这种方式发展，网站本身已成为

00:03:00.819 --> 00:03:06.459
大型的集中式实体，所以我的论点是，我们将能够

00:03:06.459 --> 00:03:11.739
通过再次扩展标准并添加来分散这些网站的权力

00:03:11.739 --> 00:03:14.829
新的库将使资料自动化并使开发人员生活

00:03:14.829 --> 00:03:18.700
更容易，那么我们将能够胜过成千上万的

00:03:18.700 --> 00:03:23.069
Facebook上的程序员以及网络上数以百万计的程序员

00:03:23.069 --> 00:03:28.389
你们看起来会更像这样，你们能看到正确的吗

00:03:28.389 --> 00:03:36.810
屏幕的侧面我不知道是的，我可以吗-好的，好的，好的，所以

00:03:36.810 --> 00:03:43.060
我现在要快速浏览一下，所以辫子是对HTTP的扩展，它增加了

00:03:43.060 --> 00:03:46.840
一些新功能，它使您更轻松地制作网站及其

00:03:46.840 --> 00:03:51.519
使您可以更轻松地在网站内​​共享状态，并允许

00:03:51.519 --> 00:03:56.919
我们可以建立更多的网格，所以我要解决的问题

00:03:56.919 --> 00:04:02.949
是因为网络添加的内容不足，我只是带您了解一下，

00:04:02.949 --> 00:04:07.449
 Web是为静态页面设计的，因此HTTP可以从服务器传输一些HTML

00:04:07.449 --> 00:04:13.000
对客户来说还不错，当手动和手动编写页面时，这很有意义

00:04:13.000 --> 00:04:16.959
他们只是想知道如果页面更改后会发生什么，他们没有任何办法

00:04:16.959 --> 00:04:20.380
页面更改时更新客户端，因此他们只添加了此重新加载按钮

00:04:20.380 --> 00:04:25.450
好吧，这将是一个共同的主题，就像这样使很多

00:04:25.450 --> 00:04:27.790
在页面看起来像这样的时候

00:04:27.790 --> 00:04:31.870
您是用手工编写HTML的，实际上它们并没有经常改变，是的，我

00:04:31.870 --> 00:04:36.100
只需让用户点击重新加载就没问题，但是页面开始发生更多变化，

00:04:36.100 --> 00:04:41.230
此外，我们开始获取这些可生成实际页面的数据库，

00:04:41.230 --> 00:04:45.100
它们可能会像每周或每隔几天一样发生变化，或者您知道何时

00:04:45.100 --> 00:04:50.170
有人重新加载它，所以您不得不开始使用这个新模型

00:04:50.170 --> 00:04:54.940
在这里有一个数据库，然后为了做到这一点，您并没有

00:04:54.940 --> 00:04:59.890
MVC框架，现在好了，我们需要一种方法来组织这种变化

00:04:59.890 --> 00:05:05.740
数据模型视图控制器是用于同步的模式

00:05:05.740 --> 00:05:10.900
Xerox PARC开发的面向对象编程，所以一种方法是

00:05:10.900 --> 00:05:14.890
每当我们看到场景MVC时，我认为这是一种同步您的方法

00:05:14.890 --> 00:05:19.300
模型中的数据，无论何时切换，您都将要更新多个视图

00:05:19.300 --> 00:05:24.460
时间页面开始变得越来越多，所以像这样的2011年

00:05:24.460 --> 00:05:28.660
只是每天的Facebook feed快照，因为我是某个学生的

00:05:28.660 --> 00:05:34.240
一个月，然后开始出现JavaScript，所以现在您可以支付零钱

00:05:34.240 --> 00:05:38.920
客户端上的页面而无需重新加载，这很酷，但是您

00:05:38.920 --> 00:05:42.250
还希望能够从服务器获取数据，因此我们添加了额外的XML HTTP

00:05:42.250 --> 00:05:46.600
请求，您有点知道该API并不是经过深思熟虑的

00:05:46.600 --> 00:05:52.630
这就是XML uzuki请求，我们不再使用xml了，现在我们有了

00:05:52.630 --> 00:05:54.610
他们一直在改变的页面

00:05:54.610 --> 00:05:59.500
并且您实际上希望他们能够随着人们的变化而实时更新

00:05:59.500 --> 00:06:03.310
其他地方的东西，但仍然有这个重新加载按钮

00:06:03.310 --> 00:06:06.910
重新加载按钮现在有什么用，就像代码一样

00:06:06.910 --> 00:06:11.770
真的不起作用，因为我们有成堆的代码，当您

00:06:11.770 --> 00:06:16.120
现在编写一个Web应用程序，您需要所有这些垃圾，然后我们进行添加并做出反应，

00:06:16.120 --> 00:06:20.350
这就是为什么Web编程今天完全让人讨厌的原因

00:06:20.350 --> 00:06:23.380
所有这些都是为了应对变化，这就是我们要解决的问题

00:06:23.380 --> 00:06:28.300
好的，这是因为HTML HTTP本身从未处理过

00:06:28.300 --> 00:06:32.670
协议，所以我们喜欢使用所有这些废话和

00:06:32.670 --> 00:06:37.690
每次您建立网站时，您都会以某种非标准的方式进行操作

00:06:37.690 --> 00:06:40.810
做到这一点的方式，每个人都有不同的方式做到这一点，这是我们所没有的方式

00:06:40.810 --> 00:06:45.550
是兼容的，这意味着我们可以更轻松地访问我们的数据

00:06:45.550 --> 00:06:48.940
拥有自己的网站，而不是访问我们不共享的其他人网站上的数据

00:06:48.940 --> 00:06:53.650
不合作，我们只是建立这些筒仓，所以辫子协议

00:06:53.650 --> 00:06:57.640
通过同步扩展到http，因此您不需要任何废话

00:06:57.640 --> 00:07:01.360
我们将投入，实际上我们将进行同步超级

00:07:01.360 --> 00:07:04.540
超级好，这是一个很难的问题，但是我们知道我们有CR D T

00:07:04.540 --> 00:07:08.080
您具有版本控制和编织协议支持的操作转换

00:07:08.080 --> 00:07:10.960
每个月所有这些同步方法对于

00:07:10.960 --> 00:07:16.270
特别的一个，但是它给你，但是你可以得到他们所有的功能，那

00:07:16.270 --> 00:07:20.230
就是说，左边就是我们今天建立网站的方式

00:07:20.230 --> 00:07:23.620
一堆东​​西，每个人都是不同的，每次您建立一个网站时，

00:07:23.620 --> 00:07:27.490
必须使用编织HTTP本身以不同的方式将所有内容连接在一起

00:07:27.490 --> 00:07:32.830
处理同步，因此您访问的每个状态都

00:07:32.830 --> 00:07:37.600
同样，每个州都有一个URL，让我向您展示这意味着什么

00:07:37.600 --> 00:07:41.980
但这里我们假设有一个辫子网站，每个黑点都是网址

00:07:41.980 --> 00:07:46.930
您可以从服务器的客户端统一访问它，这意味着

00:07:46.930 --> 00:07:52.479
您还可以访问其他服务器上的一些数据

00:07:52.479 --> 00:07:58.319
就像您自己的服务器一样容易，也可以创建其他用户界面

00:07:58.319 --> 00:08:04.089
不同的用户界面可以访问所需服务器上的数据，并且

00:08:04.089 --> 00:08:09.969
让您为拥有的任何网站和每个用户创建新的用户界面

00:08:09.969 --> 00:08:14.469
自己甚至可以拥有自己的用户界面，因此我们可以获得

00:08:14.469 --> 00:08:21.129
UI和其背后的状态之间的分离，您可以创建自己的UI

00:08:21.129 --> 00:08:25.360
所以您现在不再像现在那样拥有垄断力量，因为

00:08:25.360 --> 00:08:30.860
Facebook拥有所有这些数据，每个人都必须以相同的方式看待自己的朋友

00:08:30.860 --> 00:08:35.180
但是如果我们在大脑上建立社交网站，每个人都可以看到他们的网站

00:08:35.180 --> 00:08:38.420
但是他们想要这个，我认为很多地方优先

00:08:38.420 --> 00:08:41.870
方法，就像我们看到的那样，我们看到人们将

00:08:41.870 --> 00:08:45.970
从本地发生的任何事情中陈述

00:08:46.570 --> 00:08:50.120
好的，当我画画时，我不知道您是否可以看到这种过渡，但是您

00:08:50.120 --> 00:08:54.320
也可以点对点，所以每个小黑点都是一个URL，您可以

00:08:54.320 --> 00:09:03.440
在其他任何地方访问任何URL，因此要做到这一大技巧，

00:09:03.440 --> 00:09:08.420
这项工作非常出色，是具有CRT T和运营转型的伟大技术

00:09:08.420 --> 00:09:12.290
破坏了时空之间的差异距离

00:09:12.290 --> 00:09:18.230
这使您可以轻松地在本地或远程使用状态进行编程，因此您可以

00:09:18.230 --> 00:09:21.560
您可以像在本地一样轻松地读写任何网站上的访问状态

00:09:21.560 --> 00:09:26.300
变量，您可以使用脱机的第一种方式完成此操作，就像CR DT允许您执行此操作一样

00:09:26.300 --> 00:09:31.690
因为任何两台计算机上发生的任何更改都以相同的方式合并，因此

00:09:31.690 --> 00:09:35.930
这是一个抽象模型，就像您在这里看到的一样

00:09:35.930 --> 00:09:39.170
我们称之为辫子，这就是为什么协议被称为辫子的原因

00:09:39.170 --> 00:09:44.030
让我们看看我是否可以暂停它的彩色区域。

00:09:44.030 --> 00:09:49.840
还好吧，所以这里的每个彩色区域都是一个补丁

00:09:50.030 --> 00:09:53.510
这些是三台不同的计算机一二和三，您可以看到

00:09:53.510 --> 00:09:56.420
他们正在发送的底部的网络消息，所以他们正在发送这些

00:09:56.420 --> 00:10:00.770
很少设置消息，他们有一个补丁，这个补丁说从零开始替换区域

00:10:00.770 --> 00:10:05.810
带有ZZZ的零，它给出一个版本ID，并指出哪个父版本

00:10:05.810 --> 00:10:10.040
来自这些补丁，这些补丁只是在

00:10:10.040 --> 00:10:13.400
网络他们以不同的顺序或不同的顺序接收它们

00:10:13.400 --> 00:10:17.780
在顶部有一些文本，并且该文本通过汇总而变得同步

00:10:17.780 --> 00:10:22.460
所有这些补丁在一起，所以彩色区域是补丁的原因

00:10:22.460 --> 00:10:26.780
像这样出现了，所以它合并了这个ZZZ AAA

00:10:26.780 --> 00:10:35.630
与Z和n和MGZ一起，我得到Z n N和ng Z，只要每台计算机

00:10:35.630 --> 00:10:40.430
以相同的方式合并任何两个补丁，以达到一致的结果

00:10:40.430 --> 00:10:46.940
状态，所以我们是什么，所以这是布雷迪的基本模型

00:10:46.940 --> 00:10:50.330
您可以同时分叉两件事时进行分叉的补丁，并且可以合并

00:10:50.330 --> 00:10:54.740
为了获得一致性，所有计算机都必须合并在同一台计算机中

00:10:54.740 --> 00:10:59.990
为了做到这一点，我们只需要向HTTP添加一些东西，称为合并

00:10:59.990 --> 00:11:05.270
输入合并类型，说明两件事如何合并在一起，我认为这是

00:11:05.270 --> 00:11:09.650
下一张幻灯片完美好吧，太好了，现在这是实际的协议，所以

00:11:09.650 --> 00:11:15.530
这是一个放置请求，这里的HTTP是一个获取请求，我们添加了一个

00:11:15.530 --> 00:11:21.290
几个功能，所以我们要添加版本，我们要添加补丁，然后添加

00:11:21.290 --> 00:11:27.559
我们还可以添加订阅，所以编织的第一阶段

00:11:27.559 --> 00:11:32.059
没有任何点对点功能，但是辫子的数据模型

00:11:32.059 --> 00:11:34.639
您在最后一页中看到完全支持的可视化

00:11:34.639 --> 00:11:40.519
对等消息，我们只是没有网络传输，但是好吧，这是

00:11:40.519 --> 00:11:44.059
只是让我们获得该数据模型，然后将其扩展到HTTP n事实证明

00:11:44.059 --> 00:11:49.069
HTTP的订购真的非常好，所以我们只需添加就可以拥有版本

00:11:49.069 --> 00:11:53.600
补丁和订阅基本上是这样，所以在合并类型中，我要带你走

00:11:53.600 --> 00:11:58.999
通过此操作，可以在左侧的此处进行看跌期权，然后指定一个

00:11:58.999 --> 00:12:03.019
版本该版本只是一些唯一的字符串，好吧，无论它是什么，都可以

00:12:03.019 --> 00:12:06.559
如果您希望使用不同的CR DTS或可操作的版本，请在此处对版本向量进行编码

00:12:06.559 --> 00:12:10.610
转换将为版本使用不同的数据类型

00:12:10.610 --> 00:12:15.259
将其编码为一个字符串，所有辫子关心的是它是唯一的

00:12:15.259 --> 00:12:18.889
然后您对父版本进行编码，而父版本将成为

00:12:18.889 --> 00:12:22.970
如此顺序的字符串，这将用逗号隔开，这里是多个

00:12:22.970 --> 00:12:28.790
父母在这里，他有一个内容类型，所以这个是JSON，并且有合并

00:12:28.790 --> 00:12:33.799
键入，因此sync 9是执行合并的算法的名称，因此

00:12:33.799 --> 00:12:37.519
只要所有客户端以及Peter和服务器都实现同步9，他们就可以

00:12:37.519 --> 00:12:45.079
现在以相同的方式合并，此认沽权包含两个补丁，所以它

00:12:45.079 --> 00:12:50.029
说补丁2，现在，现在知道要找到两个补丁

00:12:50.029 --> 00:12:52.940
所以这是一个补丁，这是另一个补丁

00:12:52.940 --> 00:12:57.440
并且每个路径都有一个“内容”链接，以便您知道它有多长，并且您

00:12:57.440 --> 00:13:01.940
现在知道下一个补丁何时开始，这是一个有趣的内容

00:13:01.940 --> 00:13:07.220
安排好，以便指定一条路径，以便每个Patrick都替换一个区域

00:13:07.220 --> 00:13:12.020
该文档用另一件事，所以这将替换指定的区域

00:13:12.020 --> 00:13:19.580
用点消息的JSON，然后从一个插入到另一个插入

00:13:19.580 --> 00:13:23.270
只是插入一个空的或单个的空

00:13:23.270 --> 00:13:28.340
它要插入的位置，所以这是一个带有对象的数组，它是

00:13:28.340 --> 00:13:33.070
基本上是一条消息，它是聊天，而此人刚刚在聊天中发布了一条消息

00:13:33.070 --> 00:13:38.720
现在是说第二个补丁说点的JSON已放置

00:13:38.720 --> 00:13:45.980
已经更改，您可以添加此对象，好，这是带有值的日期

00:13:45.980 --> 00:13:51.110
一些，所以这就像在编辑一个

00:13:51.110 --> 00:13:55.580
聊天中的消息，然后您会收到一条响应，说“好”，所以这是

00:13:55.580 --> 00:14:02.720
基本格式或我们要添加到放置请求中的内容，然后大赚一笔

00:14:02.720 --> 00:14:07.610
我们添加的功能不仅可以获取一件事，还可以订阅

00:14:07.610 --> 00:14:14.000
所有即将到来的更改，直到完成为止，这就像键一样

00:14:14.000 --> 00:14:19.820
同步的事情，所以我们在这里也有类似的事情，我们说git you

00:14:19.820 --> 00:14:23.990
只是让它成为宠物或订阅并说保持生命，然后回复您

00:14:23.990 --> 00:14:28.580
有多个补丁进入，每个补丁都是相同的格式，例如

00:14:28.580 --> 00:14:32.510
在这里您还可以认为其中之一是没有补丁的，让我们看看是的

00:14:32.510 --> 00:14:36.530
甚至没有补丁，这只是给你一个完整的，所以你可以给

00:14:36.530 --> 00:14:41.870
如果需要，可以使用全部资源，也可以说补丁调用

00:14:41.870 --> 00:14:47.840
或无论它是什么，然后您都可以将其分批打补丁，这很有意义

00:14:47.840 --> 00:14:51.610
帅哥

00:14:51.750 --> 00:14:56.279
所以我没有准备演示，很抱歉，我们将在演示中提供非常好的演示

00:14:56.279 --> 00:15:01.230
几个月或更早就可以开始工作了，所以一些好处

00:15:01.230 --> 00:15:06.120
虽然，所以您知道重新加载按钮变得不必要，这是算法

00:15:06.120 --> 00:15:10.290
可以自动保证这件事是同步的，所有更新都可以推送

00:15:10.290 --> 00:15:14.579
自动缓存永远不会过时，您不必，我们会摆脱所有这些

00:15:14.579 --> 00:15:19.560
像最大年龄和HTTP标头这样的愚蠢启发法，您必须喜欢让自己的

00:15:19.560 --> 00:15:23.040
缓存控制权，否则一切都会正确处理

00:15:23.040 --> 00:15:26.699
自动，这真的是很酷的网络，您的效率会大大提高

00:15:26.699 --> 00:15:30.540
仅当您知道是否第二次访问Facebook时才发送广告

00:15:30.540 --> 00:15:36.000
如果像文件这样的资源发生变化，上次给您发送的通知会有所不同

00:15:36.000 --> 00:15:40.800
总是给你一个差异，它永远不会多余地再次发送你的东西，你

00:15:40.800 --> 00:15:43.800
必须编写大量代码，因为您没有将所有东西连接在一起

00:15:43.800 --> 00:15:49.920
再者，您希望我们在网络应用中编写的大部分逻辑只是

00:15:49.920 --> 00:15:55.050
同步逻辑，这将使所有这一切自动化，这70％只是一个I

00:15:55.050 --> 00:15:59.579
没有类似的理论，我的意思是这是理论，但我们已经

00:15:59.579 --> 00:16:04.309
在我们的实验中注意到了这一点，我们使用此模型重写了程序，

00:16:04.309 --> 00:16:09.470
我们的网络应用程序，它几乎始终消除了大约70％的代码

00:16:09.470 --> 00:16:14.339
这就是一个很酷的结果，我们还免费提供了离线模式

00:16:14.339 --> 00:16:18.629
我认为这很相关，因此您先离线即可获得协作编辑器，

00:16:18.629 --> 00:16:25.199
伺服器停运的所有资料，您的应用程式都能顺利运作，尤其是我们没有

00:16:25.199 --> 00:16:30.059
很好，我没有WebRTC上的锡制纯模式，但是我们确实有一个

00:16:30.059 --> 00:16:35.490
在实验室中工作，这使服务器可以与您的同龄人保持联系

00:16:35.490 --> 00:16:38.519
连接后，您可以继续聊天，如果需要，服务器可以重新启动，或者

00:16:38.519 --> 00:16:41.129
如果您不喜欢该服务器，则可以切换到另一台您认识的人

00:16:41.129 --> 00:16:43.879
它可以像叉子一样

00:16:44.650 --> 00:16:52.560
好吧，很酷，我想大概是十分钟，所以那是网站

00:16:52.860 --> 00:16:57.310
谢谢，很酷的问题再次运行，是的，让我们

00:16:57.310 --> 00:17:09.580
花几分钟询问问题，人们想问些什么，所以这非常

00:17:09.580 --> 00:17:13.480
很酷的个人是从事CR工作的人

00:17:13.480 --> 00:17:22.630
基于VP的工作，没有那么困难的工作，所以我想我的问题是

00:17:22.630 --> 00:17:29.190
我认为是非常清楚的同步位，但似乎

00:17:29.190 --> 00:17:34.630
这里的一些想法与几乎语义网类似

00:17:34.630 --> 00:17:42.790
内容和我看不清楚的部分正在查询，因此

00:17:42.790 --> 00:17:47.650
实际上能够使用来自某个地方的国家，所以它们只是推动

00:17:47.650 --> 00:17:54.060
作为现有指示的一部分，我可以看到它是如何工作的，但是

00:17:54.060 --> 00:18:04.110
我想访问尚未以这种方式公开的状态是什么

00:18:04.170 --> 00:18:08.020
所以不要以这种方式暴露出来，好吧，所以这里有几件

00:18:08.020 --> 00:18:13.480
如果应用程序没有以特定的方式公开状态，该怎么办？

00:18:13.480 --> 00:18:16.930
您需要的，然后我听到的另一个问题是查询

00:18:16.930 --> 00:18:22.300
这两个之间有联系嗯，我的意思是我看起来像这些概念

00:18:22.300 --> 00:18:29.560
与我有关，也许那是不对的，所以没关系，所以所有人都会穿上衣服

00:18:29.560 --> 00:18:33.190
他们俩都有一定程度的关系，因此查询时我们不会开任何东西

00:18:33.190 --> 00:18:38.470
通过查询，您可以执行与HTTP相同的操作，所以您可以将

00:18:38.470 --> 00:18:44.050
网址中的问号会添加一些任意内容，这就像一个

00:18:44.050 --> 00:18:49.300
键值模型，就像网络上一样，每个URL都是键，并且它的值在

00:18:49.300 --> 00:18:52.840
另一端，该值的不同系列随时间而变化，并且

00:18:52.840 --> 00:18:58.570
我们通过这个辫子和

00:18:58.570 --> 00:19:03.880
如果有人说第二个，便可以立即修补和同步并获取更新

00:19:03.880 --> 00:19:08.610
问题是，如果有人对其网站增加了辫子支持，并且

00:19:08.610 --> 00:19:13.029
您可以不必添加编织支持，仍然可以使用法规CTP

00:19:13.029 --> 00:19:15.820
但您不会获得同步语义

00:19:15.820 --> 00:19:20.830
在某些情况下可能需要保证一致性

00:19:20.830 --> 00:19:24.580
添加一些编织功能，例如只是版本或

00:19:24.580 --> 00:19:29.799
只是补丁，例如在没有版本的情况下进行补丁很有用

00:19:29.799 --> 00:19:33.159
您只有一个作家，您真的不需要版本，您知道他们是

00:19:33.159 --> 00:19:36.129
所有的东西都会以一定的顺序进入，你会把它们全部放进去，

00:19:36.129 --> 00:19:41.799
你仍然得到差异和东西，我不知道这是否回答了你的问题，你

00:19:41.799 --> 00:19:44.559
可以，这样您就可以混合和匹配正在使用的支持，从而获得与众不同的效果

00:19:44.559 --> 00:19:48.549
一致性功能或网络效率的变化取决于哪个

00:19:48.549 --> 00:19:57.370
您拥有的功能，所以我想这听起来好像您知道我是否要查询让我们

00:19:57.370 --> 00:20:01.000
说的很好，我想查询特定Feed的Facebook示例

00:20:01.000 --> 00:20:10.509
用户使用其他名称，而不是失败对象的URL，我将依靠一些

00:20:10.509 --> 00:20:16.600
这类搜索和民意测验暴露于当下，是的，你可以想象

00:20:16.600 --> 00:20:20.289
订阅该搜索端点，或者您可以做一个搜索端点来抓取

00:20:20.289 --> 00:20:25.899
用户的名称，或者您知道该用户的URL，这些用户的个人资料信息，然后

00:20:25.899 --> 00:20:32.769
您可以与之同步，就可以同时与两者同步

00:20:32.769 --> 00:20:36.580
嗯，您有没有考虑过，或者我想知道这与

00:20:36.580 --> 00:20:42.549
就像跨省一样，我们当然会使用，是的，我知道我对此有所考虑

00:20:42.549 --> 00:20:47.200
我对Korres妈妈的根源也提出了有争议的意见

00:20:47.200 --> 00:20:50.500
我认为添加了Korres是因为

00:20:50.500 --> 00:20:52.840
您曾经用Korres编程过，您可能已经注意到这很痛苦

00:20:52.840 --> 00:20:58.059
屁股很烂，你知道，是的，所以我不认为我可以

00:20:58.059 --> 00:21:03.820
实际上在这个新世界的合唱中摆脱了它，因为我在自己的音乐中做了一些

00:21:03.820 --> 00:21:10.480
解释，我认为Korres在那里是因为网站已经存在

00:21:10.480 --> 00:21:14.320
在以下安全性假设下构建的服务器Web应用程序：

00:21:14.320 --> 00:21:19.059
其他浏览器无法访问您访问页面，除非用户

00:21:19.059 --> 00:21:25.000
专门去了那里，当引入xmlhttprequest时就改变了

00:21:25.000 --> 00:21:29.740
所以Coors就像是一个糟糕的时刻，好吧，该死的，我们只是添加了一个功能

00:21:29.740 --> 00:21:35.049
进入我们的网络应用程序，从而允许其他站点很好地访问我们的服务器

00:21:35.049 --> 00:21:38.470
即使那真的很酷，也不要让它还好吧，让我们

00:21:38.470 --> 00:21:43.090
人们会像我们一样这样做，如果他们明确表示没关系，这意味着

00:21:43.090 --> 00:21:47.980
他们将安全模型引入了他们的应用程序，我想无论何时我们要转向

00:21:47.980 --> 00:21:52.570
可以在多个站点上访问的新应用或新API，我们可以放手

00:21:52.570 --> 00:21:57.220
烦人的课程，我们可以选择退出而不是选择加入

00:21:57.220 --> 00:22:02.580
像WebSockets这样的放宽了，网络还没有破产

00:22:09.540 --> 00:22:21.309
在我们继续前进之前的任何最后一个问题，非常感谢迈克尔，那是

00:22:21.309 --> 00:22:25.630
很棒，我弹出了这张纸，我记了一些笔记，迈克尔，你应该看一下，

00:22:25.630 --> 00:22:35.140
看看我写错了什么，然后做就可以理解了，然后我们

00:22:35.140 --> 00:22:41.200
我觉得乔治的奥利弗（Oliver）都与纽约混搭效果有关

00:22:41.200 --> 00:22:45.010
他们在IVF上构建的应用程序，你们有想要分享的东西吗？

00:22:45.010 --> 00:22:49.360
屏幕或通过某些内容聊天我可以共享我的屏幕，

00:22:49.360 --> 00:22:53.160
简要介绍一下纽约市小姐

00:23:00.260 --> 00:23:09.500
你回来了，是的，是的，你很好，只是找到那个分享按钮，不行

00:23:09.500 --> 00:23:17.330
是的，是的，我们去了，我们是社区网络，所以

00:23:17.330 --> 00:23:21.919
基本上我们所做的只是直接将建筑物与人联系起来

00:23:21.919 --> 00:23:31.880
大部分使用屋顶无线天线彼此之间，我们大约有300个

00:23:31.880 --> 00:23:36.169
建筑物现在连接到整个城市，所以有两个超级节点，所以这些是

00:23:36.169 --> 00:23:39.799
位于互联网交换点，因此这是我们直接与之合作的地方

00:23:39.799 --> 00:23:47.630
其他网络，然后我们在城市屋顶上拥有这些无线链接

00:23:47.630 --> 00:23:54.110
屋顶，并且该um分配流量以使用OSPF进行路由，因此

00:23:54.110 --> 00:24:02.840
有两个目标，或者一个目标是今天将人们直接与另一个目标联系起来

00:24:02.840 --> 00:24:06.410
我认为更有趣的目标是建立我们自己的网络

00:24:06.410 --> 00:24:14.210
在内部服务器处于活动状态时打开，即使与外部连接也是如此

00:24:14.210 --> 00:24:19.820
互联网瘫痪了，我们没有任何超认真的服务，您知道我们有

00:24:19.820 --> 00:24:26.330
像Wikipedia Troon一样，我认为有些人的个人博客George一直

00:24:26.330 --> 00:24:33.890
在我的聊天服务上工作，我们一直在谈论可以做很多事情的方法

00:24:33.890 --> 00:24:39.220
的东西，所以最好确保对大家和任何反馈

00:24:39.280 --> 00:24:52.970
乔治（Georgiy）想谈谈，大家都能听到我的声音吗，是的，超级好，基本上

00:24:52.970 --> 00:24:59.720
奥利弗说，建立社区建立的网络确实很有趣

00:24:59.720 --> 00:25:06.340
对我们来说，这是一个机会，我的意思是我有很多更广泛的点对点服务

00:25:06.340 --> 00:25:13.040
感觉像是那种概念更像是在构建互联网

00:25:13.040 --> 00:25:17.110
人与人之间的实际社会联系

00:25:17.110 --> 00:25:24.460
在网络结构中反映出这是一个非常酷的机会，因此

00:25:24.460 --> 00:25:29.930
首先，拥有像我们这样的分布式网络的好处之一是

00:25:29.930 --> 00:25:40.070
弹性模型不是让所有事物都成为轮辐模型

00:25:40.070 --> 00:25:45.920
只要我们可以保留一部分

00:25:45.920 --> 00:25:52.220
建立网络后，即使我们与以下设备断开连接，我们也可以访问内部网络

00:25:52.220 --> 00:25:58.700
基于这种想法，我正在考虑实施更广泛的互联网

00:25:58.700 --> 00:26:10.820
使用IP FS进行存储和分发的聊天服务，以及

00:26:10.820 --> 00:26:18.320
起点是为纽约市的网眼准备一个私人蜂群，我认为他们是

00:26:18.320 --> 00:26:24.740
ipfs的一些优点仍然相对较新，因此规模不断扩大

00:26:24.740 --> 00:26:30.710
它在全球范围内有点棘手，但在网格内部是缩放的

00:26:30.710 --> 00:26:37.790
这不是问题，即使网络

00:26:37.790 --> 00:26:43.180
分布在更广泛的Internet中，这真的很有趣

00:26:43.180 --> 00:26:51.890
当您考虑潜在的灾难性场景时，会发现一个有趣的属性

00:26:51.890 --> 00:26:59.480
例如，在飓风桑迪期间，某些社区的互联网是

00:26:59.480 --> 00:27:07.670
在一周的某些时间里，几天无法访问，然后，NYC网格还没有

00:27:07.670 --> 00:27:12.710
真正开始，但是布鲁克林的一个社区提供了网状服务

00:27:12.710 --> 00:27:18.890
能够为附近的人们提供互联网，这很漂亮

00:27:18.890 --> 00:27:26.150
令人印象深刻的成就，所以基本上我采取的方法是

00:27:26.150 --> 00:27:30.919
有一个私人的群体，然后在里面有一个引导节点

00:27:30.919 --> 00:27:40.779
网络等的引导节点认为具有知名度

00:27:40.779 --> 00:27:50.299
小型计算机（如树莓派PI）直接连接到天线，

00:27:50.299 --> 00:27:55.669
这很整洁，因为您可以在天线上运行它是太阳能电池板Raspberry Pi

00:27:55.669 --> 00:28:01.399
是的，消除了很多外部依赖

00:28:01.399 --> 00:28:08.749
可能，所以这几乎是架构，这是一个非常简单的主意

00:28:08.749 --> 00:28:13.909
起步我们在开发某些东西方面还没有走得很远

00:28:13.909 --> 00:28:20.869
已经为用户准备好了，但是概念证明已经准备就绪，

00:28:20.869 --> 00:28:30.649
 bootstrap节点做bootstrap是，所以公平地警告我对ipfs的了解是

00:28:30.649 --> 00:28:37.970
当我们有一个客户端连接时，引导节点仍然是相当基本的

00:28:37.970 --> 00:28:44.960
为他们指定了引导节点以找到要加入的第一个对等节点，因此这些

00:28:44.960 --> 00:28:50.539
现在我的节点上正在运行Raspberry Pi，这就是

00:28:50.539 --> 00:28:54.580
引导节点哦，先生。通知聊天

00:28:54.580 --> 00:29:00.409
不适合网格物体本身，也不适合网格物体本身，而是聊天应用程序的一种

00:29:00.409 --> 00:29:05.389
the带了对不起的引导通知，用于在ipfs上运行

00:29:05.389 --> 00:29:11.539
网格我们当地的松鼠好吧好吧，这是背piggy好吧，我们要

00:29:11.539 --> 00:29:14.359
谈论您正在谈论的群聊，您正在谈论的聊天应用程序

00:29:14.359 --> 00:29:21.859
关于生物，您认为管材好不好，不，是的，这是最重要的

00:29:21.859 --> 00:29:28.809
实际的纽约市完成联网的能源结构很酷

00:29:32.289 --> 00:29:42.950
其他一些问题，所以听起来好像有一个演示，如果我们可以回顾一下

00:29:42.950 --> 00:29:47.179
有回购协议或类似的东西吗，是的，有回购协议

00:29:47.179 --> 00:29:54.080
这是180行代码，如果您想让Oliver摆脱计算机的困扰，

00:29:54.080 --> 00:30:01.190
在您喜欢的命令行上共享它，然后输入一个名称即可进入引导程序

00:30:01.190 --> 00:30:24.499
服务器，然后是的，如果您可以将其放到服务器中，我就可以了，所以

00:30:24.499 --> 00:30:30.499
只是很难听到背景噪音是什么，对不起

00:30:30.499 --> 00:30:35.840
关于那是的，我认为这实际上可以使

00:30:35.840 --> 00:30:49.369
很好，在我们继续前进之前，还有人有其他问题吗？

00:30:49.369 --> 00:31:00.169
随着我们在网格上开发更多服务，长期使用我们的计划类型是

00:31:00.169 --> 00:31:05.720
基本上拥有一个俘虏门户，所以当您加入网格时，您会加入公众

00:31:05.720 --> 00:31:12.139
节点，您会看到所有可用的不同服务，我认为

00:31:12.139 --> 00:31:20.409
那将是一个很好的机会，可以将其注入人们的习惯中

00:31:20.409 --> 00:31:25.580
所以现在的状态听起来像是一个很酷的主意

00:31:25.580 --> 00:31:30.919
在纽约市网格上使用IPS快速聊天应用程序只是因为它似乎

00:31:30.919 --> 00:31:34.249
非常适合网络基础架构本身，应该

00:31:34.249 --> 00:31:37.820
相当强大，您已经在一定程度上进行了开发，然后在某个时候

00:31:37.820 --> 00:31:42.070
我们将启动它，我想是当该服务可用时，例如Paige

00:31:42.070 --> 00:31:48.400
就像您拥有很多应用程序一样，是的，您知道这有点像

00:31:48.400 --> 00:31:53.800
零散的开发工作，项目本身就是，您知道有很多

00:31:53.800 --> 00:32:01.120
挑战和网状服务并非没有像燃烧的必需品一样

00:32:01.120 --> 00:32:08.590
但这绝对是我们正在朝着很酷的方向努力的东西

00:32:08.590 --> 00:32:14.850
嗯，到目前为止，它是如何构建的？您觉得它是容易还是困难？

00:32:14.850 --> 00:32:23.950
我的意思是坦率地说，基本演示花了几天才真的很容易

00:32:23.950 --> 00:32:30.490
所有我不得不说ipfs界面非常友好和容易

00:32:30.490 --> 00:32:33.180
使用[音乐]

00:32:33.180 --> 00:32:43.480
是的，尤其是现在使用JavaScript并具有统一的界面，是的，我当时

00:32:43.480 --> 00:32:55.840
惊讶，好吧，你怎么分开的是，谢谢你

00:32:55.840 --> 00:33:00.940
乔治和奥利弗（George and Oliver）非常酷，就像你想带它去

00:33:00.940 --> 00:33:09.220
讨论，你住了一晚，是的，完全是，哦，谢谢，对不起

00:33:09.220 --> 00:33:20.830
背景噪音就像打乱了我的大脑一样，是的，我想

00:33:20.830 --> 00:33:25.480
这实际上是我想要谈论的话题的完美选择

00:33:25.480 --> 00:33:29.740
我没有演示文稿或类似的内容，但是有一个

00:33:29.740 --> 00:33:38.380
总结这些想法的文档，我认为它已经在撰写

00:33:38.380 --> 00:33:46.650
请注意，如果您不熟悉BFS计划流程，那么请注意

00:33:46.650 --> 00:33:53.070
我们今年要做的基本上是

00:33:53.070 --> 00:34:01.850
所以这里要公开征集2020年的主题

00:34:01.850 --> 00:34:11.100
佛瑞斯塔（Foresta）的目标可为我们的发展和资源分配提供帮助

00:34:11.100 --> 00:34:17.130
我可以在其中找到您，我非常夸张，我们输入了一些高社交性

00:34:17.130 --> 00:34:22.460
影响应用程序我认为这当然需要其他

00:34:22.460 --> 00:34:28.550
一种可以掩饰社会影响的事情，但这是

00:34:28.550 --> 00:34:40.860
我认为这非常适合ipfs的优势和使命，因此

00:34:40.860 --> 00:34:46.410
顺便说一下，这些想法对于那些

00:34:46.410 --> 00:34:55.169
AB本地线下事务的定期参与者哦，谢谢Carrie，所以我可能会

00:34:55.169 --> 00:34:58.770
向合唱团宣讲到一定程度，但是我只想通过这个

00:34:58.770 --> 00:35:05.670
一点点，并得到一些反馈，我确实看到了，如果您知道任何事情都可以

00:35:05.670 --> 00:35:14.700
一起走出来，所以你知道这个主意是从哪里来的

00:35:14.700 --> 00:35:21.420
今年可以举办很多活动，例如激进网络会议

00:35:21.420 --> 00:35:31.040
在纽约，这里有很多聚会和其他活动，重点是

00:35:31.040 --> 00:35:37.560
不仅是十二月，而且是技术的社会影响以及我所追求的一种模式

00:35:37.560 --> 00:35:47.040
看到新兴的是，许多人道主义学科的人

00:35:47.040 --> 00:35:55.580
在难民营等各种情况下工作，因此

00:35:55.580 --> 00:36:03.120
偏远地区或服务欠缺地区市区邻里灾区

00:36:03.120 --> 00:36:08.009
等他们似乎有我将有一致的一套

00:36:08.009 --> 00:36:15.720
需求或类似技术支持框架，即使您

00:36:15.720 --> 00:36:19.410
知道他们可能以不同的规模，不同的预算运作

00:36:19.410 --> 00:36:25.319
人们似乎觉得有用或在某种程度上出现了一种模式

00:36:25.319 --> 00:36:33.710
我想他们面临的挑战和相似之处在于

00:36:33.710 --> 00:36:40.349
它们在带宽受限的环境中工作，因此通常

00:36:40.349 --> 00:36:47.279
其余部分的比赛完全不可靠或缺少扩展性

00:36:47.279 --> 00:36:57.180
世界上有一个强大的现有社区，具有特定的需求，

00:36:57.180 --> 00:37:05.039
由社区自己定义，而不是由外部参与者定义

00:37:05.039 --> 00:37:12.029
迫切需要能够快速，可靠地共享信息

00:37:12.029 --> 00:37:20.700
当地的环境，最后不那么普遍，但我仍然认为

00:37:20.700 --> 00:37:28.049
非常强烈的要求是技术必须由人维护

00:37:28.049 --> 00:37:33.450
在其所服务的社区内，而不是由外部顾问或

00:37:33.450 --> 00:37:39.119
这样的人，所以您知道它基本上可以继续工作而无需

00:37:39.119 --> 00:37:49.349
外部和外部业务代表，您都知道在通话中和我一样

00:37:49.349 --> 00:37:57.569
看着你知道，因为我一遍又一遍地听到这些故事

00:37:57.569 --> 00:38:04.799
真正让我感到惊讶的是，这些

00:38:04.799 --> 00:38:14.119
组织一直希望至少在理论上和ipfs

00:38:14.119 --> 00:38:23.420
价值观和设计目标，因此我们应该真正能够在这些方面开展工作

00:38:23.420 --> 00:38:31.010
比标准的Web堆栈更好的环境，我们应该能够

00:38:31.010 --> 00:38:38.630
提供本地路由，弹性和内容完整性，其中很多

00:38:38.630 --> 00:38:50.900
人们需要，但不是，现实是，大多数你知道我实际上

00:38:50.900 --> 00:39:00.440
纽约市网民，并在某种程度上削弱了这一论点，但实际上

00:39:00.440 --> 00:39:05.270
在ipfs上构建歌剧环境，就像我想象的那样，但是

00:39:05.270 --> 00:39:13.550
许多其他人似乎并没有真正意识到或主动或类似于

00:39:13.550 --> 00:39:20.330
建筑文章就是这些情况，我给我们讲了一些

00:39:20.330 --> 00:39:29.830
已经使用了该功能，而大多数功能只是建立在现有的网络技术上，并且

00:39:29.830 --> 00:39:43.400
基本上是这样，所以我认为这是我们反思的机会

00:39:43.400 --> 00:39:53.750
了解为什么我们很少被选中，并可能试图弥合这些差距，并且

00:39:53.750 --> 00:40:00.500
使工具在实际情况下可用

00:40:00.500 --> 00:40:07.670
今天人们生活的巨大差异与我们的

00:40:07.670 --> 00:40:18.410
更大的社会影响力任务，因此实际上并没有特定的轨迹或

00:40:18.410 --> 00:40:26.960
II列出的议程，这就像我认为有一些明显的差距

00:40:26.960 --> 00:40:31.940
最大的文档或示例地址之一

00:40:31.940 --> 00:40:40.579
我认为这个特殊的用例有很多挑战，我们知道

00:40:40.579 --> 00:40:47.270
我们正面临着我想，正如您所知，赛车网民已经看到您知道

00:40:47.270 --> 00:40:54.940
您可以在主群上处理作业，所以很多人在

00:40:54.970 --> 00:40:59.030
断开或可能断开的网段类型有

00:40:59.030 --> 00:41:08.990
被采用的私有蠕虫蠕虫有一个引导节点，很明显

00:41:08.990 --> 00:41:15.859
就像配置中的单点故障一样，我们看到了很多

00:41:15.859 --> 00:41:22.250
通过您可以使用多个引导笔记，但这仍然不能消除

00:41:22.250 --> 00:41:26.510
最静态的故障点，所以我认为最好是哪种发现

00:41:26.510 --> 00:41:34.490
需要一种机制，我们需要变得有点意识到

00:41:34.490 --> 00:41:42.559
不同的连接类，所以我们不尝试连接到事物

00:41:42.559 --> 00:41:50.569
当您真正想做的是工作时，跨过一个非常昂贵的LAN链接

00:41:50.569 --> 00:41:57.920
与节点在本地网络中这样的事情，但似乎这是

00:41:57.920 --> 00:42:07.190
就像一个非常平易近人的目标，而这个目标将具有重大意义

00:42:07.190 --> 00:42:13.730
今天的积极影响，这是我认为我们作为一个组织所要做的事情

00:42:13.730 --> 00:42:21.410
一直在寻找但不一定总是有趣的游戏，所以这些都是

00:42:21.410 --> 00:42:29.630
抽象的想法，但我知道我欢迎我欢迎任何任何人

00:42:29.630 --> 00:42:31.809
反馈

00:42:38.230 --> 00:42:47.750
是的，我知道我相信同一回购中有一个关于

00:42:47.750 --> 00:42:55.220
像移动设备一样，更多地关注我感兴趣的移动用例

00:42:55.220 --> 00:42:59.960
之所以重叠，是因为通常可以从中受益最大的社区

00:42:59.960 --> 00:43:05.329
来自像这样的集中化和类似的技术以及本地

00:43:05.329 --> 00:43:12.170
发现的故事总是像手机总是在照片中，而我

00:43:12.170 --> 00:43:17.329
想知道您是否对我们如何有更深入的想法

00:43:17.329 --> 00:43:22.160
将移动设备用于具有较高社会影响力的应用程序，是的，这不是

00:43:22.160 --> 00:43:25.940
实际上，这是我应该立即退出的一种

00:43:25.940 --> 00:43:32.390
我认为很多时候人们和劣势之间的差距更加明显

00:43:32.390 --> 00:43:38.720
职位将不会像他们将拥有的计算机那样随身携带

00:43:38.720 --> 00:43:43.750
手机可能比Android手机的手机性能差强人意

00:43:43.750 --> 00:43:49.819
但在我们遇到的情况下，电池续航时间可能也是一个大问题

00:43:49.819 --> 00:43:53.900
像您这样的打扰，您可能没有很多充电的机会，所以我

00:43:53.900 --> 00:44:04.900
认为这是我们肯定远远落后于HTTP的某个地方，而我

00:44:04.900 --> 00:44:10.040
猜一件事，我没有真正提到，但我觉得我应该科莱特

00:44:10.040 --> 00:44:16.609
明确地是，我认为在这种情况下，尤其是出于某种原因

00:44:16.609 --> 00:44:26.210
人们经常会喜欢移动用例和其他实际限制

00:44:26.210 --> 00:44:30.950
针对这些情况构建工具通常将绝对是最简单的技术

00:44:30.950 --> 00:44:37.099
实际上，它比我在许多其他情况下的工作效果更胜一筹

00:44:37.099 --> 00:44:41.480
就像人们通常不会建立您知道的网站反应

00:44:41.480 --> 00:44:47.060
就像大量的JavaScript，当人们将构建简单的

00:44:47.060 --> 00:44:52.780
像大多数静态页面一样，或者使用现成的东西，小人们

00:44:52.780 --> 00:44:58.460
有很多像WordPress不一定是最好的例子

00:44:58.460 --> 00:45:06.290
本身很简单，但是非常现成，并且可以预见

00:45:06.290 --> 00:45:15.260
又熟悉又熟悉，所以我认为应该由我们来讲述为什么我们要交付

00:45:15.260 --> 00:45:22.610
使用诸如IP地址之类的复杂性来证明其合理性的价值

00:45:22.610 --> 00:45:32.870
我认为这很棒，这是一个很棒的试验场

00:45:32.870 --> 00:45:40.940
成为所有其他情况的先例，我们也将有一点点

00:45:40.940 --> 00:45:49.700
降低Adsense的压力，但努力做到这一点

00:45:49.700 --> 00:45:56.750
想同时改善其他情况，是的，我想最后一点

00:45:56.750 --> 00:46:04.910
提出的范围远远超出了这些用例，就像我个人发现的所有

00:46:04.910 --> 00:46:10.610
去中心化技术在入职方面要困难得多，因此

00:46:10.610 --> 00:46:15.110
这就像实际的好处是什么，有一篇文章我会删除

00:46:15.110 --> 00:46:18.320
在此链接我没有给诺兰·劳森（Nolan Lawson）采访，因为他给了

00:46:18.320 --> 00:46:22.720
在最后一个离线营地中谈论它，但在我看来，你喜欢

00:46:22.720 --> 00:46:26.270
惊人的好处，可能使您使用不熟悉的东西

00:46:26.270 --> 00:46:33.740
真正的超级明显的好处或超级容易的入职，并且至少其中之一

00:46:33.740 --> 00:46:40.700
这些必须很棒，它们不能同时不清楚，我看到了很多

00:46:40.700 --> 00:46:45.890
去中心化词汇中的陌生词汇，就像托管这样的概念

00:46:45.890 --> 00:46:49.430
您自己的东西，而不是使用已经存在的服务

00:46:49.430 --> 00:46:53.120
联盟就像词汇量太多，还有一个谈话

00:46:53.120 --> 00:46:57.440
有人正在用这种像这样的初学者友好的语言来写作

00:46:57.440 --> 00:47:04.180
我无法理解的最后问题所带来的问题，但我认为这并非特定于

00:47:04.180 --> 00:47:11.440
ipfs，但要解释其好处，以及简化入职流程和增加词汇量

00:47:11.440 --> 00:47:16.270
更容易获得的人齐头并进，并且至少要有其中之一

00:47:16.270 --> 00:47:22.869
我，我也只是想调出离线营地出版物，

00:47:22.869 --> 00:47:28.660
在此处找到一个标签，其中包含有关权力下放的故事集，以及一个标签

00:47:28.660 --> 00:47:32.260
关于发展中国家，显然你在说的不是

00:47:32.260 --> 00:47:36.400
总是在发展世界局势，但是您看到的很多限制

00:47:36.400 --> 00:47:40.300
就我每天不考虑的事情而言，我不需要思考

00:47:40.300 --> 00:47:46.680
有关电力如何影响我的Wi-Fi的信息，例如某些人所做的

00:47:46.680 --> 00:47:50.560
但我认为您可以在其中找到相关文章

00:47:50.560 --> 00:47:53.800
权力下放一个关于居住在这里的人的文章

00:47:53.800 --> 00:47:56.619
像这些故意像纽约比赛一样，我们希望有一个

00:47:56.619 --> 00:48:01.119
一点点的社区，只有我们在自己的网格上提供服务的工具

00:48:01.119 --> 00:48:04.840
网络和类似互联网之类的东西放在盒子里

00:48:04.840 --> 00:48:08.250
那里有一些阅读资料

00:48:10.170 --> 00:48:15.960
是的，我只是想快速回应您的第一点，我完全同意

00:48:15.960 --> 00:48:23.609
同意，但我也觉得零件可以带来惊人的好处

00:48:23.609 --> 00:48:29.460
在某些情况下，我认为我们也许可以弄清楚新手入门

00:48:29.460 --> 00:48:36.299
通过利用用例中的收益，例如我们的价值主张

00:48:36.299 --> 00:48:42.710
可以比较清楚，我想是您知道诸如社交网络之类的知识

00:48:42.710 --> 00:48:51.890
出于某种原因，可能不会在ipfs上构建它

00:48:51.890 --> 00:48:57.450
正常的互联网状况，但例如优秀的档案工作者

00:48:57.450 --> 00:49:04.290
告诉我一个项目，他们在其中与我们一起使用了扫描的文本

00:49:04.290 --> 00:49:07.470
并进行数字化和ocr'd，他们实际上是在将它们带入

00:49:07.470 --> 00:49:14.940
回到这些village牛的尼泊尔村庄，

00:49:14.940 --> 00:49:22.770
我和他们在这种情况下只是使用普通的HTML，但这就像我可以

00:49:22.770 --> 00:49:30.809
试想一下，能够无缝地保存和共享这些X

00:49:30.809 --> 00:49:35.549
像是一对对面的山峰之类的村庄

00:49:35.549 --> 00:49:40.470
这样，您便可以访问共享的收藏集，但是

00:49:40.470 --> 00:49:47.670
也经过验证，并且像我认为的那样可以透明地提供给您

00:49:47.670 --> 00:49:56.520
我认为这是一个用例，我们可以真正解释您为什么要使用此

00:49:56.520 --> 00:50:05.819
部门不一定具有这样的优势：

00:50:05.819 --> 00:50:10.109
至少是开发人员的素质，所以我不知道我认为有很多

00:50:10.109 --> 00:50:18.619
这里有很多机会，我想背负着这个念头

00:50:18.619 --> 00:50:26.549
我正在考虑的一个具体项目，您如何沟通

00:50:26.549 --> 00:50:35.039
政治上敌对的气候中的信息，例如具体如何

00:50:35.039 --> 00:50:40.769
您如何在中国和中国西部交流

00:50:40.769 --> 00:50:46.589
因此，您不必使用更广泛的互联网，并且能够

00:50:46.589 --> 00:50:53.630
通过私人方式将信息直接从一部电话转移到另一部电话

00:50:53.630 --> 00:51:00.150
似乎非常有趣，能够将交付件与

00:51:00.150 --> 00:51:06.630
像我试图向妈妈发送消息时说的那样，但是我们有共同的

00:51:06.630 --> 00:51:11.130
朋友，所以我可以通过同一个人传递其他人的信息

00:51:11.130 --> 00:51:18.349
机制，这似乎是ipfs唯一适合的东西

00:51:18.349 --> 00:51:26.969
我们有一些人试图在字面上那个确切的项目上工作，

00:51:26.969 --> 00:51:34.979
不幸的是几年前的性能和路由能力

00:51:34.979 --> 00:51:39.150
当时不在那里，但我认为可能是时候

00:51:39.150 --> 00:51:51.449
重新审视这个想法，今年我们已经一起完成了，是的，只是从

00:51:51.449 --> 00:51:54.599
更广泛的离线第一社区的观点

00:51:54.599 --> 00:51:59.069
权力下放首先有很多原因要实施离线

00:51:59.069 --> 00:52:05.459
模式，其中包括诸如产生金钱之类的东西

00:52:05.459 --> 00:52:10.049
加载速度更快，您的公司能赚更多钱，但我认为

00:52:10.049 --> 00:52:13.650
在跨受众群体中表现更好是人道主义的，所以我同意你的观点

00:52:13.650 --> 00:52:20.729
您可以在这个方面找到用例的那一面，它将使您感到更加温暖

00:52:20.729 --> 00:52:28.859
模糊，这与我个人不同，我更喜欢听到有关这些用例的信息

00:52:28.859 --> 00:52:31.440
碰到的比那来的要大

00:52:31.440 --> 00:52:35.579
有时会与政府打交道

00:52:35.579 --> 00:52:39.150
集中化是对立的，所以我喜欢使用这种

00:52:39.150 --> 00:52:48.329
以人道主义案件为例，所以我们还有两分钟

00:52:48.329 --> 00:52:56.490
关于这个讨论或其他想法的任何其他评论，我想我只是想

00:52:56.490 --> 00:53:01.980
问一下，然后等一下就好了，你知道

00:53:01.980 --> 00:53:07.410
同步地发出声音，这是非常希望能得到某些东西的经验

00:53:07.410 --> 00:53:18.270
这样，我很想尝试编译一种无用的寄生虫

00:53:18.270 --> 00:53:24.960
这个名字的案例列表，所以我想做任何很棒的贡献，并且链接

00:53:24.960 --> 00:53:30.829
会议笔记um中提到的该github问题

00:53:30.829 --> 00:53:34.980
好吧，我只看日历一秒钟，我们在

00:53:34.980 --> 00:53:42.779
该月的第三个星期三，因此对于1月将是第15个

00:53:42.779 --> 00:53:48.000
您看到此会议发布的相同问题将被重新命名为新

00:53:48.000 --> 00:53:51.539
约会，我们将在那里继续进行对话，所以如果有人有其他话题

00:53:51.539 --> 00:53:55.740
他们想讨论一个很酷的演示，但他们想介绍让我

00:53:55.740 --> 00:54:00.390
知道您总是可以就此问题发表评论，而本次议程大幅削减会议

00:54:00.390 --> 00:54:03.690
注意库存是我们使用的库存，所以我将添加一个新部分，并继续添加想法

00:54:03.690 --> 00:54:06.900
下次很高兴见到大家，非常感谢Michael

00:54:06.900 --> 00:54:11.099
奥利弗（Oliver）和乔治（George）和阿卡迪（Arkady）分享并带领讨论进入

00:54:11.099 --> 00:54:16.910
大家来听大家的美好一天

