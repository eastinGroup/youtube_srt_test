WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.320 --> 00:00:06.480
好吧，我会跳进去做一个简短的介绍

00:00:06.480 --> 00:00:10.320
因此，欢迎加入ipva本地和离线特别兴趣小组

00:00:10.320 --> 00:00:13.599
一群人定期聚在一起谈论ipfess和

00:00:13.599 --> 00:00:17.440
离线和本地优先的背景下的相关技术

00:00:17.440 --> 00:00:21.279
应用程序开发，我们提供了一切

00:00:21.279 --> 00:00:25.840
面向数据的问题，我们可能可以使用这些挑战

00:00:25.840 --> 00:00:28.960
有时用于示范的技术，今天我们

00:00:28.960 --> 00:00:32.559
谨欢迎钓鱼网站恩，鲍里斯和布鲁克林

00:00:32.559 --> 00:00:34.880
与我们谈论他们在发展中的工作

00:00:34.880 --> 00:00:40.559
嗯嗯Web本机文件系统和一组

00:00:40.559 --> 00:00:44.399
允许人们进入去中心化网络但使用的技术

00:00:44.399 --> 00:00:47.440
非常熟悉的集中式技术隐喻

00:00:47.440 --> 00:00:52.000
和工具，所以不用多说，欢迎向我们展示

00:00:52.000 --> 00:00:56.480
你真棒谢谢你是的

00:00:56.480 --> 00:01:01.440
詹姆斯和史蒂文呃也在这里史蒂文做了很多沉重的事

00:01:01.440 --> 00:01:05.280
提起这个，我想我会做一个演示

00:01:05.280 --> 00:01:08.880
应用程序，嗯，我会继续，我有一些幻灯片，所以

00:01:08.880 --> 00:01:13.840
我会用那些来经历

00:01:14.640 --> 00:01:17.759
任何人都可以给我竖起大拇指，如果他们能看到这个

00:01:17.759 --> 00:01:24.720
完美的um，因此在ipfs上具有裂变功能的本地首个应用程序

00:01:24.720 --> 00:01:29.600
嗯，这是我们要针对的默认状态

00:01:29.600 --> 00:01:36.079
嗯，首先，呃，什么是裂变，所以我们接下来讨论

00:01:36.079 --> 00:01:40.799
一代应用程序发布，所以现在的技术栈

00:01:40.799 --> 00:01:43.759
您不仅需要学习构建应用程序，还需要学习

00:01:43.759 --> 00:01:48.479
托管并部署并扩展它的数量很多

00:01:48.479 --> 00:01:52.079
因此对于我们来说，我们认为这是为前端开发人员设计的

00:01:52.079 --> 00:01:56.159
这样您就不必成为一名全栈开发人员devops专家

00:01:56.159 --> 00:02:00.399
嗯，我们创建的主要的uh开源sdk

00:02:00.399 --> 00:02:04.159
我们称其为“ Web Native”，它拥有用户帐户

00:02:04.159 --> 00:02:08.879
文件和数据存储等等，您可以直接添加到您的应用中

00:02:08.879 --> 00:02:12.000
为此，我们非常倾向于ipfs

00:02:12.000 --> 00:02:15.920
嗯，以我们创建帐户系统的方式

00:02:15.920 --> 00:02:19.040
数据实际上是与用户帐户一起存储的，因此您的

00:02:19.040 --> 00:02:24.800
您的应用已发布，并且该应用请求用户和每个用户的许可

00:02:24.800 --> 00:02:30.080
嗯，有自己的文件系统um，数据被写入其中

00:02:30.080 --> 00:02:34.080
有点像开源的icloud

00:02:34.080 --> 00:02:38.160
因此，Web本机应用程序实际上在客户端（包括移动设备）上运行

00:02:38.160 --> 00:02:43.440
并可以离线工作，嗯，我说可以，因为您仍然需要做

00:02:43.440 --> 00:02:47.120
努力以这种方式进行设置并与本地存储和

00:02:47.120 --> 00:02:51.440
等等um做托管的发布平台

00:02:51.440 --> 00:02:56.160
um有一个基于Web的命令行界面应用程序创建

00:02:56.160 --> 00:03:01.840
um dns ssl今天所有可以期待的好东西

00:03:01.840 --> 00:03:04.000
嗯，在下面，我们将所有内容发布到

00:03:04.000 --> 00:03:09.519
ipfs和自动化dns链接嗯，我将在稍后介绍

00:03:09.519 --> 00:03:12.239
更多细节，您可以随时阻止我问

00:03:12.239 --> 00:03:18.080
以及沿途的问题嗯，所以最近的幻灯片

00:03:18.080 --> 00:03:23.040
恩布鲁克，所以我们真的认为您可以在边缘构建整个应用程序

00:03:23.040 --> 00:03:26.239
嗯，他们可以先离线然后本地

00:03:26.239 --> 00:03:33.280
嗯，这意味着不必学习服务器数据存储即可

00:03:33.280 --> 00:03:37.760
因此，我们将这些东西放在前端和客户端

00:03:37.760 --> 00:03:42.959
嗯，所以只是在javascript中编译成javascript的任何东西

00:03:42.959 --> 00:03:47.040
可以与我们的sdk一起使用，因此很有趣的事情是

00:03:47.040 --> 00:03:53.519
诸如Web Assembly之类的东西嗯，那是带有轻微的

00:03:53.519 --> 00:03:56.000
过渡

00:03:56.400 --> 00:04:00.080
我们思考的方式是我们设定自己

00:04:00.080 --> 00:04:04.080
这个东西应该可以在任何浏览器（包括移动设备）上运行的目标

00:04:04.080 --> 00:04:09.599
插件，因此我们非常倾向于

00:04:09.599 --> 00:04:15.840
现代化的浏览器api，特别是我们将目标锁定在所有主要浏览器上

00:04:15.840 --> 00:04:19.199
浏览器（包括移动版um），这是我们在

00:04:19.199 --> 00:04:25.040
如果某事仅在一个浏览器上起作用并不能真正帮助我们，

00:04:25.040 --> 00:04:30.240
这就是我们针对网络加密api的关键所在

00:04:30.240 --> 00:04:34.160
实际上，我们会将您的身份与持有的私钥相关联

00:04:34.160 --> 00:04:37.680
通过您的浏览器Web worker服务worker indexeddb

00:04:37.680 --> 00:04:42.560
 pwa和网络应用程序的出现，因此我们真的认为每个应用程序

00:04:42.560 --> 00:04:47.280
在由Web Native提供支持的裂变um上

00:04:47.280 --> 00:04:51.440
它实际上是一个应用程序，应该使用一些现代技术

00:04:51.440 --> 00:04:56.080
应当配置为将pwa添加到主屏幕上

00:04:56.080 --> 00:05:00.080
应该能够有自己的单独图标呃，如果你是

00:05:00.080 --> 00:05:06.479
在桌面um上的uh上，您应该对其进行设置，以便

00:05:06.479 --> 00:05:11.840
您的应用中有意义的部分实际上可以离线工作

00:05:12.080 --> 00:05:20.240
嗯，这是我们建立的相当高的堆栈

00:05:20.240 --> 00:05:28.400
嗯，所以我们设计了一些东西

00:05:28.400 --> 00:05:32.240
记住的概念之一就是事物

00:05:32.240 --> 00:05:36.639
需要是便携式的，他们不仅被锁在裂变中

00:05:36.639 --> 00:05:40.560
他们可以被任何人使用，这意味着从

00:05:40.560 --> 00:05:43.919
我们得到的诸如内容寻址之类的东西

00:05:43.919 --> 00:05:52.080
从ipfs um身份方面um我们已经建立了我们的帐户系统um

00:05:52.080 --> 00:05:56.560
 dos的顶部，因此系统中的私钥代表

00:05:56.560 --> 00:06:01.840
您的帐户um brooke已制定了协议

00:06:01.840 --> 00:06:05.120
叫做ucan，可以让您分散管理

00:06:05.120 --> 00:06:09.840
身份验证，包括脱机身份验证um

00:06:09.840 --> 00:06:14.240
类似于oauth的去中心化版本

00:06:14.240 --> 00:06:18.319
如果您将服务器取出，并且将帐户归用户所有

00:06:18.319 --> 00:06:22.080
那么你必须改变这些东西的工作方式

00:06:22.080 --> 00:06:29.039
嗯，我们还把一堆东西放在dns um ipns中，

00:06:29.039 --> 00:06:33.039
出于各种原因，今天的可靠性已经足够

00:06:33.039 --> 00:06:38.319
嗯，嗯dns最终变成了缓存，我们使用dns

00:06:38.319 --> 00:06:42.400
链接到其他人显然也可以与其他人一起工作

00:06:42.400 --> 00:06:48.240
通过运行ipfs网关访问网络，以便人们可以访问裂变应用程序

00:06:48.240 --> 00:06:55.520
然后他们将通过https um访问它，然后由Web native加载js ipfs

00:06:55.520 --> 00:07:00.840
嗯，从那以后在应用程序上，嗯，实际上是直接通过本机进行通信

00:07:00.840 --> 00:07:05.440
ipfs um的Web本机文件系统

00:07:05.440 --> 00:07:09.440
Dietrich从头到尾提到了另外一个

00:07:09.440 --> 00:07:15.199
布鲁克设计并开发了呃，我们基本上是在开发一个

00:07:15.199 --> 00:07:20.639
加密的文件系统，可确保元数据高效

00:07:20.639 --> 00:07:25.919
嗯，旨在某种程度上保留所有用户数据并保留

00:07:25.919 --> 00:07:29.120
应用可以直接将其读入的权限

00:07:29.120 --> 00:07:34.240
因此，您链接到的任何浏览器设备都可以访问文件系统

00:07:34.240 --> 00:07:37.280
嗯，就在那里，而且一直到结束

00:07:37.280 --> 00:07:44.000
加密，因此裂变有助于本地同步和存储此数据

00:07:44.000 --> 00:07:50.000
ipfs um，但是它的加密部分是加密的um

00:07:50.000 --> 00:07:54.800
我们当然没有键um和uh，因为

00:07:54.800 --> 00:07:58.879
所有这些东西都由ipfs散列表示

00:07:58.879 --> 00:08:05.280
用户当然可以备份或存储或固定或本地缓存

00:08:05.280 --> 00:08:10.639
um文件系统以及um文件系统的根目录，我们保留它

00:08:10.639 --> 00:08:15.759
更新的um dns链接uh是最新的uh，这就是

00:08:15.759 --> 00:08:18.160
当您从以下位置连接时，我们现在使用

00:08:18.160 --> 00:08:22.319
在不同的设备上看到什么，当前路由的快照是什么

00:08:22.319 --> 00:08:27.280
并不是所有这些东西都被建造了吗

00:08:27.280 --> 00:08:34.800
计划添加更多的数据库功能，还有更多的功能

00:08:34.800 --> 00:08:39.839
实时和呃协作，我将再进行一次

00:08:39.839 --> 00:08:42.479
滑动谈论一些更像

00:08:42.479 --> 00:08:45.360
未来发展方向

00:08:46.640 --> 00:08:50.240
嗯，对于这个小组，我不认为我实际上已经

00:08:50.240 --> 00:08:57.360
公开显示了此图，但前几天我刚刚创建了该图

00:08:57.360 --> 00:09:04.399
嗯，所以裂变实际上是相对较细的

00:09:04.399 --> 00:09:12.160
所以我们运行ipfs存储服务器um，然后运行um

00:09:12.160 --> 00:09:17.440
我们在亚马逊上运行东西，我们发布了一些开源软件

00:09:17.440 --> 00:09:21.519
旋转分布在世界各地的ipfs节点

00:09:21.519 --> 00:09:27.200
使用terraform我们使用s3插件，因此我们确保

00:09:27.200 --> 00:09:30.399
一切都已备份并可供所有人使用

00:09:30.399 --> 00:09:35.440
然后我们使用网络原生的网络应用

00:09:35.440 --> 00:09:39.360
他们通过安全的websockets进行本地连接

00:09:39.360 --> 00:09:42.480
能够在那儿读写，所以他们可以连接到

00:09:42.480 --> 00:09:47.360
裂变引导服务器呃，所以有一条通往其余ipfs的路径

00:09:47.360 --> 00:09:51.440
从那里开始的网络，那么我们的Web api服务器是

00:09:51.440 --> 00:09:54.240
一种主要的东西，那就是我们使dns自动化的地方

00:09:54.240 --> 00:09:57.680
嗯，我们为帐户存储了一些唯一的用户名

00:09:57.680 --> 00:10:02.480
嗯，然后我们就拥有了开发人员每天用来做事的有效cli

00:10:02.480 --> 00:10:05.920
开发以进行发布以注册新帐户并进行注册

00:10:05.920 --> 00:10:11.120
图片中的新应用um和该网络应用

00:10:11.120 --> 00:10:19.200
是人们发布的任何任意应用程序，其中包括网络原生uh sdk

00:10:19.200 --> 00:10:25.760
所以是用js ipfs um在网络套接字上交谈

00:10:25.760 --> 00:10:30.880
它由我们运行的网关提供服务

00:10:30.880 --> 00:10:35.200
当人们第一次访问它时，我们有了

00:10:35.200 --> 00:10:39.680
我不知道最新的是超过1200个应用程序在UH上部署的

00:10:39.680 --> 00:10:45.760
现在主要的裂变服务嗯，是的，只是谈论我们使用

00:10:45.760 --> 00:10:51.040
haskell和elm um作为我们的主要uh内部

00:10:51.040 --> 00:10:55.600
我们在um中有um示例的语言

00:10:55.600 --> 00:10:59.120
许多不同的前端框架，例如react和svelt

00:10:59.120 --> 00:11:03.920
 um brian在我们的团队中实际上整理了一个Web程序集示例

00:11:03.920 --> 00:11:07.040
我们对未来的Web组装感到非常兴奋

00:11:07.040 --> 00:11:10.160
嗯，然后我们集成了很多不同的呃

00:11:10.160 --> 00:11:13.279
以及第三方系统

00:11:13.279 --> 00:11:17.440
在github上发布操作，以便我亲自运行我的博客

00:11:17.440 --> 00:11:23.519
在呃jekyll上一个静态网站生成器嗯，所以我有几个

00:11:23.519 --> 00:11:27.519
每当我对github存储库进行编辑时的不同方式

00:11:27.519 --> 00:11:31.680
我的jekyll网站所在的位置会构建该网站，然后自动

00:11:31.680 --> 00:11:38.000
将其发布到更新dns链接的远景

00:11:38.000 --> 00:11:46.640
所以每个人都只是通过网关访问http，但是实际上我的

00:11:46.640 --> 00:11:52.480
我的网站也都在ipfs上了，我会在那里暂停一秒钟

00:11:52.480 --> 00:11:57.839
有没有人有任何疑问

00:11:58.079 --> 00:12:01.839
嗯，我有一个非常快速的问题，你提到了嗯

00:12:01.839 --> 00:12:08.800
使用dns不仅用于dns链接，还用于现金um

00:12:08.800 --> 00:12:12.399
本质上不是缓存，而是说嗯

00:12:12.399 --> 00:12:15.600
我们实质上是在将各种事物公开地放在dns中

00:12:15.600 --> 00:12:18.959
因此每个用户在其中都有自己的文件系统

00:12:18.959 --> 00:12:22.000
Web数据文件系统，因此我们需要保留

00:12:22.000 --> 00:12:25.519
跟踪路线，因此我们仅跟踪根sid

00:12:25.519 --> 00:12:30.240
嗯，所以根sid在一个众所周知的位置

00:12:30.240 --> 00:12:37.680
在dns中，因此每个用户帐户都有一个dns子域和dns链接条目

00:12:37.680 --> 00:12:41.920
每个应用程序都有一个子域和一个dns链接条目

00:12:41.920 --> 00:12:45.920
嗯，所以你可以做我一直在想的各种事情

00:12:45.920 --> 00:12:50.000
我们可以在可能的地方为用户打造一些东西

00:12:50.000 --> 00:12:56.240
钉住应用程式和他们自己的档案系统，看起来很简单

00:12:56.240 --> 00:12:59.519
在dns中，并确保您拥有最新的

00:12:59.519 --> 00:13:03.600
散列您是您将um具有固定的良好属性

00:13:03.600 --> 00:13:07.839
当然，我们会在下面找到所有文件和块

00:13:08.079 --> 00:13:13.920
很酷，您说到目前为止已构建了1200个应用程序，是的，

00:13:13.920 --> 00:13:16.320
那些将是你好世界和其他类似的东西

00:13:16.320 --> 00:13:21.200
我们很高兴我们对很多人感到满意，是的，

00:13:21.200 --> 00:13:23.680
好奇是否有像uh这样的模式

00:13:23.680 --> 00:13:27.279
您认为合适或适合开发人员的特定应用程序

00:13:27.279 --> 00:13:29.680
还给你说这很合适

00:13:29.680 --> 00:13:34.160
是的，嗯，实际上还有一些应用程序

00:13:34.160 --> 00:13:37.680
没有在vision上发布，因此您可以使用网络原生sdk

00:13:37.680 --> 00:13:43.199
并将您的静态网站放在任何地方um甚至不算所有

00:13:43.199 --> 00:13:44.959
他们人们所说的最主要的话

00:13:44.959 --> 00:13:51.120
哦，哇，添加用户帐户系统需要80行代码，

00:13:51.120 --> 00:13:53.600
持久性和文件存储以及数据存储

00:13:53.600 --> 00:13:56.800
那真的很顺利那真的很容易

00:13:56.800 --> 00:13:59.839
所以我们会吸引很多理想的人

00:13:59.839 --> 00:14:03.040
在前端，而不必选择

00:14:03.040 --> 00:14:07.760
就像第一步是学习如何成为一名全栈开发人员

00:14:07.760 --> 00:14:11.120
看到就像哦，实际上添加这些很容易

00:14:11.120 --> 00:14:15.360
交互式完整的应用程序功能，这就是一致性

00:14:15.360 --> 00:14:17.920
我要说的另一面是，人们非常感兴趣

00:14:17.920 --> 00:14:23.680
在用户拥有的数据中，所以rosanno是

00:14:23.680 --> 00:14:29.199
使用远程存储um（这是一个ietf）

00:14:29.199 --> 00:14:34.240
使用oauth和uh的标准um，他回去并向其中添加了裂变支持

00:14:34.240 --> 00:14:38.160
以及他所有的应用程序，因此人们可以使用任何一个远程登录

00:14:38.160 --> 00:14:42.079
存储或使用远景帐户，在两种情况下，数据均归所有者所有

00:14:42.079 --> 00:14:48.959
由用户um加密用户数据

00:14:48.959 --> 00:14:52.000
是人们非常感兴趣的另一个常见主题，所以我们有一些

00:14:52.000 --> 00:14:54.320
与人们在诸如此类的事情上进行早期讨论

00:14:54.320 --> 00:14:58.320
嗯，我和一个人打了个有趣的电话

00:14:58.320 --> 00:15:03.360
从事一些妇女健康问题的工作

00:15:03.360 --> 00:15:07.600
在更年期，呃，你知道那是你真正的那种事情

00:15:07.600 --> 00:15:12.079
希望用户拥有和加密，而不是作为开发人员必须确保

00:15:12.079 --> 00:15:14.800
你保护

00:15:17.120 --> 00:15:20.399
嗯，只是非常快地跳入其中一件非常美好的事情

00:15:20.399 --> 00:15:23.680
因为您有闲置的天线加密功能，

00:15:23.680 --> 00:15:27.920
是您的数据可以存储在任何地方，都可以复制吗？

00:15:27.920 --> 00:15:34.560
没错，假设这是他们的信息，那么您知道加密工作正常，所以

00:15:34.560 --> 00:15:37.040
有时候人们会担心，就像你知道人们何时会

00:15:37.040 --> 00:15:40.880
打破AES256。目前美国情况良好

00:15:40.880 --> 00:15:44.480
政府正在使用它，因为您知道您确实知道一些很重要的内容，因此

00:15:44.480 --> 00:15:48.399
可能不会一会儿，但嗯

00:15:48.800 --> 00:15:53.120
突然间，内容寻址的位置独立性真的只是

00:15:53.120 --> 00:15:57.519
嗯，您可以将其用于更多其他事情，

00:15:57.519 --> 00:16:00.800
而且有一个特殊的兴趣小组专门针对这一点，所以也许

00:16:00.800 --> 00:16:06.079
可能是的，是的，布鲁克是在ipfs ipld安全电话上

00:16:06.079 --> 00:16:13.440
所以这是很好的裂变驱动器，所以这是我们的第一个

00:16:13.440 --> 00:16:18.720
我们将um构建为默认呃的聚会应用程序

00:16:18.720 --> 00:16:24.000
用户可以实际检查并查看其整个文件系统的浏览器

00:16:24.000 --> 00:16:30.720
因为每个应用程序实际上都将数据存储在用户可以访问的用户文件系统中

00:16:30.720 --> 00:16:33.519
事实浏览到该数据并查看它进行检查

00:16:33.519 --> 00:16:38.720
依此类推，可能是您的库文件夹或文档文件夹

00:16:38.720 --> 00:16:42.959
在您的操作系统中，应用程序在其中放置内容

00:16:42.959 --> 00:16:46.800
越来越多的台式机和移动广告移动操作系统问

00:16:46.800 --> 00:16:50.160
获得事物的许可，这与裂变具有相同的模式

00:16:50.160 --> 00:16:52.880
正在关注，所以我在这里显示了屏幕截图

00:16:52.880 --> 00:16:56.000
你们当中的人实际上必须付出努力

00:16:56.000 --> 00:17:00.000
访问，所以我们不能作弊，因为这都是密码

00:17:00.000 --> 00:17:03.120
嗯，裂变不能像哦一样说吧，让我们进行裂变驱动

00:17:03.120 --> 00:17:06.480
特殊权限嗯，我们不能这样做，这取决于用户

00:17:06.480 --> 00:17:11.280
嗯，所以我已经展示了这个UM，我也可以将它展示为演示

00:17:11.280 --> 00:17:14.799
呃，它确实可以离线工作斯蒂芬是谁

00:17:14.799 --> 00:17:18.480
在这个应用程式上撰写主要首席作者

00:17:18.480 --> 00:17:22.480
并且很多Web本地api都在通话中

00:17:22.480 --> 00:17:30.160
嗯，所以它与本地存储和indexeddb混合并匹配到

00:17:30.160 --> 00:17:33.520
存储东西，然后在线时再次同步

00:17:33.520 --> 00:17:38.320
正在进行的工作，总是很难在浏览器中完成，

00:17:38.320 --> 00:17:42.400
移动设备以及所有这些好东西，我们的好朋友ios总是有点

00:17:42.400 --> 00:17:47.600
关于各种事情的胡思乱想，但这是我们的目的是

00:17:47.600 --> 00:17:49.679
将所有这些东西放在一起

00:17:49.679 --> 00:17:52.400
嗯，开发人员不必从头开始解决这个问题，这应该是全部

00:17:52.400 --> 00:17:56.320
sdk um和uh，并注意同步

00:17:56.320 --> 00:18:00.320
当您上线或下线时，只需将所有内容组合在一起即可

00:18:00.320 --> 00:18:05.480
你，我应该做一个快速的硬盘演示吗

00:18:05.480 --> 00:18:10.720
[音乐]是的，让我们看看为什么不

00:18:10.720 --> 00:18:15.280
我无法离线，因为那样我的变焦将下降

00:18:15.280 --> 00:18:18.559
我无法证明给你啊，有摩擦

00:18:18.559 --> 00:18:21.580
是的，我在[笑声]之前就担任这个职位

00:18:21.580 --> 00:18:25.520
[音乐]所以我只显示这个

00:18:25.520 --> 00:18:30.559
在这里，嗯，这是我的荣幸，这将是非常非常的

00:18:30.559 --> 00:18:34.480
活泼，因为现在所有内容都被缓存了，依此类推

00:18:34.480 --> 00:18:36.480
嗯，我可以点击浏览这些

00:18:36.480 --> 00:18:40.960
在apps文件夹中，我已将其链接到一个名为

00:18:40.960 --> 00:18:47.360
tiddlywiki，这里有一个小索引文件

00:18:47.440 --> 00:18:51.520
所有这些东西的默认视图是我们用户应该

00:18:51.520 --> 00:18:55.440
确保默认情况下他们的资料是私有的，因此您可以专门

00:18:55.440 --> 00:18:58.400
必须进入公用文件夹并将其放入

00:18:58.400 --> 00:19:03.120
公共文件夹，以便我可以在这些屏幕快照中浏览

00:19:03.120 --> 00:19:06.559
从字面上是我演示文稿中的屏幕截图

00:19:06.559 --> 00:19:11.440
我在这里存储的是foxy的屏幕截图

00:19:11.440 --> 00:19:14.799
嗯，我们的营销主管呃考特尼的狗，我

00:19:14.799 --> 00:19:19.840
昨天是第一次被抓获，这是另一个经典的抓取

00:19:19.840 --> 00:19:22.880
然后我必须添加一个错误的一部分

00:19:22.880 --> 00:19:30.400
错误报告嗯，我们有一个基本的um编辑器文本编辑器

00:19:30.400 --> 00:19:35.200
在这里，嗯，所以这是加载这是一个HTML

00:19:35.200 --> 00:19:39.360
您知道我们要在此处隐藏文件扩展名的文件

00:19:39.360 --> 00:19:42.320
看起来更漂亮，我们有不同的预览器

00:19:42.320 --> 00:19:45.600
东西，所以您可以在这里看到这是源

00:19:45.600 --> 00:19:50.480
嗯，我可以右键单击，我可以找到文件的链接，我也可以复制sid

00:19:50.480 --> 00:19:56.080
但我会继续并链接到文件um，然后我将打开一个新标签页，然后

00:19:56.080 --> 00:20:01.760
将其粘贴在um中，这是红色um

00:20:01.760 --> 00:20:06.159
好的，很酷，我要去这里

00:20:07.200 --> 00:20:15.200
并说不是红色没有红色不是红色和绿色

00:20:15.360 --> 00:20:18.320
我会点击保存

00:20:18.840 --> 00:20:24.559
恩，然后关闭恩，我会再次右键单击

00:20:24.559 --> 00:20:29.440
在它的下面应该给我一个新文件的链接

00:20:29.440 --> 00:20:32.400
我将粘贴

00:20:32.880 --> 00:20:37.840
而且这不是红色，所以我刚刚进行了实时编辑，并将其推送到ipfs

00:20:37.840 --> 00:20:42.159
我得到了指向它的链接，显然是另一个文件

00:20:42.159 --> 00:20:45.360
仍然存在，它仍然是红色的，因为我们有

00:20:45.360 --> 00:20:51.280
这个在中间um上唯一的哈希值，我也可以直接获得sid

00:20:51.280 --> 00:20:53.520
嗯

00:20:56.640 --> 00:20:59.840
让我们看看它是否在这里完成，并且在

00:20:59.840 --> 00:21:04.559
主ipfs网关也很明显是超级简单的小文件

00:21:04.559 --> 00:21:07.679
嗯，让我们去做一些更大的事情

00:21:07.679 --> 00:21:13.440
嗯，我已经在选项卡中打开了它，这一次我们实际上可以复制筛子了

00:21:13.440 --> 00:21:18.320
这可能也在ipfs中

00:21:22.720 --> 00:21:26.320
因此，这是今天的演讲中的幻灯片已上传

00:21:26.320 --> 00:21:29.360
嗯，您可以看到它正在加载到主ipfs网关

00:21:29.360 --> 00:21:34.400
同样，所有这些东西都使用常规的ipfs，但在某种程度上

00:21:34.400 --> 00:21:38.720
非常人性化，非常人性化，我给你一个

00:21:38.720 --> 00:21:41.280
更多示例，因为我已经对此进行了权限

00:21:41.280 --> 00:21:47.200
所以我将去报价应用程序，这是一个非常简单的应用程序

00:21:47.200 --> 00:21:51.039
对用户不公开，我将登录

00:21:51.520 --> 00:21:55.280
它要做的就是说

00:21:55.280 --> 00:22:00.000
你知道我可以作为应用程序文件夹的引号应用程序吗

00:22:00.000 --> 00:22:03.840
嗯，如果您想使用视觉应用，则必须至少访问

00:22:03.840 --> 00:22:06.400
应用程序文件夹，因为它需要一个放置它的位置

00:22:06.400 --> 00:22:10.240
文件，因为它今天没有自己的专用存储

00:22:10.240 --> 00:22:13.280
所以我说是的，它显示了我在这里登录的内容

00:22:13.280 --> 00:22:16.960
我将我重定向回为空的应用程序

00:22:16.960 --> 00:22:21.200
我会做一个

00:22:21.760 --> 00:22:28.559
布鲁克斯（Brooks）引用了呃，因为数学，我会再引用一次

00:22:28.559 --> 00:22:37.360
那是电子邮件，知识就是死了

00:22:37.840 --> 00:22:41.440
那是比尔·法克（Bill French）所说的

00:22:41.440 --> 00:22:44.720
嗯，所以有点像个人名言

00:22:44.720 --> 00:22:48.960
然后我能做的是我可以回到这里

00:22:48.960 --> 00:22:53.520
嗯，我可能需要重新整理一下，我们不喜欢实时更新或

00:22:53.520 --> 00:22:56.080
任何推动实时变化的事物

00:22:56.080 --> 00:23:01.440
所以嗯，那会来的，所以现在不住在这里了

00:23:01.440 --> 00:23:04.720
如果我进行了硬性刷新，我将继续并立即执行此操作

00:23:04.720 --> 00:23:09.200
您会看到另一个应用程序文件夹现在可用

00:23:09.200 --> 00:23:13.679
用引号嗯，我只有一点点

00:23:13.679 --> 00:23:17.200
json文件，这就是应用程序保存数据的地方

00:23:17.200 --> 00:23:22.400
条例草案法国布鲁克林兹兰卡的视觉今天为建筑

00:23:22.400 --> 00:23:26.080
像这样的应用程序，您不需要任何更复杂的事情，因为

00:23:26.080 --> 00:23:28.799
没有运行大型多租户数据库

00:23:28.799 --> 00:23:32.000
呃，您只是在每个用户的基础上运行它

00:23:32.000 --> 00:23:35.760
因此前端开发人员基本上可以在使用react或

00:23:35.760 --> 00:23:40.159
Vue或Svelt很多时候他们会嘲笑他们的数据

00:23:40.159 --> 00:23:44.480
因为你可以用裂变在本地写作

00:23:44.480 --> 00:23:50.000
随便寄出您的模拟物，并使用用户帐户构建了一个完整的应用

00:23:50.000 --> 00:23:54.400
该存储区是为用户呃存储的，显然这会打开

00:23:54.400 --> 00:23:57.919
还可以在应用之间共享数据

00:23:57.919 --> 00:24:00.350
这是我们很兴奋的另一件事

00:24:00.350 --> 00:24:04.720
[音乐]我从裂变中点击出来之前

00:24:04.720 --> 00:24:07.120
驱使任何其他有关裂变的问题

00:24:07.120 --> 00:24:09.440
驾驶

00:24:11.120 --> 00:24:16.880
嗯，不是关于视觉驱动，而是像其他类似的事情，你会运行吗？

00:24:16.880 --> 00:24:22.960
自己的网关，或者我们做的是，嗯，我们运行的主要原因

00:24:22.960 --> 00:24:27.760
我们自己的网关是因为我们必须运行

00:24:28.159 --> 00:24:34.559
保护websockets，以便js ipfs可以连接到它

00:24:34.640 --> 00:24:39.279
嗯，关于接下来的内容，我们进行了很多讨论。我实际上有一张幻灯片

00:24:39.279 --> 00:24:43.039
围绕那个，所以我实际上会回到

00:24:44.840 --> 00:24:49.529
那个[音乐]

00:24:51.919 --> 00:24:55.440
因此，我只是通过cli的工作方式进行讨论，我认为这非常

00:24:55.440 --> 00:24:58.960
有趣的是，我相信我们是唯一的cli工具

00:24:58.960 --> 00:25:07.120
嗯，原来是用作ipfs的，这就是我的意思，所以

00:25:07.120 --> 00:25:11.200
嗯，我们实际上是在下载并安装我们自己的ipfs节点，因此我们

00:25:11.200 --> 00:25:13.679
目标市场不一定是

00:25:13.679 --> 00:25:17.919
深入去中心化网络，但我们的目标市场是每个人

00:25:17.919 --> 00:25:20.880
因此前端开发人员应该能够获得所有这些功能而无需

00:25:20.880 --> 00:25:23.679
甚至不必知道ipfs的参与，

00:25:23.679 --> 00:25:26.880
他们继承了所有出色的功能

00:25:26.880 --> 00:25:29.919
嗯，我们要在它之上建立

00:25:29.919 --> 00:25:36.480
所以您可以运行Fusion Setup，我们对Linux和Mac OS都有支持

00:25:36.480 --> 00:25:41.279
现在我们建议Windows用户使用wsl2

00:25:41.279 --> 00:25:45.600
为此，我们会在某些时候回过头来获得Windows支持

00:25:45.600 --> 00:25:49.919
um vision应用程序注册，您可以使用子域创建一个新应用程序

00:25:49.919 --> 00:25:53.919
嗯，我们会为您生成一个巨大的子域名

00:25:53.919 --> 00:25:57.840
然后视觉应用发布，这实际上是发布该应用

00:25:57.840 --> 00:26:02.400
原生于apfs，因此我们所见过的大多数其他系统

00:26:02.400 --> 00:26:05.919
呃实际上会通过http调用发布

00:26:05.919 --> 00:26:12.000
然后将其转换为服务器端um上的ipfs，那么我们实际上在做什么

00:26:12.000 --> 00:26:16.000
是我们运行本地节点，还是在本地添加到ipfs

00:26:16.000 --> 00:26:20.480
然后我们联系裂变服务器以注册哈希并更新dns链接

00:26:20.480 --> 00:26:27.440
裂变服务器返回到开发人员的本地设备

00:26:27.440 --> 00:26:34.559
嗯，只是在ipfs上获取了um，所以最终变得非常活泼，

00:26:34.559 --> 00:26:39.120
很明显，对于您知道的事情，它的速度更快，而且速度更快

00:26:39.120 --> 00:26:44.640
实际上，比起um进行git push um和uh这样的事情

00:26:44.640 --> 00:26:47.679
呃，你知道它运作良好，正在生产中

00:26:47.679 --> 00:26:50.720
很多人使用它，我们对此非常满意，还有一些其他标志

00:26:50.720 --> 00:26:55.440
这样就可以运行了，我们现在关闭节点

00:26:55.440 --> 00:27:00.559
当您成功发布时，您还可以给它一个监视标志，当您

00:27:00.559 --> 00:27:05.120
进行编辑，它将实时更新您的文件

00:27:05.120 --> 00:27:09.200
和dns链接位于背景um中的根目录，因此这是一个

00:27:09.200 --> 00:27:12.960
我可以做的很整洁的事情，只是刷新页面并向您显示

00:27:12.960 --> 00:27:18.840
在我进行编辑时，它是实时的，并且可以在dns上的任何地方使用

00:27:18.840 --> 00:27:23.600
解决我们这样做的原因是，呃

00:27:23.600 --> 00:27:26.880
笔记本电脑um [音乐]

00:27:26.880 --> 00:27:30.880
电力使用，带宽使用以及其他类似的事情

00:27:30.880 --> 00:27:35.440
嗯，我们可能会做一些选择来做一个长期运行的版本，但这就是

00:27:35.440 --> 00:27:40.559
真的，下一张幻灯片是关于什么的

00:27:40.559 --> 00:27:44.320
您已经在本地运行了所有内容并发布了哈希值

00:27:44.320 --> 00:27:47.840
它实际上在您的本地节点中可用，因此，如果您正在运行裂变观察

00:27:47.840 --> 00:27:49.520
从理论上讲，你应该能够

00:27:49.520 --> 00:27:52.799
在您的浏览器中直接在本地离线运行该文件，但

00:27:52.799 --> 00:27:55.440
这是已发布的版本，与

00:27:55.440 --> 00:27:59.840
我们引导到视觉服务器没有什么区别

00:27:59.840 --> 00:28:05.760
嗯，嗯，对不起，我是，我可能会说出你的

00:28:05.760 --> 00:28:10.000
名字不正确，嗯，马辛就是你的名字怎么发音

00:28:10.000 --> 00:28:15.120
是的，您说它的意思是“ lido okay ii”。

00:28:15.120 --> 00:28:19.679
链接名称全部亮起，所以lidl出现了这个问题

00:28:19.679 --> 00:28:24.080
我们已经看过其中一些事情，史蒂芬（Steven）写下了这个，我会

00:28:24.080 --> 00:28:28.159
之后，在我们两个不同的论坛中分享链接

00:28:28.159 --> 00:28:34.880
如何进行这项工作的想法嗯，您知道我们

00:28:34.880 --> 00:28:38.480
我们希望这样做可以更可靠地工作

00:28:38.480 --> 00:28:42.000
我们可以在本地运行一个节点，但是却不能运行，这很荒谬

00:28:42.000 --> 00:28:47.760
真的连接到它，所以这里有几个

00:28:47.760 --> 00:28:52.159
我们可能需要做的事情的不同想法

00:28:52.159 --> 00:28:56.159
如果我们不能通过默认方式启用，默认情况下启用始终是一件大事

00:28:56.159 --> 00:29:00.159
ipfs中的各种默认值um

00:29:00.159 --> 00:29:04.240
那么很少有人会发现它是对的

00:29:04.240 --> 00:29:11.120
评论诽谤或史蒂文我要说听

00:29:11.120 --> 00:29:14.960
在本地主机上的websockets上

00:29:15.520 --> 00:29:22.080
这是可行的，因为您不需要本地主机的tls证书

00:29:22.080 --> 00:29:26.000
安全上下文，并且我们应该能够默认启用它

00:29:26.000 --> 00:29:32.799
在ipvs桌面中，甚至在itfs决定这样做之前就勇敢地

00:29:32.799 --> 00:29:39.200
在go ipfs中，默认情况下这样做没有意义，因为

00:29:39.200 --> 00:29:43.840
它通常在服务器上下文中的类似服务器上运行

00:29:43.840 --> 00:29:48.880
嗯，但有些人有一些想法，例如如何自动化

00:29:48.880 --> 00:29:54.399
嗯，在tls搜索中，我们不想

00:29:54.399 --> 00:29:58.640
戏剧性的大厅，但是我们有一种叫做autonot的机制

00:29:58.640 --> 00:30:02.559
节点能够分辨出它像diable

00:30:02.559 --> 00:30:09.120
从公共呃网络，然后只有这样，我们才能做一些

00:30:09.120 --> 00:30:11.440
自动化，但这就像非常早期的阶段

00:30:11.440 --> 00:30:14.720
像设计一样，所以我不想破坏它

00:30:14.720 --> 00:30:19.679
但我们正在看，我会说它将落在台式机上并制作出勇敢的产品

00:30:19.679 --> 00:30:23.200
在此之前，这是一个好举动，是的，很好

00:30:23.200 --> 00:30:28.720
嗯，我们很乐意，你会知道帮助测试的，我们可以

00:30:28.720 --> 00:30:31.760
cli发布的消息中的各种内容

00:30:31.760 --> 00:30:36.000
你知道现在我们基本上告诉人们只是去上网

00:30:36.000 --> 00:30:39.600
然后从我们的服务器上获取它，即使

00:30:39.600 --> 00:30:43.440
它实际上已经坐在他们的机器上

00:30:44.240 --> 00:30:47.360
对[笑声]

00:30:47.360 --> 00:30:54.640
好吧，两者都应该像在本地一样快，但是

00:30:54.640 --> 00:31:02.840
是的，是的，为什么不是两者都是

00:31:02.840 --> 00:31:05.840
嗯

00:31:06.320 --> 00:31:10.799
所以这有点像整个地方，这可能是很多

00:31:10.799 --> 00:31:14.399
可能这不是布鲁克的域名，而是

00:31:14.399 --> 00:31:20.720
以及詹姆斯和史蒂文的域名嗯，所以我们可以让我们知道

00:31:20.720 --> 00:31:23.919
用户名和知名用户名，您可以

00:31:23.919 --> 00:31:26.960
今天从彼此的公用文件夹位置读取

00:31:26.960 --> 00:31:30.240
嗯，这是一种可以做一些事情的方法

00:31:30.240 --> 00:31:36.000
我们确实计划合作

00:31:36.000 --> 00:31:39.519
您知道共享的权限和组结构

00:31:39.519 --> 00:31:44.080
因此权限和加密是关键

00:31:44.799 --> 00:31:47.840
嗯，我们要为此做些事情

00:31:47.840 --> 00:31:51.840
恩给开发人员构建应用的能力

00:31:51.840 --> 00:31:55.519
嗯，绝对如您所见，我不得不努力地刷新

00:31:55.519 --> 00:32:00.000
嗯，我认为最大的挑战之一就是

00:32:00.000 --> 00:32:04.720
缓存本地存储我是否拥有此应用程序的最新版本

00:32:04.720 --> 00:32:08.720
甚至不介意里面的数据，所以我们已经考虑过了

00:32:08.720 --> 00:32:11.039
像哦，我们可能应该做一个服务器端

00:32:11.039 --> 00:32:14.799
检查，如果有更新的应用程序，那么我们给那些小横幅之一

00:32:14.799 --> 00:32:17.600
那说你想重新加载，你会看到

00:32:17.600 --> 00:32:21.440
我使用一个名为missive的电子邮件应用程序，您在rom研究中看到了它

00:32:21.440 --> 00:32:25.120
就像嘿，你有一个新版本，你应该刷新

00:32:25.120 --> 00:32:28.640
嗯，然后另一件事是[音乐]

00:32:28.640 --> 00:32:32.720
像pub sub这样的东西，我们今天将其用于设备链接

00:32:32.720 --> 00:32:35.760
矩阵是一个非常有趣的协议

00:32:35.760 --> 00:32:40.000
和布鲁克，您想谈谈您的想法吗

00:32:40.000 --> 00:32:43.360
或一些协作的东西

00:32:43.360 --> 00:32:48.960
是的，确定，所以我们曾经使用ipfs pub sub，但是它不是超级可靠的

00:32:48.960 --> 00:32:51.600
看起来实际上浏览器到浏览器很漂亮

00:32:51.600 --> 00:32:54.559
很好，我们必须运行自己的webrtc

00:32:54.559 --> 00:32:58.799
 webrtc star um server但除了那个

00:32:58.799 --> 00:33:01.519
如果我知道在路上有计划做到这一点，那将是很好

00:33:01.519 --> 00:33:06.080
自动连接，但是在两个

00:33:06.080 --> 00:33:09.760
浏览器，如果要链接，请转到ipfs

00:33:09.760 --> 00:33:13.440
通过cli的东西，所以我们把它扔掉了

00:33:13.440 --> 00:33:16.799
并写了一个简单的呃websocket中继

00:33:16.799 --> 00:33:23.600
um矩阵非常有趣um uh和uh，因为随着时间的流逝，我们要

00:33:23.600 --> 00:33:26.559
想要将其用于更多的事情，而不仅仅是

00:33:26.559 --> 00:33:30.159
你知道发送一些你知道的轻量级

00:33:30.159 --> 00:33:33.200
凭证信息权具有实时编辑实时性

00:33:33.200 --> 00:33:37.279
协作，所有这些都非常有用，然后人们

00:33:37.279 --> 00:33:40.240
也想聊天，所以matrix非常适合所有人

00:33:40.240 --> 00:33:45.279
这些东西，今天我们启动

00:33:45.279 --> 00:33:50.329
引导[音乐]

00:33:50.480 --> 00:33:54.480
在Web套接字顶部的安全会话，我们也曾经在uh pub上执行此操作

00:33:54.480 --> 00:33:58.320
子我们在做什么看起来并不完全是

00:33:58.320 --> 00:34:00.880
相同但类似于tls握手

00:34:00.880 --> 00:34:04.480
呃用会话密钥进行密钥交换，然后可以

00:34:04.480 --> 00:34:11.440
安全地来回传递信息，是的，这是实时的

00:34:11.440 --> 00:34:15.839
还有东西，因为

00:34:15.839 --> 00:34:19.359
鲍里斯（Boris）提到您知道在应用上获取最新更新，从而推动了

00:34:19.359 --> 00:34:26.079
文件助手应用程序的顶部sid，等等，位于pub sub上，以便每个对等方现在

00:34:26.079 --> 00:34:30.800
广播嘿我做了更新或嘿我发布了这个

00:34:30.800 --> 00:34:35.760
htcp网关接受了这是您的签名

00:34:35.760 --> 00:34:38.240
现在应该都与此版本同步

00:34:38.240 --> 00:34:43.040
嗯，我们正在呼唤的东西，从您那里您知道几张幻灯片

00:34:43.040 --> 00:34:46.800
它在临时存储库中，以便我们可以

00:34:46.800 --> 00:34:51.919
真的非常快更新，然后再更新

00:34:51.919 --> 00:34:55.520
像您知道的每个字符的变化um

00:34:55.520 --> 00:34:59.119
然后以您知道的时间间隔或当事物处于

00:34:59.119 --> 00:35:03.920
良好状态或其他，以至于更多

00:35:03.920 --> 00:35:06.960
嗯，它有点灵活

00:35:06.960 --> 00:35:10.800
而不是我们的实际持久性文件系统

00:35:10.800 --> 00:35:13.839
嗯，里面也有一些多余的东西

00:35:13.839 --> 00:35:17.839
非破坏性的，所以每次更改我们都必须保持一堆链接

00:35:17.839 --> 00:35:23.040
所以我们希望这能成为更大的合作编辑，嗯，是的，

00:35:23.040 --> 00:35:27.280
看着自动合并yjs一堆ct

00:35:27.280 --> 00:35:34.400
基于系统的系统，它们非常有效，特别是对于实时系统

00:35:34.400 --> 00:35:39.040
很好的协作，但是需要更长的文档和更长时间的数据

00:35:39.040 --> 00:35:42.160
他们不太适合或适合大数据

00:35:42.160 --> 00:35:46.640
设置它们适合的位置好不好

00:35:46.640 --> 00:35:52.400
所以我一直在想呃，实际上是主要的家伙

00:35:52.400 --> 00:35:55.760
自动合并背后的um也完成了

00:35:55.760 --> 00:36:02.079
这个方向上的工作量太少了，呃模型um

00:36:02.079 --> 00:36:06.800
零dt用于协作编辑，然后进行大规模

00:36:07.839 --> 00:36:12.880
数据的聚合，因此推翻了八卦子

00:36:12.880 --> 00:36:18.240
嗯，八卦酒吧很抱歉，嗯，只是一系列的信息

00:36:18.240 --> 00:36:24.400
纯粹基于数据日志集进行设置，然后，嗯，我们可以获得各种

00:36:24.400 --> 00:36:27.599
不错的属性，例如，性能要好得多

00:36:27.599 --> 00:36:31.200
只能同步um个数据子集，才能放入

00:36:31.200 --> 00:36:35.119
数据将其拉回原处它不是耐摔的，就像有一堆

00:36:35.119 --> 00:36:38.160
像这样的东西落在这个嗯和

00:36:38.160 --> 00:36:40.400
是否通过互联网都没有关系

00:36:40.400 --> 00:36:44.079
或在多个设备之间共享的本地设备上

00:36:44.079 --> 00:36:48.240
嗯，我们不做，呃，实际的基础技术没有做

00:36:48.240 --> 00:36:51.839
都有自己的不同应用程序之间的区别

00:36:51.839 --> 00:36:56.160
钥匙和自己的身份，以及拥有自己独特风格的人

00:36:56.160 --> 00:37:00.250
顶级密钥的相同

00:37:00.250 --> 00:37:04.560
[音乐]系统之间相互协作

00:37:04.560 --> 00:37:09.200
具有相同用户身份的应用使用某些权利集登录

00:37:09.200 --> 00:37:13.599
人们之间的合作，让

00:37:13.599 --> 00:37:16.960
能够实时成为这个底物

00:37:16.960 --> 00:37:22.400
以及共享数据集并在其中存储部分数据的数据库中进行数据共享

00:37:22.400 --> 00:37:27.359
可供一位参与者，但另一位参与者不可用

00:37:27.359 --> 00:37:32.240
正确，一切都正常进行

00:37:32.320 --> 00:37:35.359
嗯，与此数据库也有关

00:37:35.359 --> 00:37:40.880
嗯，想法um项目cambria数据架构合并嗯，我们有一些

00:37:40.880 --> 00:37:44.800
关于呃做之间的共享架构的想法

00:37:44.800 --> 00:37:48.480
应用程序以及如何在它们之间进行翻译

00:37:48.480 --> 00:37:51.359
一切都是基于当前模型中的数据日志，我们仍然需要做一个

00:37:51.359 --> 00:37:55.920
嗯嗯嗯这个周围

00:37:55.920 --> 00:37:59.440
从根本上讲，它是无模式的，所以有了坎布里亚语，您可以

00:37:59.440 --> 00:38:02.960
架构和架构b并在两者之间进行转换，

00:38:02.960 --> 00:38:06.079
像你一样有可能蒙受损失，您可能会丢失信息

00:38:06.079 --> 00:38:09.440
或者如果您选择一个方向或另一个方向，则设置一些默认值

00:38:09.440 --> 00:38:13.839
um-less-schema层，这是您必须要做的额外步骤

00:38:13.839 --> 00:38:17.920
从这个人那里拿来，最近有人形容这只是散汤，

00:38:17.920 --> 00:38:22.079
将其带入一些结构化数据中，因此通常我们应该能够

00:38:22.079 --> 00:38:25.200
跳过模式之间的转换

00:38:25.200 --> 00:38:28.640
嗯，但我们可能仍需要一些默认字段，但最终还是不行

00:38:28.640 --> 00:38:32.079
看起来很像坎布里亚语，或者如果应用程序期望

00:38:32.079 --> 00:38:37.119
期望事物以某种格式出现并需要传达出来

00:38:37.119 --> 00:38:40.880
传统的您知道基于休息的api，然后可以将其翻译为

00:38:40.880 --> 00:38:48.240
并专门通过它发送给离线应用嗯，这是

00:38:48.240 --> 00:38:51.839
我的小脑子对呃项目了解的简化版本

00:38:51.839 --> 00:38:54.960
坎布里亚州，我们有一个视频演示

00:38:54.960 --> 00:38:57.440
关于那个我也可以扔进去的链接

00:38:57.440 --> 00:39:03.920
基本上，一个版本的应用程序可以与1000版本的应用程序进行协作

00:39:03.920 --> 00:39:08.320
嗯，不只是漂移数据，还漂移了应用程序

00:39:08.320 --> 00:39:12.480
本身和项目寒武纪有助于解决其中一些问题

00:39:12.480 --> 00:39:16.240
同样，其中一些以构建桌面应用程序或

00:39:16.240 --> 00:39:20.560
这样的移动应用程序让我们感到非常兴奋

00:39:20.560 --> 00:39:24.640
嗯，嗯，我们最终朝着这个方向

00:39:24.640 --> 00:39:28.400
建立数据库，因为我们已经完成了

00:39:28.400 --> 00:39:31.920
设计Web数据文件系统的初期工作

00:39:31.920 --> 00:39:35.839
处理私有数据和加密

00:39:35.839 --> 00:39:39.040
然后，我们研究了其他东西，例如orbit db

00:39:39.040 --> 00:39:42.960
嗯，实际上并没有

00:39:42.960 --> 00:39:48.480
嗯加密或私有数据um，所以我们发现它更容易

00:39:48.480 --> 00:39:54.160
建立在我们已经解决的系统之上

00:39:54.160 --> 00:39:59.359
隐私和权限um，因为这是关键，而不是数据存储

00:39:59.359 --> 00:40:01.920
嗯，还有其他人正在收养

00:40:01.920 --> 00:40:07.040
我们的一些东西，所以查询团队um已经研究并实施了brooks

00:40:07.040 --> 00:40:11.920
您可以在一体机中进行身份验证设计

00:40:11.920 --> 00:40:16.079
而且我知道纺织业的卡森（Carson）也在修补它

00:40:16.079 --> 00:40:19.119
嗯，因为您需要看起来像它的东西

00:40:19.119 --> 00:40:23.760
为了解决很多这样的问题，在开放规范中，我们有一份白皮书和一份

00:40:23.760 --> 00:40:25.599
一堆其他我们已经记录下来的东西

00:40:25.599 --> 00:40:29.200
嗯，我们很高兴在协议层的rd层工作

00:40:29.200 --> 00:40:33.520
以及在应用程序层上，我很高兴与人们一起工作

00:40:33.520 --> 00:40:37.920
嗯，我想说的最后一件事，我认为这是我的实验室，我

00:40:37.920 --> 00:40:41.760
认为这是我对分裂的思考的最后一面

00:40:41.760 --> 00:40:48.400
我们所有的东西都是开源的，所以我们运行托管服务

00:40:48.400 --> 00:40:52.640
嗯那就是裂变平台的裂变部分

00:40:52.640 --> 00:40:57.359
恩，您知道您当前在fission.app命名空间的中获得了子域

00:40:57.359 --> 00:41:02.800
用户获得了fission.name，我一直在使用这个术语“星座提供者”

00:41:02.800 --> 00:41:07.359
嗯，我们专注于能够注册的开发人员和用户

00:41:07.359 --> 00:41:12.079
东西起作用了，我们得到了很好的采用，我们

00:41:12.079 --> 00:41:15.440
嗯，希望有更多的这个，但是

00:41:15.440 --> 00:41:18.640
呃，您从我之前显示的那个图表中

00:41:18.640 --> 00:41:22.240
你知道你需要知道一些需要发展的东西

00:41:22.240 --> 00:41:27.200
堆栈开发人员，并且知道一些开发人员可以大规模运行此内容，但是您

00:41:27.200 --> 00:41:30.960
可以自己运行视觉服务器，我们正在进行一些早期讨论

00:41:30.960 --> 00:41:35.599
与呃公司和其他组织

00:41:35.599 --> 00:41:39.119
有兴趣进一步自定义视觉功能的人

00:41:39.119 --> 00:41:43.359
他们自己的应用名称，因为我们拥有此用户身份，

00:41:43.359 --> 00:41:47.920
一个盒子中的发布和文件系统，使它变得非常强大

00:41:47.920 --> 00:41:51.200
一组功能已经存在，我们想在那里做些什么

00:41:51.200 --> 00:41:56.000
是我们要联合um，以便网络手指是

00:41:56.000 --> 00:42:00.800
可能是我早先提到的罗萨诺的显而易见的事情

00:42:00.800 --> 00:42:03.839
他和我做了一些实验，因为他来自遥远的地方

00:42:03.839 --> 00:42:08.079
储存世界，嗯，那是我们去过的地方

00:42:08.079 --> 00:42:10.400
到目前为止，您将输入一些

00:42:10.400 --> 00:42:13.520
看起来像一个电子邮件地址，所以这是一种普遍的模式

00:42:13.520 --> 00:42:17.599
诸如矩阵，乳齿象或其他系统之类的东西

00:42:17.599 --> 00:42:21.680
矩阵不使用webfinger mastodon，但我们认为这非常强大

00:42:21.680 --> 00:42:26.160
整个事物的共同模式，然后

00:42:26.160 --> 00:42:29.359
您知道我们所设想的就是我们可以拥有很多这样的东西

00:42:29.359 --> 00:42:36.000
呃，在所有这些事情之间运行联盟和联盟

00:42:36.000 --> 00:42:38.079
然后你有越来越多的人在线

00:42:38.079 --> 00:42:42.160
恩运行在此客户端应用程序模式下的内容

00:42:42.160 --> 00:42:46.880
和更多的ipf，它们之间有很强的联系，是否一个应用都没有关系

00:42:46.880 --> 00:42:50.640
呃在裂变服务器2或视觉服务器1上发布

00:42:50.640 --> 00:42:59.200
嗯，它应该都可以正常工作，并且可以透明地缓存和固定

00:42:59.200 --> 00:43:02.000
这就是给我的

00:43:06.000 --> 00:43:08.800
其他问题

00:43:09.200 --> 00:43:12.560
很好，这是非常有用的东西

00:43:12.560 --> 00:43:19.520
嗯，我觉得嗯，有这么多的应用程序

00:43:19.520 --> 00:43:23.200
其实你提到多少

00:43:23.200 --> 00:43:28.880
刚好超过1200，好吧，好吧，是的

00:43:28.880 --> 00:43:33.440
嗯，是的，我们需要做的是，遍历所有这些东西的时候了

00:43:33.440 --> 00:43:37.040
但是，是的，如果您以前从未看过，这里有很多东西

00:43:37.040 --> 00:43:40.319
嗯，是的，我们一直在为此工作一段时间

00:43:40.319 --> 00:43:44.880
嗯，我们基本上是通过github动作来模仿的

00:43:44.880 --> 00:43:48.480
在发布时使用um netlify

00:43:48.480 --> 00:43:52.319
嗯，您知道我们可以处理自定义域

00:43:52.319 --> 00:43:55.520
呃其他各种事情，比如我即将推出的新事物

00:43:55.520 --> 00:44:00.960
令人兴奋的是，非开发人员能够克隆

00:44:00.960 --> 00:44:03.839
应用程序基本上我们可以做到这一点，因为

00:44:03.839 --> 00:44:09.359
ipfs的属性，如果您进入一个页面，

00:44:09.359 --> 00:44:14.000
是裂变驱动的应用程序，您就像我想要的一样

00:44:14.000 --> 00:44:17.119
嗯，您可以克隆该应用程序，我们将为您创建一个新的子域

00:44:17.119 --> 00:44:20.079
然后你去，我们认为这是一个非常有趣的模式

00:44:20.079 --> 00:44:24.160
um（对于基本上非开发人员的用户）

00:44:24.160 --> 00:44:28.160
设计师等，以便能够介入并与之共事，我们将

00:44:28.160 --> 00:44:32.960
我们很快就会有一些呃演示

00:44:34.640 --> 00:44:37.920
非常有趣，我有一个快速的问题

00:44:37.920 --> 00:44:44.640
um平台可移植性，今天高效的服务下降了，我的

00:44:44.640 --> 00:44:47.920
应用程序是否仍然运行我该怎么办

00:44:47.920 --> 00:44:51.280
我所有的数据都在那里，我是否必须手动设置一些内容

00:44:51.280 --> 00:44:54.880
喜欢将应用程序资源和资源同步到我自己的

00:44:54.880 --> 00:44:58.960
回购或数据存储对于我是谁的公司，这看起来如何

00:44:58.960 --> 00:45:05.680
以视觉作为托管平台，是的，这是一个很好的问题

00:45:05.680 --> 00:45:08.800
我们现在考虑的方式我的意思是我认为那就是那

00:45:08.800 --> 00:45:13.910
下一步，棘手的是dns

00:45:13.910 --> 00:45:18.640
 [笑声]嗯，这是这里的实际问题

00:45:18.640 --> 00:45:23.920
嗯，所以你知道我们要映射

00:45:23.920 --> 00:45:27.920
呃，我们只是为所有这些映射到一个ipfs的东西运行cnames

00:45:27.920 --> 00:45:30.839
我运行我的个人网站的网关

00:45:30.839 --> 00:45:36.480
bmanconsulting.com um使用cloudflare网关，其中

00:45:36.480 --> 00:45:41.200
um该哈希值的当前版本

00:45:41.200 --> 00:45:47.359
更新将继续进行，并且将保持可用，嗯，所以cloudflare

00:45:47.359 --> 00:45:51.520
处理该层，所以关键点

00:45:51.520 --> 00:45:56.240
现在成为网关，而http uh uh

00:45:56.240 --> 00:46:00.000
链接到关于数据可用性的其他问题

00:46:00.000 --> 00:46:03.680
嗯，当我们有一些东西时我想做什么

00:46:03.680 --> 00:46:07.520
对此的注释就像我之前说的那样，因为

00:46:07.520 --> 00:46:14.400
我们希望为早期采用者的用户提供业务能力

00:46:14.400 --> 00:46:22.319
编写一个非常简单的脚本，仅查看最新的哈希值

00:46:22.319 --> 00:46:28.960
在dns链接中并将其固定到我正在寻找的树莓派

00:46:28.960 --> 00:46:33.839
在这里，因为我现在只设置了我的我的树莓派呃或

00:46:33.839 --> 00:46:36.319
类似的事情，或者再次在您的计算机上本地运行

00:46:36.319 --> 00:46:39.520
谈论本地离线默认情况下，它应该只运行并

00:46:39.520 --> 00:46:42.160
保持更新，然后问题变成

00:46:42.160 --> 00:46:46.800
信任之一，您在哪里寻找最新版本的真相

00:46:46.800 --> 00:46:50.720
像那个骗子这样的人简要地提到了诸如恩

00:46:50.720 --> 00:46:54.960
签署更新，我们得到了这个证明链，因为

00:46:54.960 --> 00:46:59.760
每个人都在服务器um上使用私钥，所以您

00:46:59.760 --> 00:47:03.839
您，我们知道您甚至可以自己验证实际上这是一定的

00:47:03.839 --> 00:47:07.920
做那些事情的身份，嗯，是的，

00:47:07.920 --> 00:47:10.640
这就是现在的样子呃Dietrich

00:47:10.640 --> 00:47:13.760
恩，这是裂变

00:47:13.760 --> 00:47:18.880
使这成为可能，您实际上无法在ipfs上做到这一点

00:47:18.880 --> 00:47:23.680
嗯，你知道推东西是骗人的吗

00:47:23.680 --> 00:47:28.559
到dns文本条目

00:47:29.280 --> 00:47:32.960
这是我们可以想到的最分散的事情

00:47:32.960 --> 00:47:36.720
实际上必须运行自己的分布式密钥值

00:47:36.720 --> 00:47:40.480
完全准确地存储

00:47:41.920 --> 00:47:47.520
嗯，所以更多的东西最终变得像

00:47:48.160 --> 00:47:55.040
是的，我们已经尽可能地减少了它，以减少您注意到的这类事情

00:47:55.040 --> 00:47:57.680
真的没有提到很多固定，因为我不是真的

00:47:57.680 --> 00:48:01.599
相信它，我不认为这是应该暴露的东西

00:48:01.599 --> 00:48:06.640
用户希望我的东西可用吗

00:48:06.640 --> 00:48:10.319
并备份实际上可能值得

00:48:10.319 --> 00:48:13.520
嗯简要提及是因为您知道很多印刷服务的花费。

00:48:13.520 --> 00:48:21.520
是时候为用户管理密码集，而我们并没有做到所有人的全部

00:48:21.520 --> 00:48:26.079
你的东西一塞进去，然后你更新它

00:48:26.079 --> 00:48:30.079
而旧的链接有一个回到旧链接的链接，中间还有一堆链接

00:48:30.079 --> 00:48:33.280
到新的一个权利，所以只有一个顶部

00:48:33.280 --> 00:48:37.200
哈希，我们可以将其放入dns中，如果您要复制它

00:48:37.200 --> 00:48:40.400
你只要抓住那个，说给我一切

00:48:40.400 --> 00:48:43.040
因为我们有一个不存在于某人的许可系统中

00:48:43.040 --> 00:48:47.119
数据库作为不属于任何人的api调用

00:48:47.119 --> 00:48:52.079
控制好吧，所以嗯，我们再次倾向于

00:48:52.079 --> 00:48:57.359
ipfs um的本机属性非常喜欢

00:48:57.359 --> 00:49:00.880
让我们使用其中内置的内容以及诸如版本控制之类的内置内容

00:49:00.880 --> 00:49:06.400
开发人员可以访问版本um我们实际上在一些问题上

00:49:06.400 --> 00:49:13.359
无法使用本机方法来计算文件系统大小，因为本质上我们

00:49:13.359 --> 00:49:16.720
有递归循环，每次添加新版本时

00:49:16.720 --> 00:49:20.880
整个文件系统，它遍历整个事物，

00:49:20.880 --> 00:49:23.839
就像为什么你这里有8 TB

00:49:23.839 --> 00:49:26.480
如此或

00:49:27.280 --> 00:49:31.040
而是每次添加链接，因为显然您无法循环

00:49:31.040 --> 00:49:33.040
每次您添加链接时，

00:49:33.040 --> 00:49:39.200
再次计算所有历史记录

00:49:39.200 --> 00:49:44.319
dag的大小，因为算法非常简单

00:49:44.319 --> 00:49:49.280
只是一棵树，您知道聚合已应用于dag，因此，如果您有多个

00:49:49.280 --> 00:49:52.720
路由相同的文件，您将获得相同的文件计数

00:49:52.720 --> 00:49:55.760
我们已经多次看了这一点，

00:49:55.760 --> 00:49:59.760
我们能弄清楚的最好方法是

00:49:59.760 --> 00:50:03.920
[音乐]我们将不得不拆卸

00:50:03.920 --> 00:50:07.839
钻进一棵树，所以而不是让你

00:50:07.839 --> 00:50:11.359
知道人类可读的文件路径只是通过sid将其分解，然后

00:50:11.359 --> 00:50:16.000
计算一下这有点痛苦

00:50:19.599 --> 00:50:26.559
但总的来说，您知道gos pfs的每个发行版都比较稳定

00:50:26.559 --> 00:50:30.880
嗯，并具有更多功能，而且确实非常经常

00:50:30.880 --> 00:50:35.280
有时候我们遇到了一些问题，比如我们会走到

00:50:35.280 --> 00:50:41.440
0.6您知道在非常0.4点x天的时间里，我们就像

00:50:41.440 --> 00:50:46.000
正确的决定，所以你知道谢谢协议

00:50:46.000 --> 00:50:49.280
实验室团队等等，为了继续做下去，我认为其余的

00:50:49.280 --> 00:50:53.760
最终一切都好了，运行一个

00:50:53.760 --> 00:50:59.040
星座提供者，我们最近使用了ipfs集群

00:50:59.040 --> 00:51:04.800
然后将其全部撕掉并从本质上自己进行管理，我们仍然

00:51:04.800 --> 00:51:08.480
像我们运行多个一样运行ipfs集群

00:51:08.480 --> 00:51:10.960
实例，它们在欧洲，并且在

00:51:10.960 --> 00:51:16.319
我们等等，但是我们不是集群是关于引脚集的，而是

00:51:16.319 --> 00:51:20.319
就像我们可以告诉它新的SID

00:51:20.319 --> 00:51:24.319
嗯，那是一份报告，我知道恩布鲁克最近与

00:51:24.319 --> 00:51:26.960
其他一些人，我认为这是我所进行的讨论

00:51:26.960 --> 00:51:31.760
那些帮助保持ipfs在线内容的人

00:51:31.760 --> 00:51:35.760
嗯，我们可能需要一个运营商工作组

00:51:35.760 --> 00:51:39.119
谈论事物的这一面

00:51:39.680 --> 00:51:43.520
您使用的是pub sub还是类似的东西，或者完全超出了ipfs的范围

00:51:43.520 --> 00:51:48.839
一起进行节点之间的协调

00:51:48.839 --> 00:51:52.079
我们呃

00:51:53.680 --> 00:51:57.839
我们就像在节点之间并没有真正的节点，这是我们的网络服务器

00:51:57.839 --> 00:52:01.920
向集群中的每个节点发出异步请求

00:52:01.920 --> 00:52:05.760
我们等待第一个完成，以便获得流更新

00:52:05.760 --> 00:52:08.960
嗯，还有超时，还有一些您知道的类似东西，但是，我们等待

00:52:08.960 --> 00:52:11.760
首先完成向用户的报告，然后让

00:52:11.760 --> 00:52:22.000
他们中的其他人继续前进，我意识到这是一个简单得多的方法

00:52:22.000 --> 00:52:24.319
情况下，我们将与crt或

00:52:24.319 --> 00:52:29.760
在您知道其中一件其他事情之后，但是就像立即可靠一样

00:52:29.760 --> 00:52:34.079
大概花了五个小时才能写完，所以这部分取决于本地人

00:52:34.079 --> 00:52:37.119
协议以一种非常不错的方式进行，就像

00:52:37.119 --> 00:52:39.760
就像我们得到了所有重复数据删除和所有其他东西一样

00:52:39.760 --> 00:52:43.280
所以，嗯，你知道那里是那里

00:52:43.280 --> 00:52:45.200
诸如我们将放置的应用程序克隆之类的东西

00:52:45.200 --> 00:52:47.520
人们喜欢你如何做到这一点，我们就像

00:52:47.520 --> 00:52:53.119
这实际上是主要的协议，我们给它起了一个名字，并把

00:52:53.119 --> 00:52:57.119
上面的东西，并给您一个新的子域，它不是

00:52:57.119 --> 00:53:01.839
特别辛苦，但很新颖

00:53:05.520 --> 00:53:08.880
是的，这是人们烧杯内脏令人振奋的部分之一

00:53:08.880 --> 00:53:11.520
经验是他们就像嘿，我刚刚克隆了一个

00:53:11.520 --> 00:53:14.559
网站，现在它把我的名字放在上面，我喜欢

00:53:14.559 --> 00:53:18.000
一键式设计或功能

00:53:18.000 --> 00:53:21.200
现在我有自己的副本，可以运行，修改和更改，这是关键

00:53:21.200 --> 00:53:25.839
和主题，我们需要以一种不需要特殊的方式

00:53:25.839 --> 00:53:29.520
浏览器对，这就是我们这方面的目的，没有扩展名，没有特殊之处

00:53:29.520 --> 00:53:32.720
浏览器，您知道是否有浏览器供应商

00:53:32.720 --> 00:53:35.440
像勇敢者或其他做有趣事情的人

00:53:35.440 --> 00:53:40.319
很好，只是应该使体验更好

00:53:40.319 --> 00:53:45.520
是的，在某些方面，我们正在努力使IPFS变得无聊

00:53:45.890 --> 00:53:49.560
[音乐]里奥内尔就像是

00:53:49.560 --> 00:53:57.440
[笑声]是的，确切的是，嗯

00:53:57.440 --> 00:54:01.359
太好了，谢谢您邀请我们，我想

00:54:01.359 --> 00:54:06.480
您知道，就像让我们知道我们还能如何帮助您

00:54:06.480 --> 00:54:10.079
嗯，我认为应用程序层可能有一些碎片

00:54:10.079 --> 00:54:17.119
我会说我没有标记UM的另一件事是要进行的另一项工作

00:54:17.119 --> 00:54:24.400
很多可以离线运行的应用最终被创建为

00:54:24.400 --> 00:54:27.280
单页应用

00:54:27.520 --> 00:54:30.800
取决于框架

00:54:31.040 --> 00:54:35.119
他们最终将使用[音乐]

00:54:35.119 --> 00:54:42.720
与ipfs um不兼容的路由，因此到目前为止

00:54:42.720 --> 00:54:48.880
运行普通的简ipfs网关，部分原因是我们对

00:54:48.880 --> 00:54:53.839
便携性，但是越来越像我们

00:54:53.839 --> 00:54:57.680
真的应该运行代理，我知道很多

00:54:57.680 --> 00:55:00.720
的其他人已经在使用引擎x反向代理

00:55:00.720 --> 00:55:04.480
这个嗯的前面，所以有两种方法

00:55:04.480 --> 00:55:07.920
更像是一个共识，就像

00:55:07.920 --> 00:55:13.440
您可以将ipfs 404文件放在某个地方，这就是我们所说的。

00:55:13.440 --> 00:55:17.200
 ipfs，我们只是对您的操作有一个共同的模式

00:55:17.200 --> 00:55:20.799
在哪里寻找配置文件的代理，如果

00:55:20.799 --> 00:55:26.640
你知道我们想使ipfs真正用于托管

00:55:26.640 --> 00:55:29.839
您将不得不给一些提示

00:55:29.839 --> 00:55:35.040
服务器嗯，从某种意义上说，这将是一个巨大的生活质量

00:55:35.040 --> 00:55:40.240
为um spa开发人员体验um

00:55:40.240 --> 00:55:44.720
他们可以放一个小文件，说请打开干净的路由

00:55:44.720 --> 00:55:51.040
um也对seo有影响seo的巨大影响

00:55:51.040 --> 00:55:57.280
嗯，使用散列路由嗯，因为它不会出现在各个地方

00:55:58.319 --> 00:56:03.280
除了那我应该记住的

00:56:03.280 --> 00:56:08.640
177你是什么？177当我们在一起的时候，我会发光的我会制造T恤的

00:56:08.640 --> 00:56:10.880
船

00:56:12.000 --> 00:56:15.760
是的，我刚刚在聊天中链接了，但是缩放是如此之快

00:56:15.760 --> 00:56:20.400
快速单击以使它在会议结束时不会消失

00:56:20.400 --> 00:56:25.200
关于他们，有一个想法，我们应该有

00:56:25.200 --> 00:56:28.640
支持某种类似的清单，可以

00:56:28.640 --> 00:56:35.440
嗯，帮助网站开发人员。当你暴露时，它会调整行为。

00:56:35.440 --> 00:56:40.160
通过网关的unixfs目录，这是最

00:56:40.160 --> 00:56:42.880
可能会在今年发生，因为很长一段时间

00:56:42.880 --> 00:56:48.240
到期，并且有很多类似的东西

00:56:48.240 --> 00:56:51.760
支持旧的链接，用于搜索uh

00:56:51.760 --> 00:56:55.760
优化，为各种内容定制内容类型

00:56:55.760 --> 00:56:59.359
自定义与安全相关的HTTP标头之类的事情

00:56:59.359 --> 00:57:03.200
呃，如果你喜欢的话，请发表评论

00:57:03.200 --> 00:57:06.880
那里没有提到的东西将非常有用，因为我们将

00:57:06.880 --> 00:57:11.119
嗯，今年要花一些时间来创建提案

00:57:11.119 --> 00:57:14.559
嗯，我会确保将您包括在循环中，但是如果您喜欢

00:57:14.559 --> 00:57:17.920
尚未写下的任何内容请删除

00:57:17.920 --> 00:57:23.119
那里，因为那是我们真正需要做的事情

00:57:23.119 --> 00:57:26.720
是的，我和ii专门同意

00:57:26.720 --> 00:57:33.680
像常规注释一样，如果您使用子域，大多数问题都会消失

00:57:33.680 --> 00:57:37.440
我的网关是说，大多数问题会在您喜欢时消失

00:57:37.440 --> 00:57:40.559
拥有像内容根一样的根

00:57:40.559 --> 00:57:45.200
网址的路径，恐怕没有更好的方法

00:57:45.200 --> 00:57:50.000
适用于所有浏览器，我们将继续前进

00:57:50.000 --> 00:57:54.079
相对地址，是的，一旦您得到该死的ipfs，就完全可以

00:57:54.079 --> 00:57:56.160
在那里，你就像伟大的一样，你打破了一切

00:57:56.160 --> 00:58:00.720
是的，所以这个想法是呃，今年我们会慢慢的

00:58:00.720 --> 00:58:04.480
嗯，施加一些压力，软硬的压力

00:58:04.480 --> 00:58:10.559
使人们从以ipfs开头的路径迁移到子域

00:58:10.559 --> 00:58:15.359
主要是我们将禁用Cookie之类的功能，或更高级的功能

00:58:15.359 --> 00:58:19.040
那些路径上的api以及那些

00:58:19.040 --> 00:58:23.359
真的想要运行网站会有点像

00:58:23.359 --> 00:58:29.280
慢慢过渡到安全的子域或只是子域，我不是

00:58:29.280 --> 00:58:32.720
说那些带有cid的子域，但是就像您说的那样，

00:58:32.720 --> 00:58:36.640
用户的宠物名称子域uh而且

00:58:36.640 --> 00:58:39.520
非常适合呃，就像是要拖动的条目

00:58:39.520 --> 00:58:43.920
嗯，人们喜欢

00:58:43.920 --> 00:58:48.240
就像这样的自我认同观念，他们可能会尝试自己的

00:58:48.240 --> 00:58:52.799
命名uhfusion.app，但是如果它们像您一样拥有自己的域名，

00:58:52.799 --> 00:58:56.160
询问如果您的服务消失了会怎样

00:58:56.160 --> 00:58:59.760
或有人想自己经营，就像翻转

00:58:59.760 --> 00:59:03.280
dns链接在他们自己的域名上，它们是

00:59:03.280 --> 00:59:06.400
自托管实际上数据将迁移

00:59:06.400 --> 00:59:10.240
自己到自己的节点，所以我非常支持

00:59:10.240 --> 00:59:13.440
对此，请删除有关清单的评论

00:59:13.440 --> 00:59:18.720
因为我个人想早点看到这个，所以我很有趣

00:59:18.720 --> 00:59:24.160
与我想去的人讨论

00:59:24.160 --> 00:59:27.200
我不确定ipfs的作用是什么

00:59:27.200 --> 00:59:31.119
确切地在协议之后，但是呃，我认为我们应该推动

00:59:31.119 --> 00:59:36.160
我看到很多人在谈论像电子应用程序或其他东西吗

00:59:36.160 --> 00:59:39.599
这样，我明白为什么您可能要对控件和节点执行此操作

00:59:39.599 --> 00:59:43.040
但我也看到这些人主要是

00:59:43.040 --> 00:59:46.799
一直坐在台式机上的开发人员

00:59:46.799 --> 00:59:50.720
嗯，我仍然非常专注于

00:59:50.720 --> 00:59:54.160
在这个嗯，裂变想做的一件事是

00:59:54.160 --> 00:59:57.839
是帮助人们将其pwas发布到

00:59:57.839 --> 01:00:01.920
Android Play商店um和Windows商店

01:00:01.920 --> 01:00:06.480
嗯，作为清单的一部分，这让我思考了一下，

01:00:06.480 --> 01:00:10.079
本质上，我们将在裂变上拥有应用程序，或者我们已经拥有

01:00:10.079 --> 01:00:14.799
嗯，我们基本上是不会提出新格式的

01:00:14.799 --> 01:00:19.599
我们将要求人们填写清单文件，然后您会看到一个图标

01:00:19.599 --> 01:00:24.160
然后您得到了描述等，因此考虑了任何本质上的扩展

01:00:24.160 --> 01:00:27.680
该清单文件的供应商扩展可能

01:00:27.680 --> 01:00:31.680
一件要做的事

01:00:31.680 --> 01:00:35.520
呃和两个我想我说的像是我们可以一起工作

01:00:35.520 --> 01:00:43.280
在模板启动器存储库等上

01:00:43.280 --> 01:00:47.119
你知道大多数前手的东西都应该与ipfs一起使用

01:00:47.119 --> 01:00:49.920
是的，但是让我们确保它可以脱机工作

01:00:49.920 --> 01:00:54.079
让我们确保它是pwa um，我认为这里有很大的面积

01:00:54.079 --> 01:00:57.839
那里的合作

01:01:01.359 --> 01:01:05.200
你好，只需快速评论一下，最好的事情就是

01:01:05.200 --> 01:01:11.760
网络钓鱼是ii可以有任何应用程序，我可以看到我的所有数据，这无关紧要

01:01:11.760 --> 01:01:14.319
它在哪里托管，在哪里都无所谓

01:01:14.319 --> 01:01:20.160
您的所有数据都可以在任何应用程序上访问，这意味着

01:01:20.160 --> 01:01:24.960
非常重要，无需任何特殊的努力

01:01:24.960 --> 01:01:29.280
所以我认为那真的很棒

01:01:29.280 --> 01:01:33.680
谢谢jerry呃jerry的早期采用者已经做了很多

01:01:33.680 --> 01:01:36.960
通过深入裂变来发现真正非常有趣的东西

01:01:36.960 --> 01:01:39.839
能力

01:01:41.839 --> 01:01:45.920
好东西，是的，这很棒，我们已经结束了

01:01:45.920 --> 01:01:49.040
但是听起来我们可能想要很多线程

01:01:49.040 --> 01:01:52.640
在这里拿起并继续聊天，但我知道我们在这里

01:01:52.640 --> 01:01:56.319
我们的联系信息，以便该团队中的任何一个想要

01:01:56.319 --> 01:02:00.400
多聊一些具体的建议，我认为我们可以做到

01:02:00.400 --> 01:02:05.920
我在聊天中删除了指向我们有公告的问题的链接

01:02:05.920 --> 01:02:08.799
参加这次会议，所以如果有人想跟随我们看看

01:02:08.799 --> 01:02:12.799
对于下个月，我们希望重新获得每月的节奏

01:02:12.799 --> 01:02:16.319
饮食丰富，还有其他需要包裹的东西

01:02:16.480 --> 01:02:21.839
您可以分享幻灯片的地址吗

01:02:22.000 --> 01:02:25.200
我会，我会的，我会放的，我会放一个链接的

01:02:25.200 --> 01:02:31.920
在嗯嗯，我将发送一个助手是我将发送的

01:02:31.920 --> 01:02:38.880
所有令人惊叹的地址封面谢谢大家谢谢大家

01:02:38.880 --> 01:02:43.520
大家再见

