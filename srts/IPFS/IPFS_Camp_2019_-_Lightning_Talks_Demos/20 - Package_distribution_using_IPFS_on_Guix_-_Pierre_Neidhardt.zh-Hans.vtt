WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:08.160
你好，所以我要谈谈IP FS和怪胎，所以首先是ipfs有什么好处

00:00:08.160 --> 00:00:15.809
很好，它可以使我们可以访问任何类型的数据的行为

00:00:15.809 --> 00:00:20.310
正确，它试图增强一般性知识的获取，这非常

00:00:20.310 --> 00:00:27.779
很重要，但是生成的数据又如何呢？

00:00:27.779 --> 00:00:30.900
当您通过IP获得二进制文件时，抱怨二进制该怎么办

00:00:30.900 --> 00:00:35.239
FS当您获得较暗的图像时，其中的内容是什么？如何信任它？

00:00:35.239 --> 00:00:43.610
这实际上很困难，而这正是极客进来的地方

00:00:57.920 --> 00:01:06.000
好吧，很酷，简而言之，极客是

00:01:06.000 --> 00:01:10.400
功能包管理器，所以，如果您听说过尼克斯，那将非常相似

00:01:10.400 --> 00:01:15.990
功能包管理器意味着对于两次输入相同的输入，它将

00:01:15.990 --> 00:01:22.070
逐点产生相同的输出，因此从源产生相同的结果二进制

00:01:22.070 --> 00:01:31.229
可能因此演出真的试图把重点实际上放在报告上

00:01:31.229 --> 00:01:38.190
能力和能力，这意味着它会尽力使我们充实

00:01:38.190 --> 00:01:46.229
整个软件图的透明度，但是这很漂亮

00:01:46.229 --> 00:01:57.869
太棒了，所以我想相信您，抱歉，但是编译了一个程序

00:01:57.869 --> 00:02:01.170
并非总是很愉快，您知道这需要时间，需要大量的计算

00:02:01.170 --> 00:02:05.700
资源，因此通常您会在小型发行版上进行操作

00:02:05.700 --> 00:02:10.470
预编译的二进制文件，因此非常方便，这很多人

00:02:10.470 --> 00:02:14.820
非常重要，因此我们实际上将这些二进制文件与极客一起分发

00:02:14.820 --> 00:02:18.450
好吧，我们称它们为替代品，然后我们进行存储

00:02:18.450 --> 00:02:24.630
它们放在一个极客存储区中，这是到目前为止文件系统上的位置

00:02:24.630 --> 00:02:28.010
好的问题是，这种分布是

00:02:28.010 --> 00:02:34.560
以及使用HTTP服务器的传统方式，而且并不总是那么快

00:02:34.560 --> 00:02:40.280
取决于您所要解决的问题对基础架构的要求很高

00:02:40.280 --> 00:02:45.900
最近在2019年，我们开始通过网络使用CDN内容，这有什么帮助

00:02:45.900 --> 00:02:49.860
很好，但仍然有很多农场，之后我们

00:02:49.860 --> 00:02:55.019
耐克FS大会，所以为什么不使用BFS这么多

00:02:55.019 --> 00:03:04.500
感，这就是我们决定尝试在演出中利用TFS进行分发的地方

00:03:04.500 --> 00:03:09.510
包太棒了，我认为老实说，这使得很多

00:03:09.510 --> 00:03:14.360
感觉，我自称一方面这两个项目将彼此受益

00:03:14.360 --> 00:03:20.650
适用于极客的软件包，但也很重要的来源，因为

00:03:20.650 --> 00:03:25.190
这只是包裹管理的一小部分，这意味着我们只能信任

00:03:25.190 --> 00:03:30.590
该软件，如果我们有完整的图形，但将我们的图形条带化

00:03:30.590 --> 00:03:36.530
软件，如果缺少链接，如果缺少源，我们喜欢这种信任

00:03:36.530 --> 00:03:42.680
没关系，所以如果我认为可以真正帮助节省来源，

00:03:42.680 --> 00:03:49.220
另一方面，现在认为极客也可以让ipfs做ipfs不做的事情

00:03:49.220 --> 00:03:55.580
真正做到的是带来透明性以生成真正的数据

00:03:55.580 --> 00:03:59.900
我们的怪胎听起来很强大，所以我认为这两个项目可以一起进行

00:03:59.900 --> 00:04:06.800
真的很远了，我们现在能做什么首先我们可以做的第一件事

00:04:06.800 --> 00:04:13.760
就像我提到的，开始为极客级的ipfs分发软件包，例如

00:04:13.760 --> 00:04:19.040
至少比较一个软件包，否则她是第一个对其进行编译的软件包，

00:04:19.040 --> 00:04:23.780
她已经完成了第二步，鲍勃也想开始打包

00:04:23.780 --> 00:04:29.300
好吧，与其自己竞争，不如直接从埃里亚斯那里得到它，这将

00:04:29.300 --> 00:04:35.150
只花费了网络交易时间就很整洁了，所以

00:04:35.150 --> 00:04:41.080
如果您更深入一点，基本上可以很好地分发软件包

00:04:41.080 --> 00:04:46.040
我们可以像做梦一样停止思考，开始思考什么

00:04:46.040 --> 00:04:51.110
关于您的信息，我提到了这家演出商店，您在那里存放了所有

00:04:51.110 --> 00:04:55.010
软件包计算顺序的结果如何消除此问题

00:04:55.010 --> 00:05:01.790
并且仅使用ipfs进行排序，就像某种世界上的宇宙或演出商店一样

00:05:01.790 --> 00:05:08.390
并安装一个程序基本上就等于固定它，我会相当

00:05:08.390 --> 00:05:13.900
如果我们更深入地交流，现在就快

00:05:13.900 --> 00:05:19.580
基本上什么是程序包编译这只是计算的一种特殊情况

00:05:19.580 --> 00:05:25.570
是不是，所以我们可以开始考虑如何存储计算

00:05:25.570 --> 00:05:29.730
一切科学错误

00:05:29.730 --> 00:05:35.400
像您这样的微积分，您想运行一个非常深入，非常密集的科学程序

00:05:35.400 --> 00:05:39.990
你要跑步几天，如果别人和你明白

00:05:39.990 --> 00:05:43.350
您的星球想要以相同的输入运行相同的东西，您可以

00:05:43.350 --> 00:05:46.950
实际上只是从已经计算过的其他人那里获取结果

00:05:46.950 --> 00:05:51.390
而且Keeks在许多方面都可以使您做到这一点，而实际上您可以

00:05:51.390 --> 00:05:56.460
每次计算中的每件事在很多方面都非常通用，我会

00:05:56.460 --> 00:06:03.150
当我看着这条路时，完成了两个真正困扰我的事情

00:06:03.150 --> 00:06:09.480
为ipfs映射两个项目，一个是程序包管理器，另一个是操作系统，

00:06:09.480 --> 00:06:13.440
我真的很想相信怪胎可以实现这两个目标

00:06:13.440 --> 00:06:19.290
非常感谢你[掌声]

