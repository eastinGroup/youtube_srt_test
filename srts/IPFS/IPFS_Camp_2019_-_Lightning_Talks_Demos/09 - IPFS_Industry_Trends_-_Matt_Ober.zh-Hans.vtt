WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:06.720
大家好，我叫马特，我来自皮纳塔，我们是一家公司

00:00:06.720 --> 00:00:11.639
利用ipfs或星际文件系统来帮助很多公司

00:00:11.639 --> 00:00:16.020
解决了他们在Web 3空间中遇到的许多问题，因此我们已经

00:00:16.020 --> 00:00:19.289
在过去的一年中，我们学到了很多东西，我们害怕会有所帮助

00:00:19.289 --> 00:00:22.170
描述我们看到客户的一些用例

00:00:22.170 --> 00:00:26.430
以及他们在使用IP FS进行构建时遇到的问题

00:00:26.430 --> 00:00:31.710
应用程序的背景，我们存储和存储的方式

00:00:31.710 --> 00:00:36.329
自从早期以来，在Internet上移动数据已经过时了，我们已经取得了很大进步

00:00:36.329 --> 00:00:40.140
互联网的日子里，我们有过一些教训，我们也有

00:00:40.140 --> 00:00:46.170
忘记了一些教训，所以我们目前依靠的是一个云基础架构

00:00:46.170 --> 00:00:50.340
忽略了早期的点对点技术的优势

00:00:50.340 --> 00:00:54.239
网络点对点技术得到了广泛使用，它们提供了一种

00:00:54.239 --> 00:00:58.379
效率很高，可以在网络用户之间移动内容，但是

00:00:58.379 --> 00:01:03.000
随着网络的发展，集中式云计算模型变得越来越普遍

00:01:03.000 --> 00:01:06.659
提供了一种更轻松的方式来部署Web基础结构，因此公司不得不

00:01:06.659 --> 00:01:10.710
选择他们是否要使用云基础架构提供的便利

00:01:10.710 --> 00:01:15.049
模型或他们是否想利用点对点技术的优势

00:01:15.049 --> 00:01:19.200
毫不奇怪，许多公司都选择了使事情变得更轻松，更轻松的方式。

00:01:19.200 --> 00:01:25.350
选择了集中式云的路线，但是如果我们可以结合使用

00:01:25.350 --> 00:01:29.970
最好的云计算，仍然可以享受点对点技术的优势，

00:01:29.970 --> 00:01:33.960
我的意思是使点对点技术像使用一样容易

00:01:33.960 --> 00:01:41.159
现代云基础架构，我们完全可以做到这一点，所以要做这个皮纳塔

00:01:41.159 --> 00:01:48.710
使用IP FS，这是一项功能强大且功能非常丰富的新对等技术

00:01:48.710 --> 00:01:54.030
ipfs几乎可以在几乎任何功能强大的设备上使用，因为

00:01:54.030 --> 00:01:57.060
它可以让公司存储但也可以移动的方面

00:01:57.060 --> 00:02:03.270
跨服务器，台式机，移动设备甚至物联网智能地传输数据

00:02:03.270 --> 00:02:08.250
设备，因此IP FS会执行此操作并提供数据

00:02:08.250 --> 00:02:11.879
通过所谓的固有不变性实现完整性，这意味着

00:02:11.879 --> 00:02:16.290
应用程序不能绝对使用它们正在使用的数据

00:02:16.290 --> 00:02:22.830
还没有被篡改好，所以在解释为什么应用程序被利用之前

00:02:22.830 --> 00:02:27.450
皮纳塔的这种数据移动和数据完整性，我们需要描述

00:02:27.450 --> 00:02:32.010
这些应用程序已经设置好，为什么要与我们集成，所以每个用例都是

00:02:32.010 --> 00:02:36.660
有点不同，幸运的是IPF在这方面是超级可扩展的

00:02:36.660 --> 00:02:41.550
用户都在构建自己独特的IP FS模式，他们正在做

00:02:41.550 --> 00:02:45.600
事物以它们自己独特的方式，但是它们都具有它们需要的共同点

00:02:45.600 --> 00:02:50.220
稳定性，他们需要速度，这是pinata帮助开发人员进行开发的地方

00:02:50.220 --> 00:02:53.970
利用点对点技术的优势，而无需处理

00:02:53.970 --> 00:02:57.690
发展和维护自己的习俗的复杂性

00:02:57.690 --> 00:03:05.580
基础架构，我们使点对点变得容易，所以现在我们知道了什么

00:03:05.580 --> 00:03:10.860
用户正在做的事情，他们有如此不同的用例，让我们学习一下

00:03:10.860 --> 00:03:14.250
他们在这里建立的东西是公司采用的一些最普遍的方式

00:03:14.250 --> 00:03:19.170
我们的平台正在利用ipfs的好处，一个常见的用例是

00:03:19.170 --> 00:03:23.670
对等消息传递，因此ipfs允许安全地采用新颖的新方法

00:03:23.670 --> 00:03:28.050
通过Web进行通信的开发人员使用pinata来确保其用户

00:03:28.050 --> 00:03:32.060
用户最需要时始终可以检索消息

00:03:32.060 --> 00:03:36.810
另一个用例是网站托管，这正在变得越来越普遍

00:03:36.810 --> 00:03:42.630
这是一个很酷的用例，您可以通过以下方式在IP FS上托管网站：

00:03:42.630 --> 00:03:45.620
表示用户从该网站检索的内容是

00:03:45.620 --> 00:03:50.640
可验证的，并且可以用密码验证的流行语

00:03:50.640 --> 00:03:57.690
我们都喜欢那里，所以这意味着用户可以访问一个网站

00:03:57.690 --> 00:04:02.250
并且知道他们从该网站检索的数据是什么

00:04:02.250 --> 00:04:04.800
他们期望得到，并且他们不会遭受

00:04:04.800 --> 00:04:08.850
通过与CloudFlare的合作，我们实现了中间人攻击

00:04:08.850 --> 00:04:12.260
确保IP FS上的网站既稳定又快速

00:04:12.260 --> 00:04:17.760
最后是内容交付，这是IP FS的一个非常重要的用例，并且是一个

00:04:17.760 --> 00:04:22.020
的用例中，最热衷于ipfs的公司

00:04:22.020 --> 00:04:27.690
自己按需或弹性CDN，因此当用户申请

00:04:27.690 --> 00:04:32.730
耐心在ipfs上检索内容，他们成为该内容的提供者

00:04:32.730 --> 00:04:36.290
意味着需要该数据的下一个用户将更快地获取数据，

00:04:36.290 --> 00:04:40.070
因为此内容是由用户自己分发的

00:04:40.070 --> 00:04:45.000
内容提供商无需借助CDN就可以实现CDN的现代优势

00:04:45.000 --> 00:04:50.430
与这种有机用户驱动的CDN方法相关的巨大成本

00:04:50.430 --> 00:04:54.750
消除了当今世界许多初创企业面临的巨大资本壁垒

00:04:54.750 --> 00:05:00.750
尝试扩展其平台时可以，因此对于希望

00:05:00.750 --> 00:05:06.420
注册pinata，您可以轻松完成此操作，只需搜索pinata ipfs和

00:05:06.420 --> 00:05:12.660
您将被带到我们的网站非常容易注册，只需免费注册

00:05:12.660 --> 00:05:22.920
这只需要输入您的电子邮件地址，是的，所以我不

00:05:22.920 --> 00:05:26.640
现在我身上有一个虚假的电子邮件地址，我们要求我们的用户注册

00:05:26.640 --> 00:05:30.180
并验证他们的电子邮件地址，以便我们假装我实际上在签名

00:05:30.180 --> 00:05:33.090
当我真的要以自己的身份登录时，准备使用该平台

00:05:33.090 --> 00:05:38.570
帐户，以便我们登录

00:05:44.630 --> 00:05:49.370
好吧，现在我们在pinata平台上，我们发现最有效的方法是

00:05:49.370 --> 00:05:52.280
让我们的用户参与到我们的生态系统中是为了让他们直接

00:05:52.280 --> 00:05:56.480
我们大多数客户的文档将成为开发人员，因此它使

00:05:56.480 --> 00:05:58.430
送他们到他们可能会在意的地方的感觉

00:05:58.430 --> 00:06:02.120
我们大多数人在这里谈论您如何处理自己的

00:06:02.120 --> 00:06:06.230
API密钥，您如何与API测试建立联系以确保一切正常

00:06:06.230 --> 00:06:11.150
正确地，我们提供了有关如何执行此操作的详尽文档

00:06:11.150 --> 00:06:17.660
通过邮递员来完成此任务，邮递员是开发人员常用的通用UI应用程序

00:06:17.660 --> 00:06:23.150
测试REST API，然后我们还提供Java Script示例，这是一个

00:06:23.150 --> 00:06:26.930
在我们的文档中重复出现的模式，如果您不想

00:06:26.930 --> 00:06:31.250
使用API​​本身，我们还提供了一个SDK，您可以将其集成到您的

00:06:31.250 --> 00:06:37.040
node.js j / s应用程序还可以，所以令人惊讶的是很多人正在使用

00:06:37.040 --> 00:06:41.840
我们的平台也不是开发人员，而是想要尝试ipfs的人

00:06:41.840 --> 00:06:50.060
也许他们是第一次了解到嘿，我可以在ipfs上托管一个网站，

00:06:50.060 --> 00:06:55.880
听起来很有趣，但我不是开发人员，因此我们提供了一种简便的方法来实现这一目标

00:06:55.880 --> 00:06:59.900
有网站的上传部分，或者您可以进入并上传文件

00:06:59.900 --> 00:07:03.200
您可以上传目录，这些目录是人们想要托管时使用的目录

00:07:03.200 --> 00:07:08.420
网站，也适合那些在ipfs上进行开发或托管的网站

00:07:08.420 --> 00:07:12.260
而且您真的不想通过API来让我们保存您的内容

00:07:12.260 --> 00:07:16.340
我们只允许您向我们提供一个哈希，然后我们将为您和您抓取它

00:07:16.340 --> 00:07:23.120
可以看到事情的进展，所以当我们上传时会发生什么

00:07:23.120 --> 00:07:27.770
我们也有所谓的Pin Explorer，这是一堆测试演示

00:07:27.770 --> 00:07:33.530
东西在这里，但这使我们的用户可以看到他们固定的东西并有某种

00:07:33.530 --> 00:07:37.430
他们可以看到他们在应用程序中正在使用的东西的概述

00:07:37.430 --> 00:07:41.450
他们与我们一起存储的总数据量

00:07:41.450 --> 00:07:45.200
可以看到其单个文件的大小，我们还提供了一个网关，

00:07:45.200 --> 00:07:51.320
允许用户快速查看该内容，因此说我有一张漂亮的照片

00:07:51.320 --> 00:07:56.150
我想在牧场上给我的朋友们看皮纳塔菜，我可以很快做到

00:07:56.150 --> 00:08:01.560
单击网关链接，我们可以快速允许用户删除

00:08:01.560 --> 00:08:06.240
数据，也可以说我想删除您照片上的那张皮纳塔

00:08:06.240 --> 00:08:10.230
删除它会成功将其从我们的应用中取消固定

00:08:10.230 --> 00:08:15.030
节点，现在您不再需要为我们收取存储在该数据中的费用

00:08:15.030 --> 00:08:18.510
根据熟悉的云模型向我们的用户收费，这意味着您

00:08:18.510 --> 00:08:22.410
如果您只想存储一天，将按比例分配存储的内容

00:08:22.410 --> 00:08:26.790
没关系，您可以将其存储一天，然后将其删除，而您只需要为

00:08:26.790 --> 00:08:31.800
您在当天可以存储的数据量

00:08:31.800 --> 00:08:36.539
您可以做各种有趣的功能，如果您想学习的话，我将不介绍它

00:08:36.539 --> 00:08:40.349
有关它的更多信息，我建议您自己检查一下网站，但

00:08:40.349 --> 00:08:47.940
这是如何使用pinata的快速过程，因此我们也看到了应用程序的重点

00:08:47.940 --> 00:08:53.910
ipfs区块链应用的不变性方面

00:08:53.910 --> 00:08:58.680
ipfs和大众区块链确实很擅长对数据进行时间戳记，但是它们

00:08:58.680 --> 00:09:02.730
在区块链上的一张照片中标记大量数据存储的时间真的很糟糕

00:09:02.730 --> 00:09:09.089
这将花费数千美元，而且实际上不可能一劳永逸

00:09:09.089 --> 00:09:15.180
一次，那么如何使用ipfs解决这个问题，您可以利用不可变的

00:09:15.180 --> 00:09:19.700
防篡改性质以及ipfs如何将其内容签名为

00:09:19.700 --> 00:09:25.020
基本上给时间戳记内容，而不实际将所有内容都放在上面

00:09:25.020 --> 00:09:28.860
区块链本身区块链应用程序能够使用IP FS作为

00:09:28.860 --> 00:09:32.460
数据存储层，可以将其应用程序扩展到几乎无限量的

00:09:32.460 --> 00:09:36.839
数据存储我们在这里看到的一些最强大的用例涉及使用

00:09:36.839 --> 00:09:41.520
IP FS为现代区块链创建所谓的第二层

00:09:41.520 --> 00:09:44.310
区块链克服了它们所具有的许多可扩展性功能

00:09:44.310 --> 00:09:49.050
当前面临并帮助推动可用性和用户体验的

00:09:49.050 --> 00:09:55.020
区块链空间下一个科学数据，因此科学界创造了很多

00:09:55.020 --> 00:09:59.640
数据，所有这些都需要记录，但最重要的是，该数据需要

00:09:59.640 --> 00:10:05.180
是可验证的，也需要在科学界之间共享

00:10:05.180 --> 00:10:09.600
正在构建允许科学合作者共享其应用程序的应用程序

00:10:09.600 --> 00:10:11.520
世界各地的数据

00:10:11.520 --> 00:10:14.850
确保数据完整性的方法对

00:10:14.850 --> 00:10:18.840
科学界，所以我没有提到最有价值的组织之一

00:10:18.840 --> 00:10:24.210
ipfs的功能ipfs处理数据的方式的副作用是

00:10:24.210 --> 00:10:29.610
重复数据不会占用更多磁盘空间，这意味着

00:10:29.610 --> 00:10:34.980
物联网设备变得非常强大，因为物联网读数通常包括

00:10:34.980 --> 00:10:40.230
成千上万的记录，这些记录经常是使用IP重复应用的

00:10:40.230 --> 00:10:43.890
FS可以将其存储需求降低到原来的一小部分

00:10:43.890 --> 00:10:48.600
以前需要的，所以这些是我们最有趣的一些用例

00:10:48.600 --> 00:10:52.500
从今天在我们平台上构建的用户那里看到，我们很高兴看到他们

00:10:52.500 --> 00:10:56.880
继续在未来建造，所以可以说在皮纳塔与我们一起建造

00:10:56.880 --> 00:11:01.100
云，我们很高兴有您成为客户

