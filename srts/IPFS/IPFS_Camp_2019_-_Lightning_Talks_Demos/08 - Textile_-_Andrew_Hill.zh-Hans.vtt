WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:04.620
你好，我叫安德鲁，我在这里纺织，我只想带一个

00:00:04.620 --> 00:00:10.349
分享我们正在尝试做的纺织品和种类的机会

00:00:10.349 --> 00:00:14.519
我们在整个生态系统中所处的位置以及我们正在尝试帮助其他人的地方

00:00:14.519 --> 00:00:20.369
开发人员可以与最终用户进行交易，因此从高级角度来看，纺织品是一套工具

00:00:20.369 --> 00:00:26.519
开发人员可以构建完全自定义的弹性去中心化应用程序，该应用程序可以

00:00:26.519 --> 00:00:30.090
连接世界上任何人，它充当这些应用程序的平台

00:00:30.090 --> 00:00:35.460
可以让用户控制和访问他们的数据，这确实是我们的使命

00:00:35.460 --> 00:00:41.040
在纺织业，我们真的认为整个互联网应该进行转型，因此

00:00:41.040 --> 00:00:44.910
用户可以完全访问和拥有自己创建的数据的所有权

00:00:44.910 --> 00:00:47.879
如果您考虑自早期以来互联网的发展方式

00:00:47.879 --> 00:00:54.260
过去，您在互联网上的人格过去常常是个昵称和电子邮件

00:00:54.260 --> 00:01:00.059
但经过多年的发展，它已经真正变成了您所有的东西

00:01:00.059 --> 00:01:04.350
昵称和浏览历史记录中的电子邮件您的约会档案您的性爱

00:01:04.350 --> 00:01:10.049
偏好设置现在，您有关您的所有信息都已反映在数字数据中，

00:01:10.049 --> 00:01:14.700
我们允许集中式组织收集这些数据，并且

00:01:14.700 --> 00:01:19.290
真正拥有它，所以他们拥有关于

00:01:19.290 --> 00:01:23.009
我们每个人，实际上是许多公司之间争夺尽可能多的比赛

00:01:23.009 --> 00:01:26.340
尽可能避免这些数据，并且永远不要以任何功能将其返回给您

00:01:26.340 --> 00:01:31.590
有意义的方式，所以当我们开始考虑解决此问题的方法时

00:01:31.590 --> 00:01:35.220
我们意识到，实际上并没有建立互联网

00:01:35.220 --> 00:01:41.820
解决此问题的方法，那就是当我们找到ipfs时，因此我们将ipfs视为

00:01:41.820 --> 00:01:49.290
解决了网络数据所有权模型的一些非常大的问题，所以ipfs

00:01:49.290 --> 00:01:53.040
对我们来说，使我们能够重新考虑用户应用程序与

00:01:53.040 --> 00:01:58.409
他们的数据使我们能够突破集中式网络，因此一些

00:01:58.409 --> 00:02:02.549
ipfs的核心功能（例如内容可寻址数据）使我们可以考虑

00:02:02.549 --> 00:02:06.659
允许应用程序使用的数据，但永远不能从应用程序中隐藏这些数据

00:02:06.659 --> 00:02:10.410
用户永远不会被用户夺走，您可以在这些简单的基础上进行构建

00:02:10.410 --> 00:02:13.050
属性，并思考一个全新的世界

00:02:13.050 --> 00:02:16.230
太多的应用程序和服务中可能允许数据访问的地方

00:02:16.230 --> 00:02:21.060
不断地在您的个人数据上增加新价值，而不会利用它

00:02:21.060 --> 00:02:25.080
离你远点，所以当我们开始接近那个愿景和想法时

00:02:25.080 --> 00:02:28.050
关于如何构建，我们意识到第一步是

00:02:28.050 --> 00:02:31.410
我们如何获得更多相信这种未来的开发者

00:02:31.410 --> 00:02:36.240
应用程序，这就是我说其针对以下情况的工具套件时的意思。

00:02:36.240 --> 00:02:41.430
建设者，因此，如果您是开发人员，并且想在ipfs上构建产品，

00:02:41.430 --> 00:02:46.500
是跨平台的，因此您希望通过网络使用移动设备和台式机

00:02:46.500 --> 00:02:50.430
使用户能够访问其数据的控制权，而您想利用安全性

00:02:50.430 --> 00:02:55.590
构建块，以便对端到端加密进行加密，并保留静态数据以及所有

00:02:55.590 --> 00:02:59.550
ipfs真正促进的其他好处，然后我们尝试使其变得简单

00:02:59.550 --> 00:03:05.820
对您来说，最重要的是，我们的工具是开源的并且非常透明

00:03:05.820 --> 00:03:09.270
我们想到的是这些应用程序可以真正构建在一起，我们希望

00:03:09.270 --> 00:03:12.540
与应用程序构建者社区合作，并思考如何

00:03:12.540 --> 00:03:17.760
我们可以为每个用户创建一个非常有价值的数据集，因此其中一些

00:03:17.760 --> 00:03:22.500
我们提供给其中一些核心工具的一些示例

00:03:22.500 --> 00:03:27.570
开发人员就像简单的身份识别工具一样，因此在纺织品领域，我们不会

00:03:27.570 --> 00:03:32.610
对您必须采用的纺织品标识采取任何极端的看法，但是我们

00:03:32.610 --> 00:03:37.590
使每个应用程序都可以访问诸如公用密钥共享注册表之类的内容

00:03:37.590 --> 00:03:41.430
人们可以附加显示名称，然后那个然后那个注册表实际上是

00:03:41.430 --> 00:03:47.580
可搜索的，因此您可以轻松地跨应用程序连接用户，并且

00:03:47.580 --> 00:03:51.660
它们是可扩展的，因此您不仅可以显示名称和头像，还可以做更多的事情，但是您可以

00:03:51.660 --> 00:03:55.860
可以为您的应用程序添加您知道的其他内容，特别是它们的动态

00:03:55.860 --> 00:04:01.140
因此用户可以更改它们，以针对每个可验证的应用程序自定义它们

00:04:01.140 --> 00:04:04.830
显然，就像我提到的那样，它们都是可以发现的

00:04:04.830 --> 00:04:12.080
交叉应用程序在这里到处都是加密，因此使用具有很大的意义

00:04:12.080 --> 00:04:16.530
消费者应用程序中的ipfs是您真的想考虑很多吗

00:04:16.530 --> 00:04:19.560
您将如何处理加密以及如何处理存储

00:04:19.560 --> 00:04:24.030
代表用户的私钥，并在最后向用户提供那些私钥

00:04:24.030 --> 00:04:26.790
今天的情况等等在纺织品1中

00:04:26.790 --> 00:04:31.230
发生的事情是每个用户都有一个私人钱包，并且在该钱包内

00:04:31.230 --> 00:04:35.330
他们可以创建任意数量的帐户以附加到不同的应用程序，并且

00:04:35.330 --> 00:04:38.790
纺织类的特性使它真正易于应用，因此您不必

00:04:38.790 --> 00:04:43.200
仔细考虑您将如何做，您可以在上面使用纺织品

00:04:43.200 --> 00:04:48.000
设备api来提供新的钱包，并且将来我们真的在移动

00:04:48.000 --> 00:04:52.890
迅速获得可以在其中进行简单登录的服务哦

00:04:52.890 --> 00:04:56.640
对于用户和服务器端的幕后，您可以进行调配

00:04:56.640 --> 00:05:00.870
那些不一定要管理私钥的用户的钱包

00:05:00.870 --> 00:05:05.340
或今天的秘密词组，但您想了几年

00:05:05.340 --> 00:05:08.790
互联网的发展和工具变得越来越容易，所以您想要

00:05:08.790 --> 00:05:12.600
使这些用户今天迅速加入您的应用程序，但要做到这一点

00:05:12.600 --> 00:05:19.290
他们随时可以收回该私人钱包，并在以后将其存储

00:05:19.290 --> 00:05:22.500
您的应用可能要做的下一件事是同步数据

00:05:22.500 --> 00:05:27.600
因此，您在移动设备上使用的大多数应用程序都在使用类似的解决方案

00:05:27.600 --> 00:05:34.500
Firebase，用于在应用程序中创建数据并与您同步

00:05:34.500 --> 00:05:41.220
开发人员数据或跨用户的实时聊天之类的说法，因此我们考虑

00:05:41.220 --> 00:05:45.800
通过一个称为线程的去中心化数据库解决这个问题

00:05:45.800 --> 00:05:49.740
分散式数据库总是比传统数据库要多一点

00:05:49.740 --> 00:05:53.970
数据库，因此线程实际上是线程的数据库组件

00:05:53.970 --> 00:05:58.500
本地续集精简版数据库，但除此之外，您还可以在其中找到更多信息

00:05:58.500 --> 00:06:04.260
可以在许多用户之间同步该数据，其中包括诸如

00:06:04.260 --> 00:06:08.550
固定服务，以便您要添加到线程的数据是

00:06:08.550 --> 00:06:13.290
将来可恢复，并且可以在所有这些加密步骤中进行烘焙

00:06:13.290 --> 00:06:18.570
无论是在静止状态还是在运输途中，它们都有访问控制的规则，因此

00:06:18.570 --> 00:06:23.280
用户可以使多个用户加入同一线程共享，并且

00:06:23.280 --> 00:06:30.450
在数据集上进行协作，并在这些用户之间完全私密

00:06:30.450 --> 00:06:34.440
是互操作性，所以我们认为去中心化的网络

00:06:34.440 --> 00:06:37.800
构建基块聚集在一起我们考虑如何

00:06:37.800 --> 00:06:43.030
您将其中的一项合并起来，使下一项可以访问

00:06:43.030 --> 00:06:47.919
应用程序，因此我的意思是用我们的一种方法来说明

00:06:47.919 --> 00:06:51.819
纺织中的基石应用称为纺织照片，因此在纺织中

00:06:51.819 --> 00:06:57.340
照片用户可以在即将发布的版本中上传和共享照片

00:06:57.340 --> 00:07:01.389
他们将能够同步整个相机胶卷，并拥有私人

00:07:01.389 --> 00:07:06.520
他们的私人钱包里塞满了照片，因此对于提供

00:07:06.520 --> 00:07:10.419
非常棒的服务，他们可以加密和存储所有照片

00:07:10.419 --> 00:07:15.909
ipfs和其他应用程序开发人员非常有趣，因为

00:07:15.909 --> 00:07:20.860
照片被存储，它们是自我记录的，如果有其他应用程序

00:07:20.860 --> 00:07:25.330
获得该Feed的许可，它可以立即获得对所有Feed的访问权限

00:07:25.330 --> 00:07:31.120
用户的照片以进行其他类型的服务，或者您知道过滤器或

00:07:31.120 --> 00:07:36.580
渲染或其他协作工具，因此这只是一种Feed，但

00:07:36.580 --> 00:07:40.870
我们也在看所有其他类型的提要，因此社交媒体提要视频

00:07:40.870 --> 00:07:45.819
供稿文档供稿，并考虑可以构建多少个应用程序

00:07:45.819 --> 00:07:52.449
在这些核心数据馈送上以多种不同的方式为用户带来价值，所以

00:07:52.449 --> 00:07:55.839
这些就是您要在设备上构建应用程序的所有步骤

00:07:55.839 --> 00:08:00.729
或者您知道例如在桌面应用程序上，但也有一些服务

00:08:00.729 --> 00:08:05.319
我们在网络上运行，有助于使消费者应用程序运行一些

00:08:05.319 --> 00:08:13.000
网络上的流动性更高，所以我们称这些纺织咖啡馆为他们的

00:08:13.000 --> 00:08:17.169
纺织节点基本上像在服务器模式下一样运行，因此它们始终处于联机状态

00:08:17.169 --> 00:08:20.409
它们帮助我们增加了稳定性和可恢复性

00:08:20.409 --> 00:08:25.509
和连接性，所以我将说明咖啡馆为

00:08:25.509 --> 00:08:31.599
提供这些功能的应用程序，所以网吧要做的第一件事就是

00:08:31.599 --> 00:08:36.459
他们固定线程和缝制线程是加密的，所以这是一个不错的访问

00:08:36.459 --> 00:08:41.380
非信任流，因此出现在网络上可以采用以下线程之一

00:08:41.380 --> 00:08:46.420
分散的数据库将其流式传输到咖啡馆，以使咖啡馆加密的方式对其进行加密

00:08:46.420 --> 00:08:50.800
不知道里面有什么，但咖啡馆实际上可以存储

00:08:50.800 --> 00:08:55.360
该线程的功能，以这种方式，对于大多数人来说，这是一个非常重要的功能

00:08:55.360 --> 00:08:59.829
消费者应用程序，前提是用户只要有手机就丢失了手机

00:08:59.829 --> 00:09:03.670
他们的根密钥，或者他们有托管服务

00:09:03.670 --> 00:09:08.350
他们可以恢复自己的线程，所以他们可以去咖啡馆

00:09:08.350 --> 00:09:13.180
信息被固定，仅实际上解锁了数据库的一行，并且

00:09:13.180 --> 00:09:17.050
然后依次恢复所有其他行

00:09:17.050 --> 00:09:20.709
对于不想挂在嘴上的轻型客户而言，这是一项很棒的服务

00:09:20.709 --> 00:09:24.850
他们可以将数据库推送到咖啡馆的数据库，并且仅停留在最新的数据库上

00:09:24.850 --> 00:09:31.779
信息非常正确，因此这是恢复服务，因此用户可以指定

00:09:31.779 --> 00:09:35.800
他们想要提供恢复服务的任何咖啡馆，他们实际上可以

00:09:35.800 --> 00:09:39.430
选择多个咖啡馆并裁员或自己经营

00:09:39.430 --> 00:09:45.220
如果他们希望他们提供用户连接工具，那么这确实是一个好地方

00:09:45.220 --> 00:09:48.430
消费者应用程序中的常见问题，其中您有两个对等点

00:09:48.430 --> 00:09:53.320
使用lib p2p进行通信，但是一个同位体将脱机，您可以打开

00:09:53.320 --> 00:09:58.149
手机，您会发送一条消息，将手机放下，然后关闭应用程序，然后在

00:09:58.149 --> 00:10:01.420
例如，移动设备将大量关闭

00:10:01.420 --> 00:10:04.899
的时间，所以你不一定要找到另一个

00:10:04.899 --> 00:10:06.940
网络上的同龄人，他们将不会有他们的电话

00:10:06.940 --> 00:10:11.170
在该应用程序上打开，然后将文字从咖啡厅中取出，这就是所谓的收件箱

00:10:11.170 --> 00:10:16.060
场景，所以他们会再次代表我加密的blob并离开

00:10:16.060 --> 00:10:19.720
为您准备好，这样当您重新上网时，您可以去咖啡厅问问嘿

00:10:19.720 --> 00:10:23.319
如果我错过任何消息，我会说这是一堆东西供您选择

00:10:23.319 --> 00:10:28.649
下载即可抓住它们，然后恢复对话状态

00:10:28.649 --> 00:10:32.110
托管钱包，所以这是一个星号，这是我们正在研究的东西

00:10:32.110 --> 00:10:37.420
现在，但只给用户传统的登录方式，这样他们仍然可以获得所有

00:10:37.420 --> 00:10:41.110
加密的好处，如果他们还没有准备好自己管理

00:10:41.110 --> 00:10:45.730
钱包，对我们来说，这实际上是一座将更多人带到我们那里的桥梁

00:10:45.730 --> 00:10:49.060
想去，还有很多其他伟大的团队正在考虑如何

00:10:49.060 --> 00:10:52.870
解决私人钱包和存储秘密的可用性问题

00:10:52.870 --> 00:10:57.490
短语，所以我们真的很想在他们掌握手中时使用它们

00:10:57.490 --> 00:11:02.189
最后更多的用户都是跨平台的，所以我们有库和

00:11:02.189 --> 00:11:10.210
在Android和iOS中运行，并响应本机，JavaScript和golang，因此您可以

00:11:10.210 --> 00:11:14.590
在命令外壳中运行内容，然后您就可以在移动设备上运行内容

00:11:14.590 --> 00:11:18.070
设备，这真的很棒，因为它使它可以从

00:11:18.070 --> 00:11:22.420
迅速将其投放到用户手中的想法，这就是一个例子

00:11:22.420 --> 00:11:27.040
作为我为这个周末建造的一个项目，耗时约五个小时

00:11:27.040 --> 00:11:30.430
这只是一个标记游戏，但如果您考虑一下游戏的属性，

00:11:30.430 --> 00:11:35.290
标记这是一个非常有趣的系统，可以尝试建立一个去中心化的网络

00:11:35.290 --> 00:11:40.270
已经核实了信息交流，您拥有这一系列事件，

00:11:40.270 --> 00:11:44.230
您想知道每一步的状态，所以我们开始思考

00:11:44.230 --> 00:11:49.660
通过这个，我想那就像下午5:00和我的一个同事，我

00:11:49.660 --> 00:11:52.540
在一次对话中，我们说我们应该将其构建为一个移动应用，然后五个

00:11:52.540 --> 00:11:57.070
五小时后，我进行了可行的演示，人们可以互相进行标记

00:11:57.070 --> 00:12:01.030
所以这真的很令人兴奋，它可以让您真正快速地思考并看到

00:12:01.030 --> 00:12:05.020
有可能，然后继续提出更大的想法，这就是很多

00:12:05.020 --> 00:12:08.740
团队现在正在处理纺织品，如果您去我们这里，我们会公开休息

00:12:08.740 --> 00:12:13.840
频道，就算您去悠闲的纺织工地也可以收到邀请

00:12:13.840 --> 00:12:16.630
进入那个频道，我们有一个非常活跃的社区

00:12:16.630 --> 00:12:20.320
分享他们正在建设的内容，并思考诸如如何做

00:12:20.320 --> 00:12:23.950
构建他们的线程以及如何建立互操作性，以便我们拥有人员

00:12:23.950 --> 00:12:29.980
处理健康数据，文件和照片的过程显然更加明显，甚至更多

00:12:29.980 --> 00:12:34.270
这是一件很酷的事情，这是纺织品的快速概览

00:12:34.270 --> 00:12:37.470
那谢谢啦

