WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.539 --> 00:00:05.549
大家好，我叫安德烈·克鲁兹（Andre Cruz）

00:00:05.549 --> 00:00:10.170
将会为您提供有关身份管理使用率的快速演示，真的

00:00:10.170 --> 00:00:15.509
快速身份管理器是一个身份钱包规范，

00:00:15.509 --> 00:00:20.760
在这种情况下采用开放标准，实际上确实是在采用IDS或

00:00:20.760 --> 00:00:27.210
长期以来，集中式标识符和可验证的凭证在

00:00:27.210 --> 00:00:32.520
我们今天看到的同一件事是，我将抛出ID并进行验证

00:00:32.520 --> 00:00:35.760
这些凭证意味着我们今天所看到的可互操作的

00:00:35.760 --> 00:00:39.120
就像登录按钮，例如继续您的端口

00:00:39.120 --> 00:00:44.370
继续博客堆栈，继续进行电信业务，这与以下内容非常相似：

00:00:44.370 --> 00:00:48.480
我们今天使用Google Twitter登录已经拥有的东西起床了

00:00:48.480 --> 00:00:54.360
这样，对于开发人员来说意味着他们需要使用

00:00:54.360 --> 00:00:59.010
不同的SDK集成到他们的网站中，实际上您不知道

00:00:59.010 --> 00:01:05.280
之所以理想，是因为潜在的技术也将成为麻烦的标准

00:01:05.280 --> 00:01:10.110
结果是发生了那件事，因为开发人员喜欢时间

00:01:10.110 --> 00:01:15.570
他们最终会采用捷径，因为只是实现了其中的一些，而我作为一个

00:01:15.570 --> 00:01:20.850
开发人员，我需要真正创建不同的身份

00:01:20.850 --> 00:01:26.970
概念上相同，但是具有不同的ID，所以当我想复制自己的

00:01:26.970 --> 00:01:31.560
所有这些div中的数据，例如我的名字，我的头像和类似的东西

00:01:31.560 --> 00:01:37.470
机制以及所有这些钱包，因此Identity Manager的目标是成为

00:01:37.470 --> 00:01:42.659
将成为一个统一的实体钱包，旨在支持多个ID和

00:01:42.659 --> 00:01:51.960
还有其他方法，所以让我快速展示一下IBM，以便于有趣，所以我们

00:01:51.960 --> 00:01:58.560
这里有很早的被提名人的初稿，具有一些功能，

00:01:58.560 --> 00:02:01.950
我想给你看，所以你看到的第一个屏幕

00:02:01.950 --> 00:02:06.360
这是设置阻止程序屏幕，您需要执行此操作，因为一切

00:02:06.360 --> 00:02:11.220
钱包内的密码已加密，因此您必须选择一个密码短语，但要

00:02:11.220 --> 00:02:14.190
未来希望支持其他锁类型，例如您的触摸

00:02:14.190 --> 00:02:19.800
MacBook Pro甚至500 SV设备中的功能

00:02:19.800 --> 00:02:25.340
所以我们在这里输入密码

00:02:25.520 --> 00:02:31.260
继续，当然您需要选择空闲计时器以使其锁定

00:02:31.260 --> 00:02:37.610
在我链接一段时间后，再次尝试让我们尝试创建一个身份询问

00:02:37.610 --> 00:02:43.500
让我们现在开始创建一个统一体，以便您只需选择自己的身份类型

00:02:43.500 --> 00:02:49.890
是一个人或一个组织或其他为什么还有其他原因，因为即使

00:02:49.890 --> 00:02:55.230
您的猫或狗应该具有身份，因为您的狗有疫苗

00:02:55.230 --> 00:02:59.490
和诸如此类的东西，你想一直加速到你的宠物

00:02:59.490 --> 00:03:05.790
基本上，让我们继续，让我们选择像在这里输入我的名字

00:03:05.790 --> 00:03:13.500
也非常快地跟随，所以继续，现在您要设置您的

00:03:13.500 --> 00:03:19.170
您需要这样做的设备名称，因为在IDM中您喜欢自己的身份，

00:03:19.170 --> 00:03:23.010
您可以拥有与其关联的多个设备，因为现实是

00:03:23.010 --> 00:03:29.010
您现在使用设备使用多台设备，因此我使用笔记本电脑

00:03:29.010 --> 00:03:33.540
将手机和诸如此类的东西放置在桌面上，因此您需要导入自己的身份

00:03:33.540 --> 00:03:37.860
我将能够在多台设备中导入您的身份，所以现在发生了什么

00:03:37.860 --> 00:03:43.709
是IDM现在首先支持原子IP ID，ID方法​​是其第一个

00:03:43.709 --> 00:03:50.160
ID方法，但我们想何时支持其他人，但现在它正在创建IP

00:03:50.160 --> 00:03:55.440
 NS记录，也作为ID文档，键入NS record指向该e ID

00:03:55.440 --> 00:04:00.390
文件，我们会快速检查ID文件及其上下文

00:04:00.390 --> 00:04:06.150
内容，所以现在我们有一个名为IDM wallet的变量，它是

00:04:06.150 --> 00:04:10.620
只是为了开发而公开，在这种情况下仅是为了这个演示而公开，我们有

00:04:10.620 --> 00:04:19.320
例如身份列表，让我们访问第一个身份并获取它

00:04:19.320 --> 00:04:24.810
ID，所以这是我的分散标识符，如果我采用该标识符并尝试

00:04:24.810 --> 00:04:29.850
解决它-理想地记录下来，以便做到

00:04:29.850 --> 00:04:36.660
MDOT解析和字符串，让我们实际上避免使用它，因为它是一个

00:04:36.660 --> 00:04:42.780
保证我们拥有想法文件的版权，您在这里看到的是我有两个

00:04:42.780 --> 00:04:48.270
公钥，因为ID文档本质上具有公钥数组

00:04:48.270 --> 00:04:51.960
您可以随时间变化，在这种情况下，我有我的主密钥

00:04:51.960 --> 00:04:58.800
IP NS密钥，我的设备在我的D ID文档中也有该设备密钥

00:04:58.800 --> 00:05:04.620
是正确的，而且还必须要提到的是，您在

00:05:04.620 --> 00:05:09.230
身份验证数组，意味着该设备可用于身份验证，因此

00:05:09.230 --> 00:05:17.580
让我们快速备份我的身份，所以现在我们只有恶魔般的备份，但是您

00:05:17.580 --> 00:05:23.400
希望现在支持其他更用户友好的备份过程

00:05:23.400 --> 00:05:26.700
让我们去节奏助记符，所以我要复制

00:05:26.700 --> 00:05:34.050
哦，我忘了复制，所以复制到剪贴板上，然后暂时放进去

00:05:34.050 --> 00:05:42.840
通过，所以我需要选择第十个单词，所以我猜龙，第三个

00:05:42.840 --> 00:05:52.110
正确的话是鱼，让我们继续吧，是的-它的安全性意味着

00:05:52.110 --> 00:05:56.520
我的主密钥已从此钱包中删除，我可以通过以下方式对其进行恢复

00:05:56.520 --> 00:06:01.140
使用最小的声音，以便实际上向您显示Nam的使用只是用户

00:06:01.140 --> 00:06:06.510
钱包中IDM规范的接口，现在我可以使用此迷你Manik

00:06:06.510 --> 00:06:11.820
这里将要复制它，我们这里有一个非常粗糙的版本

00:06:11.820 --> 00:06:16.800
另一个使用IDM的钱包，我将尝试在这里导入

00:06:16.800 --> 00:06:22.350
看看它有多快，可能需要一些时间，我们没有任何反馈，所以

00:06:22.350 --> 00:06:28.790
如果网络帮助的话，大概需要五秒钟左右

00:06:30.920 --> 00:06:36.660
好吧，让我们稍等一下，以便它已经解决了IP NS记录

00:06:36.660 --> 00:06:41.490
所以现在有点像复制我拥有的东西

00:06:41.490 --> 00:06:45.960
您可以看到其他设备已连接到该设备，因为它已经完成了，请完成它

00:06:45.960 --> 00:06:51.390
我的照片在那里有我的身份，所以有趣的是，因为

00:06:51.390 --> 00:06:57.210
这些钱包正在被复制，我可以编辑我的个人资料和诸如此类的东西

00:06:57.210 --> 00:07:04.260
无缝同步，所以如果我输入葡萄牙语和我的性别，您就会知道位置

00:07:04.260 --> 00:07:09.270
因为我现在在西班牙，我要把西班牙保存起来，如果你去

00:07:09.270 --> 00:07:16.170
您可以看到另一个钱包已经非常快速地复制，因此

00:07:16.170 --> 00:07:22.230
实际上，如果现在我要再次解决该Eid文件，我们将

00:07:22.230 --> 00:07:30.540
马上看到另一个公钥，因此，如果我再次解决该问题，则需要一些时间

00:07:30.540 --> 00:07:41.760
是的，对不起，您现在可以看到它具有三个公共密钥，因为

00:07:41.760 --> 00:07:46.350
水钱包生成了一个新的设备密钥，该密钥已导入到您的GID中

00:07:46.350 --> 00:07:50.850
文档非常重要，因为现在两个设备都可以用于

00:07:50.850 --> 00:07:55.890
第十次想法和签名之类的东西，所以让我们现在快速

00:07:55.890 --> 00:08:01.530
跳到IDM的两个功能，该功能能够对其进行身份验证，并且

00:08:01.530 --> 00:08:07.410
还可以对应用程序需要签名的任何数据进行签名，所以我们非常喜欢这个草稿

00:08:07.410 --> 00:08:15.000
闭嘴的例子，我们只是为了证明它的功能而设置的

00:08:15.000 --> 00:08:22.020
如果我当然要先输入一些内容，则需要登录并且需要解锁

00:08:22.020 --> 00:08:30.210
筛选钱包，如果我接受我喜欢的这个应用程序，则该穿梭应用程序是

00:08:30.210 --> 00:08:37.169
要求我发送我的个人详细信息，并且我如此亲密，所以如果我接受

00:08:37.169 --> 00:08:41.849
我现在已经登录，发生的事情是钱包创建了一个会话

00:08:41.849 --> 00:08:46.680
在上层和钱包本身之间以及每个之间

00:08:46.680 --> 00:08:51.480
会话是唯一的，它具有唯一的ID，而且如果我打开会话对象，

00:08:51.480 --> 00:08:55.650
看到那里的身份ID和配置文件详细信息

00:08:55.650 --> 00:09:01.230
在我的案例中，schema.org人对象具有我之前填写的详细信息

00:09:01.230 --> 00:09:08.430
现在我可以在镜头中键入消息，如您所见，您就像一个

00:09:08.430 --> 00:09:14.820
复选标记，它表示我产生了一个已针对

00:09:14.820 --> 00:09:19.290
DLA文档密钥公钥是其中之一，因此让我尝试解释一下

00:09:19.290 --> 00:09:24.930
发生了，所以每当我键入该消息时，都会像这样生成应用程序

00:09:24.930 --> 00:09:30.600
与该镜头消息相关联的JSON对象，就像作者一样

00:09:30.600 --> 00:09:35.340
它像签名一样带有文本和时间戳，最重要的部分是

00:09:35.340 --> 00:09:40.530
签名，所以让我获得更多空间供您查看，以便签名

00:09:40.530 --> 00:09:48.210
本身那里有Adi Adi to RL，如果您查看的话，那只是我的D ID和

00:09:48.210 --> 00:09:53.820
指向用于签名但由于我使用了

00:09:53.820 --> 00:09:59.520
会话密钥来签名，不是用我的设备私钥直接签名

00:09:59.520 --> 00:10:04.680
而是使用Shia键（基本上是我们称之为会话键）

00:10:04.680 --> 00:10:11.700
因此会话密钥是设备密钥的子密钥，并派生出这些子密钥

00:10:11.700 --> 00:10:18.330
会话密钥，您可以在此处使用此密钥路径，该路径使用VIP 32来获取它，并且

00:10:18.330 --> 00:10:22.490
那么您只需要检查值字段上的签名

00:10:22.490 --> 00:10:28.040
针对原始消息中正确生成的消息存储

00:10:28.040 --> 00:10:34.440
因此，如果您不看它，我们就像没有任何我们知道的东西一样签名

00:10:34.440 --> 00:10:39.420
提示用户一切正常，所以这一切都发生在路的尽头

00:10:39.420 --> 00:10:45.630
这里要权衡的是，会话密钥不在存储或查看时不存在

00:10:45.630 --> 00:10:51.930
以纯原始文本格式存储在钱包中的应用，这意味着

00:10:51.930 --> 00:10:56.010
它们是未加密的，因此对于诸如

00:10:56.010 --> 00:10:59.670
消息很好，但是如果您需要更高的安全性，则可以

00:10:59.670 --> 00:11:03.840
要求使用您的设备密钥签名并使用您的设备密钥签名

00:11:03.840 --> 00:11:10.170
如果您输入的内容类似于包含IP的内容，则在此示例中将关闭一个复活节彩蛋

00:11:10.170 --> 00:11:14.250
在这种情况下，我要在FS上键入我喜欢的事务，它实际上会提示

00:11:14.250 --> 00:11:19.440
用您的设备密钥正确签名，并且由于设备密钥是加密的，

00:11:19.440 --> 00:11:25.440
需要把我的密码短语放在那里，所以您看到的就像是屏幕好吧，有些东西是

00:11:25.440 --> 00:11:32.610
滚动条有问题，但请忽略它，您所看到的就像是

00:11:32.610 --> 00:11:37.440
在这种情况下，IDM要求我授权

00:11:37.440 --> 00:11:41.640
签名，如您所见，您会在时间戳上看到评论，所以我

00:11:41.640 --> 00:11:48.060
要签名，如果我接受，会看到产生了相同类型的签名

00:11:48.060 --> 00:11:52.230
但这唯一的区别是关键部分实际上是根路径

00:11:52.230 --> 00:11:57.780
因此，这意味着无需导出密钥，因为该设备

00:11:57.780 --> 00:12:02.160
私钥直接用于签名，因此您可以看到我们已经拥有了这些

00:12:02.160 --> 00:12:06.300
对DUP开发人员非常有用的功能，因此基本上您可以拥有

00:12:06.300 --> 00:12:10.680
身份验证，您可以使用会话密钥进行签名，也可以

00:12:10.680 --> 00:12:14.910
与您的设备密钥一起使用，并且所有这些都使用ID且可验证

00:12:14.910 --> 00:12:21.960
凭证，因此在将来我们会像我所说的那样支持更多数据方法

00:12:21.960 --> 00:12:27.030
并且它们会随着时间的推移而增加，而且我们也非常密切地关注开放

00:12:27.030 --> 00:12:32.040
标准，例如ID以及其他凭证

00:12:32.040 --> 00:12:40.290
处理程序API，这是非常好的即将发布的API，我们可以在将来使用

00:12:40.290 --> 00:12:45.750
最后，让我快速展示一个我们为您打造的网站

00:12:45.750 --> 00:12:50.100
检查并了解有关该项目的更多信息，所以我们就像Nam一样，去Nam使用那个

00:12:50.100 --> 00:12:55.200
我知道我们喜欢这个很酷的网站，您可以在其中阅读和了解

00:12:55.200 --> 00:12:59.970
有关项目的更多信息，如果您有兴趣，您可以加入我们

00:12:59.970 --> 00:13:05.580
邮件列表每月都会发送，就像电子邮件一样发送更新

00:13:05.580 --> 00:13:09.870
我们为该项目准备的，或者即使您有兴趣贡献或

00:13:09.870 --> 00:13:13.990
即使您在项目中使用它，也只需订阅并

00:13:13.990 --> 00:13:19.710
您将与您取得联系，我想就这些，谢谢

