WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.550 --> 00:00:08.610
大家好，我知道这已经是很晚了，我希望能快点做，所以我

00:00:08.610 --> 00:00:17.359
我叫布伦南（Brennan），我们负责查询工作，我们负责分布式数据集版本控制，我是

00:00:17.359 --> 00:00:24.689
那个受欢迎的谢谢，是的，所以我们致力于

00:00:24.689 --> 00:00:28.560
我们已经在查询中使用这个东西很久了，您认为是

00:00:28.560 --> 00:00:32.910
基本上只是我们DAG的接收器，对于我们来说，这是我们必须构建的东西

00:00:32.910 --> 00:00:37.079
只是为了解决我们堆栈内部的一个非常具体的问题，

00:00:37.079 --> 00:00:40.649
今天，我想向您介绍的是一种努力，采取一些措施

00:00:40.649 --> 00:00:45.120
我们了解并理想地与社区分享，所以这是我们的

00:00:45.120 --> 00:00:50.219
问题只是我的IPF的Reid fest ipfs repo中有东西，我知道我在哪里

00:00:50.219 --> 00:00:57.059
需要它去只是把它放在那儿我不在乎你怎么做我不想

00:00:57.059 --> 00:01:04.320
问你是怎么回事，那只是一个纯B到那儿走了，我不是，我主要是

00:01:04.320 --> 00:01:08.670
在D网中，当我们

00:01:08.670 --> 00:01:13.920
我们拥有这样的建筑产品，例如内容分辨率乘以兄弟卡车

00:01:13.920 --> 00:01:18.060
nat遍历问题，就像阻碍能力的东西一样

00:01:18.060 --> 00:01:21.270
只是说我有一件事情我想去那边，我想和我一样快

00:01:21.270 --> 00:01:25.560
对人类来说是可能的，因此对于我们来说，我们想要寻找的只是

00:01:25.560 --> 00:01:29.670
这一点到一点，所以我们有一些不同之处

00:01:29.670 --> 00:01:34.380
就像传统的神奇，我在ipfs中说传统一样，基础很多

00:01:34.380 --> 00:01:37.409
像是内容分辨率，我喜欢跟这个人群说话，就像是

00:01:37.409 --> 00:01:42.090
新规范，所以我们只讨论点对点设置，因此我们要

00:01:42.090 --> 00:01:46.380
利用我们知道与比特交换有非常不同的问题集这一事实

00:01:46.380 --> 00:01:50.189
现在，我们可以利用不同的一组

00:01:50.189 --> 00:01:55.470
约束并解决一些不同的解决方案，所以我们在同步时所做的事情

00:01:55.470 --> 00:01:59.340
与您传统的位交换运动不同，我们设置了

00:01:59.340 --> 00:02:02.640
事先进行的对话与我们利用区块的同步非常相似

00:02:02.640 --> 00:02:06.600
进行同步，因为如果您查看砷算法，

00:02:06.600 --> 00:02:09.450
实际上是滚动校验和计算而不是电弧计算，所以您正在做

00:02:09.450 --> 00:02:13.290
动态内容寻址以正确进行同步

00:02:13.290 --> 00:02:16.530
但是我们已经在谈论沉没奇迹DAG，所以我们没有

00:02:16.530 --> 00:02:21.000
这个问题我们可以从块本身开始

00:02:21.000 --> 00:02:23.280
不想发送我们已经拥有的东西，所以我们希望那种对话

00:02:23.280 --> 00:02:25.680
事前发生，如果可以的话，我们不想在网上复制东西

00:02:25.680 --> 00:02:29.849
避免它，因为我们又想快一点，然后我们只想退却

00:02:29.849 --> 00:02:34.530
多种方法（如果需要）在我们最初的工作中有肮脏的秘密

00:02:34.530 --> 00:02:37.620
您是否认为这是最初的实施，直到今天

00:02:37.620 --> 00:02:41.909
通过HTTP操作，所以我们实际上很喜欢从您的仓库中取出块

00:02:41.909 --> 00:02:47.459
通过HTTP将它们发送到HTTP服务器，然后将它们存储在

00:02:47.459 --> 00:02:53.190
另一方面，它实际上比听起来更好，我们会得到

00:02:53.190 --> 00:02:57.569
进入为什么为什么要一秒钟，但是是的，我们要尽早失败，所以我必须更快地行动

00:02:57.569 --> 00:03:01.620
我们将其作为IP FS插件来完成，我认为这就像我们想要的那样

00:03:01.620 --> 00:03:05.040
有了这个，你就可以了，因为这就是它属于我们的地方

00:03:05.040 --> 00:03:08.940
像这样的形状通常只是一种不错的推动力

00:03:08.940 --> 00:03:13.889
这把那个ID放在那边，希望这个作品我录制了一个演示

00:03:13.889 --> 00:03:18.060
在左边，我们有一个人在使用哦，是的，我会和

00:03:18.060 --> 00:03:22.949
这就是我们要做的，所以我像往常一样是左鲍勃的爱丽丝，和往常一样是爱丽丝，所以我要

00:03:22.949 --> 00:03:27.660
别在这边别无所求，然后在右边我是鲍勃（Bob）

00:03:27.660 --> 00:03:31.680
那Kerr ID和我有固定好的东西，我想推些东西

00:03:31.680 --> 00:03:36.599
从Bob到Alice，所以我要运行IGFs守护程序哦，我会弄错的，

00:03:36.599 --> 00:03:39.750
然后我要输入我的PFS守护程序，然后您会在其中看到一些有趣的东西

00:03:39.750 --> 00:03:43.079
全新，此Dsync插件已启动，因为该新插件API确实

00:03:43.079 --> 00:03:45.989
很酷，您应该完全检查它是否存在，然后我们有一个非常

00:03:45.989 --> 00:03:49.410
简单的命令行包装程序，就像取消同步一样，然后您认为

00:03:49.410 --> 00:03:52.889
允许，所以我必须对此有所信任，所以我要说我想允许

00:03:52.889 --> 00:03:58.260
鲍勃给我发了个重要警告，所以鲍勃现在在允许的名单上

00:03:58.260 --> 00:04:03.690
爱丽丝的故事，所以我只想说把它推到那个，我们就完成了

00:04:03.690 --> 00:04:08.220
这样就搞清楚了，把它移到了嘴唇p2p的那边，那是

00:04:08.220 --> 00:04:12.569
也在我的本地计算机上，所以就像您的大脑中模拟的延迟一样，是的，

00:04:12.569 --> 00:04:19.859
我们的工作原理与众不同，是的，是的，我必须单击此按钮，但是其中有一些

00:04:19.859 --> 00:04:24.210
像这里的问题，这是代码所在的位置，因此您可以签出，但是

00:04:24.210 --> 00:04:29.590
这主要是批准概念，我不得不派一个PFS向其中添加一些东西

00:04:29.590 --> 00:04:34.600
基本上应该讨论的核心API我们需要访问Lib p2p

00:04:34.600 --> 00:04:37.750
在插件内部，我们必须到达主机，这是一个问题

00:04:37.750 --> 00:04:42.670
标记这是否应该还可以，所以对我来说，像这样谢谢你，也这样

00:04:42.670 --> 00:04:45.100
邀请您就应该使用哪些插件进行一次非常有趣的对话

00:04:45.100 --> 00:04:49.270
做到这一点，我真的很兴奋，所以如果您想做一个不寻常的事情，

00:04:49.270 --> 00:04:53.170
如果您不想这样做，那就别跟我说话，或者问我如何做

00:04:53.170 --> 00:04:58.560
我的日子快要过去了，我不知道是的，谢谢

