WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:06.960
您好，我们可以使用IP FS来进行数据包管理吗？

00:00:06.960 --> 00:00:15.120
 2019年今天谢谢你，所以昨天我们有一个工作组和一个特别

00:00:15.120 --> 00:00:19.199
兴趣小组，所以有点混搭，所以我只关注极客

00:00:19.199 --> 00:00:25.890
在这里，我将要讨论实现的特殊性

00:00:25.890 --> 00:00:32.309
我们和演员讨论过，所以实际上已经有一个实现了

00:00:32.309 --> 00:00:35.690
在那里，Ludovico对维护者极客进行了测试

00:00:35.690 --> 00:00:40.260
发布者补丁大约六个月前了，我们进行了测试，它实际上可以正常工作

00:00:40.260 --> 00:00:44.640
挺酷的，但是有一些缺点需要解决

00:00:44.640 --> 00:00:50.489
已解决，所以这里没有被合并，所以我的主要护理人员在这里，怎么办

00:00:50.489 --> 00:00:56.340
我们存储您的软件包，如果我们将其存储为ipfs上的turbo或文件

00:00:56.340 --> 00:01:02.820
因此，我们偷了一个涡轮增压器，然后我们希望从双重性中受益，所以我们

00:01:02.820 --> 00:01:09.570
想要使用涡轮分块器，但是NK自我更新的顶部不是很好

00:01:09.570 --> 00:01:13.260
保持，我们不仅与您生产，因为如果我们组装

00:01:13.260 --> 00:01:16.200
块，而我们在那个问题上没有得到相同的表，我们只能

00:01:16.200 --> 00:01:21.060
用这个词，所以我们需要在涡轮机组块中工作，也许不行，或者只是使用

00:01:21.060 --> 00:01:26.280
简单一些的软件包管理的另一个主要问题是

00:01:26.280 --> 00:01:30.960
例如，您需要在唯一表面上不需要的元数据

00:01:30.960 --> 00:01:36.060
发现可执行文件是可执行文件，我认为大多数程序包中的大多数数据包

00:01:36.060 --> 00:01:43.799
经理们需要的，这意味着我们需要将其存储在某个地方，所以我认为您

00:01:43.799 --> 00:01:48.380
想解释唯一的元数据，它必须是任何东西

00:01:49.070 --> 00:01:54.119
基本上唯一的表面v1不允许您指定文件的生成时间

00:01:54.119 --> 00:01:58.890
可执行文件，因此当您从ipfs中提取该文件并将其放在此队列中时，

00:01:58.890 --> 00:02:06.740
据我所知，这是一个面向极客的程序

00:02:06.740 --> 00:02:12.470
因此，如果我们不这样做，那么实际建议

00:02:12.470 --> 00:02:20.770
所以也许IBF也是一个PFS，对不起太监FSB-是kasha，所以我请回答

00:02:20.770 --> 00:02:26.300
[掌声]

