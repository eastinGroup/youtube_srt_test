WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:03.350 align:start position:0%
 
hi<00:00:00.570><c> everyone</c><00:00:00.900><c> today</c><00:00:01.700><c> we</c><00:00:02.700><c> are</c><00:00:02.879><c> very</c><00:00:03.030><c> interested</c>

00:00:03.350 --> 00:00:03.360 align:start position:0%
hi everyone today we are very interested
 

00:00:03.360 --> 00:00:07.970 align:start position:0%
hi everyone today we are very interested
in<00:00:03.780><c> the</c><00:00:03.870><c> scalability</c><00:00:04.440><c> of</c><00:00:04.470><c> ipfs</c><00:00:05.220><c> so</c><00:00:06.980><c> the</c>

00:00:07.970 --> 00:00:07.980 align:start position:0%
in the scalability of ipfs so the
 

00:00:07.980 --> 00:00:10.129 align:start position:0%
in the scalability of ipfs so the
problem<00:00:08.490><c> is</c><00:00:08.639><c> it's</c><00:00:09.240><c> different</c><00:00:09.599><c> to</c><00:00:09.960><c> the</c>

00:00:10.129 --> 00:00:10.139 align:start position:0%
problem is it's different to the
 

00:00:10.139 --> 00:00:12.379 align:start position:0%
problem is it's different to the
scalability<00:00:10.650><c> in</c><00:00:10.830><c> the</c><00:00:11.490><c> blockchains</c><00:00:11.940><c> so</c>

00:00:12.379 --> 00:00:12.389 align:start position:0%
scalability in the blockchains so
 

00:00:12.389 --> 00:00:15.289 align:start position:0%
scalability in the blockchains so
actually<00:00:12.990><c> our</c><00:00:13.019><c> basic</c><00:00:13.559><c> question</c><00:00:13.980><c> is</c><00:00:14.340><c> let's</c><00:00:15.150><c> say</c>

00:00:15.289 --> 00:00:15.299 align:start position:0%
actually our basic question is let's say
 

00:00:15.299 --> 00:00:18.680 align:start position:0%
actually our basic question is let's say
if<00:00:15.599><c> we</c><00:00:16.080><c> have</c><00:00:16.230><c> 100</c><00:00:16.980><c> gigabytes</c><00:00:17.730><c> files</c><00:00:18.060><c> to</c><00:00:18.420><c> store</c>

00:00:18.680 --> 00:00:18.690 align:start position:0%
if we have 100 gigabytes files to store
 

00:00:18.690 --> 00:00:21.380 align:start position:0%
if we have 100 gigabytes files to store
a<00:00:18.869><c> 100</c><00:00:19.320><c> gigabyte</c><00:00:19.619><c> bag</c><00:00:19.890><c> so</c><00:00:20.550><c> how</c><00:00:20.789><c> we</c><00:00:20.850><c> can</c><00:00:20.939><c> storing</c>

00:00:21.380 --> 00:00:21.390 align:start position:0%
a 100 gigabyte bag so how we can storing
 

00:00:21.390 --> 00:00:23.840 align:start position:0%
a 100 gigabyte bag so how we can storing
ipfs<00:00:21.900><c> with</c><00:00:22.410><c> the</c><00:00:22.650><c> space</c><00:00:23.039><c> constraint</c><00:00:23.580><c> of</c><00:00:23.670><c> each</c>

00:00:23.840 --> 00:00:23.850 align:start position:0%
ipfs with the space constraint of each
 

00:00:23.850 --> 00:00:25.730 align:start position:0%
ipfs with the space constraint of each
node<00:00:24.150><c> is</c><00:00:24.720><c> 10</c><00:00:25.230><c> gigabyte</c>

00:00:25.730 --> 00:00:25.740 align:start position:0%
node is 10 gigabyte
 

00:00:25.740 --> 00:00:30.290 align:start position:0%
node is 10 gigabyte
so<00:00:26.099><c> we</c><00:00:26.910><c> consider</c><00:00:27.300><c> to</c><00:00:27.599><c> use</c><00:00:27.869><c> a</c><00:00:28.289><c> sharding</c><00:00:29.039><c> that</c><00:00:29.880><c> we</c>

00:00:30.290 --> 00:00:30.300 align:start position:0%
so we consider to use a sharding that we
 

00:00:30.300 --> 00:00:32.389 align:start position:0%
so we consider to use a sharding that we
partition<00:00:30.810><c> the</c><00:00:31.050><c> dag</c><00:00:31.289><c> into</c><00:00:31.740><c> a</c><00:00:31.769><c> several</c><00:00:32.219><c> nodes</c>

00:00:32.389 --> 00:00:32.399 align:start position:0%
partition the dag into a several nodes
 

00:00:32.399 --> 00:00:35.600 align:start position:0%
partition the dag into a several nodes
and<00:00:33.410><c> let's</c><00:00:34.410><c> say</c><00:00:34.559><c> if</c><00:00:34.710><c> the</c><00:00:34.860><c> node</c><00:00:35.040><c> is</c><00:00:35.070><c> lack</c><00:00:35.460><c> of</c>

00:00:35.600 --> 00:00:35.610 align:start position:0%
and let's say if the node is lack of
 

00:00:35.610 --> 00:00:37.819 align:start position:0%
and let's say if the node is lack of
storage<00:00:35.880><c> and</c><00:00:36.149><c> it</c><00:00:36.480><c> is</c><00:00:36.630><c> not</c><00:00:36.809><c> enough</c><00:00:37.200><c> for</c><00:00:37.410><c> them</c><00:00:37.530><c> to</c>

00:00:37.819 --> 00:00:37.829 align:start position:0%
storage and it is not enough for them to
 

00:00:37.829 --> 00:00:40.010 align:start position:0%
storage and it is not enough for them to
store<00:00:38.040><c> the</c><00:00:38.160><c> Hodag</c><00:00:38.579><c> he</c><00:00:39.329><c> will</c><00:00:39.510><c> partitions</c>

00:00:40.010 --> 00:00:40.020 align:start position:0%
store the Hodag he will partitions
 

00:00:40.020 --> 00:00:41.869 align:start position:0%
store the Hodag he will partitions
attack<00:00:40.350><c> intercept</c><00:00:40.770><c> a</c><00:00:40.800><c> disjoint</c><00:00:41.250><c> part</c><00:00:41.520><c> and</c>

00:00:41.869 --> 00:00:41.879 align:start position:0%
attack intercept a disjoint part and
 

00:00:41.879 --> 00:00:47.119 align:start position:0%
attack intercept a disjoint part and
share<00:00:42.870><c> the</c><00:00:43.500><c> chars</c><00:00:44.070><c> to</c><00:00:44.399><c> other</c><00:00:44.610><c> nodes</c><00:00:46.129><c> we</c>

00:00:47.119 --> 00:00:47.129 align:start position:0%
share the chars to other nodes we
 

00:00:47.129 --> 00:00:49.069 align:start position:0%
share the chars to other nodes we
consider<00:00:47.610><c> two</c><00:00:47.789><c> problems</c><00:00:48.270><c> the</c><00:00:48.809><c> first</c><00:00:48.960><c> problem</c>

00:00:49.069 --> 00:00:49.079 align:start position:0%
consider two problems the first problem
 

00:00:49.079 --> 00:00:55.490 align:start position:0%
consider two problems the first problem
is<00:00:49.559><c> that</c><00:00:49.860><c> how</c><00:00:50.489><c> we</c><00:00:50.550><c> can</c><00:00:50.989><c> shard</c><00:00:52.370><c> evenly</c><00:00:53.719><c> so</c><00:00:54.719><c> we</c>

00:00:55.490 --> 00:00:55.500 align:start position:0%
is that how we can shard evenly so we
 

00:00:55.500 --> 00:00:58.360 align:start position:0%
is that how we can shard evenly so we
gave<00:00:55.920><c> a</c><00:00:55.980><c> solution</c><00:00:56.699><c> that</c><00:00:57.030><c> maybe</c><00:00:57.390><c> we</c><00:00:57.570><c> can</c><00:00:57.719><c> use</c>

00:00:58.360 --> 00:00:58.370 align:start position:0%
gave a solution that maybe we can use
 

00:00:58.370 --> 00:01:03.860 align:start position:0%
gave a solution that maybe we can use
DFS<00:00:59.370><c> so</c><00:01:00.180><c> you</c><00:01:00.930><c> download</c><00:01:01.109><c> the</c><00:01:01.500><c> Hodag</c><00:01:01.890><c> and</c><00:01:02.870><c> you</c>

00:01:03.860 --> 00:01:03.870 align:start position:0%
DFS so you download the Hodag and you
 

00:01:03.870 --> 00:01:08.210 align:start position:0%
DFS so you download the Hodag and you
you<00:01:04.739><c> run</c><00:01:04.979><c> a</c><00:01:05.159><c> DFS</c><00:01:05.580><c> algorithm</c><00:01:06.150><c> and</c><00:01:06.420><c> you</c><00:01:07.320><c> can</c><00:01:07.619><c> just</c>

00:01:08.210 --> 00:01:08.220 align:start position:0%
you run a DFS algorithm and you can just
 

00:01:08.220 --> 00:01:11.000 align:start position:0%
you run a DFS algorithm and you can just
directly<00:01:09.090><c> run</c><00:01:09.390><c> a</c><00:01:09.450><c> difference</c><00:01:09.900><c> algorithm</c><00:01:10.619><c> and</c>

00:01:11.000 --> 00:01:11.010 align:start position:0%
directly run a difference algorithm and
 

00:01:11.010 --> 00:01:14.090 align:start position:0%
directly run a difference algorithm and
count<00:01:11.310><c> the</c><00:01:11.549><c> total</c><00:01:11.729><c> space</c><00:01:12.090><c> the</c><00:01:12.689><c> total</c><00:01:12.990><c> size</c><00:01:13.200><c> so</c>

00:01:14.090 --> 00:01:14.100 align:start position:0%
count the total space the total size so
 

00:01:14.100 --> 00:01:15.830 align:start position:0%
count the total space the total size so
when<00:01:14.280><c> the</c><00:01:14.430><c> space</c><00:01:14.670><c> is</c><00:01:14.700><c> full</c><00:01:15.090><c> you</c><00:01:15.330><c> can</c><00:01:15.360><c> select</c>

00:01:15.830 --> 00:01:15.840 align:start position:0%
when the space is full you can select
 

00:01:15.840 --> 00:01:20.390 align:start position:0%
when the space is full you can select
two<00:01:16.170><c> you</c><00:01:16.830><c> can</c><00:01:16.979><c> select</c><00:01:17.340><c> this</c><00:01:17.610><c> sub</c><00:01:17.970><c> tag</c><00:01:18.240><c> and</c><00:01:18.710><c> as</c><00:01:19.710><c> a</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
two you can select this sub tag and as a
 

00:01:20.400 --> 00:01:25.249 align:start position:0%
two you can select this sub tag and as a
shard<00:01:20.810><c> the</c><00:01:21.810><c> third</c><00:01:22.080><c> problem</c><00:01:22.500><c> is</c><00:01:22.799><c> that</c><00:01:23.869><c> is</c><00:01:24.869><c> that</c>

00:01:25.249 --> 00:01:25.259 align:start position:0%
shard the third problem is that is that
 

00:01:25.259 --> 00:01:27.410 align:start position:0%
shard the third problem is that is that
when<00:01:25.530><c> you</c><00:01:25.560><c> pin</c><00:01:25.950><c> on</c><00:01:26.130><c> a</c><00:01:26.220><c> PFS</c><00:01:26.580><c> actually</c><00:01:27.180><c> you</c>

00:01:27.410 --> 00:01:27.420 align:start position:0%
when you pin on a PFS actually you
 

00:01:27.420 --> 00:01:30.260 align:start position:0%
when you pin on a PFS actually you
recursively<00:01:27.869><c> pin</c><00:01:28.500><c> their</c><00:01:28.920><c> children</c><00:01:29.460><c> so</c><00:01:29.939><c> if</c><00:01:30.180><c> you</c>

00:01:30.260 --> 00:01:30.270 align:start position:0%
recursively pin their children so if you
 

00:01:30.270 --> 00:01:32.810 align:start position:0%
recursively pin their children so if you
pin<00:01:30.570><c> the</c><00:01:31.049><c> whole</c><00:01:31.290><c> tag</c><00:01:31.530><c> will</c><00:01:31.799><c> be</c><00:01:31.920><c> added</c><00:01:32.250><c> how</c><00:01:32.759><c> to</c>

00:01:32.810 --> 00:01:32.820 align:start position:0%
pin the whole tag will be added how to
 

00:01:32.820 --> 00:01:34.789 align:start position:0%
pin the whole tag will be added how to
solve<00:01:33.150><c> it</c><00:01:33.360><c> how</c><00:01:33.659><c> to</c><00:01:33.720><c> solve</c><00:01:34.020><c> this</c><00:01:34.140><c> problem</c><00:01:34.259><c> on</c>

00:01:34.789 --> 00:01:34.799 align:start position:0%
solve it how to solve this problem on
 

00:01:34.799 --> 00:01:36.740 align:start position:0%
solve it how to solve this problem on
shouting<00:01:35.070><c> we</c><00:01:35.640><c> provide</c><00:01:36.030><c> another</c><00:01:36.390><c> solution</c>

00:01:36.740 --> 00:01:36.750 align:start position:0%
shouting we provide another solution
 

00:01:36.750 --> 00:01:39.890 align:start position:0%
shouting we provide another solution
that<00:01:37.079><c> maybe</c><00:01:37.710><c> we</c><00:01:37.860><c> can</c><00:01:38.009><c> use</c><00:01:38.189><c> a</c><00:01:38.220><c> dummy</c><00:01:38.759><c> age</c><00:01:39.060><c> let's</c>

00:01:39.890 --> 00:01:39.900 align:start position:0%
that maybe we can use a dummy age let's
 

00:01:39.900 --> 00:01:43.760 align:start position:0%
that maybe we can use a dummy age let's
say<00:01:40.140><c> each</c><00:01:40.680><c> time</c><00:01:41.040><c> we</c><00:01:41.430><c> partition</c><00:01:42.000><c> a</c><00:01:42.119><c> dag</c><00:01:42.770><c> we</c>

00:01:43.760 --> 00:01:43.770 align:start position:0%
say each time we partition a dag we
 

00:01:43.770 --> 00:01:47.690 align:start position:0%
say each time we partition a dag we
change<00:01:44.130><c> the</c><00:01:44.430><c> age</c><00:01:44.610><c> between</c><00:01:44.970><c> chars</c><00:01:46.520><c> to</c><00:01:47.520><c> be</c><00:01:47.670><c> a</c>

00:01:47.690 --> 00:01:47.700 align:start position:0%
change the age between chars to be a
 

00:01:47.700 --> 00:01:50.060 align:start position:0%
change the age between chars to be a
dummy<00:01:48.060><c> age</c><00:01:48.329><c> that</c><00:01:48.869><c> is</c><00:01:49.079><c> when</c><00:01:49.409><c> you</c><00:01:49.500><c> pin</c><00:01:49.799><c> you</c>

00:01:50.060 --> 00:01:50.070 align:start position:0%
dummy age that is when you pin you
 

00:01:50.070 --> 00:01:52.910 align:start position:0%
dummy age that is when you pin you
ignore<00:01:50.460><c> this</c><00:01:50.729><c> age</c><00:01:51.030><c> but</c><00:01:51.659><c> when</c><00:01:52.020><c> you</c><00:01:52.140><c> cat</c><00:01:52.439><c> urine</c>

00:01:52.910 --> 00:01:52.920 align:start position:0%
ignore this age but when you cat urine
 

00:01:52.920 --> 00:01:57.380 align:start position:0%
ignore this age but when you cat urine
and<00:01:53.280><c> a</c><00:01:53.369><c> PFS</c><00:01:53.700><c> cat</c><00:01:53.990><c> you</c><00:01:54.990><c> recursively</c><00:01:55.880><c> cat</c><00:01:56.880><c> the</c>

00:01:57.380 --> 00:01:57.390 align:start position:0%
and a PFS cat you recursively cat the
 

00:01:57.390 --> 00:02:01.010 align:start position:0%
and a PFS cat you recursively cat the
the<00:01:58.079><c> the</c><00:01:58.259><c> data</c><00:01:58.469><c> to</c><00:01:59.310><c> the</c><00:01:59.340><c> the</c><00:02:00.299><c> data</c><00:02:00.479><c> of</c><00:02:00.719><c> the</c><00:02:00.869><c> age</c>

00:02:01.010 --> 00:02:01.020 align:start position:0%
the the data to the the data of the age
 

00:02:01.020 --> 00:02:02.859 align:start position:0%
the the data to the the data of the age
and<00:02:01.380><c> finally</c><00:02:02.040><c> you</c><00:02:02.159><c> can</c><00:02:02.310><c> download</c><00:02:02.549><c> the</c><00:02:02.790><c> whole</c>

00:02:02.859 --> 00:02:02.869 align:start position:0%
and finally you can download the whole
 

00:02:02.869 --> 00:02:10.160 align:start position:0%
and finally you can download the whole
data<00:02:03.869><c> on</c><00:02:04.320><c> the</c><00:02:04.799><c> dag</c><00:02:05.240><c> yeah</c><00:02:06.240><c> thank</c><00:02:06.810><c> you</c>

00:02:10.160 --> 00:02:10.170 align:start position:0%
 
 

00:02:10.170 --> 00:02:13.290 align:start position:0%
 
we<00:02:11.170><c> also</c><00:02:11.410><c> made</c><00:02:11.890><c> some</c><00:02:11.920><c> he</c><00:02:12.820><c> made</c><00:02:13.030><c> some</c>

00:02:13.290 --> 00:02:13.300 align:start position:0%
we also made some he made some
 

00:02:13.300 --> 00:02:16.350 align:start position:0%
we also made some he made some
magnificent<00:02:14.640><c> drawings</c><00:02:15.640><c> for</c><00:02:15.940><c> you</c><00:02:16.030><c> to</c><00:02:16.180><c> see</c>

00:02:16.350 --> 00:02:16.360 align:start position:0%
magnificent drawings for you to see
 

00:02:16.360 --> 00:02:20.310 align:start position:0%
magnificent drawings for you to see
please<00:02:17.020><c> consider</c><00:02:17.410><c> the</c><00:02:18.310><c> deep</c><00:02:18.760><c> dive</c><00:02:18.940><c> jury</c><00:02:19.320><c> we're</c>

00:02:20.310 --> 00:02:20.320 align:start position:0%
please consider the deep dive jury we're
 

00:02:20.320 --> 00:02:23.460 align:start position:0%
please consider the deep dive jury we're
very<00:02:20.620><c> interested</c><00:02:20.920><c> in</c><00:02:21.990><c> thank</c><00:02:22.990><c> you</c><00:02:23.080><c> very</c><00:02:23.230><c> much</c>

00:02:23.460 --> 00:02:23.470 align:start position:0%
very interested in thank you very much
 

00:02:23.470 --> 00:02:30.060 align:start position:0%
very interested in thank you very much
thank<00:02:24.040><c> you</c><00:02:24.070><c> thank</c><00:02:27.060><c> you</c>

