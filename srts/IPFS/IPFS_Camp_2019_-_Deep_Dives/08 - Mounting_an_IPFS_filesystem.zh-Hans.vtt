WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.100 --> 00:00:06.390
好吧，简短而甜蜜的我们正在尝试介绍FS和ipfs以及好消息

00:00:06.390 --> 00:00:12.480
已经有一个实现，所以谢谢你晚安，那是什么

00:00:12.480 --> 00:00:15.780
当前实现的问题是，我们要做的一件事是

00:00:15.780 --> 00:00:19.410
认为我们要支持不同的平台，我们

00:00:19.410 --> 00:00:22.470
只是没有这种覆盖面，所以在基线时我们想

00:00:22.470 --> 00:00:27.150
增加这种覆盖率我们得到的主要抱怨是绩效

00:00:27.150 --> 00:00:31.820
这也是我们计划要解决的问题

00:00:31.820 --> 00:00:35.910
在这些标准上，显然有一些我们正在尝试的观点

00:00:35.910 --> 00:00:41.250
实现并与之互操作，如果您有任何UNIX朋友

00:00:41.250 --> 00:00:46.170
周围问他们一段时间的意见，我们将如何在非常时期内做到这一点

00:00:46.170 --> 00:00:50.489
短期来说，我认为我们在深潜中所做的事情确实会

00:00:50.489 --> 00:00:54.570
文件系统和操作系统的研究以及它们如何工作

00:00:54.570 --> 00:00:59.039
自身以及它们如何与其他系统互操作，因此我们介绍了

00:00:59.039 --> 00:01:04.049
其中很多，我认为记下其中一些笔记并进行研究和按摩

00:01:04.049 --> 00:01:07.470
在其中易于消化的东西非常重要，因此在短期内

00:01:07.470 --> 00:01:10.470
我们将采用它并将其推出并尝试启动

00:01:10.470 --> 00:01:14.189
与人讨论和互动，看看他们的痛点是什么，以及如何

00:01:14.189 --> 00:01:18.689
我们可以缓解那些我们想基本解决的长期问题

00:01:18.689 --> 00:01:22.650
这个虚拟文件系统界面位于

00:01:22.650 --> 00:01:29.390
您可以从组成子文件系统，并且基本上具有这些类型的子文件系统

00:01:29.390 --> 00:01:33.360
将这些意见标准化并整理成关于您将如何处理的意见

00:01:33.360 --> 00:01:38.310
就像系统运行一样，这给了我们很大的灵活性，

00:01:38.310 --> 00:01:43.020
允许我们通过缓存来缓解其中一些性能问题

00:01:43.020 --> 00:01:48.720
连贯性，但不放弃灵活性和类似性质的东西，因此

00:01:48.720 --> 00:01:51.560
它的长短

00:01:52.650 --> 00:01:56.180
你[鼓掌]

