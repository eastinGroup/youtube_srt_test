WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.599 --> 00:00:06.240
所以我们讨论了如何扩展DHT是的，真正的三个问题DC

00:00:06.240 --> 00:00:10.469
目前解决ipfs是纯路由，这就是您如何找到一个

00:00:10.469 --> 00:00:14.340
网络内容路由上的特定对，您如何查找谁拥有

00:00:14.340 --> 00:00:21.390
我要查找的内容，然后我PNS，所以最新的文件或对象是什么

00:00:21.390 --> 00:00:26.099
与某些不可变名称相关联的这三个路由问题

00:00:26.099 --> 00:00:29.429
不同的特征和不同的需求需要同伴阅读

00:00:29.429 --> 00:00:32.820
低延迟和真正新鲜的响应，您需要知道确切的位置

00:00:32.820 --> 00:00:37.290
对等点现在是内容路由的一个需求，它真的需要实际很高

00:00:37.290 --> 00:00:41.640
您需要建立的容量放置了小型路由或大地记录或许多记录

00:00:41.640 --> 00:00:44.879
向DAC说所有内容在哪里，因为如果您有很多

00:00:44.879 --> 00:00:48.629
内容，它不关心它会得到什么响应，您确实可以得到

00:00:48.629 --> 00:00:50.940
只要赞助商和子步骤想要的任何地方，只要您最终可以找到

00:00:50.940 --> 00:00:57.719
内容，它也关心审查制度的抵抗IP NS就像

00:00:57.719 --> 00:01:01.649
音量非常低，它也关心新的响应，但实际上更难

00:01:01.649 --> 00:01:04.830
验证新鲜度，所以关于同writing写作的一件很酷的事情就像我知道我

00:01:04.830 --> 00:01:08.250
得到正确的答案我将PR与IP NS连接起来，我真的不知道我是否

00:01:08.250 --> 00:01:10.979
有我的阴茎记录的最新版本，以便涵盖路由

00:01:10.979 --> 00:01:15.720
然后我们讨论的问题，例如DHT，以及我们在其中遇到的问题

00:01:15.720 --> 00:01:20.460
潜在的解决方案两个主要问题是节点和节点不可靠

00:01:20.460 --> 00:01:24.600
恶意节点，其中不可靠的节点是NAT还是NAT后面，因此是否

00:01:24.600 --> 00:01:28.350
这是短暂的，他们走了下来，而一些人下来，因为这只是使

00:01:28.350 --> 00:01:31.829
确保这些是恶毒的O，不要加入DHT

00:01:31.829 --> 00:01:35.549
我只是喜欢可靠的节点或不可靠的注释，例如，如果您有一个

00:01:35.549 --> 00:01:38.159
您正在谈论的一组节点，以跟踪哪些节点似乎是

00:01:38.159 --> 00:01:41.070
响应查询，我在这里很生气'添加，然后就像放下

00:01:41.070 --> 00:01:44.640
另一个甜蜜的路由表来处理我们讨论的恶意节点

00:01:44.640 --> 00:01:51.119
保持纯净的分数来衡量同龄人的好坏以及如何表现出卑鄙的态度

00:01:51.119 --> 00:01:55.110
他们是否正确回答查询，您得到一些奇怪的东西，我们就像没有

00:01:55.110 --> 00:01:58.439
它变得非常复杂，并且有很多文献，但是我们走得很远

00:01:58.439 --> 00:02:02.850
对此并没有提供完整的解决方案，最后我们谈到了一些

00:02:02.850 --> 00:02:06.060
集中权衡，所以我们实际上多次对话

00:02:06.060 --> 00:02:10.140
这些之间我们之间有很多取舍，就像我想专注于

00:02:10.140 --> 00:02:13.640
解决可靠性或恶意节点的问题，但

00:02:13.640 --> 00:02:20.130
在这种情况下，就像我们在乎速度与生存

00:02:20.130 --> 00:02:27.639
[掌声]

