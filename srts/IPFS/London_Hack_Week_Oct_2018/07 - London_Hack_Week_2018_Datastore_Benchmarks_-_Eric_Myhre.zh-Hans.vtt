WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:18.660
面包，这在视觉上比前一天晚上还差，但是

00:00:18.660 --> 00:00:28.410
不管怎样，我的帽子上有只蜜蜂关于平坦的FS东西，并希望其他人

00:00:28.410 --> 00:00:33.239
性能可能会更好，但首先我想知道它能达到多快

00:00:33.239 --> 00:00:42.690
真的去了，所以我写了一些非常元的基准测试，这意味着

00:00:42.690 --> 00:00:47.550
盲目的研究基准，这不是对我们现有代码的基准，因为

00:00:47.550 --> 00:00:50.730
由于各种原因而变得很复杂，不要太着迷于

00:00:50.730 --> 00:00:54.660
其他无关紧要的细节，我只想知道我的文件有多快

00:00:54.660 --> 00:01:00.719
系统运行平稳，因此要完成此任务，我将做出某种决定

00:01:00.719 --> 00:01:06.390
再次不是生产代码的产品的想法类似于RFC

00:01:06.390 --> 00:01:12.360
威胁，所以我写了一个新的主要文章，我试图残酷地对待

00:01:12.360 --> 00:01:17.759
文件系统，并了解它如何处理，所以这是一堆信息，

00:01:17.759 --> 00:01:22.560
出来了，我还没有把它们放在漂亮的图表中，但是那种东西

00:01:22.560 --> 00:01:28.770
我想离开就像很多文件和0开始混合一样

00:01:28.770 --> 00:01:34.170
进入随机的东西需要一个迷你麦克接收者，像两个字符

00:01:34.170 --> 00:01:37.590
分片是的，她变得更糟，但这就是

00:01:37.590 --> 00:01:41.640
文件数量很少，所以我们需要用四倍的时间查看这些图形

00:01:41.640 --> 00:01:45.119
在某个时候，文件数量又增加了四倍，而云又达到了

00:01:45.119 --> 00:01:51.630
弯曲我们就像雕刻两个角色是一个明显的胜利，然后我

00:01:51.630 --> 00:01:55.820
有点想问如果我们开枪

00:01:56.689 --> 00:02:35.819
答案不那么明显，但是是的，这是要求一个

00:02:35.819 --> 00:02:49.709
文件系统，所以我已经在两个不同的文件系统中运行了，因为

00:02:49.709 --> 00:02:56.579
我在这台计算机上的斜杠是斧头t4，现在不在那个有趣的故事上运行

00:02:56.579 --> 00:03:01.109
昨天我犯了一个错误，大幅降低出勤率是运行基准的地方

00:03:01.109 --> 00:03:04.739
正确，如果在我用完我的文件系统时在同一文件系统上，则将其斜线

00:03:04.739 --> 00:03:12.030
注意您将学习一些行不通的东西，所以现在这些

00:03:12.030 --> 00:03:17.130
基准测试在我的ZFS分区之一上运行，某些行为

00:03:17.130 --> 00:03:24.079
事情也许就不足为奇了，但是根本上是不同的，所以

00:03:24.260 --> 00:03:30.200
上校说的是行动不一样

00:03:30.200 --> 00:03:33.829
像猪的目录告诉我你有多大

00:03:33.829 --> 00:03:39.049
在ext4上，它告诉您所有结构中有多少个字节，或者

00:03:39.049 --> 00:03:42.739
目录条目，它快速告诉您有多少条目

00:03:42.739 --> 00:03:46.670
你完全吸引了完全不一样的东西，就像不一样的数字一样

00:03:46.670 --> 00:03:52.959
零，这是不相同的语义，因此要意识到这是一件很酷的事情，

00:03:52.959 --> 00:04:01.549
好吧，写一些大概的经验，报告目录，做完你的练习

00:04:01.549 --> 00:04:08.530
是的，这就是我到目前为止所学到的，很有趣

00:04:16.769 --> 00:04:21.459
[鼓掌] [音乐]

