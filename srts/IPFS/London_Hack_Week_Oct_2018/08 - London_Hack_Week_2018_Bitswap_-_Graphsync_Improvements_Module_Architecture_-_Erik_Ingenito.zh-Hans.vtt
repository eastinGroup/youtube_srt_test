WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.709 --> 00:00:05.240
告诉我你得到了什么

00:00:07.730 --> 00:00:15.929
好的，很好，所以我认为讨论始于一个善意的想法

00:00:15.929 --> 00:00:21.180
漂浮在它们里面，是的，在沼泽中

00:00:21.180 --> 00:00:25.859
回购Jeremy和Stephen之间对话的一小部分

00:00:25.859 --> 00:00:32.520
关于如何使出价互换更有效的想法是，我们知道

00:00:32.520 --> 00:00:38.190
关于dag的很多事情，因为我们是从历史上知道的同龄人那里获取内容的

00:00:38.190 --> 00:00:42.600
哪些同伴给了我们当前正在获取的dag的哪些部分

00:00:42.600 --> 00:00:46.559
等等，我们可以利用这些信息来预测更多

00:00:46.559 --> 00:00:50.550
明智地选择哪些同行可能拥有我们当前想要的内容

00:00:50.550 --> 00:00:59.940
例如，如果我们已经从同级获得了当前节点的同级

00:00:59.940 --> 00:01:05.119
那么那个同龄人是为我们提供我们目前想要的障碍的体面候选人

00:01:05.119 --> 00:01:09.450
您可以想象甲板上的其他关系之类的其他事物

00:01:09.450 --> 00:01:17.970
可能看起来似乎有一个我们正在寻找的障碍物，所以是我

00:01:17.970 --> 00:01:23.970
认为那是从某种程度上开始的，人们普遍接受了，好吧，让我们

00:01:23.970 --> 00:01:28.590
看看我们可以在哪里建立这样的智慧，并且有一个观念

00:01:28.590 --> 00:01:36.180
将会是位沼泽消耗的服务，就像大交换说的，嘿，我

00:01:36.180 --> 00:01:41.130
希望我从这个同伴那里得到这个块，然后使用缓存进行任何操作

00:01:41.130 --> 00:01:45.149
您知道的信息可以帮助您增强自己对

00:01:45.149 --> 00:01:50.340
或建立自己的结论，然后让我列出同行的清单

00:01:50.340 --> 00:01:56.159
可能对此块可能有好处，所以我认为一个简单的API

00:01:56.159 --> 00:02:00.899
实际上有一个更雄心勃勃的重构思路，他也被质疑或

00:02:00.899 --> 00:02:05.020
是否就此是否适当进行过公开讨论

00:02:05.020 --> 00:02:08.170
该锅应消耗的服务，无论它实际上是否应该是

00:02:08.170 --> 00:02:14.319
交换的驱动程序实际上具有智能，只是中继了一点交换一位交换

00:02:14.319 --> 00:02:19.180
应该做什么，谁应该进行出价互换？

00:02:19.180 --> 00:02:24.610
同行，这在某种意义上说是一个会话，尽管它没有被考虑在内

00:02:24.610 --> 00:02:29.910
这样，但会话本质上是一种告诉位交换哪些对等方的方法

00:02:29.910 --> 00:02:39.489
非常适合于获取任何给定的块，所以我认为如果我们向下滚动一点，我们

00:02:39.489 --> 00:02:48.549
看到它确实向下滚动了吗，我能知道斯蒂芬吗

00:02:48.549 --> 00:02:56.040
描绘出一个未来世界

00:02:56.250 --> 00:03:01.209
涉及其他运输我不知道运输正确的词，但其他

00:03:01.209 --> 00:03:05.019
平行的东西在本质上已经被交换，例如黄铜水槽，所以

00:03:05.019 --> 00:03:11.350
在同级之间交换数据时使用的不同协议，以及我们实际如何

00:03:11.350 --> 00:03:18.220
可能希望分解代码，以便进行适当的协调，直到

00:03:18.220 --> 00:03:23.560
能够就如何使用各种传输方式做出明智决策的能力

00:03:23.560 --> 00:03:32.680
现在获取数据，基本上，比特交换也可能是造成这种情况的原因

00:03:32.680 --> 00:03:37.739
当我们进行图同步时，实际上我们可能会想要

00:03:37.739 --> 00:03:43.980
编排一些可以在之间做出智能路由决策的东西

00:03:43.980 --> 00:03:48.910
我应该从同行那里换取长凳并进行位交换还是应该从同行那里获取

00:03:48.910 --> 00:03:54.940
使用graphs Inc他们会说出什么协议来说明质量如何

00:03:54.940 --> 00:03:59.590
同行三好，他们没有这样编号三我们已经有什么

00:03:59.590 --> 00:04:04.780
从这些同行那里得到的，所以有很多可能非常复杂的方法

00:04:04.780 --> 00:04:07.000
在其中我们可以对同伴进行排名并建议

00:04:07.000 --> 00:04:13.930
从中获取数据比其他一些更好，所以这实际上很漂亮

00:04:13.930 --> 00:04:16.780
与目前的样子不同我不会过多介绍

00:04:16.780 --> 00:04:20.680
细节，我想也许是一些比我更熟悉代码的人

00:04:20.680 --> 00:04:26.380
认识到它与当前工作方式有何不同，是的，

00:04:26.380 --> 00:04:29.710
我可以简单地谈一谈实际上就在它上面的那件事

00:04:29.710 --> 00:04:34.870
嗯，这以前已经有人想到过

00:04:34.870 --> 00:04:41.890
表现出过去曾考虑过的东西

00:04:41.890 --> 00:04:47.100
更好的是通过行为下降，其中图同步是最好的

00:04:47.100 --> 00:04:53.200
运输设备，这意味着它有点不完全是运输工具

00:04:53.200 --> 00:04:56.890
设备，但无论您抓到什么同步，都像是从中获取数据的更好方法

00:04:56.890 --> 00:05:02.950
其他对等图失败的人会陷入我的区块服务

00:05:02.950 --> 00:05:05.770
抱歉，是的，您会失败，而您将无法通过阻止服务

00:05:05.770 --> 00:05:10.090
它只知道块，它可能会要求对数据进行位交换，并且它

00:05:10.090 --> 00:05:14.470
也会是关于回购的东西，而您喜欢如何添加

00:05:14.470 --> 00:05:20.350
文件以将块添加到仓库中并从仓库中获取块，所以我猜

00:05:20.350 --> 00:05:24.910
嗯，久保一件事马上就好了，对此我不喜欢一件事

00:05:24.910 --> 00:05:28.090
如果您无法做出明智的路由决策或真正明智的路由，

00:05:28.090 --> 00:05:31.000
图表之间的学生，并深信不疑，就像您不能让他们在

00:05:31.000 --> 00:05:34.780
同一时间，对于一组块，您无法将其分割或无法

00:05:34.780 --> 00:05:38.710
实例，如果您在本地网络上有很棒的位交换对等点，但是

00:05:38.710 --> 00:05:43.600
您有一些图和对等点，它们可能相距很远，可能会导致高延迟

00:05:43.600 --> 00:05:47.440
想要真正优先考虑那些同伴，并先与他们交谈

00:05:47.440 --> 00:05:52.630
而不是使用草图来获取数据，所以我的意思是，如果

00:05:52.630 --> 00:05:56.350
从技术上讲，这实际上是一个失败的模式，然后是真的，所以

00:05:56.350 --> 00:06:01.300
这另一种架构绝对是另一种架构

00:06:01.300 --> 00:06:07.000
明确我们的责任肯定会给我们提供机会

00:06:07.000 --> 00:06:09.889
对我们想要做的事情做出更高层次的决定

00:06:09.889 --> 00:06:16.580
看起来管胎也是，是的，在细节方面，

00:06:16.580 --> 00:06:21.259
看看这到底是怎么回事会很有趣

00:06:21.259 --> 00:06:26.389
我认为这是很好的，但大卖场住在这张照片中，但是

00:06:26.389 --> 00:06:32.240
它的设置与实际的数据传输相去甚远

00:06:32.240 --> 00:06:36.500
眼泪之间现在可以真的是超级分离，不是

00:06:36.500 --> 00:06:39.590
几乎很难知道我们将如何探索其中的一些东西

00:06:39.590 --> 00:06:42.680
因为在今天早上与您的讨论中指出的很好

00:06:42.680 --> 00:06:46.310
已经交换了获取，然后还有一点交换服务该交换

00:06:46.310 --> 00:06:52.490
服务显然需要很好地回应需求，他们不是都需要某种方式

00:06:52.490 --> 00:06:56.270
使数据进出区块存储可能只是知道是否

00:06:56.270 --> 00:07:01.310
您尝试获取数据块时已经有数据块了，尽管那可能是一个

00:07:01.310 --> 00:07:04.629
区块服务的工作，但在另一种情况下，当您为他们提供服务时

00:07:04.629 --> 00:07:10.969
我们不完全了解，但也许更多，就像我们不想构建所有

00:07:10.969 --> 00:07:14.029
在我们开始我们打算要做的事情之前

00:07:14.029 --> 00:07:18.529
进行更明智的出价互换并做出更好的决策的地方

00:07:18.529 --> 00:07:22.759
交换，所以我想这个主意是先将交换分开一点

00:07:22.759 --> 00:07:27.770
现在的方式只是我认为您可以想到的事情

00:07:27.770 --> 00:07:31.159
像这样的事情是关于会话的知识，以及如何

00:07:31.159 --> 00:07:34.279
绕过同行的比特交换请求，这只是做的事情

00:07:34.279 --> 00:07:39.589
基本要求，我们将在此基础上介绍这一部分

00:07:39.589 --> 00:07:47.240
除了位交换之外，您知道这些事情基本上是相同的，我们

00:07:47.240 --> 00:07:51.469
会介绍好吧，我们会介绍dag交流，

00:07:51.469 --> 00:07:54.650
这基本上是相同的，我们将介绍有关

00:07:54.650 --> 00:07:58.400
关于哪些啤酒给我们带来了什么的结构性智慧

00:07:58.400 --> 00:08:01.610
我们会用它，我们可能也有我的意思是，这实际上是

00:08:01.610 --> 00:08:05.120
会话在某种意义上来说就像是一个会话

00:08:05.120 --> 00:08:09.470
决定与哪些同伴交流的决定就是全部

00:08:09.470 --> 00:08:14.090
那大概是您要做的第一件事就是不做所有的事情

00:08:14.090 --> 00:08:17.930
重构，并且可能仍然有一些块存储，如位交换

00:08:17.930 --> 00:08:21.729
现在更紧密地与朋友联系

