WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.259 --> 00:00:20.160
好的，您好，我们可以请一位今天不是雅各布志愿人员的记笔记员吗？

00:00:20.160 --> 00:00:23.449
空中的手

00:00:24.890 --> 00:00:28.699
亚历克斯今天将成为记笔记的人，谢谢

00:00:28.699 --> 00:00:36.180
很好，很好，欢迎来到Jas核心开发团队，每周同步

00:00:36.180 --> 00:00:46.289
就像以前一样棒极了，有个新名字，这很酷，嗯，我们有一个

00:00:46.289 --> 00:00:52.679
记笔记者，很好，我记得我们应该做一次更新

00:00:52.679 --> 00:01:04.430
就像我们通常会做的很好，好吧，我这周做了什么

00:01:04.430 --> 00:01:09.420
在比赛中进行了调查，是的，好的，您可能已经注意到我们的JSI PFS

00:01:09.420 --> 00:01:18.409
 api测试在Windows上已经失败了大约一个月或两个月，

00:01:18.409 --> 00:01:25.829
经过一段时间的研究，我得出了结论

00:01:25.829 --> 00:01:29.220
我只想开一个问题就不会出局

00:01:29.220 --> 00:01:34.430
据我所知，似乎

00:01:34.430 --> 00:01:41.090
4.13以及适用于Windows的后续发行版

00:01:41.090 --> 00:01:47.700
ipfs知道他们只是在网络上找不到对方，所以他们使用了

00:01:47.700 --> 00:01:53.159
要求节点相互连接并获得的测试也是如此

00:01:53.159 --> 00:01:56.430
彼此之间的事物，它们是失败的事物，这仅仅是

00:01:56.430 --> 00:02:01.049
发生在Windows上，它是唯一的PFS边席API，因为那是一个

00:02:01.049 --> 00:02:07.740
谈到去ipfx，所以如果您想知道为什么那是

00:02:07.740 --> 00:02:10.590
发生的那就是那就是为什么我要进入公关

00:02:10.590 --> 00:02:14.390
不客气，他永远不会看起来[音乐]

00:02:14.390 --> 00:02:20.270
是的，这很有意思，我也不是本地人

00:02:20.270 --> 00:02:27.080
Windows用户，这很有趣，我已经完成了，所以我做到了，是的，所以

00:02:27.080 --> 00:02:31.820
实时p2p连接管理器中的内容尚未合并

00:02:31.820 --> 00:02:37.520
我添加了PR以公开该配置，以便在追逐ipfs时

00:02:37.520 --> 00:02:44.360
释放后，下一个人可以开始使用连接管理器，因此Jeff's

00:02:44.360 --> 00:02:50.570
 ipfs API有一个修复程序，可以获取没有任何数据的块，我只是

00:02:50.570 --> 00:03:02.060
发布了一个新版本，是的，我自称API可以解决我添加测试的问题，并发现

00:03:02.060 --> 00:03:07.070
这在国际象棋ipfs中也是一个问题，所以我还创建了我所宣称的J的PR

00:03:07.070 --> 00:03:15.950
通过获取其中不包含任何内容的块来解决此问题

00:03:15.950 --> 00:03:22.580
东西合并到万岁，是大卫注意到的问题是

00:03:22.580 --> 00:03:28.070
我们有一些在JSI PFS中运行的测试，

00:03:28.070 --> 00:03:30.980
我承认有些测试是的，但是他们没有运行，不是

00:03:30.980 --> 00:03:36.680
是必需的，因此一切都不会丢失，因为像第一个核心测试这样的界面

00:03:36.680 --> 00:03:42.560
仍在穿着，但有人说已经写好了，并且是在JSI中

00:03:42.560 --> 00:03:49.730
PFS神秘地从未运行过，所以大卫打开PRT可以使那些和我

00:03:49.730 --> 00:03:54.590
进行了调整，以修复它以及大多数问题，并且没有，我们永远不会知道

00:03:54.590 --> 00:03:58.970
哎呀无论如何，我不是，我对任何事情都没有被封锁

00:03:58.970 --> 00:04:07.580
我接下来要谈一些我在模块化PR上要做的一些事情

00:04:07.580 --> 00:04:11.690
界面IVFs核心测试似乎让每个人都满意

00:04:11.690 --> 00:04:16.810
这样很好，谢谢您的评论，如果您确实审查了任何内容

00:04:16.810 --> 00:04:24.590
我认为，主要的容易做的事情是大卫要求我们跳过时

00:04:24.590 --> 00:04:28.100
测试控制台上是否印有某种描述

00:04:28.100 --> 00:04:31.970
对于电线被跳过，这是非常明智的事情，所以我要去看看

00:04:31.970 --> 00:04:40.850
我能做些什么来启用它，然后是0 30是我所要做的

00:04:40.850 --> 00:04:44.930
一种专注于连接管理器的合并，只需要一个自由

00:04:44.930 --> 00:04:52.300
版本um David要求我们也尝试使p2p联系人为PR

00:04:52.300 --> 00:04:59.120
更新更广泛的配置适用于p2p，所以我不得不看一下，也许

00:04:59.120 --> 00:05:04.850
回到嗯，然后再一秒钟，我们运行我

00:05:04.850 --> 00:05:11.180
可能会回顾一下想象我和下一版本的烦恼

00:05:11.180 --> 00:05:23.600
是我吗，有人对此有任何疑问吗，很酷，嗯，下一个是谁？

00:05:23.600 --> 00:05:35.990
嗯，所以你很高兴，所以我正在制作一个令人兴奋的东西

00:05:35.990 --> 00:05:42.980
事情是，我可以像这样用一个文件来工作

00:05:42.980 --> 00:05:47.600
一个电话获取完整的文件，而小伙伴之间没有任何来回交互

00:05:47.600 --> 00:05:53.630
这是一个快速的练习，所以它没什么用，但是至少我现在有了一个主意

00:05:53.630 --> 00:06:00.260
让我们说说我不知道​​快10倍，以至于没有那么快，在社交上

00:06:00.260 --> 00:06:03.830
图形同步不会使事情变得更快，因为我们还有很多其他黑发

00:06:03.830 --> 00:06:10.460
无论如何，在JSF FS中，它使我很好地理解了

00:06:10.460 --> 00:06:15.350
流任何东西，所以值得付出努力，我终于以为我知道

00:06:15.350 --> 00:06:19.580
快速嫁接是什么，这是我接下来要集中的内容

00:06:19.580 --> 00:06:26.720
四分之一是不是在反转图形，不是在加快速度

00:06:26.720 --> 00:06:35.390
关于您可以发送一个带有一些元信息的C广告，它将返回

00:06:35.390 --> 00:06:41.400
几个块，这就是使用位幼犬进行位交换之间的区别

00:06:41.400 --> 00:06:45.389
市要求一个博客将其放在一个书包中，因此两者之间的区别在于

00:06:45.389 --> 00:06:48.120
发送带有一些元信息的一个块，并返回几个块

00:06:48.120 --> 00:06:52.199
这就是我要集中精力的一个超级简单的人，但是

00:06:52.199 --> 00:07:01.169
不是，所以这是我认为的手工艺的核心，是的，接下来是我

00:07:01.169 --> 00:07:09.180
要做的就是写下来，然后用真正的p2p玩一轮

00:07:09.180 --> 00:07:15.449
看看它与我将要处理的图形和内容配合使用的效果如何，以及另一个

00:07:15.449 --> 00:07:21.000
令人兴奋的是，您Richard Snyder正在研究IP的IP。

00:07:21.000 --> 00:07:26.100
我所做的格式更改，因此规格进行了相当大的更新，但没有任何变化

00:07:26.100 --> 00:07:31.440
它已经实现，Richard现在正在实施该实现，这很漂亮

00:07:31.440 --> 00:07:40.940
不错，是的，所有的问题都可以了

00:07:40.940 --> 00:07:48.440
好，谢谢，好吧，下一个雨果再来的人

00:07:48.860 --> 00:07:54.990
嗨，大家好，我继续整理我的大文件

00:07:54.990 --> 00:08:05.310
我尝试使用索引数据库实现新的数据存储，但不通过

00:08:05.310 --> 00:08:16.229
整个级别的设备的东西，这是一个简单的简单的拥抱使事情有点

00:08:16.229 --> 00:08:22.229
至少当我们在浏览器中已经有所有块时才更快

00:08:22.229 --> 00:08:28.010
因为当我们获得锁时，除了开销之外，其他都没有关系

00:08:28.010 --> 00:08:35.909
对于加密货币，我尝试通过几种方式进行改进，但一切都可以归结为两种-

00:08:35.909 --> 00:08:45.209
这就是为什么我尝试将重点更多地放在那个东西上的原因

00:08:45.209 --> 00:08:52.030
几个巫婆试图使网络加密值得

00:08:52.030 --> 00:08:59.430
尝试一下，也可以在中间进行一些Webassembly的操作

00:08:59.430 --> 00:09:08.410
但是，是的，这就是我本周前一周所做的一切

00:09:08.410 --> 00:09:15.550
进行计划中的所有回顾性工作，至少也可以上网

00:09:15.550 --> 00:09:21.640
与当地雷曼兄弟进行加密合作我遇到了一些问题，并且

00:09:21.640 --> 00:09:30.190
我也会研究一个问题，有人在Jess ipfs epi上发布了

00:09:30.190 --> 00:09:40.330
能够结束所有类型的小文件，我将对此进行研究

00:09:40.330 --> 00:09:49.090
我想我答应了本周的一些演示，我将尝试分享我的屏幕

00:09:49.090 --> 00:09:53.520
现在好了

00:10:07.380 --> 00:10:17.950
你们能看到吗，所以这是我用来测试的简单界面

00:10:17.950 --> 00:10:23.410
基本上可以基本上告诉您要连接的对等点告诉仓库

00:10:23.410 --> 00:10:28.840
名称，所以我可以在涟漪之间进行更改，因为我需要测试其他内容

00:10:28.840 --> 00:10:36.940
并在达到极限时进行测试，这不是一个简单的界面，所以我

00:10:36.940 --> 00:10:45.660
可以在不同的选项之间快速选择事情之一是

00:10:45.660 --> 00:11:17.870
便携式的东西应该是哦，它正在运行对不起好吧，所以这一个

00:11:17.870 --> 00:11:26.750
没什么像肉汤那样看的更快，我可以用不同的肉来跑

00:11:26.750 --> 00:11:33.440
阻止这实际上是至少要走一段路并运行基准测试

00:11:33.440 --> 00:11:40.279
这两个实现，因此我可以使用所有这些文件运行，它将

00:11:40.279 --> 00:11:50.600
始终如一棵树一样快至少三倍于App Store

00:11:50.600 --> 00:11:58.339
第二个块之间的差异会很大，但这是正常现象，

00:11:58.339 --> 00:12:08.149
基本上，PDF只是速度更快，他们要做的一件事就是编译

00:12:08.149 --> 00:12:15.440
很多时候，上面的情节-Jas类，我想我们在某些情况下也这样做

00:12:15.440 --> 00:12:26.089
我们使用protobufs的仓库，尽管我认为我们不这样做

00:12:26.089 --> 00:12:34.670
即使我们至少添加了UNIX ipfs，它仍然会更快。

00:12:34.670 --> 00:12:43.519
可能会是确切的TFS和我想要的其他演示的一个很好的补充

00:12:43.519 --> 00:12:50.529
告诉你我们刚刚得到任务管理器

00:13:01.690 --> 00:13:08.339
显示其中一个文件，它将开始下载

00:13:08.339 --> 00:13:18.959
您会看到它提前知道了文件的大小，并且它

00:13:18.959 --> 00:13:30.589
显示它告诉浏览器正确的大小，然后我们可以看到正确的大小

00:13:30.589 --> 00:13:37.529
内存占用量确实保持稳定，这将需要很长时间，因为

00:13:37.529 --> 00:13:45.360
它得到了障碍，但至少它是稳定的，并且内存确实保持了

00:13:45.360 --> 00:13:56.910
真的很稳定，所以让我们走吧，我想我不会打扰你们，我们

00:13:56.910 --> 00:14:02.779
在这里直到我们二十九分钟，但你明白了

00:14:02.779 --> 00:14:17.089
所以，让我们开始吧，如果我在此过程中，那么我想就是任何人有任何疑问

00:14:17.089 --> 00:14:31.470
是的，所有问题都经过它，所以只是尝试确保我理解它是

00:14:31.470 --> 00:14:36.059
主要是关于从质子到PB的转换，有很多

00:14:36.059 --> 00:14:41.910
那里的其他东西也有助于改善它

00:14:41.910 --> 00:14:47.009
就像两个不同的东西，我已经对此进行了很多测试

00:14:47.009 --> 00:14:56.490
OPR其中一些是数据存储实现，另一个是使用

00:14:56.490 --> 00:15:00.749
这个新实验室不是什么新鲜事，但它和Link auto是一个不同的库

00:15:00.749 --> 00:15:06.420
可以，而另一个是下载的东西，因为您知道

00:15:06.420 --> 00:15:13.439
我们拥有的演示我们在获得块时无法处理大文件

00:15:13.439 --> 00:15:19.290
并将所有内容组装到一个缓冲区中，然后我们将其扔给用户

00:15:19.290 --> 00:15:24.110
一个大斑点，就像安德鲁·吉格（Andrew Jigga）咬它一样

00:15:24.110 --> 00:15:30.690
不能正常工作，所以这是几个不同的人，这是不同的事情

00:15:30.690 --> 00:15:36.450
一个关于下载，它只是将所有内容流化并使用

00:15:36.450 --> 00:15:43.110
服务人员捕获请求并建立流并通过进行响应

00:15:43.110 --> 00:15:48.450
服务字到主线程，下载在

00:15:48.450 --> 00:15:58.080
流模式基本上有什么需要担心或关注的变化

00:15:58.080 --> 00:16:03.779
关于如何处理旧的protobuf之间格式错误的数据

00:16:03.779 --> 00:16:10.020
工具和您正在使用的新库，您能击败吗，请问有没有

00:16:10.020 --> 00:16:15.720
更改格式错误的数据的处理方式，例如您是否在测试之间

00:16:15.720 --> 00:16:23.700
这是两个protobuf库，是的，我的意思是我认为这两个实现都与

00:16:23.700 --> 00:16:32.240
没有发现任何奇怪的东西，这是真的，我什至可以

00:16:32.240 --> 00:17:13.400
再次向您展示，这是微不足道的，是的，是的，是的，是的。

00:17:13.400 --> 00:17:22.290
基本上，如果您知道UNIX中的解组功能，那是

00:17:22.290 --> 00:17:27.839
基本相同的东西，我们只需要将所有实例擦在一起，就可以了

00:17:27.839 --> 00:17:34.140
基本上做相同的事情，它使用相同的原始文件，但我我

00:17:34.140 --> 00:17:46.230
创建它定时自动的模式类

00:17:46.230 --> 00:17:52.800
生成由BBF软件包生成的auto，所以基本上是一样的

00:17:52.800 --> 00:17:58.550
我一直在测试这两种实现，并且一切正常

00:17:58.550 --> 00:18:04.770
经常检查我是否主要处理视频，因为这是最简单的方法

00:18:04.770 --> 00:18:15.390
它想检查最终的汇编文件是否正常工作，并且它一直在工作，所以我

00:18:15.390 --> 00:18:22.050
没有出现任何问题我想我是说我的意思还是我在尝试什么

00:18:22.050 --> 00:18:27.840
要问的是，因为我们使用具有不同工具的不同库来执行

00:18:27.840 --> 00:18:33.300
错误或由于数据格式错误或错误而返回的内容

00:18:33.300 --> 00:18:37.679
都是因为这是用户最终看到的公共界面的一部分

00:18:37.679 --> 00:18:40.590
任何人都在关注特定类型的错误，而不是

00:18:40.590 --> 00:18:45.870
只是我有一个错误会改变还是我们有更具体的信息？

00:18:45.870 --> 00:18:48.690
现在比我们以前对错误的说法要好

00:18:48.690 --> 00:19:00.980
哦，我还不明白，不，是一样的，这一切都很酷

00:19:03.140 --> 00:19:10.179
我们走的其他地方我认为我们应该继续前进，因为

00:19:10.179 --> 00:19:14.230
我们想慢慢来，但如果您还有其他疑问，

00:19:14.230 --> 00:19:20.139
也许以后您可以与他联系，请确保我们继续前进

00:19:20.139 --> 00:19:33.309
迭戈上周发生了什么事我一直在继续我的错误码

00:19:33.309 --> 00:19:39.039
我从没抽过两个请求，但都带了一些错误消息，并且看到了

00:19:39.039 --> 00:19:44.500
vid，他说要解决一个大问题-就像路线图一样，

00:19:44.500 --> 00:19:49.720
这与钻石的亲切感和错误处理有关，所以我们有一张桌子

00:19:49.720 --> 00:19:54.970
有多个问题，如果可以重现

00:19:54.970 --> 00:19:59.380
手动错误，或者您也可以将这些错误和内容翻转

00:19:59.380 --> 00:20:11.649
像那样，请去检查一下，我也和Pasco在一起，你可以努力

00:20:11.649 --> 00:20:18.039
造成涟漪，将所有ipfs中的大象聚集在一起，希望许多

00:20:18.039 --> 00:20:29.289
您能否在本周内给我反馈，我将继续执行该OPI，

00:20:29.289 --> 00:20:36.399
我必须检查巴基斯坦印度的网络用户界面当前状态，

00:20:36.399 --> 00:20:49.899
沃克的比例，因为下一部分我将只工作

00:20:49.899 --> 00:20:58.240
快速问题和错误代码，您如何计划如何应对

00:20:58.240 --> 00:21:04.779
这些以及他们将如何做？您对他们的获得有一个计划

00:21:04.779 --> 00:21:13.000
看到像HTTP API一样实现了，不是，不是，不是真的

00:21:13.000 --> 00:21:17.870
我正在考虑创建扩展错误打破

00:21:17.870 --> 00:21:23.270
类和扩展箭头的位置，但我还没有考虑过如何

00:21:23.270 --> 00:21:29.290
序列化我不得不去挖，看看我要怎么做

00:21:29.290 --> 00:21:34.580
我建议创建该回购协议，我正在等待他将提出的反馈意见

00:21:34.580 --> 00:21:42.130
那样还是不，是的，我想如果我们有错误类，很难

00:21:42.130 --> 00:21:46.490
他们序列化后重新给它们充气我想即使你没有

00:21:46.490 --> 00:21:56.530
知道什么类或它来自哪里，但错误代码可能值得追求

00:21:56.530 --> 00:22:09.280
好吧，让我们做到这一点，好吧，任何人有任何其他问题要问您

00:22:11.530 --> 00:22:14.530
好的

00:22:19.060 --> 00:22:29.210
上周，我主要在Ibanez工作，我制作了PR GSI早餐，

00:22:29.210 --> 00:22:34.580
它的初始工作实现有一些不需要的参数

00:22:34.580 --> 00:22:40.760
还有更多的东西，但是它可以这样工作，我将做一些

00:22:40.760 --> 00:22:47.750
在继续进行反馈之前，我还创建了一个名为GSI的新程序包

00:22:47.750 --> 00:22:55.640
威尼斯，这是一个令人作呕的名字，因为它被称为哦，我

00:22:55.640 --> 00:23:01.460
包装相同包装的P＆S，但我们不知道这是最好的

00:23:01.460 --> 00:23:06.890
是否命名，所以我正在与您讨论在Walden的骑行问题

00:23:06.890 --> 00:23:16.490
弄清楚了，然后我合并了两个CTO同行，我受阻于

00:23:16.490 --> 00:23:27.470
可以作为命名定义中的模块，本周我需要添加一个nano

00:23:27.470 --> 00:23:33.859
 -记录的秒精度，因为实际上我一直在

00:23:33.859 --> 00:23:43.309
使用它，但是是的，本机数据没有纳秒，所以我试图弄清楚

00:23:43.309 --> 00:23:47.989
找出最好的方法去哪里，我检查了一些奇迹和大事

00:23:47.989 --> 00:23:56.440
数字，我在考虑哪里才能获得PR的最佳方法

00:23:56.440 --> 00:24:05.029
明天我想那我需要在Jessup FS的ipfs中完成一些测试

00:24:05.029 --> 00:24:14.330
我的IP和PR以及在工作中都可以使Flickr出现在

00:24:14.330 --> 00:24:22.299
下一个法院，基本上是密集的哦，所以我只写了另一件事

00:24:22.299 --> 00:24:29.119
在创建一些注意事项，我可以期望我也将尝试创建PR

00:24:29.119 --> 00:24:38.299
这就是本周，所以艾伦我想是的，对我来说，也许对其他人来说

00:24:38.299 --> 00:24:45.349
在这里，当您说好网络时，这是什么意思？

00:24:45.349 --> 00:24:48.710
对于J的ipfs，它能做些什么，而它却做不到

00:24:48.710 --> 00:24:52.820
好吧，所以基本上，当你有一个

00:24:52.820 --> 00:24:58.339
locally悔本地工作，您可以发布并解析我pen悔的名字

00:24:58.339 --> 00:25:03.379
在该注释本地，没有路由，并且如果您连接新对等体

00:25:03.379 --> 00:25:09.349
在我的阴茎在本地工作后，它将无法进行下一步

00:25:09.349 --> 00:25:21.019
就像我第二次那样，我们治疗阴茎的方法是添加DHT，这样，当

00:25:21.019 --> 00:25:28.070
您说的就像我们在谈论将对等ID解析为内容提示一样

00:25:28.070 --> 00:25:37.849
正确的地方，我们不喜欢DNS，不，不，这很酷，对于任何问题

00:25:37.849 --> 00:25:40.149
伴郎

00:25:43.650 --> 00:25:47.670
不，你有空

00:25:48.240 --> 00:25:55.060
Jacob，所以我上周为发现的专用网络添加了中断测试

00:25:55.060 --> 00:26:00.190
与先拨号或Jas先拼贴的顺序有关的一些问题，所以我

00:26:00.190 --> 00:26:05.050
修正了一些问题，那就是我唯一的杰出项目是

00:26:05.050 --> 00:26:11.560
是网络连接不良，J的民意调查阅读器无法很好地处理阅读问题

00:26:11.560 --> 00:26:16.630
好吧，如果您的流损坏或在实例中，

00:26:16.630 --> 00:26:21.490
错误的专用网络的数据（如果该数据已加密），它会尝试找出如何

00:26:21.490 --> 00:26:25.450
带有int栏的流中有很多字节，无法弄清楚，然后

00:26:25.450 --> 00:26:30.430
当它可以拉进去的时候，我要拉入120个字节，但是只有

00:26:30.430 --> 00:26:36.580
剩下五个，它会坐在那里，等待60秒，以免60

00:26:36.580 --> 00:26:41.110
第二次测试超时我正在为民意调查阅读器修复

00:26:41.110 --> 00:26:46.090
这样就应该在错误时挂断错误，而不仅仅是足球

00:26:46.090 --> 00:26:51.700
打字，所以我想我大部分时间都在工作，我只需要做一些

00:26:51.700 --> 00:26:57.460
最后的测试是我在IP上全部演示了专用网络，因此，如果您

00:26:57.460 --> 00:27:02.950
想要看到其中的任何内容，基本上就是Wireshark在起作用，但是那是

00:27:02.950 --> 00:27:08.050
在那里，然后这周我将解决民意调查阅读器的内容提交完成的问题

00:27:08.050 --> 00:27:14.020
所有用于私有网络的PRS，然后在第3季度工作，好吧，我们作为

00:27:14.020 --> 00:27:22.740
以及尝试用David完成其余的Lib p2b配置更新

00:27:23.070 --> 00:27:26.070
问题

00:27:30.490 --> 00:27:37.120
不是谢谢你雅各布，其他人都在看着手

00:27:37.120 --> 00:27:42.630
也已上传到YouTube，因此您应该可以在那里观看Jacobs演示

00:27:42.630 --> 00:27:51.610
亚历克斯，你又起来了，请打个招呼，所以上周我正试图让M

00:27:51.610 --> 00:27:57.310
 ipfs上的pm正常工作，所以这是一个看起来像David的项目

00:27:57.310 --> 00:28:02.980
在几年前工作，从那以后还没有真正看到任何更新

00:28:02.980 --> 00:28:08.380
有趣的是，自那时以来ipfs已经发展了很多，所以什么也没有

00:28:08.380 --> 00:28:14.080
我最初只是尝试使用针对

00:28:14.080 --> 00:28:17.440
运行中的恶​​魔，并有大量的错误，我想哦，不，我知道是否有

00:28:17.440 --> 00:28:21.490
是测试在运行测试，并且有任何一项测试实际上是在测试

00:28:21.490 --> 00:28:25.450
实施其余的大部分存根，您知道测试不会

00:28:25.450 --> 00:28:29.500
也可以，所以我希望会有一个简单的案例

00:28:29.500 --> 00:28:34.300
在恶魔的go和J的实现之间切换，但是

00:28:34.300 --> 00:28:39.130
项目本身需要线圈或工作才能首先使其工作，所以我正在尝试

00:28:39.130 --> 00:28:45.250
当它第一次旋转时，它会有趣地做一些事情

00:28:45.250 --> 00:28:54.130
联系不再存在的节点并在那里下载IP NS内容

00:28:54.130 --> 00:29:00.760
也是所有NPM节点的映射，因此所有NPM模块都有两个内容散列，并且

00:29:00.760 --> 00:29:05.710
也不存在，我不确定您如何重新创建似乎没有

00:29:05.710 --> 00:29:09.580
关于如何生成和发布该内容的任何回扣，

00:29:09.580 --> 00:29:13.210
它已经完成了，所以有人必须知道，所以我要尝试去投标戴维的

00:29:13.210 --> 00:29:17.830
时间，这样您就可以带我了解它的工作原理，这很有趣

00:29:17.830 --> 00:29:24.930
是的，这是有趣的一周，所以我将在本周尝试完成该任务，并希望

00:29:24.930 --> 00:29:31.120
如果我有时间看一下FS，那真是太好了，我也知道

00:29:31.120 --> 00:29:35.460
问题很酷

00:29:35.460 --> 00:29:41.969
好吧，你和维克多聊过吗，因为像一月份一样，他也做了

00:29:41.969 --> 00:29:49.559
一些NPM的事情是正确的，不，是的，没有男孩会因为，因为他提到了它

00:29:49.559 --> 00:29:53.969
你也知道我们在里斯本的时候，是的，因为他和我起床了

00:29:53.969 --> 00:30:01.729
不知道他在做什么，我只是看到他在做某事

00:30:02.419 --> 00:30:10.229
问你为什么现在好奇地看着这个，因为大卫想要它

00:30:10.229 --> 00:30:15.389
以证明NFS的JavaScript和go实现是

00:30:15.389 --> 00:30:23.429
可比较的，因为它使用了大量的em FS，所以看起来很酷，不错，是的

00:30:23.429 --> 00:30:38.759
问题好吗，罗布，您来了，要报告的内容不多

00:30:38.759 --> 00:30:41.190
我知道你过去这两个礼拜一直在

00:30:41.190 --> 00:30:45.960
促使人们尝试重新定义有关IPL DS的某些语言，因此

00:30:45.960 --> 00:30:50.789
它更加清晰，并且可以对很多请求请求进行评论

00:30:50.789 --> 00:30:57.210
并致力于在Godot生成中更好地编写代码文档，以实现

00:30:57.210 --> 00:31:02.179
鬼东西会向各种建造者添加图表，诸如此类

00:31:02.179 --> 00:31:07.019
所以对于我来说，没有太多像特定的具体事情

00:31:07.019 --> 00:31:14.869
已经完成，但是接下来两天我正在疯狂地做的两件事是

00:31:14.869 --> 00:31:21.210
在会议上最终确定一些会议建议和与文档相关的内容

00:31:21.210 --> 00:31:26.879
峰会并试图返回该Doc的网站并拆开

00:31:26.879 --> 00:31:31.379
前端代码并对其进行重建，以便使其看起来更好一点

00:31:31.379 --> 00:31:35.700
但大多数情况下，这样不会使粉丝最多增加您的千分之一

00:31:35.700 --> 00:31:40.379
计算机，当您将网站加载超过十分钟时，我什至不确定

00:31:40.379 --> 00:31:44.309
就像那样做，但我敢肯定这与疯狂有关

00:31:44.309 --> 00:31:49.100
那里现有的旧前端代码的损坏，我只是

00:31:49.100 --> 00:31:54.289
知道我要在星期三到下一个星期的时候出去

00:31:54.289 --> 00:32:00.799
星期三，我可能会在附近，但我会以最小的限度在缅因州的小屋里

00:32:00.799 --> 00:32:03.970
互联网连接

00:32:04.860 --> 00:32:13.350
您很酷，谢谢Rob的任何疑问

00:32:14.639 --> 00:32:26.669
好吧，所以我们最后一次预定的更新是汽车OD，是的，我现有的

00:32:26.669 --> 00:32:31.860
最终合并了用于位交换实现的庞大的拉取请求套件

00:32:31.860 --> 00:32:38.169
所以这是在我的完成列中，我目前被锁定了一点拉力

00:32:38.169 --> 00:32:42.159
要求纯ID更改打印内容返回以匹配

00:32:42.159 --> 00:32:47.769
实施以及成为阻碍因素的原因是我接下来要实施的

00:32:47.769 --> 00:32:52.899
对等点的位交换分类帐，对我来说本地化几乎全部在

00:32:52.899 --> 00:33:01.149
CLI测试，但是我要回去，一旦此打印合并了更新IPF床

00:33:01.149 --> 00:33:07.269
交换以更好地反映它应该如何工作，并将清理所有代码

00:33:07.269 --> 00:33:12.669
我目前到那儿是因为它正在做一些奇怪的改组，只是为了得到

00:33:12.669 --> 00:33:18.879
打印工作，这是我的下一个内容是关于Pledger的东西，还有两个

00:33:18.879 --> 00:33:25.169
那么我期望的q theokay RS将类似于q2，这是

00:33:25.169 --> 00:33:31.440
go和J的ipfs之间的接口奇偶校验

00:33:32.970 --> 00:33:42.879
很酷，我只是界面模仿而不是为人父母，是的，杂质位是什么

00:33:42.879 --> 00:33:48.250
分类帐，在您能解释什么之前我从未听说过

00:33:48.250 --> 00:33:53.769
那是对等人的分类帐，显示您的已发送已收到您的

00:33:53.769 --> 00:34:00.429
分数，即您知道接收和发送数量与接收状态之间的关系

00:34:00.429 --> 00:34:05.350
交换的字节或数据包是该对等方的分类帐

00:34:05.350 --> 00:34:14.460
只为您显示该对等点的位交换统计信息的统计信息

00:34:16.040 --> 00:34:24.760
好的，还有其他问题，在这种情况下，我们已经完成了时间表

00:34:24.760 --> 00:34:32.750
更新中有一个我只是想问一问我是否知道的最后议程项目

00:34:32.750 --> 00:34:39.970
可以看到我们在这里有一个微型罗杰斯，我只是想知道他是否只是在徘徊或

00:34:44.320 --> 00:34:48.230
是的，希望下周我能有更多的话说我是对的。

00:34:48.230 --> 00:34:52.640
我需要把很多东西放到文本中，然后

00:34:52.640 --> 00:34:59.990
也许在上面展示一些东西好酷，所以我问过的最后一件事

00:34:59.990 --> 00:35:05.840
戴维·戴斯（David dais）提到，到了本季度末，您应该拥有所有

00:35:05.840 --> 00:35:11.420
已经收到一封电子邮件了，是时候进行回顾了

00:35:11.420 --> 00:35:16.610
电子邮件上有一个指向文档的链接，您每个人都必须填写一个

00:35:16.610 --> 00:35:19.760
插槽，但我无法访问它，而且我之前从未见过它，所以我

00:35:19.760 --> 00:35:26.330
不知道，但大概是您输入字词的地方，因此您如何战斗

00:35:26.330 --> 00:35:30.230
它会赢，我相信它会为所有人畅所欲言，但一定要写

00:35:30.230 --> 00:35:35.900
您在那里的感觉，所以如果您可以，还有第二件事

00:35:35.900 --> 00:35:40.340
在四个季度中更新电子表格中的最终分数-好的

00:35:40.340 --> 00:35:45.110
我们应该带给你的东西很久很久了，希望不会带给你很多

00:35:45.110 --> 00:35:50.000
长期以来，最后的第三点也是最后一件事就是想一想

00:35:50.000 --> 00:35:56.780
关于您想做的事情大卫说，请您深思熟虑，以便我们

00:35:56.780 --> 00:36:02.720
所有人都应该就下一个季度的目标做些什么，然后添加

00:36:02.720 --> 00:36:09.760
他们就像我想对现有进展的其余部分发表评论一样臭名昭著

00:36:09.760 --> 00:36:17.300
是的，然后我想除非有人有其他问题或

00:36:17.300 --> 00:36:20.540
议程项目，或者我没有深入探讨，但是是的，没有别的了

00:36:20.540 --> 00:36:27.070
添加任何东西，任何人有其他任何事情，我们都完成了

00:36:29.790 --> 00:36:37.000
好吧，沉默就是顺从现在的冷静，让我们做到这一点

00:36:37.000 --> 00:36:43.240
很高兴再次看到您所有的面孔，欢呼雀跃，直到下一次开心为止

00:36:43.240 --> 00:36:53.220
IPF essing guys team go team这是团队哦耶Jess team go

