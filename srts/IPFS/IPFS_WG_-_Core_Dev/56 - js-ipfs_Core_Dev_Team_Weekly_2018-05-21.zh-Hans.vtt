WEBVTT
Kind: captions
Language: zh-Hans

00:00:04.020 --> 00:00:10.720
好的，您好，欢迎参加5月种族灭绝EFS核心开发团队的每周会议

00:00:10.720 --> 00:00:16.630
2018年2月21日我上次没有说这个，但我们可以吗

00:00:16.630 --> 00:00:22.090
参加本周的会议的志愿服务员，请举手

00:00:22.090 --> 00:00:28.900
yeah wicked，谢谢Jacob，请在下面的列表中添加您的名字

00:00:28.900 --> 00:00:36.719
hackpad，我将其粘贴到聊天中，以防万一

00:00:39.710 --> 00:00:46.870
我们会在每个人都添加每周更新后就这样

00:00:49.250 --> 00:00:53.150
你你

00:00:53.180 --> 00:00:58.880
很好，所以一轮更新你好，我已经在说的每个人，所以我

00:00:58.880 --> 00:01:05.239
我昨天昨天要去第一周我花了很多钱

00:01:05.239 --> 00:01:10.910
我花时间修理测试，试图找出薄脆的地方，

00:01:10.910 --> 00:01:17.990
修复发现了一些很难发现的错误，但是当我

00:01:17.990 --> 00:01:22.550
发现它们很明显，为什么为什么要进行两次片状测试

00:01:22.550 --> 00:01:27.590
像回调之类的东西没有被回调真的很难追踪，

00:01:27.590 --> 00:01:36.680
诸如间隔之类的事情就像多次触发回调一样，因为

00:01:36.680 --> 00:01:41.050
间隔没有清除，所以这很有趣

00:01:41.050 --> 00:01:49.250
所以我仍在努力将0:29释放出去

00:01:49.250 --> 00:01:56.899
这些测试可以修复地图，而我还做了一些审核，所以我进行了审核

00:01:56.899 --> 00:02:01.790
最初只是关于记录API路径的第一门课程最初是

00:02:01.790 --> 00:02:08.989
解决某人的问题某人已经打开了有关他们正在代理的问题

00:02:08.989 --> 00:02:15.340
到ipfs api上，他们想知道他们如何才能做到

00:02:15.340 --> 00:02:25.090
当api的路径在斜杠ipfs上并且显然是在api时创建一个api实例

00:02:25.090 --> 00:02:31.640
可以将这个未记录的属性传递给ipfs api，称为

00:02:31.640 --> 00:02:36.260
api路径，如果它是

00:02:36.260 --> 00:02:40.820
记录下来，但是没有记录下来，所以无论如何我们发现并记录下来

00:02:40.820 --> 00:02:49.430
一切都很好，因此Lydell提交了URL转义路径的修复程序

00:02:49.430 --> 00:02:54.320
从URL添加时，我已经看过一段时间了，

00:02:54.320 --> 00:02:58.940
在完成脆弱的测试之前，我可以重新定级，并希望

00:02:58.940 --> 00:03:06.760
他们会进去的，我希望能尽快发布，所以还有什么

00:03:06.760 --> 00:03:13.930
是的，我目前仅在IP FST中需要更新ipfs API时被阻止

00:03:13.930 --> 00:03:21.230
控制器模块，然后我希望可以清楚地释放0:29（如果所有

00:03:21.230 --> 00:03:26.239
测试并进行检查，然后再进行清单上的下一件事情

00:03:26.239 --> 00:03:31.790
如果准备就绪，可以优先查看10号资料，然后希望发布

00:03:31.790 --> 00:03:38.930
补丁发布时间为0:29，可修复第10个错误，然后发布到更多评论中，

00:03:38.930 --> 00:03:46.550
发行和类似的事情，基本上就是我，我认为上个星期

00:03:46.550 --> 00:03:53.350
现在和下周很酷，有人有任何疑问吗

00:03:56.510 --> 00:04:05.130
好吧，拉德名单上的下一个人是雅各布，是的，所以我花了整个上周的时间

00:04:05.130 --> 00:04:11.700
看笔记10个问题，我今天正在与他们进行一些最终测试

00:04:11.700 --> 00:04:16.020
您添加的所有修复程序Alan看起来都不错

00:04:16.020 --> 00:04:21.900
最大的痛点是ipfs是其全部或很多部分的依赖项

00:04:21.900 --> 00:04:28.800
依赖使测试变得困难，所以我想现在就去做吧

00:04:28.800 --> 00:04:35.670
我有一个悬而未决的问题是对FS承诺的实验性警告

00:04:35.670 --> 00:04:42.180
需要修复，因为它破坏了节点10：1中的exec，所以10我

00:04:42.180 --> 00:04:46.320
认为还可以，但有10个是一个问题，所以我正在研究这个问题，然后提供了

00:04:46.320 --> 00:04:51.030
我的最新版本的测试通过了，他们看起来不错的发布/订阅是

00:04:51.030 --> 00:04:55.310
最后一个看起来像是在最近的PRS中解决的问题，所以

00:04:55.310 --> 00:05:00.710
希望第二天左右去应该很好

00:05:00.710 --> 00:05:06.410
所以，一旦完成，我将回到黄金时段

00:05:08.730 --> 00:05:14.990
完美的谢谢你问伏特加酒你在这附近吗

00:05:14.990 --> 00:05:20.780
摇杆在这里好吧不是在这里，所以他说他一直在挖东西

00:05:20.780 --> 00:05:29.120
变成位不被他阻塞，然后接下来创建图形同步原型让

00:05:29.120 --> 00:05:33.050
我只是仔细检查一下，没有人在等待被输入东西。

00:05:33.050 --> 00:05:47.690
好的，很酷，这是我们名单上的下一个。Zayn很酷，所以本周

00:05:47.690 --> 00:05:51.140
像几个星期前一样，把我离开的地方找回来

00:05:51.140 --> 00:05:57.200
正在努力将拉弦式摄录机转换成类似ipfs的程序

00:05:57.200 --> 00:06:05.840
在PR上只需对其进行修补，并确保所有的ipfs

00:06:05.840 --> 00:06:12.830
在dag更新更改中正确处理文件和文件处理

00:06:12.830 --> 00:06:18.500
就是这样，一旦我确保这些与破坏兼容

00:06:18.500 --> 00:06:25.490
如果IPL发生了深层的变化，那么所有提交的PR都应该完整

00:06:25.490 --> 00:06:34.100
然后可能重新评估我的IPL DC Boer拉取请求

00:06:34.100 --> 00:06:39.220
确保拍卖喜欢

00:06:39.639 --> 00:06:47.039
就像为多Heche选择道路哈希算法一样

00:06:47.039 --> 00:06:52.810
完成了，所以我有一个PR出来，但我只需要跟进并看看

00:06:52.810 --> 00:07:00.069
例如，如果格式的其余部分自工作以来已发生变化或已发生变化，

00:07:00.069 --> 00:07:02.080
那我就赶上了

00:07:02.080 --> 00:07:13.889
太好了，谢谢上周我们在我的那棵树是

00:07:13.889 --> 00:07:19.300
主要是通过NPR并开始出现一些问题

00:07:19.300 --> 00:07:28.240
多样性CTL评估了目前可用的一些午睡实施方案

00:07:28.240 --> 00:07:35.080
整整一堆，特别是诚实地讲了很多，

00:07:35.080 --> 00:07:40.509
实况地图的实现，我们看到了其中之一

00:07:40.509 --> 00:07:45.729
实现可行，请扩展其中一种它们都支持的TCP

00:07:45.729 --> 00:07:54.789
 DDP大多没有tcp，没有打孔和在公共场合做一些表演

00:07:54.789 --> 00:08:00.250
有公关，如果你们有时间请看看

00:08:00.250 --> 00:08:07.150
下周发表您的评论花生油的使用量将会更多

00:08:07.150 --> 00:08:10.529
开始实施并

00:08:13.750 --> 00:08:21.530
很好，谢谢，接下来我们有不在这里的Vasco，他告诉我他在

00:08:21.530 --> 00:08:28.280
里斯本帽周，他正在开会，所以我要读

00:08:28.280 --> 00:08:35.510
找出他放在这里的东西，以便服务人员进入网关好吧，我们正在努力

00:08:35.510 --> 00:08:42.229
拼凑的Service Worker网关回购到以下几个垂直显示文件中

00:08:42.229 --> 00:08:48.380
服务工作中的几种类型可以逃脱

00:08:48.380 --> 00:08:54.410
然后他在解决问题上总是做对不起，问题五八一

00:08:54.410 --> 00:08:57.860
自称是代理人，是的，这就是我所说的

00:08:57.860 --> 00:09:04.120
与我认为的api路径文档

00:09:04.779 --> 00:09:08.720
他们还阻止了什么，而不是因为里斯本黑客袭击而阻止了他的任何事情

00:09:08.720 --> 00:09:13.579
他正在提供网关的服务上工作，嗯，他想分开

00:09:13.579 --> 00:09:18.680
分成模块，几个模块进行重构，其中一半被释放给她

00:09:18.680 --> 00:09:25.010
发布已经将第一个版本部署到了Jess，ipfs很不错，

00:09:25.010 --> 00:09:37.220
 rad很快就走了，我们没事了，所以也正在开会，

00:09:37.220 --> 00:09:44.899
相反，这样做很酷，所以找到了一种方法来证明我们如何处理Jess中的错误，这很不错

00:09:44.899 --> 00:09:54.140
试管婴儿是的，我也想看看这个，所以我将努力

00:09:54.140 --> 00:09:59.060
看看这个问题本周的工作进度pr2 a remove boot from

00:09:59.060 --> 00:10:04.570
构造函数并停止使用正在进行的事件发射器

00:10:04.570 --> 00:10:09.680
阻止它不适用，他也是里斯本黑客

00:10:09.680 --> 00:10:22.060
是的，将pub sub添加到文件交换示例中，好酷，然后

00:10:22.060 --> 00:10:31.660
那是去年之前，下一个是MK ge ge，所以我一直

00:10:31.660 --> 00:10:38.100
在脂质上工作，Roger I修复了有关RPC的一些问题

00:10:38.100 --> 00:10:44.170
因为它只是向唯一的对等端注册

00:10:44.170 --> 00:10:51.250
发现必须运行是为了使代码启用，但胜利者也在工作

00:10:51.250 --> 00:10:59.259
就这样，他告诉我他要去工作了，是的，现在我可能

00:10:59.259 --> 00:11:03.879
只会等到他对我说完之后再对我的公关做些什么

00:11:03.879 --> 00:11:12.750
我下周没有计划任何事情，所以我愿意征求意见

00:11:13.890 --> 00:11:19.820
好吧，好吧，您想得到一些东西，就是这样

00:11:19.820 --> 00:11:24.120
是的，酷，好吧，我不仅仅是你在走

00:11:24.120 --> 00:11:29.250
整天都可以，很酷，我可以猜测华夫饼干板可能是最好的地方

00:11:29.250 --> 00:11:35.430
给他们一些东西，也许我可以，也许大卫可以帮助

00:11:35.430 --> 00:11:40.230
将您指向最优先的方向酷

00:11:40.230 --> 00:11:44.660
是的，我们只是在寻找重要的东西，看看我是否找不到任何东西

00:11:44.660 --> 00:11:56.420
是的，下一个会很酷的ace是亚历克斯

00:11:57.019 --> 00:12:02.279
你好，我也是里斯本黑客周继续在我身后，我没看到

00:12:02.279 --> 00:12:10.410
上周早些时候，我仍在开发em FS，因此我将其与

00:12:10.410 --> 00:12:17.489
J，所以FS非常酷，它开始针对它运行接口测试，并且大多数

00:12:17.489 --> 00:12:21.479
它爆炸了，因为事实证明两者之间存在很多差异

00:12:21.479 --> 00:12:27.029
当我第一次发现最有趣的时候，就去做吧。

00:12:27.029 --> 00:12:33.389
是，如果您ipfs添加一个空文件，则会得到不同的哈希值

00:12:33.389 --> 00:12:36.269
很棒，这很有趣，是的，这很棒

00:12:36.269 --> 00:12:40.979
第一步，所以我提交了可以解决该问题的PR，我只是想

00:12:40.979 --> 00:12:45.869
通过并确保其中的这些事物具有相同的哈希值，因为

00:12:45.869 --> 00:12:49.669
尽管测试依赖于哈希，并且它针对

00:12:49.669 --> 00:12:54.479
其他有趣的东西，例如从走回去拿空字符串，我认为

00:12:54.479 --> 00:12:59.669
具有类型系统和另一种无聊的东西的副作用是的，所以我

00:12:59.669 --> 00:13:04.559
我认为这就像是一个长期的正在进行的项目，

00:13:04.559 --> 00:13:10.499
确保它在时间表中，是的，所以我现在也要通过管道

00:13:10.499 --> 00:13:14.970
用于文件API，因为我们有很多疯狂的东西，例如传递光线

00:13:14.970 --> 00:13:19.499
作为诸如引发文件之类的参数，我感觉像源和目标参数

00:13:19.499 --> 00:13:22.859
而不是像两个离散的参数一样，并且这种开始于

00:13:22.859 --> 00:13:25.949
您正在尝试使API更好一点，您知道会变得更好

00:13:25.949 --> 00:13:37.619
开发人员的经验，是的，希望很酷，谢谢您。

00:13:37.619 --> 00:13:41.299
那里正在取得进展，我看到请求请求开始出现

00:13:41.299 --> 00:13:48.209
很酷，我们会去找他们，对不起问题，对，亚历克斯，我会

00:13:48.209 --> 00:13:51.629
很高兴在这次会议之后与您交谈，也许是闲暇之余，或者我可以跳

00:13:51.629 --> 00:13:55.859
在IRC上，关于您如何测试这些东西，我遇到了很多类似的问题

00:13:55.859 --> 00:14:02.279
甚至不只是上周的事情终于弄清楚了如何测试

00:14:02.279 --> 00:14:08.519
然后去Jas那似乎没有被写下来的地方，所以如果我

00:14:08.519 --> 00:14:14.250
我们可以谈谈，也许可以从中得到一些帮助

00:14:14.250 --> 00:14:17.130
我很想知道您的操作方式，因为我最终只是破解了源代码

00:14:17.130 --> 00:14:20.760
像我认为的代码应该只是一个环境变量

00:14:20.760 --> 00:14:27.060
你能说有一个我们把它拿出来的原因是Jade JSI

00:14:27.060 --> 00:14:34.680
 PFS API回购用户可以运行界面测试j / s ipfs使用Java

00:14:34.680 --> 00:14:38.730
编写脚本并运行界面测试以及它们各自的大量额外测试

00:14:38.730 --> 00:14:44.780
本身是正确的，所以我们可以谈谈

00:14:46.589 --> 00:14:54.670
是的，测试范围很广，有时很难理解

00:14:54.670 --> 00:14:58.899
达到这种理解的观点，我认为这很重要，我认为它将

00:14:58.899 --> 00:15:05.240
帮助我们找到一种好的方法以及其他任何问题

00:15:05.240 --> 00:15:10.420
我们应该搬家吗-我想这个家伙还是你的下一个

00:15:10.420 --> 00:15:16.880
好吧，在我尝试将JavaScript的位律法知识推向幽灵之前

00:15:16.880 --> 00:15:23.140
我在测试中发现了一些小问题，我认为它是IPS CTL

00:15:23.140 --> 00:15:26.959
提交了一些不好的要求，我收到了一些非常好的反馈，这些反馈是

00:15:26.959 --> 00:15:32.810
等待审核或等待发布，而我之外的其他人

00:15:32.810 --> 00:15:40.250
我在ASI中增加了三个，最多两个或三个不同的功能

00:15:40.250 --> 00:15:47.450
PFS但是交换东西我正在为有拉力的同伴在分类帐上工作

00:15:47.450 --> 00:15:52.700
为此请很好地请求，并在这一点上看到我所看到的

00:15:52.700 --> 00:15:59.329
所有的测试和材料我在核心彗星中都有一个关于如何进行测试的公开问题

00:15:59.329 --> 00:16:03.170
在处理三个三个仓库之间开发脚本的方法

00:16:03.170 --> 00:16:06.620
一旦我们对此感到满意，我将把所有这些都拿走，

00:16:06.620 --> 00:16:09.230
让他们成为一个，因为他们不在，那里没有很多事情要做

00:16:09.230 --> 00:16:14.630
真的只是在JSI PFS上增加了一个表面积，这样我就不必费力

00:16:14.630 --> 00:16:20.000
所有这些PR以及我们使事情变得更接近我们想要在之间发布的方式

00:16:20.000 --> 00:16:24.640
核心API和JSF BFS

00:16:27.829 --> 00:16:38.869
好的，酷，谢谢您，先生，我们有一个叫龙题的人

00:16:38.869 --> 00:16:44.850
很好，所以我们得到了什么，因此詹金斯（Jenkins）在11月开始在NPM上使用纱线

00:16:44.850 --> 00:16:49.769
2017年是有原因的切换原因，我找不到一个明确的原因，因为我们不是

00:16:49.769 --> 00:16:55.609
使用打包的锁和几个UJS ipfs依赖关系也将其用作开发人员

00:16:55.609 --> 00:16:59.699
依赖关系导致锁定版本的很多问题

00:16:59.699 --> 00:17:08.069
使用不同的软件包管理会加剧问题，是的，我不知道为什么yan是

00:17:08.069 --> 00:17:21.659
我知道在詹金斯（Jenkins）中使用它，所以今天我在与Ollie Ollie Silla和

00:17:21.659 --> 00:17:30.600
他我认为迪米特里（Dimitri）有事哦，是的，你去对不起，所以

00:17:30.600 --> 00:17:37.139
我们使用yarn的原因是因为它具有更好的并行性，因此

00:17:37.139 --> 00:17:40.799
当您运行多个实例时，它们的破坏程度并没有那么大

00:17:40.799 --> 00:17:47.000
不要在同一时间，因为现在我们的杰克

00:17:49.160 --> 00:17:55.400
哔哔感谢跑步者，这是另一回事，所以是的，那是

00:17:55.400 --> 00:17:59.930
我认为原因是院子里有包装件外观以及何时开始实施

00:17:59.930 --> 00:18:07.010
詹金斯（Jenkins）的东西Victor可以在这里告诉所有人

00:18:07.010 --> 00:18:10.460
是一个确实有效的方法，但这是我从与我的对话中了解到的

00:18:10.460 --> 00:18:16.670
他和我在MV上得到了一半的包装，但是后来

00:18:16.670 --> 00:18:22.190
抢劫，但这是消息来源理解是的主要原因，我认为您裁员了

00:18:22.190 --> 00:18:28.220
刚好在最重要的部分中间，对不起

00:18:28.220 --> 00:18:35.960
你们能给我钢吗，是的，所以在那里使用了纱线

00:18:35.960 --> 00:18:40.960
因为并行性，因为我们当时我们没有詹金斯选手

00:18:40.960 --> 00:18:47.710
孤立，它们运行在我可能会运行的同一个盒子上，恭喜它

00:18:47.710 --> 00:18:55.400
好几个跑步者，就是这样，所以纱线具有更好的平行度

00:18:55.400 --> 00:19:01.460
当您与奥斯汀smpm同时进行侮辱时，不会弄乱

00:19:01.460 --> 00:19:09.530
我猜它现在可能会有所改善吗，我们还有NPM软件包插槽

00:19:09.530 --> 00:19:15.680
现在，我认为我们当时没有看到它，所以它

00:19:15.680 --> 00:19:19.730
可能是需要研究的东西，也许我们不能将目光投向一个

00:19:19.730 --> 00:19:29.450
因为我认为大多数人可能都在使用NPM，而且我还研究了

00:19:29.450 --> 00:19:34.910
NPM的软件包锁定功能，哦，首先，所以，这就是我所需要的

00:19:34.910 --> 00:19:39.410
好的，如果我们开始这是下一个问题，但是我们是否开始添加

00:19:39.410 --> 00:19:44.810
软件包重新锁定，因为我知道我们过去冻结了

00:19:44.810 --> 00:19:53.300
把那些排除在外，我加那些知道的，我想所以我想

00:19:53.300 --> 00:20:01.060
使用软件包看起来是一个替代品，但Victor现在的建议之一就是

00:20:01.220 --> 00:20:06.740
说版本不给我们任何标志，只使用特定版本

00:20:06.740 --> 00:20:15.549
我们的包裹Chasen是因为我们一直在遇到一些问题

00:20:15.549 --> 00:20:22.870
外科医生，我想念这个词，无论如何，版本尖峰是什么意思

00:20:22.870 --> 00:20:28.010
我们一直遇到一些问题，而我们尚未坚持下去的原因

00:20:28.010 --> 00:20:32.990
大米和使用包装很久以来，因为我们有不同的锁定

00:20:32.990 --> 00:20:36.980
不同包管理器管理器的机制，因此它们不兼容，所以如果

00:20:36.980 --> 00:20:43.220
人们正在使用纱线，我们可以假设他们会捡起纱线。

00:20:43.220 --> 00:20:50.030
 MDM的打包包，反之亦然，所以他提出了一个好点

00:20:50.030 --> 00:20:53.659
我当时只是想留在稻米里，我只是为了

00:20:53.659 --> 00:20:56.780
包锁，但是是的，我的意思是我们有不同的包管理器，所以

00:20:56.780 --> 00:21:01.299
可能还会来，他们基本上所有的伤害都是他们自己的

00:21:01.299 --> 00:21:10.640
锁定机制，那么，从那儿站起来的是的，是的，

00:21:10.640 --> 00:21:16.840
我认为最大的担忧是您谈论的是

00:21:16.840 --> 00:21:20.659
实际上将软件包锁定到特定版本，因为这是其中之一

00:21:20.659 --> 00:21:27.110
节点10出现的事情是当我们有GS ipfs拉入

00:21:27.110 --> 00:21:31.760
守护程序控制器，然后该守护程序控制器实际上将IP FS用作开发人员

00:21:31.760 --> 00:21:37.580
依赖关系，我们遇到了问题，现在它正在安装两个不同的

00:21:37.580 --> 00:21:41.929
FS版本的额外版本，因此当守护程序控制器运行时，实际上

00:21:41.929 --> 00:21:46.460
运行有前途问题的旧版本，或者使用旧版本

00:21:46.460 --> 00:21:50.840
降级后的版本无法编译为10，所以我只看一下

00:21:50.840 --> 00:21:58.450
将其锁定，然后确定[音乐]

00:22:01.150 --> 00:22:04.600
但是让我们谈谈你们对包裹的看法，看看如何处理

00:22:04.600 --> 00:22:08.620
那就是声音解决方案，我想我对此有所考虑，但是我

00:22:08.620 --> 00:22:13.390
认为可以在版本中将其设置为特定版本实际上是一个不错的选择

00:22:13.390 --> 00:22:21.780
事情，但可以听见争论

00:22:23.360 --> 00:22:27.379
是的，我在将它们设置为特定值方面有一些经验

00:22:27.379 --> 00:22:31.759
版本，虽然它在某种程度上起作用，但它仅在该级别上

00:22:31.759 --> 00:22:34.999
之所以会发生，是因为您所依赖的事物仍然会依存

00:22:34.999 --> 00:22:41.960
您是否知道版本范围，因此您仍然会获得依赖项

00:22:41.960 --> 00:22:47.989
在树的深处，然后是那种直接的依赖关系

00:22:47.989 --> 00:22:53.629
有不同的版本，它们会不断变化，因此根据我的经验，您

00:22:53.629 --> 00:22:56.840
如果您想锁定版本，则需要一个锁定文件或

00:22:56.840 --> 00:23:05.570
收缩包装可以做到这一点，是的，这是我的经验，我也认为我们已经

00:23:05.570 --> 00:23:10.549
得到了所有这些或这么多的小模块，然后我们必须知道发布

00:23:10.549 --> 00:23:14.539
就像我们必须更新程序包以便他们想要面对时

00:23:14.539 --> 00:23:18.440
炸弹库也改变了这个版本，只是一个巨大的

00:23:18.440 --> 00:23:21.109
就像我认为我们应该去那里买东西，至少我们应该

00:23:21.109 --> 00:23:26.139
发布所有内容的第一个版本并使用

00:23:33.080 --> 00:23:41.060
是的，我想可能需要更多的莫顿讨论，我不知道全部

00:23:41.060 --> 00:23:46.070
包裹锁背后的详细信息以及为什么它们在那里，以及和

00:23:46.070 --> 00:23:49.340
一切的当前版本号以及为什么要上课

00:23:49.340 --> 00:23:56.470
他们还不到一个，所以对吧，继续Dimitri

00:23:57.650 --> 00:24:02.690
是的，我同意亚历克斯，现在我们要承担很多开销

00:24:02.690 --> 00:24:08.090
关心与耕作之间的关系，以及每次更新时的光束角

00:24:08.090 --> 00:24:16.070
依赖，如果我们可以做一些事情，例如琳达，或者有一个

00:24:16.070 --> 00:24:21.880
将这些约定设置为包管理器级别，然后

00:24:21.880 --> 00:24:26.960
避免改变它，这是另一种解决方案，就像艾伦（Alan）

00:24:26.960 --> 00:24:31.850
建议这只是我要从那里开始的一件事版本，

00:24:31.850 --> 00:24:38.390
不使用历史的零版本是的，大卫，是的，为什么我们

00:24:38.390 --> 00:24:41.000
没有任何版本之一，他说基本上是因为我们

00:24:41.000 --> 00:24:46.280
没有完整的功能，听起来像沙子中的任意线，

00:24:46.280 --> 00:24:50.660
我们永远不会越过，因为围棋团队比Juris领先得多

00:24:50.660 --> 00:24:53.870
他们仍然会添加功能的团队，还有一个网站

00:24:53.870 --> 00:24:57.260
某处的页面上列出了所有尚未完成的未完成的事情

00:24:57.260 --> 00:25:00.020
实施，现在这将永远增长，我们可能

00:25:00.020 --> 00:25:03.530
永远不会知道赶上时间或原因不在合理的时间范围内，所以

00:25:03.530 --> 00:25:09.010
我们应该只是放弃这个想法，而只是发布版本

00:25:10.870 --> 00:25:16.940
Demitri与众不同，我们也有不同的目标

00:25:16.940 --> 00:25:21.200
实施，因此在某些情况下他们可能会在某些情况下

00:25:21.200 --> 00:25:26.600
实际上，由于

00:25:26.600 --> 00:25:35.410
是的，项目的骨灰是相同的，非常重要

00:25:36.560 --> 00:25:42.580
带有包装外观的另一个建议是通过子弹，并具有

00:25:42.580 --> 00:25:47.960
该程序包寻找经理那里最受欢迎的两个东西

00:25:47.960 --> 00:25:52.900
现在，这是你的荣幸，如果你等待

00:25:52.990 --> 00:26:01.730
那可能是最简单的，所以包裹锁是给我们的，而不是给人的

00:26:01.730 --> 00:26:04.640
依靠的是他们对那些没有影响的人没有任何影响

00:26:04.640 --> 00:26:13.760
如果我们需要打包锁，则安装ipfs仅仅是

00:26:13.760 --> 00:26:21.170
会变得非常混乱，我宁愿将ci切换为使用NPM和

00:26:21.170 --> 00:26:24.550
只是让每个人都使用NPM

00:26:26.410 --> 00:26:34.540
我想如果我们要在那些勃朗峰的立场上做得很好，我的意思是

00:26:34.540 --> 00:26:38.890
可能不会发布，但是如果您尝试进行一些开发或运行

00:26:38.890 --> 00:26:42.130
幸运的是，然后您将把我们的学生保存在这些文件中，但是是的，我们可能

00:26:42.130 --> 00:26:48.550
显然会释放那些，但仍然会有一些

00:26:48.550 --> 00:26:52.660
我们的用户将一直运行，直到您与他们相关为止

00:26:52.660 --> 00:26:56.650
尽管他们可能正试图破解代码或其他东西，但事实是

00:26:56.650 --> 00:27:02.440
将会在那里，我们将其用于那些搜索，所以是的，我的意思是我们可以

00:27:02.440 --> 00:27:06.580
站起来，我们可以告诉所有人使用MDM或当心，

00:27:06.580 --> 00:27:14.610
非常感谢，并有任何更好的解决方案

00:27:15.539 --> 00:27:22.470
是的，好吧，嗯，我很好奇，当涉及到像使用纱线一样

00:27:22.470 --> 00:27:26.429
您发现您的院子实际上编译速度更快，因为您

00:27:26.429 --> 00:27:32.130
使用纱线现金而不是像NPM，因为不要以为最新版本

00:27:32.130 --> 00:27:37.760
的NPM仍然希望拥有现金，除非您在全球范围内进行安装

00:27:39.590 --> 00:27:46.870
我觉得它确实不错，我可以

00:27:46.870 --> 00:27:51.640
抱歉，有人看过吗，是的，我想那是我看过的

00:27:51.640 --> 00:27:58.390
没有唯一的地方让我落后于迷失的时代

00:27:58.390 --> 00:28:04.390
版本我做得不错，没有以前的合同比较MPM和纱线

00:28:04.390 --> 00:28:09.820
并发现，如果您使用的是NPM 5，并且拥有速度优势

00:28:09.820 --> 00:28:13.600
一旦仙人掌变热，由于仙人掌而蒸发的数量很少

00:28:13.600 --> 00:28:20.220
酷之间的区别是有道理的

00:28:25.390 --> 00:28:32.930
好的，最好是将它移到离线状态，并为

00:28:32.930 --> 00:28:40.480
进行交换以使用一个，或者您知道两个锁都像我说的那样

00:28:40.480 --> 00:28:45.890
反对必须记录文件吊桥所针对的参考

00:28:45.890 --> 00:28:51.890
确保只为每个程序包管理器支持每个日志文件，但是我们可以

00:28:51.890 --> 00:28:59.200
不知道也许权衡并做出决定听起来不错吗

00:28:59.520 --> 00:29:05.930
很好，我们还有其他问题吗，请允许我快速单击

00:29:05.930 --> 00:29:12.450
是的，使用你的密码，是的，使用包锁进行转移，是的

00:29:12.450 --> 00:29:18.060
不使用软件包哦，好吧，除非有

00:29:18.060 --> 00:29:22.570
[音乐]中当前出现的问题

00:29:22.570 --> 00:29:32.580
在结束酷炫之前，任何其他议程项目都由其他任何人完成

00:29:33.680 --> 00:29:39.200
好吧，很高兴再次与大家交谈，并希望

00:29:39.200 --> 00:29:50.680
再过一周我会再见的，您会发现一个激动人心的开发团队每周再见

