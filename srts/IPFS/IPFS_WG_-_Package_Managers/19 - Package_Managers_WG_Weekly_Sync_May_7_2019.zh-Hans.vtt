WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.979 --> 00:00:07.410
我正在录制您好欢迎每周的包装经理为我们唱歌

00:00:07.410 --> 00:00:13.349
2019年5月7日特别贴心的奶油我正在做绿色我希望你能

00:00:13.349 --> 00:00:17.220
举办一场关于上周我们所做的游戏以及本周我们所做的事情

00:00:17.220 --> 00:00:25.980
我们先走了，所以上周我正在尝试像

00:00:25.980 --> 00:00:31.650
UNIX FS导入器（用于Jerris ipfs）从回调到异步的转换

00:00:31.650 --> 00:00:37.800
等待它仍在进行中，因为是的，它大部分已经完成了最后一块

00:00:37.800 --> 00:00:41.430
难题的关键是滴入式挖掘很重要，我认为其中有些

00:00:41.430 --> 00:00:45.059
杰伊斯（Jayce）和山羊之间的不兼容性，并试图带来这件衣服

00:00:45.059 --> 00:00:49.980
可以实现在线实施，但是是男人在尝试进行介绍性测试

00:00:49.980 --> 00:00:54.090
这意味着然后将所有内容与J集成在一起，所以我也首先出现在其中

00:00:54.090 --> 00:00:57.210
本来应该做的下一步

00:00:57.210 --> 00:01:02.879
步骤是因为算法不同，所以有点奇怪

00:01:02.879 --> 00:01:06.990
明天也是我，我也会继续努力

00:01:06.990 --> 00:01:17.750
和s营的Jacob IP一起参加Lib p2p研讨会，我星期四出门

00:01:17.750 --> 00:01:23.640
对于您知道的一些个人业务，我记得在这里谈论过，但是如果

00:01:23.640 --> 00:01:29.070
您有兴趣听到我可能是的，那是我，这是我的最新消息安德鲁

00:01:29.070 --> 00:01:36.930
你是下一个美好的一天，所以上周我花了很多时间

00:01:36.930 --> 00:01:43.290
研究分散管理中涉及的不同要素和挑战

00:01:43.290 --> 00:01:50.130
发布此内容是受到我们不确定我可以谈论的一个电话的启发

00:01:50.130 --> 00:01:57.799
尚未公开，但应该在

00:01:58.040 --> 00:02:04.490
几周后，我认为一旦公开发布，但基本上

00:02:04.490 --> 00:02:11.520
一种相当深入地研究了去中心化所涉及的内容

00:02:11.520 --> 00:02:16.290
发布给定的包管理者的可能和一些挑战，以及

00:02:16.290 --> 00:02:22.440
一些不同种类的开门，许多不同的门

00:02:22.440 --> 00:02:27.840
您可以选择将您可能会获得的收益作为收益的途径，并进行比较和

00:02:27.840 --> 00:02:34.950
相比之下，与更集中的现有系统相比，我实际上并没有

00:02:34.950 --> 00:02:41.100
结论几乎是一经发表就被要求的，因此

00:02:41.100 --> 00:02:46.110
毫无疑问，本周我会花一些时间整理一下，我可能会

00:02:46.110 --> 00:02:52.380
将其从github问题中移出并将其放入文件中的实际文件中

00:02:52.380 --> 00:02:58.380
像持续改进和请求不佳等疾病的存储库

00:02:58.380 --> 00:03:04.410
而不是只是一个问题，但感觉那是个好地方

00:03:04.410 --> 00:03:07.980
最初是要查看是否有人在讨论是否有讨论

00:03:07.980 --> 00:03:12.959
通过所有这些，然后我有一周的空闲时间来深入研究任何

00:03:12.959 --> 00:03:21.350
我很清楚的一点点，我也对Eric的手法做了一些可视化

00:03:21.350 --> 00:03:29.510
ipfs支持的决策树让我尝试快速共享我的屏幕

00:03:29.510 --> 00:03:39.900
怎么看这是否可行，我们去了，所以这实际上是

00:03:39.900 --> 00:03:47.810
文本内容的复制粘贴链接在此调用的注释中

00:03:47.810 --> 00:03:53.580
他写了Eric的问题，但试图将其可视化为决策树

00:03:53.580 --> 00:03:58.860
而不是作为一堆嵌套的无序列表，肯定有很多

00:03:58.860 --> 00:04:06.680
扩大范围，还有更多的决定可以放入或

00:04:06.680 --> 00:04:14.099
多个答案，而不只是肯定的答案，然后是种种悬而未决的选择

00:04:14.099 --> 00:04:18.989
在底部，还有很多不同的途径可以走，特别是

00:04:18.989 --> 00:04:24.540
根据我上周进行的去中心化发布研究，

00:04:24.540 --> 00:04:29.880
想尝试挑逗不同类别的一些决策路径

00:04:29.880 --> 00:04:39.000
软件包管理器的使用，因此基于文件系统的Linux软件包管理器将

00:04:39.000 --> 00:04:45.780
采取与说NPM集中式管理完全不同的途径

00:04:45.780 --> 00:04:52.260
数据库返回注册表并尝试并突出显示其中的快乐路径

00:04:52.260 --> 00:04:57.750
是为了让人们几乎可以拥有而不是选择自己的冒险

00:04:57.750 --> 00:05:02.310
几乎就像您的包管理器的属性是什么

00:05:02.310 --> 00:05:06.479
自然会引导您走这条路，这是您所缺少的部分，

00:05:06.479 --> 00:05:12.270
然后这种引导导致一些有趣的讨论点

00:05:12.270 --> 00:05:17.610
人们可以去调查，但也可以开放给其他人编辑，我会

00:05:17.610 --> 00:05:22.370
如果有人想潜入并添加东西，请在其中放置壁画的链接

00:05:22.370 --> 00:05:29.130
还有其他任何事情也只想提及，一个新版本

00:05:29.130 --> 00:05:38.100
的Lapham像12小时前一样运出

00:05:38.100 --> 00:05:41.280
在安装时添加指定特定版本的功能

00:05:41.280 --> 00:05:45.750
但基本上这只是真的很有趣，因为那意味着

00:05:45.750 --> 00:05:51.150
他们现在已经删除了所有

00:05:51.150 --> 00:05:56.550
他们开始研究ipfs集成，所以现在他们开始涉足

00:05:56.550 --> 00:06:02.970
我跟着一个人跟进，我忘了今天早上是谁，我

00:06:02.970 --> 00:06:07.560
想象很快就会有很多的来回转发

00:06:07.560 --> 00:06:12.810
很好，然后下周这周甚至对不起

00:06:12.810 --> 00:06:18.130
我想做的另一件事是写一些我在想的想法

00:06:18.130 --> 00:06:22.660
大约在周末使用本地化的包裹数据，但我不会涉及

00:06:22.660 --> 00:06:27.760
现在，如果我们在通话结束时有时间，那我现在可以扩展一下

00:06:27.760 --> 00:06:34.320
嗯，是的，我想就是杰西卡

00:06:37.940 --> 00:06:46.730
抱歉，您可能听到了咖啡研磨机，我事先向您道歉，所以我

00:06:46.730 --> 00:06:53.000
经历并消灭了受众群体，他们是ipfs的前身

00:06:53.000 --> 00:06:58.910
增强痛点及其现有的沟通渠道，这就是全部

00:06:58.910 --> 00:07:05.210
在神经基座上，如果可以在屏幕上找到我的屏幕，则可以共享屏幕

00:07:05.210 --> 00:07:25.700
单屏分享原谅我我应该在其他地方

00:07:25.700 --> 00:07:30.860
现在被路边困住了，所以我确实走过了这个

00:07:30.860 --> 00:07:37.640
反映这是我还没有的安德鲁斯原始痛点文件

00:07:37.640 --> 00:07:43.760
并按主题领域按以下三个主要受众细分

00:07:43.760 --> 00:07:49.250
打包消费者打包发布者，然后打包经理将错误保持为

00:07:49.250 --> 00:07:58.010
您可以看到主题分组使我们更加了解一些

00:07:58.010 --> 00:08:01.669
一些领域比其他领域更重要或相关性比

00:08:01.669 --> 00:08:07.880
其他人，然后还进行了bash授予，因为这在现有技术中是相当高级的

00:08:07.880 --> 00:08:15.370
这些受众声明中的每一个都可能使用的沟通渠道

00:08:15.370 --> 00:08:20.540
将这些内容分离为该用户细分受众群本身拥有的内容

00:08:20.540 --> 00:08:25.790
很明显，包裹使用者本身或包裹消费者没有

00:08:25.790 --> 00:08:32.060
他们自己的话语渠道，然后是那些

00:08:32.060 --> 00:08:36.890
程序包或程序包管理器维护有自己运行的渠道，因此

00:08:36.890 --> 00:08:40.400
真的只是希望以此作为初始起点

00:08:40.400 --> 00:08:43.969
进一步的讨论，您知道的进一步，您将来会知道

00:08:43.969 --> 00:08:49.970
我希望看到这里的一些痛苦点被分解成世界

00:08:49.970 --> 00:08:53.270
实际上，我们可以将其用于优先级甚至

00:08:53.270 --> 00:08:57.230
随着时间的流逝生成用户故事，就像我说的那样，这很漂亮

00:08:57.230 --> 00:09:03.560
非常高的水平，我非常感谢你们的任何想法

00:09:03.560 --> 00:09:08.029
可能对此有进一步的建议，您知道我有一些想法，但我想

00:09:08.029 --> 00:09:13.959
也会引起大家的想法，您就有机会仔细研究一下

00:09:13.959 --> 00:09:21.589
在接下来的两天里，如果您有机会在文档中找到链接

00:09:21.589 --> 00:09:29.350
今天的笔记还写了，所以继续

00:09:29.350 --> 00:09:36.649
非常感谢Andrew将分类树变成了流程图，因为

00:09:36.649 --> 00:09:43.430
那是我想开始可视化的事情清单上的下一个

00:09:43.430 --> 00:09:47.240
看一看树，并在那上面扩展一点

00:09:47.240 --> 00:09:59.300
您也注意到了，您也曾经遇到过，而在我被错误引用的情况下，

00:09:59.300 --> 00:10:04.610
请注意，但将那些细分拉开

00:10:04.610 --> 00:10:09.829
身份发现的顶层细分为愿意尝试将其挖掘为

00:10:09.829 --> 00:10:15.730
可能会转变为可能暗示未来细分的事物

00:10:15.730 --> 00:10:21.370
定义个人问题，我们可以进一步解决

00:10:21.370 --> 00:10:30.200
分离出来的离散部分肯定是它被写下来

00:10:30.200 --> 00:10:35.089
就像大多数场景中的场景设置一样

00:10:35.089 --> 00:10:39.950
经理目前将所有这三件事放在一起，因为

00:10:39.950 --> 00:10:43.310
肯定有一些有趣的用例，比如说，如果您已经

00:10:43.310 --> 00:10:49.040
只是做了这些部分之一，像这样打开什么，我有点启用

00:10:49.040 --> 00:10:53.600
您要做或喜欢做的事情有时需要与我联系起来，是的，我

00:10:53.600 --> 00:10:59.270
认为这是特别关键，在您对您的评论中，我们

00:10:59.270 --> 00:11:03.320
可能需要做一些更重的任务来解决

00:11:03.320 --> 00:11:08.930
发现其中的一部分，至少是我自己

00:11:08.930 --> 00:11:13.640
不缺乏您认为还可以的技术专业知识，所以我想

00:11:13.640 --> 00:11:17.089
我想进一步挖掘一点，但我认为下一步是要进行的工作

00:11:17.089 --> 00:11:21.050
通过他们，您知道那些文件中的那些问题，并至少尝试获得

00:11:21.050 --> 00:11:25.130
我不知道的是更细分的格式，然后我们可以

00:11:25.130 --> 00:11:29.149
谈论也许我们想如何代表这一点，甚至在

00:11:29.149 --> 00:11:32.959
包管理器仓库，也许我们实际上想对空间进行排序

00:11:32.959 --> 00:11:39.410
按主题列出，我不确定此时是否过于细分

00:11:39.410 --> 00:11:45.529
可以随意撕碎它，它很棒，所以我会继续

00:11:45.529 --> 00:11:50.750
想想如果我能修好汽车，我会在佛蒙特州

00:11:50.750 --> 00:11:55.459
下午剩下的时间可以帮助一些人捍卫自己的观点，但是如果您

00:11:55.459 --> 00:11:58.660
需要他的任何急事，你知道我的电话很闲或者什么

00:11:58.660 --> 00:12:01.660
谢谢

00:12:03.000 --> 00:12:05.060
你

00:12:06.010 --> 00:12:12.520
还有其他人在码头上没有的东西

00:12:15.320 --> 00:12:17.380
你

00:12:21.460 --> 00:12:26.200
大怪兽其他生意

00:12:26.710 --> 00:12:35.420
所以我简短地提到了一种基于这种想法的思考

00:12:35.420 --> 00:12:42.860
如果您可以放置​​一个程序包管理器以将其分解为

00:12:42.860 --> 00:12:47.780
通常由大多数程序包管理器组成的组件最终

00:12:47.780 --> 00:12:52.670
就像将它们全部组合在一起通常是因为它们使用的数据库

00:12:52.670 --> 00:13:00.290
给他们几乎所有这些不同的功能，所以很容易

00:13:00.290 --> 00:13:06.340
然后走吧，哦，好吧，我们可以进行搜索和解析算法

00:13:06.810 --> 00:13:12.480
以及所有来自相同数据的类似可变的更新事物列表

00:13:12.480 --> 00:13:16.320
源，那真的很容易，但是如果您尝试将这些索引分开

00:13:16.320 --> 00:13:24.180
并把它们放在ipfs上，那么就像我真的不需要600,000的索引

00:13:24.180 --> 00:13:31.620
包，如果我的项目中只有2000个包，那么

00:13:31.620 --> 00:13:39.270
我沿着搜索的路径以及所有可用列表的实际种类

00:13:39.270 --> 00:13:46.860
事情不一定必须与依赖相关联

00:13:46.860 --> 00:13:52.890
给定项目的解析算法，这让我思考

00:13:52.890 --> 00:13:58.810
你要有任何项目，甚至任何人

00:13:58.810 --> 00:14:05.410
一种具有少量本地化的依赖数据组或依赖数据块

00:14:05.410 --> 00:14:15.150
与他们相关的元数据和实际包装内容，但这些数据不是

00:14:15.150 --> 00:14:25.720
巨大的，即使是最大的存储，也可能不到一千兆字节

00:14:25.720 --> 00:14:31.660
包或抱歉不打包软件项目，您可以想象

00:14:31.660 --> 00:14:36.190
最终会被包裹在docker映像中的一种东西

00:14:36.190 --> 00:14:41.230
都已经安装并编译了这种大小的数据

00:14:41.230 --> 00:14:49.630
变得很有趣，因为然后ipfs实际上可以很容易地移动

00:14:49.630 --> 00:14:56.380
围绕并理解一小部分数据或几组数据，而不是试图说

00:14:56.380 --> 00:15:01.270
像哦，您需要镜像整个注册表，甚至可能

00:15:01.270 --> 00:15:05.380
像说，而不是完全分散，如果你有集中的话

00:15:05.380 --> 00:15:11.020
您几乎可以说的服务，例如可以导入我的程序包依赖关系树

00:15:11.020 --> 00:15:18.150
进入我要开始使用的服务，它实际上上传了

00:15:18.150 --> 00:15:26.860
将数据元数据和类似的源代码打包到特定服务中，而无需

00:15:26.860 --> 00:15:32.710
如果全部通过IP FS完成，则实际上是在指向快照

00:15:32.710 --> 00:15:43.180
那些指向特定项目数据的指针

00:15:43.180 --> 00:15:47.760
实际上可以做出一定程度的可移植性，而不必

00:15:47.760 --> 00:15:53.350
固定下来喜欢哦，要使它正常工作，我们将需要整体镜像

00:15:53.350 --> 00:15:58.480
注册表或至少能够代理回原始注册表

00:15:58.480 --> 00:16:03.220
如果您想说而不是仅仅说一个，会是什么样子？

00:16:03.220 --> 00:16:08.380
包含指向某些注册表的清单的锁定文件

00:16:08.380 --> 00:16:14.710
网址可以是某种文件，也可以是某种

00:16:14.710 --> 00:16:19.930
没有这个项目，您需要的全部内容

00:16:19.930 --> 00:16:25.570
像安装到docker映像中一样，无法完全确定其外观

00:16:25.570 --> 00:16:31.840
但是当与ipfs特别相关时，这似乎是一个有趣的领域

00:16:31.840 --> 00:16:41.170
因为其中的许多数据块都像存档文件一样

00:16:41.170 --> 00:16:45.610
给定的项目将在项目之间共享，尤其是对于所有类型的项目

00:16:45.610 --> 00:16:52.390
流行一点的依赖关系，因此您可能会拥有类似的用户

00:16:52.390 --> 00:16:57.100
最终共享了很多数据，尤其是对于正在使用

00:16:57.100 --> 00:17:03.850
相同类型的项目，而不必依赖完整的清单和

00:17:03.850 --> 00:17:07.569
仍然意味着您需要在其他地方提供其他服务来进行搜索和

00:17:07.569 --> 00:17:14.319
更新，以便能够查找新软件包或听到有关现有更新的信息

00:17:14.319 --> 00:17:22.480
您所关心的软件包，但它意味着您可以稍微

00:17:22.480 --> 00:17:26.740
将他们的关注点分开，而不是一定要解决所有问题

00:17:26.740 --> 00:17:30.750
同时发现三个问题

00:17:30.750 --> 00:17:32.810
你

00:17:34.070 --> 00:17:39.800
其中一些并尝试将其与一些问题列表连接起来，

00:17:39.800 --> 00:17:44.270
杰西卡（Jessica）也一直在分裂，因为那感觉很好

00:17:44.270 --> 00:17:49.870
可以回去思考的地方

00:17:49.920 --> 00:17:58.380
哦，天哪，我只是你在说，嗯，我想那实际上是

00:17:58.380 --> 00:18:04.110
开始有趣的是，有一种像他们一开始就被跟踪的服务

00:18:04.110 --> 00:18:08.550
就像您在编写代码时一样，编码器就像您所说的那样，依赖关系是

00:18:08.550 --> 00:18:13.080
就像上周一样，随着时间的推移，您正在处理的代码

00:18:13.080 --> 00:18:17.730
我本周使用的依赖项，您知道我在处理六个问题

00:18:17.730 --> 00:18:21.510
几个月前，就像您可以跟踪

00:18:21.510 --> 00:18:24.660
当时很热，实际上有一些有趣的地方

00:18:24.660 --> 00:18:28.770
能力，如果您实际上愿意分享您所知道的

00:18:28.770 --> 00:18:31.830
也许在私人场合，还有其他人，因为你可以

00:18:31.830 --> 00:18:37.470
其实有点像tf-idf这样的自然语言处理风格

00:18:37.470 --> 00:18:43.050
匹配并喜欢说“嘿”，您知道您正在从事这件事。6

00:18:43.050 --> 00:18:48.530
几个月前，有人刚开始为您工作，您知道类似的依赖关系集

00:18:48.530 --> 00:18:55.480
也许您应该去找他们谈谈，这对于数据来说是一种新颖的用法，但是

00:18:55.480 --> 00:19:02.409
是的，可以选择共享一定数量的

00:19:02.409 --> 00:19:07.899
该数据可以使您与其他人建立联系

00:19:07.899 --> 00:19:10.659
人们，尤其是如果您说的像哦，好吧，我正在从事开源工作

00:19:10.659 --> 00:19:15.990
项目，所以我想分享更多，而不是说一个封闭的来源

00:19:15.990 --> 00:19:21.580
是的，像这样的私有项目甚至可以与内部项目一起工作

00:19:21.580 --> 00:19:26.440
就像我们正在做的协议应用程序一样，人们从不同的地方转移

00:19:26.440 --> 00:19:29.529
项目，并且您正在处理一些具有很多相似之处的代码

00:19:29.529 --> 00:19:33.700
依赖关系是其他人以前处理过的东西，但是你

00:19:33.700 --> 00:19:36.669
只是什至不知道他们正在为此而工作，然后我认为这是

00:19:36.669 --> 00:19:41.740
你知道这可能就像嘿，你应该知道这个人是

00:19:41.740 --> 00:19:46.419
如果他们不知道实际的代码是

00:19:46.419 --> 00:19:51.059
相同，但会知道您正在使用同一组库

00:19:53.830 --> 00:19:58.830
杰西卡（Jessica），所以这有点像

00:19:58.830 --> 00:20:05.370
行政四或获得卫生问题，但从您的文件继续

00:20:05.370 --> 00:20:10.260
而且让我有点喜欢，我的高级分类

00:20:10.260 --> 00:20:15.900
um的依赖发现和工具，例如将那些人分割出来

00:20:15.900 --> 00:20:22.140
进入问题陈述等，我们想更详细地讨论，

00:20:22.140 --> 00:20:28.230
那么也许将其绑定到新的基础文档上将是最好的方法

00:20:28.230 --> 00:20:35.010
让我们继续在现有的包管理器sig repo中提出任何建议

00:20:35.010 --> 00:20:40.250
过去或人们发现对您有帮助的任何方式

00:20:42.830 --> 00:20:49.050
是的，现在回购协议对于这种协作而言并不是特别好

00:20:49.050 --> 00:20:53.580
因为我们正在做很多事情和问题，并且让他们

00:20:53.580 --> 00:20:56.310
摆脱困境，但我认为我们正处于事情开始发展的那一刻

00:20:56.310 --> 00:21:00.450
摇晃到更离散的类别，所以我想我只是想知道

00:21:00.450 --> 00:21:07.770
如果您有我，我们继续前进，我最初的想法是

00:21:07.770 --> 00:21:14.070
然后开始在github仓库中开始构建，但这也可以工作

00:21:14.070 --> 00:21:19.860
在Google文档中开始构建，大概是三个或四个文件，

00:21:19.860 --> 00:21:26.610
将这些东西分解成大块，然后实际上我们有四个问题

00:21:26.610 --> 00:21:32.490
就像这里缺少一块大块的东西，让我们继续前进，就像有人打开或

00:21:32.490 --> 00:21:36.570
进行思考并喜欢进行协作的任务，或者只是潜入并

00:21:36.570 --> 00:21:40.800
开始编辑，感觉好像我们不需要很多处理，我们只是

00:21:40.800 --> 00:21:44.160
需要某种方式来完成一些更容易协作的事情

00:21:44.160 --> 00:21:48.390
而不是完全正确地编辑问题的内容

00:21:48.390 --> 00:21:52.320
只是让问题得以解决，您知道也许我们可以

00:21:52.320 --> 00:21:59.430
想像我们将如何使用，就像我有一个更大的想法

00:21:59.430 --> 00:22:06.150
是的，我们可以在Wiki上返回包装经理回购工作Wiki的信息。

00:22:06.150 --> 00:22:10.050
他们缺少许多功能，但可能是

00:22:10.050 --> 00:22:19.620
就像没有一样，这是一个简单的问题，我从未使用过Wiki，但是如果有的话

00:22:19.620 --> 00:22:25.050
对于那些进来并加入我们包装的人们来说，这也真的很容易

00:22:25.050 --> 00:22:29.790
经理回购为软件包经理的维护者Zoar用户或以下人员

00:22:29.790 --> 00:22:32.910
通常都很兴奋，他们会很好，我可以告诉你有关这件事的信息

00:22:32.910 --> 00:22:36.000
这是在Maven中发生的，因为我碰巧在Maven社区中，

00:22:36.000 --> 00:22:40.950
这是我的知识，我很容易添加

00:22:40.950 --> 00:22:45.510
那真的很酷，我认为这将有助于我们扩大我们的贡献者

00:22:45.510 --> 00:22:51.300
多一点，所以也许我想做的是确保我们正在做一些

00:22:51.300 --> 00:22:56.970
一种备份，我知道它应该是基于备份的，但是github没有碰到

00:22:56.970 --> 00:23:01.380
维基在五年之内，他们没有垃圾邮件保护，他们没有

00:23:01.380 --> 00:23:06.420
像是将其锁定得特别好或还原的能力

00:23:06.420 --> 00:23:12.990
从字面上看，您必须进行更改才能喜欢在本地克隆Wiki存储库，对其进行编辑，然后将其推送

00:23:12.990 --> 00:23:19.170
再次备份以正确获取历史记录，所以现在没有人真正

00:23:19.170 --> 00:23:26.490
注意到Wiki存在，所以我不太在意它，所以我会

00:23:26.490 --> 00:23:31.410
将研究可能更好的方法来开始组织我们更大的总体规划

00:23:31.410 --> 00:23:35.160
我知道的问题是有时间分离成更大的总体

00:23:35.160 --> 00:23:37.520
问题

00:23:43.490 --> 00:23:49.500
我明天还要和吉姆打个电话

00:23:49.500 --> 00:23:59.580
我认为是讨论他所从事的微型项目工作的一些想法吗？

00:23:59.580 --> 00:24:06.950
在做并可能喜欢在与普通话有关的问题上反弹一些想法

00:24:08.659 --> 00:24:12.649
如果您想谈论更多有关吉姆的话，是的，如果有人有想法

00:24:12.649 --> 00:24:23.299
她应该在我们这里进行，否则我将得到很多项目的整合

00:24:23.299 --> 00:24:30.470
网址，您可以随意将想法和事物放入其中

00:24:30.470 --> 00:24:34.970
那里的问题，您知道他们不必充分考虑

00:24:34.970 --> 00:24:39.649
真的是半生半熟的想法，只是把它们放在那里，其中一些我们可能

00:24:39.649 --> 00:24:46.070
精心设计成一个为期一周的项目，即使我最终没有做

00:24:46.070 --> 00:24:49.220
他们最好把它们放在那里，然后其他人可以拉他们

00:24:49.220 --> 00:24:55.100
离开并为他们工作

00:24:56.509 --> 00:25:02.850
很酷，我认为我们已经没时间了，所以我现在就停止录音，我们可以继续

00:25:02.850 --> 00:25:07.830
到今天余下的夜晚，非常感谢

00:25:07.830 --> 00:25:11.399
参加数据包管理器特殊兴趣小组，我们可以赶上

00:25:11.399 --> 00:25:16.380
5月20日感19在互联网上见到大家

00:25:16.380 --> 00:25:18.979
[音乐]

