WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:05.490
在这台计算机上，你好，欢迎您到包管理器每周同步2月

00:00:05.490 --> 00:00:14.580
2019年19月19日，我动脑子，我是你的主人，

00:00:14.580 --> 00:00:20.960
上周的更新被阻止，我们下一步将要做的是

00:00:20.960 --> 00:00:26.340
我将从上周开始，我们在伦敦有基础设施团队，

00:00:26.340 --> 00:00:33.149
超级有用，我们在NPM上获得了正确的日志记录和指标

00:00:33.149 --> 00:00:38.219
在ipfs NPM注册表Mareth上，它很可爱，因为现在我们可以看到像您一样的

00:00:38.219 --> 00:00:41.840
随着时间的流逝了解资源，以及对超级有用的所有东西

00:00:41.840 --> 00:00:49.110
我调查了我认为镜子中的内存泄漏的事实

00:00:49.110 --> 00:00:52.890
根本不是内存泄漏，只是很有趣

00:00:52.890 --> 00:00:58.680
NPM太快了，它还没有足够快地进入s3，所以我们

00:00:58.680 --> 00:01:02.579
将所有这些数据放下来，然后将其放到缓冲区中等待

00:01:02.579 --> 00:01:04.680
s3正在填充，并且该过程是

00:01:04.680 --> 00:01:09.420
跌倒了，这是个好消息，只需要一点点熊调整就可以了。

00:01:09.420 --> 00:01:14.250
减少了从NPM积极下载内容的过程，这对于现在来说很棒

00:01:14.250 --> 00:01:20.220
大约一个星期，所以我失去了那个，我在上写了一些博客文章

00:01:20.220 --> 00:01:24.900
我需要在注册表中的客户端上的NPM和ipfs

00:01:24.900 --> 00:01:31.650
用那个评论来解决这个问题，所以接下来的事情不会阻碍任何事情

00:01:31.650 --> 00:01:37.770
我要做的是调查一家酒吧/酒吧，所以我们遇到了这个奇怪的问题

00:01:37.770 --> 00:01:44.579
当前复制主服务器将NPM接收的任何内容池化的地方

00:01:44.579 --> 00:01:50.460
他们将其添加到ipfs中时会更新包的名称，因为他们喜欢使用它的ID来调用它

00:01:50.460 --> 00:01:54.750
所有tar球，然后使用pub / sub广播所有镜像嘿

00:01:54.750 --> 00:01:59.070
有更新，这里是新这里，是新公寓，然后结婚

00:01:59.070 --> 00:02:03.299
悟空，将清单的副本替换为以前的版本

00:02:03.299 --> 00:02:08.810
鉴于所有这些都可以工作约半小时，然后突然

00:02:08.810 --> 00:02:13.680
主题对等对象清空的复制主列表，以及

00:02:13.680 --> 00:02:17.659
停止向人们发送消息，即使它声称正在发送消息

00:02:17.659 --> 00:02:21.480
所以我现在正在研究一下，

00:02:21.480 --> 00:02:25.019
大量的伐木作业泛滥成灾，而他们已经在小范围内打开了一个问题

00:02:25.019 --> 00:02:30.359
p2p pub / sub小组的成员，还有一些人的帮助

00:02:30.359 --> 00:02:37.560
那将是我，我不在明天直到下周底，所以我

00:02:37.560 --> 00:02:45.150
将检查我的电子邮件，但我不会做太多我想做的事

00:02:45.150 --> 00:02:51.000
我说的问题是那些指标，您大约知道多少个包装

00:02:51.000 --> 00:02:57.030
下载正在使用的注册表或有多少人喜欢积极使用它

00:02:57.030 --> 00:03:02.489
不，这只是我们目前打算追逐的资源使用情况

00:03:02.489 --> 00:03:05.879
播报我们如何获得自定义指标

00:03:05.879 --> 00:03:12.230
它只是在查看码头集装箱开出的统计数据

00:03:15.260 --> 00:03:23.639
很酷，你在做什么，所以我不知道

00:03:23.639 --> 00:03:26.400
如果我说完全赶上了，但我肯定会好一点

00:03:26.400 --> 00:03:32.370
了解协议实验室的工作方式并阅读了大量文章

00:03:32.370 --> 00:03:39.900
大量的Doctson问题和其他顽皮的小事情

00:03:39.900 --> 00:03:48.120
我确实是一个哦，我可以屏幕共享此内容，让我们尝试基于

00:03:48.120 --> 00:03:55.470
注册表哦，那不是加密板，它看起来像链接还是

00:03:55.470 --> 00:04:04.870
链接，但它们不是链接，让我们尝试此共享，以便

00:04:04.870 --> 00:04:13.540
我做了一个小页面，您可以输入包裹名称，它将被关进监狱

00:04:13.540 --> 00:04:22.570
注册表弄臣ipfs tayo并从那里的API中提取数据，这真的

00:04:22.570 --> 00:04:28.410
仅显示最新版本和cid（如果现在可用），但

00:04:28.410 --> 00:04:32.220
可能有一些不同的事情，你可以用它来做

00:04:32.220 --> 00:04:37.900
可以包装在我们基本上可以制作的Chrome扩展程序中

00:04:37.900 --> 00:04:44.350
如果您访问NPM，则可以将给定版本的CID插入页面中，因此

00:04:44.350 --> 00:04:50.169
人们会复制pasta，如果他们有兴趣直接将其从

00:04:50.169 --> 00:04:56.830
哦，等一下，如果我在它周围拖动我的窗口，那非常

00:04:56.830 --> 00:05:03.250
奇怪的是，我也建立了这样的东西，使我意识到

00:05:03.250 --> 00:05:08.979
我们需要将原因添加到注册表中，所以我也添加了一点

00:05:08.979 --> 00:05:13.630
事情不是托管在ipfs上，而是一个页面，所以我认为您应该

00:05:13.630 --> 00:05:18.100
如果我们愿意的话可以做到这一点，但可能只是做到这一点的一种情况

00:05:18.100 --> 00:05:23.889
作为内置网页而不是整个页面作为注册表的一部分

00:05:23.889 --> 00:05:27.010
我认为我们不想继续进行单独的工作并建立另一个库io

00:05:27.010 --> 00:05:36.760
最重要的是，我也开始研究我还没有真正

00:05:36.760 --> 00:05:41.440
开始构建它，但是我开始制作用于捆绑程序的插件

00:05:41.440 --> 00:05:48.840
Ruby gems依赖管理器，它具有相当不错的API集，能够

00:05:48.840 --> 00:05:57.190
扩展清单格式，以便您实际上可以向锁定文件添加更多内容

00:05:57.190 --> 00:06:05.910
Ruby宝石中的宝石文件锁，而不会被现有的东西炸开

00:06:05.910 --> 00:06:10.750
客户基本上只会更新它关心的部分，

00:06:10.750 --> 00:06:14.620
允许您添加内容，因此您可以在底部添加IB FS块

00:06:14.620 --> 00:06:18.620
可以存储C ID然后用于检索

00:06:18.620 --> 00:06:24.350
从您可以放入捆绑器中的扩展的源类型开始，

00:06:24.350 --> 00:06:29.660
说，就像有不同的方式来加载软件包，他们没有

00:06:29.660 --> 00:06:36.710
必须通过HTTP加载，您可以以各种不同的方式添加，而实际上

00:06:36.710 --> 00:06:43.280
自己实现其中的三个，获得一个，路径一，然后

00:06:43.280 --> 00:06:51.410
另一只哦，普通的rubygems狗，所以开始了，我不认为这也太过分了

00:06:51.410 --> 00:06:54.860
基本上很难做出一个所有人都可以接受的命令

00:06:54.860 --> 00:07:00.560
现有已安装的红宝石宝石将它们放在ipfs上，以获取每个宝石的ID

00:07:00.560 --> 00:07:06.740
包或每个文件点宝石，这是您从rubygems.org获得的，然后

00:07:06.740 --> 00:07:11.210
将其写入gem文件时钟，以便您可以重现整个内容

00:07:11.210 --> 00:07:16.150
再次无需在线，您可以只与本地ipfs守护程序对话

00:07:16.150 --> 00:07:24.800
但确实需要更新ruby ipfs HTTP API包装器

00:07:24.800 --> 00:07:28.940
后面有一个积极的维护者，但他有点慢，所以我一直

00:07:28.940 --> 00:07:35.599
像放在一边一样在叉子上工作，然后我也开始写

00:07:35.599 --> 00:07:42.410
我对一些短期路线图的想法，这是链接

00:07:42.410 --> 00:07:48.440
婴儿床垫思考一些不同类型的

00:07:48.440 --> 00:07:54.339
[音乐]为什么我们希望事情变得一帆风顺

00:07:54.339 --> 00:07:59.379
从不同的角度对IP ffs使用不同的程序包管理器

00:07:59.379 --> 00:08:04.359
来自维护软件包管理器，来自软件包管理器的用户或来自

00:08:04.359 --> 00:08:12.909
协议实验室ipfs，然后也将其广泛分类为

00:08:12.909 --> 00:08:18.219
将经理们打包成实际影响我们如何去获得的方式

00:08:18.219 --> 00:08:23.049
他们将ipfs实施到集中式注册表可移植注册表中，这是一个

00:08:23.049 --> 00:08:27.939
一个有趣的地方，用户从字面上下载注册表的整个副本

00:08:27.939 --> 00:08:33.039
每次他们安装东西多个注册表是Maven和

00:08:33.039 --> 00:08:37.779
apt和RPM就像他们已经在做所有的事情一样

00:08:37.779 --> 00:08:41.860
这个，所以大多数这些问题，然后是注册表列表，就像

00:08:41.860 --> 00:08:49.420
互联网上的任意网址，在某些情况下变得稍微容易一些

00:08:49.420 --> 00:08:53.319
方式，然后依赖关系解决要困难得多，否则就不会

00:08:53.319 --> 00:09:00.160
以其他方式打扰c GX作为不打扰任何依赖的示例

00:09:00.160 --> 00:09:04.360
分辨率，但基本上是采用这些类别并查看

00:09:04.360 --> 00:09:09.819
我们可以使用一些用例或不同方法的不同方式

00:09:09.819 --> 00:09:19.149
解决某种形式的类似基本IP FS支持而无需完全

00:09:19.149 --> 00:09:25.300
通过添加一整堆额外的东西来负担注册表维护者x'的负担

00:09:25.300 --> 00:09:30.160
他们需要永远的支持，这是我接下来的棘手问题

00:09:30.160 --> 00:09:36.149
要做的是谈论注册表维护，涉及到一些

00:09:36.550 --> 00:09:40.089
我可能已经在清单上已经与之交谈过的人，或者

00:09:40.089 --> 00:09:48.370
我知道他们对增加对ipfs和

00:09:48.370 --> 00:09:53.320
他们看到的挑战记录了其中的一些内容，并可能最终解决了

00:09:53.320 --> 00:09:59.110
还要记录这些呼叫，以了解什么样的广泛共识

00:09:59.110 --> 00:10:05.320
是为了解决这样的问题，以及他们是否愿意

00:10:05.320 --> 00:10:11.470
会很感兴趣，并看到什么样的阻滞剂-如

00:10:11.470 --> 00:10:18.220
以及在此路线图上做更多工作并与更多人交谈

00:10:18.220 --> 00:10:21.339
关于它，并试图让他们的想法，看看如何连接到

00:10:21.339 --> 00:10:26.410
这些事情的下一步是什么，是的，我想就是这样

00:10:26.410 --> 00:10:35.290
我有任何疑问，我也有

00:10:35.290 --> 00:10:39.790
不得不停止听了几秒钟，所以也许你已经回答了我

00:10:39.790 --> 00:10:45.070
问题，很抱歉让您重复，所以我想

00:10:45.070 --> 00:10:48.550
对于包管理者，此规则映射分为两个阶段，其中之一类似于

00:10:48.550 --> 00:10:53.350
包管理器将专注于关系等，另一部分是

00:10:53.350 --> 00:10:57.459
非常喜欢我们要尽快创建的这些需求列表

00:10:57.459 --> 00:11:00.399
可能会通知所有其他工作组

00:11:00.399 --> 00:11:04.149
现在的依赖性，人们有点直觉，但那会很棒

00:11:04.149 --> 00:11:08.920
在包装管理人员工作组的领导下给予类似的支持

00:11:08.920 --> 00:11:13.149
当然还有其他工作组

00:11:13.149 --> 00:11:19.060
顶级项目，以便其他工作组可以只喜欢

00:11:19.060 --> 00:11:28.120
第2季度的路线图，所以您是否有时间像在

00:11:28.120 --> 00:11:36.569
管道，所以我需要和更多了解更多类似内容的人交流

00:11:36.569 --> 00:11:43.389
我对ipfs um的实现水平和准备程度

00:11:43.389 --> 00:11:49.810
将会添加到我的清单中，以便在本周尝试评估此类情况

00:11:49.810 --> 00:11:55.839
这些事情是可以实现的，因为我还是有点杂草

00:11:55.839 --> 00:12:02.640
谈什么是好的，什么是坏的，我的意思是

00:12:02.640 --> 00:12:10.610
与NPM注册中心合作的大事将是一种非常好的

00:12:10.610 --> 00:12:16.830
测试看看这些东西可以工作多少，然后我们可以得到

00:12:16.830 --> 00:12:21.780
其他人可以连接该注册表的托管版本，或者

00:12:21.780 --> 00:12:27.390
您知道类似的代码实际上可以全部一起工作

00:12:27.390 --> 00:12:34.400
并被告知正在发布的事物的新版本，但是

00:12:34.400 --> 00:12:43.170
连接到ipfs路线图应更改的确切位置，我仍然不完全正确

00:12:43.170 --> 00:12:47.010
清楚这一点，所以我认为这是更多情况下的事情，就像这是我们

00:12:47.010 --> 00:12:53.010
想要实现，然后与他人交流以了解如何实现所有这些目标

00:12:53.010 --> 00:12:57.600
事情是的，我认为您是对的，我不像我们期望的那样

00:12:57.600 --> 00:13:01.050
尤其是考虑到您刚刚加入该项目，这样我们

00:13:01.050 --> 00:13:05.250
刚刚获得订阅成功，就像您将能够注册的列表一样

00:13:05.250 --> 00:13:09.000
要求具体针对哪个功能实现

00:13:09.000 --> 00:13:12.240
但是但是就像包管理中的需求列表一样

00:13:12.240 --> 00:13:16.200
偏右发布的频率多大，数据集的大小在哪里

00:13:16.200 --> 00:13:20.670
例如，如果要构建一个程序包管理器，那会是什么样子？

00:13:20.670 --> 00:13:24.570
今天，您需要从多个文件中看到哪些基准？

00:13:24.570 --> 00:13:28.410
系统多个文件存储，这会让您充满信心

00:13:28.410 --> 00:13:32.970
准备存储您所有的包装，使它们具有类似的外观

00:13:32.970 --> 00:13:38.730
测试书面基准测试结果说，嘿，如果ipfs不能每次处理5 TB

00:13:38.730 --> 00:13:45.210
一天从10面镜子移开，然后是我不知道的包裹管理器

00:13:45.210 --> 00:13:48.300
公司名称项目名称不会采用它，因为这就是它们的名称

00:13:48.300 --> 00:13:55.320
做其他事情是如果我们没有办法，而我只是像

00:13:55.320 --> 00:14:01.230
用户没有办法发现自己​​喜欢的包裹

00:14:01.230 --> 00:14:06.900
访问中央注册表，那么我们不会为创造额外的乐趣

00:14:06.900 --> 00:14:11.850
为这些客户提供服务，但就像记下每一个网一样，则可以帮助团队

00:14:11.850 --> 00:14:16.640
了解哦，然后我可以创建DHT提供政策

00:14:16.640 --> 00:14:22.820
我们只是看到软件包本身的ID而不是发布

00:14:22.820 --> 00:14:27.350
软件包的内部Vox，所以现在我可以像发布一样进行优化

00:14:27.350 --> 00:14:30.920
因为我只想从每个区块和所有区块中删除所有其他所有供应

00:14:30.920 --> 00:14:34.640
从您的角度来看，您不需要知道中间节点

00:14:34.640 --> 00:14:38.269
像这些内部细节一样，您只需要告诉小组

00:14:38.269 --> 00:14:44.360
要求，当我说您时，我实际上可以真正地表示我们，就像

00:14:44.360 --> 00:14:48.260
太好了，就像您在领导力方面的见解一样，但是就像

00:14:48.260 --> 00:14:52.760
我们应该共同合作以使这些东西变得更多

00:14:52.760 --> 00:14:59.120
在每个人身上都能轻松完成，我认为我的要求之一是

00:14:59.120 --> 00:15:05.680
很快就会问世的是它是否必须至少与HTTP一样快

00:15:05.950 --> 00:15:12.410
好吧，但就像我是一对一的连接，还是我们可以像ipfs那样作弊

00:15:12.410 --> 00:15:15.500
只要有五次重复，就会比我应该的快

00:15:15.500 --> 00:15:20.060
确切地说，您知道我们可以稍微移动球门柱吗，但是就像我们必须

00:15:20.060 --> 00:15:23.990
可以说，我的意思是我们必须知道在什么条件下

00:15:23.990 --> 00:15:28.370
HTTP，因为您知道我们无法做的就是转身，所以我有了

00:15:28.370 --> 00:15:31.519
维护者转向他们的用户，嘿，很酷，您已经像

00:15:31.519 --> 00:15:34.910
哦，顺便说一句，要停下来的所有事情要花三倍的时间

00:15:34.910 --> 00:15:45.290
你知道的三倍，是的，好像我们从哪里到我们想要的

00:15:45.290 --> 00:15:49.910
将会是它问什么的渐进式jpg

00:15:49.910 --> 00:15:53.149
来自像今天这样的包装经理工作组

00:15:53.149 --> 00:15:59.029
高水平，有点像我们需要能够存储MP Emsworth软件包

00:15:59.029 --> 00:16:05.480
而我们想去的地方大约是几周后，会有一些更具体的东西

00:16:05.480 --> 00:16:10.190
还有其他工作组可以用来驱动他们的其他人

00:16:10.190 --> 00:16:14.890
下个季度的目标

00:16:15.070 --> 00:16:21.600
就像应该有一个逐渐变得越来越清晰的文件

00:16:21.899 --> 00:16:30.430
亚历克斯·金尼（Alex Kinney）表示同意，因为我的行为就像疯了一样，是的，

00:16:30.430 --> 00:16:35.079
像这样，值得确保将其作为此输出的显式

00:16:35.079 --> 00:16:40.329
小组，这是接下来四个星期的优先事项，我想说

00:16:40.329 --> 00:16:43.389
说输出会随着时间的推移而变化，但事实并非如此

00:16:43.389 --> 00:16:49.480
在接下来的一两个星期中肯定会变得非常模糊，但是就像

00:16:49.480 --> 00:16:53.079
四周的时间，我们需要它成为可以被其他人开始摄取的东西

00:16:53.079 --> 00:16:57.819
工作组，所以他们应该希望我们让Google看起来像Google

00:16:57.819 --> 00:17:02.259
有一个众所周知的链接，我们扔了，你知道这件事

00:17:02.259 --> 00:17:10.809
逐渐变得更加具体，所以安德鲁（Andrew）在下一个

00:17:10.809 --> 00:17:13.809
收缩要使用的软件包维护者弯腰的部分

00:17:13.809 --> 00:17:17.980
就像捐赠者肯定会构成该文档的框架，然后

00:17:17.980 --> 00:17:21.069
您知道随着这些对话的进行，它将变得越来越具体，

00:17:21.069 --> 00:17:27.069
那么我们将有一些实际的任务，所以是的，我的意思是你可能会发现一些

00:17:27.069 --> 00:17:32.980
它们就像是除非您能给出一些方法让我们删除内容，否则

00:17:32.980 --> 00:17:39.640
它永远不会发生，所以这是一种不错的胖线

00:17:39.640 --> 00:17:43.630
就像我们一样，我们必须有一个很好的故事，说明需要如何提出建议

00:17:43.630 --> 00:17:48.360
删除该文件是ipfs的核心功能还是该功能

00:17:48.360 --> 00:17:55.690
应用程序级别的东西仍然需要肯定存在

00:17:55.690 --> 00:17:59.590
如果有人要我说那是第一个，那绝对很有用。

00:17:59.590 --> 00:18:03.580
我向第一个维护者提到的人，我说DMT就像

00:18:03.580 --> 00:18:08.970
但是我怎么从那里删除东西

00:18:10.910 --> 00:18:16.430
这是一个超级有趣的人，因为他一直都在，因为像那样

00:18:16.430 --> 00:18:21.980
问题是，有一种方法可以正确执行，这是事情清单

00:18:21.980 --> 00:18:25.130
你不应该像这样解决权利，或者你不应该复制，然后

00:18:25.130 --> 00:18:29.030
就像用户可以上网查找

00:18:29.030 --> 00:18:34.040
像盗版内容之类的内容，那么它就在用户身上，

00:18:34.040 --> 00:18:38.300
公司执行此操作，因此我们确实有做到这一点的策略，但我们可能希望

00:18:38.300 --> 00:18:43.930
改写我们所说的话，因为他就像拒绝主义者或黑名单一样

00:18:43.930 --> 00:18:49.370
好像不是，对于我的软件包管理器来说，

00:18:49.370 --> 00:18:53.570
就像更好的语言说的那样哦，维护者为您准备的盖子

00:18:53.570 --> 00:18:59.510
方便的原因不是您认为ipfs注册表访问者是

00:18:59.510 --> 00:19:08.330
包装是的，所以，如果您今晚已经很好，但是是的，伊藤的行为

00:19:08.330 --> 00:19:13.400
这些东西将会产生巨大的影响，以至于边缘情况下的人们

00:19:13.400 --> 00:19:19.610
是的，没关系，但是默认值应该是

00:19:19.610 --> 00:19:24.200
这对于大多数人来说是有意义的，因为他们不会超出其范围

00:19:24.200 --> 00:19:28.550
我想要可复制的版本，也许我的版本取决于那个地方

00:19:28.550 --> 00:19:34.190
您像上周那样发表，我会选择何时停止，具体取决于

00:19:34.190 --> 00:19:45.830
勒索软件由我决定，但嘿，这很有趣，但实际上其中之一

00:19:45.830 --> 00:19:50.840
公司的立场就像让人们决定

00:19:50.840 --> 00:19:58.400
就像突然明白404一样，而不是突然看到404，

00:19:58.400 --> 00:20:04.910
选择加入共享社区拒绝列表而不是Rios列表的行为

00:20:04.910 --> 00:20:11.060
但随后，人们可以选择自己承担风险，一旦获得保护，

00:20:11.060 --> 00:20:15.260
然后您就可以解决，例如Yahoo的用例，就像白名单一样

00:20:15.260 --> 00:20:18.920
如果我可以让PIO在内部使用，类似的话

00:20:18.920 --> 00:20:22.250
就像是的，就像它们是建筑，让您将其移除

00:20:22.250 --> 00:20:24.680
来自注册表的软件包也是我想要邻居的软件包

00:20:24.680 --> 00:20:28.310
公司非常高兴，这也是像某些国家/地区一样的公司

00:20:28.310 --> 00:20:32.300
说严格的规则也会使它适用于每个人

00:20:32.300 --> 00:20:36.650
你是另一回事的地方只是尊重而没有多余的卷发

00:20:36.650 --> 00:20:40.160
它有效，所以我想在这个问题上第二

00:20:40.160 --> 00:20:45.920
另一个问题是这样写的，就像答案可能有多有用

00:20:45.920 --> 00:20:50.210
完全就像无处可去，但就像我们整理的电子表格有多有用

00:20:50.210 --> 00:20:54.800
就像试图构造以捕获这些信息一样，是什么东西

00:20:54.800 --> 00:21:01.310
包管理者这样做，那么我们需要倾听以确保我们

00:21:01.310 --> 00:21:07.400
能满足要求特别是毕业生您的喜好

00:21:07.400 --> 00:21:14.630
perché不好，但我觉得感觉尺寸比合身的要多

00:21:14.630 --> 00:21:21.320
很自然地在电子表格中，但是我认为我正在想像这种方法

00:21:21.320 --> 00:21:26.800
采取一种实际上是要和几个人说话的方式，就像这里的那种

00:21:26.800 --> 00:21:36.250
喜欢这些问题，它们会在列中出现，但我猜是

00:21:36.320 --> 00:21:39.470
试图喜欢是否只有电子表格，然后尝试比较

00:21:39.470 --> 00:21:44.149
在软件包管理者之间，很多这些专栏都会很好地说明

00:21:44.149 --> 00:21:47.990
可以工作，但是我们没有维护者z的支持-能够做到

00:21:47.990 --> 00:21:51.200
任何尝试比较和排序的东西

00:21:51.200 --> 00:21:56.389
列不一定会有所帮助，更像是每个列都有一个

00:21:56.389 --> 00:22:01.940
我在某个地方的文档有点像注册管理机构和客户组

00:22:01.940 --> 00:22:08.600
我们在一起都希望每个人都有一个故事或某种类似的文件

00:22:08.600 --> 00:22:13.460
一种可以跟踪不同方法或尝试执行的方法

00:22:13.460 --> 00:22:19.460
这是由独立人士事先与我们进行的对话

00:22:19.460 --> 00:22:24.590
维护者z-我们已经收集的任何类似统计信息，以便在

00:22:24.590 --> 00:22:29.629
你来看看一个就可以了，然后再走，就像这里是当前的故事

00:22:29.629 --> 00:22:32.659
当前情况以及我们计划对此做些什么

00:22:32.659 --> 00:22:38.509
然后当我们像高层一样退出时，

00:22:38.509 --> 00:22:44.710
与此类似的东西或当前最高带宽

00:22:44.710 --> 00:22:51.440
我们知道的“包管理器”或最适合的包管理器

00:22:51.440 --> 00:22:56.929
公开的镜子，或者不是试图挤压将要变成的镜子

00:22:56.929 --> 00:23:01.820
相当丰富的文本文档到电子表格中，我认为我们制作了一个文件夹

00:23:01.820 --> 00:23:09.860
充满各种注册管理机构和客户，然后建立

00:23:09.860 --> 00:23:16.610
每个人都有一个故事，因为我想我们会以自己的方式

00:23:16.610 --> 00:23:22.250
因为我们试图将其归一化的速度过快，因为他们说他们都是

00:23:22.250 --> 00:23:26.539
直到我们可以喜欢这里之前，都是一对夫妇正在尝试实施

00:23:26.539 --> 00:23:34.700
同一件事，我们看到相似之处在哪里，是的，是的，我

00:23:34.700 --> 00:23:40.309
认为您已经说过这一点，但是您对集群的定义

00:23:40.309 --> 00:23:45.350
值得重提的是不同的程序包管理器，所以就像您当前

00:23:45.350 --> 00:23:51.230
有三个级别，例如集中式存储库可移植存储库，其中

00:23:51.230 --> 00:23:57.559
捆绑在一起的自制程序样式，然后像有意义的可插入存储库

00:23:57.559 --> 00:24:01.879
我想我不记得最后一个是出生，是的，最后一个是那么完整

00:24:01.879 --> 00:24:09.110
注册表列表（如任意URL）指向您喜欢的位置，是的，这没有

00:24:09.110 --> 00:24:14.240
对任何事情达成共识，是的，我们只使用DNS，您就像是呵呵，所以

00:24:14.240 --> 00:24:18.799
您现在描述的级别当前就像这三个布料

00:24:18.799 --> 00:24:23.600
包裹管理者的分类是的，所以对于第四类

00:24:23.600 --> 00:24:28.789
包管理器，您可以跨其中一些，他们显然是

00:24:28.789 --> 00:24:33.559
总是会像这样的存在在那里是一种这样的上市，但然后

00:24:33.559 --> 00:24:41.149
就像我将它们分组一样，如果您要分享，请分享

00:24:41.149 --> 00:24:48.010
是的，屏幕上看起来像是在试图找到谈话内容

00:24:50.960 --> 00:25:04.670
哦，我把它放在哪里可能是好石头，只有3分钟警告，我只是

00:25:04.670 --> 00:25:09.380
首先要说谢谢您喜欢解释原因和推理

00:25:09.380 --> 00:25:13.070
和基本原理，我可以理解您的观点，并且我肯定会同意您的观点

00:25:13.070 --> 00:25:17.690
在这种情况下，很难捕获所有这些信息，而我

00:25:17.690 --> 00:25:21.950
猜猜我会说这样做可能是一个很好的实验，就像一周内那样

00:25:21.950 --> 00:25:26.510
时间，随着这些讨论的进行，并有机会

00:25:26.510 --> 00:25:30.440
像这样写下您对所有这些面孔的知识来创造像

00:25:30.440 --> 00:25:35.600
小文物，甚至就像一页纸的演讲或五张幻灯片

00:25:35.600 --> 00:25:40.610
您概述了可以传达给这些要求的内容

00:25:40.610 --> 00:25:43.700
其他工作组，然后他们说哦，好吧，如果有什么事情

00:25:43.700 --> 00:25:47.750
我们可以满足我们必须满足的期望

00:25:47.750 --> 00:25:52.480
我现在知道可以从哪个目标中添加或删除哪些里程碑

00:25:52.480 --> 00:25:56.990
地图，以便像您一样也能获得一些反馈，因为最终像您一样

00:25:56.990 --> 00:26:01.160
不会像您一样给工作组，就像我们不会给

00:26:01.160 --> 00:26:06.740
十个工作组十个像该笼子矿工信息的五十个文件夹

00:26:06.740 --> 00:26:12.980
让他们诱使自己，所以我说我没有你应该可以这样说

00:26:12.980 --> 00:26:20.859
我基本上将桥分为三种类型，其中可以有多种

00:26:20.859 --> 00:26:25.570
注册表实例，例如自托管实例，然后是客户端

00:26:25.570 --> 00:26:29.559
会和他们说话的人不多。

00:26:29.559 --> 00:26:34.119
就像不止一种注册表一样，因此将它们归类到maven是相当容易的

00:26:34.119 --> 00:26:40.179
野兽，因为她有很多像大众一样受欢迎的地方

00:26:40.179 --> 00:26:46.090
注册表，然后有很多客户，包括关闭和其他类似

00:26:46.090 --> 00:26:49.960
指向的多种编程语言非常多汁

00:26:49.960 --> 00:26:56.549
一个喜欢的人有很多不同的选择和不同的人有

00:26:56.549 --> 00:27:03.570
实现方式的方式，我认为它们基本上是最大的方式

00:27:03.570 --> 00:27:09.849
应用程序级别或语言级别的程序包管理器，主要是因为我可以

00:27:09.849 --> 00:27:14.919
从库中提取所有数字我哦，我也认为我们可能会忽略

00:27:14.919 --> 00:27:23.930
目前，Sipan只是因为没有人在其中写过客户，而是

00:27:23.930 --> 00:27:29.390
到那时，这种感觉就像是继续建立起有关所有事物的故事

00:27:29.390 --> 00:27:35.630
不同的需求，如果需求是针对每个不同的包管理器，或者

00:27:35.630 --> 00:27:40.280
像一堆东西，然后将它们分解成好东西，这是高层

00:27:40.280 --> 00:27:47.090
到目前为止我们已经进行过的这些对话的摘要，并且是现有的实现

00:27:47.090 --> 00:27:55.820
我们知道我们没有时间了，所以我要召开这次会议

00:27:55.820 --> 00:28:01.100
感谢您进行每周更新，下周我们将再见

00:28:01.100 --> 00:28:05.010
进行另一轮激动人心的打包活动

00:28:05.010 --> 00:28:08.099
[音乐]

