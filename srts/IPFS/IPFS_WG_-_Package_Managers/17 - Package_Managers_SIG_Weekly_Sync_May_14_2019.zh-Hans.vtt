WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.129 --> 00:00:07.740
现在我们在向掌上经理特别兴趣小组录制您好欢迎词

00:00:07.740 --> 00:00:17.039
可以追赶两个特别制作的2000万长的电影，可以强制执行，因此

00:00:17.039 --> 00:00:36.660
他们改变了我们，成为交通拥护者，不等待

00:00:36.660 --> 00:00:43.950
是的，比上周的最佳表现要差得多

00:00:43.950 --> 00:00:52.520
当我彼此接触时很酷

00:00:57.960 --> 00:01:01.109
[音乐]

00:01:06.620 --> 00:01:15.100
杰西卡（Jessica），您能带上我的耳机电池吗？

00:01:15.100 --> 00:01:20.950
这周，所以我为github项目设置了标签，这是荒谬的

00:01:20.950 --> 00:01:24.280
通过它查看标签，如果您查看链接，那就像一个荒谬的事情

00:01:24.280 --> 00:01:28.480
它们的数量，所以其中的一部分实际上是某种程度上的证明

00:01:28.480 --> 00:01:33.700
我们可能想如何使用扩展标签方法的概念

00:01:33.700 --> 00:01:37.450
包管理器世界之外的东西，这就是为什么我是

00:01:37.450 --> 00:01:42.700
试图用砖块杀死蚊子，您有任何意见或想法

00:01:42.700 --> 00:01:47.440
也许在这方面我非常欢迎，因为我将我们的

00:01:47.440 --> 00:01:53.110
使用那个回到设计行会的斜杠实践斜杠社区

00:01:53.110 --> 00:01:58.780
无论我们现在称自己为什么，都只是一种总体方法

00:01:58.780 --> 00:02:02.920
用于github标签，因为有些似乎是一个，否则我们实际上并没有这样做

00:02:02.920 --> 00:02:10.810
到目前为止，我们一切都很好，我认为安德鲁斯（Andrews）退缩了，所以是的

00:02:10.810 --> 00:02:15.670
我还热情地为所有未完成的问题分配标签

00:02:15.670 --> 00:02:18.940
其中很简单的一部分就是我在编造东西

00:02:18.940 --> 00:02:23.650
如果您碰巧正坐在其中一个问题中，那么再说一遍

00:02:23.650 --> 00:02:27.010
看看标签只是看它们是否有意义，就像我说的任何

00:02:27.010 --> 00:02:34.480
反馈非常受欢迎，因此Eric的实施决策树使Andrew

00:02:34.480 --> 00:02:39.489
很友善，可以流程图，我对此有点困惑

00:02:39.489 --> 00:02:43.360
以及将其转变为可能更多基于文本的内容

00:02:43.360 --> 00:02:49.170
但仍然是流程图二，看来效果很好

00:02:49.170 --> 00:02:54.940
是的，不是，好的和坏的都在改变，所以如果你看一下

00:02:54.940 --> 00:02:57.400
底部还有另一种替代方法

00:02:57.400 --> 00:03:00.640
表示同一件事对埃里克（Eric）来说是一个悬而未决的问题

00:03:00.640 --> 00:03:07.390
对他来说很有意义，但我的意图是，这是其中的一种

00:03:07.390 --> 00:03:10.810
您知道，将我们的思想集中在一起对我们很有帮助，但是

00:03:10.810 --> 00:03:14.260
就像将其与Andrews的努力相结合，将其放入Doc的文件中一样

00:03:14.260 --> 00:03:19.000
目录，更有用的外部世界，我们可以使其中任何一个

00:03:19.000 --> 00:03:22.540
文物越好，我们将成为一个整体

00:03:22.540 --> 00:03:29.950
社交化包装经理的工作量，所以请留意我会成为你的空间

00:03:29.950 --> 00:03:35.409
确实有一个背景任务，那就是对其中许多任务进行真正的返工

00:03:35.409 --> 00:03:39.430
问题列表中列出的我们认为可能会有所帮助的事情

00:03:39.430 --> 00:03:44.220
对于整个社区来说，明智的文档编制方法

00:03:44.220 --> 00:03:48.489
同上也经历了您知道我们做过的所有成果研讨会

00:03:48.489 --> 00:03:52.120
像在二月和三月之前，我在这里工作之前，我不得不坐在一些

00:03:52.120 --> 00:03:59.829
在这些人中，我竭尽全力将这些信息整合到每个人的

00:03:59.829 --> 00:04:04.120
对话成为一个文档，该文档实际上将所有内容分离为

00:04:04.120 --> 00:04:09.549
达到这些结果的理想结果，然后理想理想的含义

00:04:09.549 --> 00:04:15.849
就像全世界默认情况下，所有包管理器都使用ipfs一样

00:04:15.849 --> 00:04:20.320
所以这实际上是第一批，可能会告知一些其他信息

00:04:20.320 --> 00:04:24.610
仅在进行其他类型的用户旅程和细分方面就可以工作

00:04:24.610 --> 00:04:28.570
将来的事情可能更多是我和其他人的工作文件

00:04:28.570 --> 00:04:32.020
可能会问他们其他人的问题，但这也可能是

00:04:32.020 --> 00:04:35.680
只是对您而言很有趣，您可以看看这些东西是怎么回事

00:04:35.680 --> 00:04:41.740
从我们所有的讨论中合并，是的，安德鲁觉得他们会

00:04:41.740 --> 00:04:46.810
有趣的是，您必须喜欢那些不同的文档，才能连接这些不同的模块

00:04:46.810 --> 00:04:52.930
在仓库中，我们没有哪些仓库，并且希望提供待办事项清单

00:04:52.930 --> 00:04:57.820
像这里没有细节的事情

00:04:57.820 --> 00:05:02.229
出版商那里只有她的东西，就像没有文件

00:05:02.229 --> 00:05:07.659
是的，是的，我认为我想特别是

00:05:07.659 --> 00:05:11.380
壁画将给我们，你知道这显然将养活技术

00:05:11.380 --> 00:05:16.360
我认为总体而言，我们了解许多这些技术要求

00:05:16.360 --> 00:05:20.530
在我们中间谈论他们的要求，但也有一些

00:05:20.530 --> 00:05:25.229
另一个旋转到那些要求，例如您所说的生成

00:05:25.229 --> 00:05:29.680
知识共享或外展的要求，或与一般水平相同

00:05:29.680 --> 00:05:33.909
在整个社区中设置，是的，很好，很漂亮

00:05:33.909 --> 00:05:36.110
乱七八糟的现在后面有一些重复

00:05:36.110 --> 00:05:39.590
再说一遍，那是您知道这对我来说是一份工作文件，但这是

00:05:39.590 --> 00:05:42.950
打电话给您，让自己知道自己喝杯咖啡，然后

00:05:42.950 --> 00:05:48.410
瞥一眼，看看它是否引起了任何想法，我也开始了

00:05:48.410 --> 00:05:54.440
使用其中一些为我们的主要受众群体生成角色文档

00:05:54.440 --> 00:06:00.590
从UX的角度来看，它打开了您的兔子洞，

00:06:00.590 --> 00:06:03.800
您可以通过几种不同的方式进行角色扮演，以及

00:06:03.800 --> 00:06:08.480
每个角色的信息框类型将有很大不同

00:06:08.480 --> 00:06:11.510
关于你正在建造的东西的类型，我意识到你有点

00:06:11.510 --> 00:06:15.920
标准角色方法不会对我们真正有帮助，所以

00:06:15.920 --> 00:06:19.640
下周我的清单如何，但这可能会绕回UX

00:06:19.640 --> 00:06:24.440
策略工具箱的位置很好我正在寻找一些最佳方法

00:06:24.440 --> 00:06:31.070
接下来在这把椅子上生产产品的苏打水更相同，并且

00:06:31.070 --> 00:06:36.830
阻碍者就像我现在正在移动地狱一样，所以我是我自己的

00:06:36.830 --> 00:06:42.110
目前最糟糕的阻止者，所以如果我零星的话，我真的要提前道歉

00:06:42.110 --> 00:06:46.610
希望这将被包裹起来，至少像盒子会放在里面一样

00:06:46.610 --> 00:06:51.350
新的地方，以及像下周末那样打开的包装，所以，然后

00:06:51.350 --> 00:06:55.820
一切都会恢复正常，但是如果您认为这真的很糟糕，您就会知道

00:06:55.820 --> 00:07:00.680
喜欢给我DM儿子放宽，因为它像我的手臂一样砰砰响，所以如果您需要我

00:07:00.680 --> 00:07:06.620
那样快点好笑，所以他就是我所做的一切，我知道我讨厌这件事

00:07:06.620 --> 00:07:10.630
我喜欢它，我讨厌它，谢谢大家

00:07:10.880 --> 00:07:17.760
好了，插入耳机，我可以再次听到我做了什么

00:07:17.760 --> 00:07:25.470
所以我写了一些关于github包注册表的评论

00:07:25.470 --> 00:07:32.670
周五宣布没有Beta版访问权限，但据我所知，我没有

00:07:32.670 --> 00:07:40.650
遗漏了任何东西，并强调了他们可以做得更好的一些领域

00:07:40.650 --> 00:07:46.590
或在某种意义上说，他们的表现与现有的包管理器一样好

00:07:46.590 --> 00:07:54.960
的东西可以被删除，源标签之间没有联系

00:07:54.960 --> 00:07:58.740
已发布的代码和作为包发布的内容

00:07:58.740 --> 00:08:02.040
Twitter上的某些人似乎认为您可以发布这种情况

00:08:02.040 --> 00:08:08.070
字面上的任何内容，只要推动连接到其释放的tarball即可

00:08:08.070 --> 00:08:16.460
没有任何保证II应该要求我没有要求的beta访问权限

00:08:16.460 --> 00:08:22.290
他也许就像当年不授予他Beta版访问权限一样，因为您会发现更多

00:08:22.290 --> 00:08:35.130
问题，那么就像整个事情都可以删除，导致

00:08:35.130 --> 00:08:42.320
问题，并且类似，取决于包管理器的能力

00:08:42.320 --> 00:08:47.900
来自不同注册表的模棱两可的软件包名称

00:08:47.900 --> 00:08:56.310
信任每个github组织或用户的每个人都不要制作一个名为

00:08:56.310 --> 00:09:02.190
在自己的github帐户上使用rails，然后将其放入狡猾的rails版本中

00:09:02.190 --> 00:09:09.260
进入您的宝石文件，因为尚不清楚红宝石宝石如何决定哪个

00:09:09.260 --> 00:09:13.440
注册表，它应该选择给定软件包的优先级

00:09:13.440 --> 00:09:19.820
同样与Maven NPM不受此影响

00:09:19.820 --> 00:09:28.320
正在进行的其他集成可能会遇到相同的问题，因此

00:09:28.320 --> 00:09:32.250
我在Twitter和github上发布了它的反响非常好

00:09:32.250 --> 00:09:38.730
伸出手，我刚打过电话，刚和他们打个电话，谈论

00:09:38.730 --> 00:09:45.840
其中一些更多，他们有点像他们的线在那里，他们不

00:09:45.840 --> 00:09:52.320
要替换软件包管理器注册表，主要是

00:09:52.320 --> 00:09:59.400
专注于私人事物，例如github企业设置，但他们想要

00:09:59.400 --> 00:10:04.500
致力于改善软件包管理器或作为强制功能来

00:10:04.500 --> 00:10:09.480
使软件包管理者最近成为NPM的朋友

00:10:09.480 --> 00:10:15.570
就像安全性只是让github和人们感到失望

00:10:15.570 --> 00:10:20.460
在blend github中解决NPM问题，因此他们正试图取得所有权

00:10:20.460 --> 00:10:25.220
多一点，并思考他们可能拥有的类似方式

00:10:25.220 --> 00:10:29.400
更高的再现性也许github动作可能是唯一的事情

00:10:29.400 --> 00:10:34.260
允许发布程序包，或者如果github动作发布了程序包，则允许发布程序包

00:10:34.260 --> 00:10:38.310
没有任何人为干预，它会更像是经过验证的徽章或一些

00:10:38.310 --> 00:10:43.350
就像这里的普罗维登斯踪迹是向您显示发生了什么的日志

00:10:43.350 --> 00:10:47.160
生成该软件包仍然可能产生一些讨厌的东西，因为您可以

00:10:47.160 --> 00:10:51.870
让您的github动作进入并从任意位置获取URL并插入

00:10:51.870 --> 00:10:56.210
包中的内容，但至少您将具有可见性以及发生了什么情况

00:10:56.210 --> 00:11:03.960
就是如果日志实际上是在某个地方发布的，那么他们也有一些

00:11:03.960 --> 00:11:10.430
关于如何潜在地解决模块安全性的有趣想法

00:11:10.430 --> 00:11:16.230
阻止下载已被归类为易受攻击的软件包

00:11:16.230 --> 00:11:21.420
在开源方面，这将使很多人的观点两极化

00:11:21.420 --> 00:11:26.100
像您这样的软件包不能再下载此文件，因为出于安全性考虑

00:11:26.100 --> 00:11:32.460
漏洞，无论该漏洞是否适用于您对我的特定使用

00:11:32.460 --> 00:11:38.730
PFF这种观点很有趣，就像相反的立场

00:11:38.730 --> 00:11:44.570
如果您已经下载了软件包，则应保留该软件包

00:11:44.570 --> 00:11:50.730
像本地一样，它应该继续在ipfs上工作，他们也想放一个

00:11:50.730 --> 00:11:55.670
包裹经理会议，所以我有点

00:11:57.120 --> 00:12:07.050
-哦，只有一个类似的联合组织者，我想日期不知道在旧金山

00:12:07.050 --> 00:12:12.209
最有可能在他们的办公室里大约一百个人，并且可能

00:12:12.209 --> 00:12:19.800
与他们一起播客的一集，他们似乎也对潜在的ipfs开放

00:12:19.800 --> 00:12:28.100
围绕软件包注册表进行集成，因此可能是

00:12:28.600 --> 00:12:37.509
使社区在不变性方面以及其他方面更加安全

00:12:37.509 --> 00:12:48.699
添加更多种类的什么是我不知道的词，我不知道什么是

00:12:48.699 --> 00:12:53.230
这个词是，但他们似乎对此很感兴趣，我基本上说过我会说

00:12:53.230 --> 00:12:59.050
一起为他们提供了一个码头，以作为不同方式的入门

00:12:59.050 --> 00:13:04.750
可以使用ipfs或我们可以尝试的不同区域

00:13:04.750 --> 00:13:08.290
并对齐那些将非常有趣的内容，我的意思是我们可以从

00:13:08.290 --> 00:13:14.620
只是发行版，但可能包含来自github的任何内容，可能是

00:13:14.620 --> 00:13:20.730
通过运行全套ipfs节点的github可寻址的内容将是

00:13:20.730 --> 00:13:25.690
会超级好玩，很有趣

00:13:25.690 --> 00:13:29.380
我需要跟进，还有一些我不能真正谈论的东西

00:13:29.380 --> 00:13:35.920
关于公开通话的私密性，可以节省下来，以备日后使用

00:13:35.920 --> 00:13:39.100
我是不是这样做了，所以我开始重新整理软件包

00:13:39.100 --> 00:13:42.850
经理回购的内容有点问题

00:13:42.850 --> 00:13:46.720
讨论不是很好，但是一旦有了讨论

00:13:46.720 --> 00:13:52.000
死了，然后迷失在无休止的新问题之卷中

00:13:52.000 --> 00:13:57.430
过去，所以我一直将有趣的内容作为

00:13:57.430 --> 00:14:05.259
拉取请求是开放的，有点像几乎

00:14:05.259 --> 00:14:13.930
一本书或一本指南，其中包含类似的参考资料和阅读材料，

00:14:13.930 --> 00:14:19.810
我可能没有想像的空白区域

00:14:19.810 --> 00:14:26.430
总体看起来是什么样子，但也许我可以和杰西卡（Jessica）抽些时间来

00:14:26.430 --> 00:14:31.660
围绕它组织思想，并且几乎最终以骨骼为结尾

00:14:31.660 --> 00:14:34.870
而不是尝试从我们已经需要更多的东西来创建它

00:14:34.870 --> 00:14:42.830
有意向，然后我一直在努力的另一个领域是

00:14:42.830 --> 00:14:50.510
在以前的分散式包裹经理的研究中，他们做得很好

00:14:50.510 --> 00:15:01.310
一些关于如何制作或一种方法的思考

00:15:01.310 --> 00:15:06.290
使分散式软件包管理更具弹性，因为如果您有很多

00:15:06.290 --> 00:15:10.250
这将适用于它甚至可以用于集中式软件包管理

00:15:10.250 --> 00:15:16.040
想法是，对于您依赖的每个注册表

00:15:16.040 --> 00:15:22.430
从其中任何一个是否存在可用性问题中获取信息

00:15:22.430 --> 00:15:30.709
删除的东西暂时损坏或损坏，或者您的

00:15:30.709 --> 00:15:38.000
离线实际上会引起问题，如果其中任何一个都不起作用

00:15:38.000 --> 00:15:41.899
依赖关系解决方案策略失败，因为您需要来自以下方面的数据

00:15:41.899 --> 00:15:47.750
这些注册表中的每个注册表以及此github软件包的问世

00:15:47.750 --> 00:15:53.060
每个单独的组织都有自己的注册表，没有一个

00:15:53.060 --> 00:15:57.130
巨型注册表中有许多小型注册表，每个注册表都有自己的

00:15:57.130 --> 00:16:02.540
依赖元数据，所以我一直称其为弹性

00:16:02.540 --> 00:16:10.040
分辨率，这实际上是在说您是否将自己带到何处而不是拥有

00:16:10.040 --> 00:16:16.010
涉及依赖性变更的三个实体假设您已经拥有了自己的

00:16:16.010 --> 00:16:21.350
具有某些依赖项的应用程序，您已经有了新的依赖项

00:16:21.350 --> 00:16:24.860
您想添加，它可能是更新版本，甚至可能是

00:16:24.860 --> 00:16:27.970
已删除的版本，但可以说这是一个您要添加的新版本

00:16:27.970 --> 00:16:33.320
您当前需要将注册表作为第三部分，至少一个注册表

00:16:33.320 --> 00:16:40.690
在go ipfs的情况下，您可能需要更多，而我的帐户需要125个

00:16:40.690 --> 00:16:46.310
对于它引用的每个不同的git存储库，但您可以从中找到

00:16:46.310 --> 00:16:53.110
go mod存储库中的go mod文件，如果其中任何一个消失了

00:16:53.110 --> 00:17:01.360
显然，您已经打破了解决该问题的能力，但这并不意味着

00:17:01.360 --> 00:17:06.459
那本可以去火星的地方，然后你就不得不谈225

00:17:06.459 --> 00:17:14.079
地球上的不同服务器这就像是行不通的，所以如果可以的话

00:17:14.079 --> 00:17:20.199
如果可以存储更多涉及到的依赖项信息，

00:17:20.199 --> 00:17:24.040
在您执行上一个解决方案或您做出决定时涉及

00:17:24.040 --> 00:17:30.429
发布了该软件包，因此基本上列出了所有可能的方法

00:17:30.429 --> 00:17:36.429
此程序包涉及的每个依赖项的可接受版本

00:17:36.429 --> 00:17:41.080
有一个依赖关系，这里是它可以接受的所有版本

00:17:41.080 --> 00:17:46.809
发布时间，此应用程序具有依赖项列表，这里是所有

00:17:46.809 --> 00:17:53.230
成功完成后，可以接受可以使用的可能版本

00:17:53.230 --> 00:17:58.090
一种依赖关系解决方案，但通常唯一的图片喜欢说最新的

00:17:58.090 --> 00:18:04.809
例如，如果您存储所有可用的版本数据，则无需

00:18:04.809 --> 00:18:09.580
返回注册表，以便在发生冲突或其他情况时能够

00:18:09.580 --> 00:18:13.900
依赖关系可满足性问题我忘记了所有的术语

00:18:13.900 --> 00:18:19.510
可满足性，然后您就可以将新包装之间的点连接起来

00:18:19.510 --> 00:18:23.410
和您的应用程序依赖关系而无需注册表，而无需

00:18:23.410 --> 00:18:28.300
额外的信息，这意味着如果您没有该图，则该图会脱机

00:18:28.300 --> 00:18:34.270
该访问权限，因为它已被删除或由于某种原因而中断，您仍然可以

00:18:34.270 --> 00:18:39.070
功能意味着在一个分散的世界

00:18:39.070 --> 00:18:43.120
基本上，您一直在说注册表突然出现并消失

00:18:43.120 --> 00:18:46.540
像第一个一样，当我真正看到该注册表时，我会拿走我需要的一切

00:18:46.540 --> 00:18:52.929
通过它，我将其保留在本地，然后在没有它的情况下也可以进行操作

00:18:52.929 --> 00:18:57.550
它进入ipfs土地就像是然后，您就像哦，实际上其中一些

00:18:57.550 --> 00:19:03.370
问题变得更少，因为每个人都可以使用它们

00:19:03.370 --> 00:19:07.700
谁在共享该内容，但这意味着您仍然可以喜欢

00:19:07.700 --> 00:19:12.950
失去对网络的特定访问权限，但仍然能够处理什么

00:19:12.950 --> 00:19:17.419
你的写作方式如此之多，以至于我走到了尽头

00:19:17.419 --> 00:19:22.070
然后我们将在上一期的末尾发布

00:19:22.070 --> 00:19:26.259
当我完成转圈到时，将其吸回到docs目录中

00:19:26.259 --> 00:19:31.340
组织起来，但感觉就像我想把它弄出来

00:19:31.340 --> 00:19:37.100
再来几个人，并思考一下它是否有一些腿

00:19:37.100 --> 00:19:43.309
一种可行的方法，我的意思是，它肯定会在诸如此类的情况下起作用

00:19:43.309 --> 00:19:47.450
自制程序或将所有内容存储在本地的任何便携式注册表

00:19:47.450 --> 00:19:55.480
所以您不需要去网络就能做到这一点

00:19:55.480 --> 00:20:02.330
过去四天我的脑袋一直在这里，但希望能

00:20:02.330 --> 00:20:05.809
在第二天或第二天发布的内容，然后开始获得一些反馈

00:20:05.809 --> 00:20:08.590
在那上面

00:20:13.059 --> 00:20:16.360
很酷

00:20:18.899 --> 00:20:23.610
我假设当我们存储这些东西时，还会恢复

00:20:23.610 --> 00:20:28.980
他们，以便我们也可以执行此验证，例如，如果我

00:20:28.980 --> 00:20:35.100
我处于离线状态，但我发现其他处于离线状态且有更新或更新的人

00:20:35.100 --> 00:20:41.340
您知道我想使用的这些选项之一，我也可以

00:20:41.340 --> 00:20:44.999
就像哦，我有指向您CID的元数据，所以我知道

00:20:44.999 --> 00:20:49.320
您拥有的内容可以与其他所有内容一起使用

00:20:49.320 --> 00:20:52.769
我正在尝试使用而无需返回中央注册表，是的，所以我已经

00:20:52.769 --> 00:20:58.710
想像我曾尝试不暗示任何开始的实现，但

00:20:58.710 --> 00:21:07.320
当您添加IP OD时，将IP FSF视为Tarbosaurus就好了

00:21:07.320 --> 00:21:16.080
交易就像拥有钥匙一样，Tarble非常合理和容易，但是存储

00:21:16.080 --> 00:21:21.059
数据和IP OD意味着您像我们在哪里一样会感到困惑

00:21:21.059 --> 00:21:25.230
在许多不同的程序包中，相似的依赖树树都是

00:21:25.230 --> 00:21:28.590
引用相同的东西实际上就像哦，我可能已经有一半了

00:21:28.590 --> 00:21:33.149
我在本地之前已经在本地获得的注册表位中的依赖项数据

00:21:33.149 --> 00:21:40.830
需要去网络取东西，或者就像你说的那样

00:21:40.830 --> 00:21:46.980
连接到具有我不需要做的某些工作的本地对等设备

00:21:46.980 --> 00:21:53.730
感觉对于任何包管理器来说都有一个不错的建议，

00:21:53.730 --> 00:21:57.450
在IP FS上实现它是最简单的方法

00:21:57.450 --> 00:22:06.960
您可以选择其他方法，但是如果您使用IP FS和IP LD，则会像升压一样

00:22:06.960 --> 00:22:09.450
从它，或者做其他事情就更容易了

00:22:09.450 --> 00:22:12.929
我正在和Eric交谈的事情，尽管他说他现在正在输入

00:22:12.929 --> 00:22:17.639
并试图找出这与永恒的栈相交的地方

00:22:17.639 --> 00:22:24.179
之所以工作，是因为感觉这就像是从相反的角度出发

00:22:24.179 --> 00:22:29.759
堆栈是关于最终结果如何在您的计算机上显示的，但是

00:22:29.759 --> 00:22:34.810
当前浏览了所有实际发现的模块

00:22:34.810 --> 00:22:39.400
以及目录和血统，基本上只是假设您已经知道

00:22:39.400 --> 00:22:45.450
所有这些都是，你不，你不要尝试连接点

00:22:45.450 --> 00:22:50.230
而这就像整个网络中有效的软件包管理者是人一样

00:22:50.230 --> 00:22:54.730
分享东西，你就能找到它，然后喜欢弹性

00:22:54.730 --> 00:23:08.230
lis用它来实际完成工作Jim，您是否拥有一些东西，是的，我只是

00:23:08.230 --> 00:23:15.160
这个星期放了一个东西，当时我还在和你一起头脑风暴

00:23:15.160 --> 00:23:19.660
在波特兰，然后我去了CSV comp，我删除了一些有趣的链接

00:23:19.660 --> 00:23:26.560
在我的笔记中没有太多时间谈论它们，所以我认为

00:23:26.560 --> 00:23:29.590
会议上真的很有趣的东西

00:23:29.590 --> 00:23:35.620
科学学术背景学术界PPO人和他们的利益是

00:23:35.620 --> 00:23:43.000
可重复性，因此拥有不变的包装是其中很大一部分

00:23:43.000 --> 00:23:46.300
涉及很多工作，实际上是打包数据，而我不是

00:23:46.300 --> 00:23:54.670
我也认识了Chrome小组的Geoffrey Askin，并从中学到了

00:23:54.670 --> 00:23:58.390
有关Web软件包的更多信息，而Web软件包实际上是为

00:23:58.390 --> 00:24:03.070
JavaScript，因此实际上与包装讨论非常相关

00:24:03.070 --> 00:24:10.920
如果艾米有问题，我可以在此进行更多讨论

00:24:15.330 --> 00:24:24.450
saerom不再是在阅读该Web软件包中的内容，而是在存储库中阅读

00:24:24.450 --> 00:24:32.430
包和Web包不是一件很酷的事情，是的，是的，但是

00:24:32.430 --> 00:24:36.810
品牌上的商标有点怀疑，但是的

00:24:36.810 --> 00:24:45.170
网络Web软件包基本上是其zip文件，但它们将成为

00:24:45.170 --> 00:24:51.810
是的，但是将会使用SSL证书对该内容进行签名并

00:24:51.810 --> 00:24:57.180
分发它们，它们的主要用例是点对点的，所以这是

00:24:57.180 --> 00:25:02.280
来自Chrome，Chrome在全球拥有80％的浏览器份额，因此也许更多

00:25:02.280 --> 00:25:09.870
比那更重要，所以我知道Chrome浏览器具有这种想法

00:25:09.870 --> 00:25:14.250
也许缓存了很多常见的JavaScript也许这是木log弹

00:25:14.250 --> 00:25:18.540
有人缓存了很多人常用的JavaScript库

00:25:18.540 --> 00:25:24.210
用于使人们更有效地加载网站，这无可厚非

00:25:24.210 --> 00:25:31.670
对于任何人来说，都是有人Google有一个网络扩展程序可以完全做到这一点

00:25:31.670 --> 00:25:35.700
也许这就是您在想的，我以为那里有一个

00:25:35.700 --> 00:25:39.450
大家伙之一，就像互联网的中心部分一样

00:25:39.450 --> 00:25:45.480
实际上是在某个地方的后端执行此操作，因此它确实可以

00:25:45.480 --> 00:25:48.600
快速，您可以很快加载很多网页，我想是的

00:25:48.600 --> 00:25:58.860
就像Google缓存jQuery和所有不相关的东西一样，我认为Google

00:25:58.860 --> 00:26:03.570
刚刚发布了一项功能，他们拥有像内置的es模块一样的功能

00:26:03.570 --> 00:26:09.060
进入浏览器，因此您甚至不必从网络上获取它们，因此我有一个

00:26:09.060 --> 00:26:17.760
觉得这很可能符合该计划，所以这是一个模型，

00:26:17.760 --> 00:26:22.440
访问一个网站，我们已经讨论过同伴这样做的权利，但是我访问了一个

00:26:22.440 --> 00:26:29.250
网站，我会缓存加载的所有内容，以便浏览该网站Akasha

00:26:29.250 --> 00:26:34.920
离线查看我的ipfs代码，如果我再次访问该网站，我会喜欢哦，等一下

00:26:34.920 --> 00:26:39.690
已经在本地拥有所有这些数据，我将只在本地加载它，如果我想

00:26:39.690 --> 00:26:43.980
完善了我已经看过的那段文字，那就太好了

00:26:43.980 --> 00:26:47.040
已经加载，您无需再次执行操作，即使您已经

00:26:47.040 --> 00:26:54.090
很好，这就是Web软件包所做的几乎所有工作，除了没有

00:26:54.090 --> 00:27:00.660
ipfs部分很好，实际上并没有，所以现在唯一存在的部分是

00:27:00.660 --> 00:27:05.970
MP使用的已签名交易，但MP不是主要客户

00:27:05.970 --> 00:27:10.290
因此，我认为他们一直在做一些工作，例如扩展

00:27:10.290 --> 00:27:15.350
JavaScript，因此JavaScript实际上将拥有一个标准库

00:27:15.350 --> 00:27:20.160
我会觉得这很适合

00:27:20.160 --> 00:27:25.170
他们将能够在浏览器中升级标准标准库，但是通过

00:27:25.170 --> 00:27:32.490
使用SSL签署所有内容，因此我并没有真正谈论该部分

00:27:32.490 --> 00:27:36.050
杰弗里，所以我只是在推测

00:27:36.710 --> 00:27:40.410
你们有笔记或某处分享的内容可能会很有用

00:27:40.410 --> 00:27:45.330
与合作小组一起，以便至少您知道我知道有一些

00:27:45.330 --> 00:27:48.270
经常与Chrome通话的人可能不是这个人

00:27:48.270 --> 00:27:53.040
特别是，但是将其整合到整个全球对话中，是的，我

00:27:53.040 --> 00:27:58.110
相信他们实际上是要派人去巴塞罗那的ipfs营地

00:27:58.110 --> 00:28:11.490
所以我们可以直接和他们建立一个对话，好了，我们没时间了

00:28:11.490 --> 00:28:16.290
其他人有什么我想讨论的吗？我的意思是我不太会说话

00:28:16.290 --> 00:28:25.800
我的意思不是说我想我们应该在电话会议后说一下，例如

00:28:25.800 --> 00:28:31.860
计划是从美国的角度谈论e / m或ipfs大幅削减战争需求

00:28:31.860 --> 00:28:35.640
发生，因为我们很高兴在没有您的情况下释放它，这是迪斯科舞厅，我们将

00:28:35.640 --> 00:28:38.740
在明天的GUI通话中谈论这一点

00:28:38.740 --> 00:28:43.070
听起来很棒，我会看录音的，因为我

00:28:43.070 --> 00:28:47.630
想要登机，但是那煤什么时间不是超级时髦

00:28:47.630 --> 00:28:59.540
在某些时区的4:00 pm早，我的时区是，我可以在这里做一些事情

00:28:59.540 --> 00:29:03.200
加拿大，是的，我只想让我们所有人都可以通话并谈论，因为我们非常

00:29:03.200 --> 00:29:06.830
几乎可以在台式机上推出它，我认为有很多

00:29:06.830 --> 00:29:10.100
事情有一些低落的果实，然后有更多的对话

00:29:10.100 --> 00:29:17.240
关于我们如何使它变得非常好，我们应该做的是，我们将开始

00:29:17.240 --> 00:29:22.360
记录是好的

