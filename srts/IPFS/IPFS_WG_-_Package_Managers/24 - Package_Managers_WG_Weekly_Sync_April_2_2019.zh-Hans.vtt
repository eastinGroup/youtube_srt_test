WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.860 --> 00:00:06.870
你好，欢迎来到包裹男人，他的每周水槽我是你的主人。

00:00:06.870 --> 00:00:11.250
在我们上周所做的游戏中，我们对下一步要做的事情有所阻挠

00:00:11.250 --> 00:00:16.859
这是两个VIP首包管理人员共同工作的第一次公开会议

00:00:16.859 --> 00:00:24.180
大家好，我们在YouTube上的每个人都可以，您可以在这里关注我们并希望我们

00:00:24.180 --> 00:00:26.930
在这里，我不知道界面是什么样的，它在这里

00:00:26.930 --> 00:00:38.520
是的，所以我们要在房间里走走，但是首先我可以请一个笔记记录者

00:00:38.520 --> 00:00:44.940
谢谢吉姆，好吧，好吧，我先走

00:00:44.940 --> 00:00:53.550
上周，我和安德鲁，国际象棋团队以及网络浏览器一起在里斯本

00:00:53.550 --> 00:00:58.260
和GUI团队为我们提供线索，以治愈有趣的事情，这确实很有成效

00:00:58.260 --> 00:01:01.440
太好了，我们在某些我们想尝试并继续前进的事情上拥有很好的处理能力，

00:01:01.440 --> 00:01:07.880
现在是季度，我接下来什么也不做，因此一直在查看sp2的所有单位

00:01:07.880 --> 00:01:14.970
拥有元数据功能真的很酷，这样

00:01:14.970 --> 00:01:18.000
我们可以做一些事情，例如在保险丝上安装东西，因为当你想要最后一个

00:01:18.000 --> 00:01:23.130
修改时间并保留文件权限之类的东西，所以我

00:01:23.130 --> 00:01:27.750
实际上，我们不需要等待v2，因为v1具有元数据构造

00:01:27.750 --> 00:01:31.500
我们可能会使用它，因为它从未真正实现过，所以我

00:01:31.500 --> 00:01:35.909
可以改善大学一所学校的情况，并了解它的发展方式

00:01:35.909 --> 00:01:41.240
看起来像这样，如果我们可以再将其反馈回去，那将很酷

00:01:41.240 --> 00:01:47.100
人们已经开始在ipfs上使用NPM，这很好，这意味着人们

00:01:47.100 --> 00:01:51.000
正在发现问题，这也很棒，所以有些问题

00:01:51.000 --> 00:01:55.430
他们打开，所以我要尝试树，或者其中一些清除积压的订单

00:01:55.430 --> 00:02:00.960
也是他所有的混乱开始了，他们真的很想获得NPM，

00:02:00.960 --> 00:02:04.979
首先将IP正确部署在某种容器服务上，因为在

00:02:04.979 --> 00:02:09.450
这只是docker容器的功能，必须手动

00:02:09.450 --> 00:02:13.240
一次又一次，因为发生了奇怪的事情

00:02:13.240 --> 00:02:19.180
14我们可以让它在ec2或其他容器服务上运行

00:02:19.180 --> 00:02:22.990
我只是想告诉您，让自己可以回答任何问题

00:02:22.990 --> 00:02:28.270
他们了解将要发生的事情，因此他们可以为自己的工作分配范围

00:02:28.270 --> 00:02:40.960
排队停止这很可能是我对亨利的任何疑问，我想出了任何指标

00:02:40.960 --> 00:02:47.650
有多少人在ipfs上使用NPM，不存在

00:02:47.650 --> 00:02:51.580
关于自定义指标的医疗机构，所以我们就像您知道基本的CPU类型一样

00:02:51.580 --> 00:02:57.130
内存之类的东西，所以我想我们可以粗略地驱动负载，但是我们不能数

00:02:57.130 --> 00:03:05.470
80年代告诉您有关带宽使用情况的任何实际实数是

00:03:05.470 --> 00:03:28.300
可能吧，我今天病了一点，所以我的声音听起来不那么活泼

00:03:28.300 --> 00:03:35.890
和往常一样，上周我又和亚历克斯（Alex）和很多很棒的人在里斯本在一起

00:03:35.890 --> 00:03:41.920
做好我们的计划，并帮助不同的团队尝试与

00:03:41.920 --> 00:03:48.150
包裹管理者的目标似乎进展顺利，我认为

00:03:48.150 --> 00:03:54.820
我们还公开了所有程序包管理器和存储库，将其移至ipfs I

00:03:54.820 --> 00:04:00.750
还把我的一些实验转移到了ipfs船厂，并开始了

00:04:00.750 --> 00:04:08.170
将所有这些东西链接起来，我就自动完成了

00:04:08.170 --> 00:04:19.540
我的apt在ipfs镜像服务器上的更新，因此它每四个运行一次

00:04:19.540 --> 00:04:25.590
小时的cron作业，需要三个小时进行更新，因此需要一个小时

00:04:25.590 --> 00:04:32.650
多余的多余的，它似乎工作正常，但它有一些

00:04:32.650 --> 00:04:37.240
今天我不太了解的问题，所以我必须解决

00:04:37.240 --> 00:04:45.220
莫莉建议老虎团队中的某个人对此进行调查并尝试

00:04:45.220 --> 00:04:48.700
弄清楚到底发生了什么，因为这似乎只是

00:04:48.700 --> 00:04:54.700
停止尝试与任何人分享任何东西，真的不知道是什么

00:04:54.700 --> 00:04:59.950
继续下去，那实际上是一种阻碍，然后开始

00:04:59.950 --> 00:05:05.830
推广甚至可以将其用于其他任何机器都无法做到的

00:05:05.830 --> 00:05:13.419
从ipfs进行apt-get更新，而该计算机未共享任何

00:05:13.419 --> 00:05:20.669
接下来我打算做的是整理一篇博客文章，

00:05:20.669 --> 00:05:25.419
适当宣布包装经理工作组，然后我可以指出

00:05:25.419 --> 00:05:29.919
一个不同的软件包管理维护者z-并开始真正获得

00:05:29.919 --> 00:05:33.510
所有这些谈话都在感动

00:05:33.889 --> 00:05:42.590
并尝试与一些ipfs营地计划保持一致，以查看我是否可以

00:05:42.590 --> 00:05:47.000
邀请一些包经理维护在那里仍然不确定什么

00:05:47.000 --> 00:05:54.169
他们能够在那里做的事情，因为目前那里还没有

00:05:54.169 --> 00:06:04.099
直接规划包装空间非常非常重视，所以仍然需要

00:06:04.099 --> 00:06:10.819
在我要邀请那里的每个人之前先解决一下

00:06:10.819 --> 00:06:14.300
将会为他们提供适当的空间，否则您可能需要做

00:06:14.300 --> 00:06:20.599
有点不同，我不太确定，还是再次与大多数人交谈

00:06:20.599 --> 00:06:23.599
更多的人将成为我可能正在为之努力的东西

00:06:23.599 --> 00:06:30.590
下周，如果我们可以合理地再次使用ipfs，则可以

00:06:30.590 --> 00:06:35.659
到基础架构，看看是否可以在一些基础上获得更多

00:06:35.659 --> 00:06:41.150
更多的机器可能使用集群来撰写有关该主题的博客文章

00:06:41.150 --> 00:06:49.339
好吧，如果我们可以使用它启动一些计算机引导程序，那么卡住了

00:06:49.339 --> 00:06:54.800
真正重要的文件（如软件包列表中的文件）将开始

00:06:54.800 --> 00:06:58.219
在更多的节点之间共享，这将使所有内容移动一点

00:06:58.219 --> 00:07:01.339
即使某些随机包装是

00:07:01.339 --> 00:07:05.629
仅在一台机器上可用，以更多的人开始

00:07:05.629 --> 00:07:10.159
使用它会产生更多的网络效应，并开始使其发挥作用

00:07:10.159 --> 00:07:16.900
我认为至少在我的盘子上还有更多的表现

00:07:16.900 --> 00:07:22.520
审查其他工作组的区域设置，以了解我们是否有任何方法

00:07:22.520 --> 00:07:28.969
可以帮助人们联系各个方面，看看是否有

00:07:28.969 --> 00:07:34.129
与打包您的引擎有关的事情Jim首先要在IP上安装多大的设备

00:07:34.129 --> 00:07:39.139
他们可能会在家里的我的机器上运行它，这是第二点

00:07:39.139 --> 00:07:45.860
TB级（如果要从已添加的计算机镜像）

00:07:45.860 --> 00:07:49.680
如果您想立即运行自己，请在此处指向四

00:07:49.680 --> 00:07:53.760
兆兆字节的磁盘空间（如果要直接从apt镜像），因为

00:07:53.760 --> 00:07:58.380
无法使用文件存储，因此您必须定期执行

00:07:58.380 --> 00:08:05.070
ipfs广告，然后将其复制到ipfs文件夹中

00:08:05.070 --> 00:08:09.720
但实际上周围有那么大的磁盘，所以我一直在寻找

00:08:09.720 --> 00:08:14.460
如果我们想做所有的事情，在debian上也要大得多

00:08:14.460 --> 00:08:20.910
Dib支持其所有二进制文件的不同体系结构，所以我将

00:08:20.910 --> 00:08:32.820
坚持吃面包-是的，我现在有TB级的存储空间，我认为还有其他存储空间

00:08:32.820 --> 00:08:42.560
问题不好，那我先把它传给吉姆

00:08:43.039 --> 00:08:49.460
因此，在动态数据动态数据上，并保持建筑物的工作组

00:08:49.460 --> 00:08:56.690
总是总是倍数，我们想出了我们的好主意，基本上是

00:08:56.690 --> 00:09:01.750
在这里和佩特罗他们将全职工作，试图找出

00:09:01.750 --> 00:09:10.280
AI PMS的发展以及我们的目标与软件包直接相关

00:09:10.280 --> 00:09:16.520
经理，所以我们在这里，我们还想看看是否有可以做的事情

00:09:16.520 --> 00:09:22.430
也许将其中一个系统一起运送，看看我们是否可以使用某些IP

00:09:22.430 --> 00:09:26.600
以某种方式减少它，但不像旧的，我认为这就像新的斋戒

00:09:26.600 --> 00:09:38.860
阴茎，所以院长可以再说些，是的，所以III在你的身上看到了

00:09:38.860 --> 00:09:46.010
有点像我不知道你们对路线图的Google文档

00:09:46.010 --> 00:09:49.900
是正确的，否则我们可以暂时将某些命名的东西踢开

00:09:49.900 --> 00:09:54.920
但这也许是我们实际上有能力做到更快

00:09:54.920 --> 00:10:00.350
足以让您知道您需要做的事情只是取决于什么

00:10:00.350 --> 00:10:05.180
实际需求是这样，有点像是要多学一点

00:10:05.180 --> 00:10:10.460
关于这一点，然后我们可以设置为两个重要的事情之一

00:10:10.460 --> 00:10:16.610
性能和两个使固定IP NS事情变得非常容易，并且

00:10:16.610 --> 00:10:21.650
不一定要求您只将私钥放在网上

00:10:21.650 --> 00:10:24.010
全程

00:10:27.900 --> 00:10:32.980
是的，这是基本概念，但是我我不是，这取决于什么

00:10:32.980 --> 00:10:37.240
您想要了解的建筑之类的途径

00:10:37.240 --> 00:10:40.770
首先构建，以及如何使用

00:10:42.200 --> 00:10:51.050
所以我不确定这与ipfs上的MPM如何匹配，但是对于我们正在使用的合适的

00:10:51.050 --> 00:11:01.890
IP和s2指出镜像的根，然后每四个更新一次

00:11:01.890 --> 00:11:10.529
大约几个小时，因为每当我们完成此操作后，我都会同步更新

00:11:10.529 --> 00:11:17.430
工作得相当好，可能要花一分钟才能发布，然后可能像

00:11:17.430 --> 00:11:23.430
30秒解决问题并不是世界上最糟糕的事情，尤其是如果

00:11:23.430 --> 00:11:30.870
然后，我们开始将其像发bun一样放到面团上，然后将其作为DNS链接放入PF esta IO

00:11:30.870 --> 00:11:36.360
应该使它读起来并且足够快，以便任何人都可以使用

00:11:36.360 --> 00:11:43.980
曾经是谁，我们解决了与apt或ipfs相关的其他问题

00:11:43.980 --> 00:11:49.649
感觉那是最紧迫的事情，但是感觉好像有些地方

00:11:49.649 --> 00:12:02.100
也许ipfs上的MPM可以像以前一样使用性能命名

00:12:02.100 --> 00:12:09.720
当前它不使用DHT的前体，因为它使用的是JSON

00:12:09.720 --> 00:12:15.149
 ipfs我不知道这是否会在您的作品中抛出一个扳手

00:12:15.149 --> 00:12:21.810
考虑更多地在旅途中进行工作，以便继续进行工作

00:12:21.810 --> 00:12:26.279
至少在某种程度上来说，这既可以使IP Anna更快，也可以

00:12:26.279 --> 00:12:30.860
固定将由go守护进程完成，原因是为什么不

00:12:30.860 --> 00:12:35.399
它会更高效，并且不会影响任何想像这样写作的人

00:12:35.399 --> 00:12:43.050
J的Web浏览器代码或其他任何代码，但我想这是如果我

00:12:43.050 --> 00:12:48.149
正确地理解了很多镜子，要求您使用

00:12:48.149 --> 00:12:53.220
拉一切的最新版本是你去一些东西

00:12:53.220 --> 00:12:59.230
通过像DNS，然后以这种方式将其拉到镜子上，那会很好

00:12:59.230 --> 00:13:05.350
去分散，然后像下一步那样进行下一步

00:13:05.350 --> 00:13:09.939
有像IP螺母这样的分散系统，但关键是

00:13:09.939 --> 00:13:14.259
集中管理，就像第二步一样，找到了一种解决方案

00:13:14.259 --> 00:13:19.779
用户不仅仅可以使用多个注册表的多个密钥

00:13:19.779 --> 00:13:25.449
像一个人一样依赖，而没有明确地决定他们只想

00:13:25.449 --> 00:13:32.529
关心一个人发布的内容，但是我不确定那是什么

00:13:32.529 --> 00:13:36.149
这些对你们有多远

00:13:37.190 --> 00:13:42.810
嗯，我的感觉是，一旦我们

00:13:42.810 --> 00:13:50.480
开始与其他包裹管理人员交谈

00:13:50.480 --> 00:13:59.670
证明谁是值得信任的数据的拥有者

00:13:59.670 --> 00:14:05.840
软件包列表索引的当前状态将是

00:14:05.840 --> 00:14:17.890
这一切都变得更有趣了

00:14:17.890 --> 00:14:23.380
我有一个想法，所以假设那里有这样的高绩效人才

00:14:23.380 --> 00:14:30.190
IP NS的实施基本上是分散网络上美丽的数据

00:14:30.190 --> 00:14:37.420
我认为最有趣的后果是

00:14:37.420 --> 00:14:43.630
将软件包上传到其存储库的用户

00:14:43.630 --> 00:14:48.579
本身只需要变得像一个信任网络，每个用户

00:14:48.579 --> 00:14:52.750
可以拥有自己的类似IP NS链接自己的小型迷你仓库

00:14:52.750 --> 00:14:59.140
有点融合在一起，探索可能还为时过早

00:14:59.140 --> 00:15:04.360
但是我想知道我们是否可以按照

00:15:04.360 --> 00:15:10.810
试图为每个类似NPM维护者创建像IP NS记录一样的记录

00:15:10.810 --> 00:15:14.640
或喜欢镜像他们

00:15:16.600 --> 00:15:24.100
我可以想象不仅有创作者，还有每个人

00:15:24.100 --> 00:15:28.990
包能够像版本数量的迷你索引一样

00:15:28.990 --> 00:15:34.870
该软件包可用的，并且您必须相信无论放到哪里的人

00:15:34.870 --> 00:15:40.410
那些列出的版本在一起就是被授权发布它们的人

00:15:40.410 --> 00:15:47.470
因此，您绝对可以为每个包裹指定一个名称，就像您愿意的话

00:15:47.470 --> 00:15:52.450
如果您在白板上绘制了NPI模式的整个架构

00:15:52.450 --> 00:15:58.300
例如它的哪些部分是不可变的，而您的哪些部分是不可变的，

00:15:58.300 --> 00:16:08.980
知道必须可变的每个部分都可能是IP NS条目，是的，我做了

00:16:08.980 --> 00:16:17.410
上周我们经常做的谈话是使用em FS进行操作的想法，

00:16:17.410 --> 00:16:25.870
通过将所有内容集中到em FS文件夹中，然后指向用户来简化此操作

00:16:25.870 --> 00:16:30.880
对于给定注册表而言，其根本原因是因为我们正在考虑如何

00:16:30.880 --> 00:16:36.490
如果不是这种情况，可以解决IP NS缓慢的问题，那么您就不会

00:16:36.490 --> 00:16:40.720
需要将所有东西都放在一起，您可以将所有东西都视为分裂

00:16:40.720 --> 00:16:48.400
他们全部和包本身应该是不变的，但

00:16:48.400 --> 00:16:56.710
索引和每个版本的索引，然后索引每个包或

00:16:56.710 --> 00:17:04.630
索引的所有索引都需要是可变的，并且还需要信任和签名

00:17:04.630 --> 00:17:13.089
任何单个软件包的索引厌恶都归人民所有

00:17:13.089 --> 00:17:17.640
能够发布该事物的新版本以及整体

00:17:17.640 --> 00:17:27.500
索引就像是注册表维护者受信任的已批准列表或列表

00:17:27.500 --> 00:17:35.179
Dis批准的软件包，其中垃圾邮件或恶意软件包被删除或DMCA

00:17:35.179 --> 00:17:42.770
删除，因此这两个是重要的两个，然后您就拥有了

00:17:42.770 --> 00:17:48.830
诸如搜索，安全性和许可证数据之类的多余位全都开始于

00:17:48.830 --> 00:17:55.100
作为额外的进来实际上是像您可以治疗ipfs IP多少

00:17:55.100 --> 00:18:02.150
外星人作为指向不可变软件包的数据库，然后有时

00:18:02.150 --> 00:18:07.240
当它们被删除时，您不再指向其中某些软件包

00:18:08.380 --> 00:18:12.669
我正在考虑的另一个潜在的可变性应用是

00:18:12.669 --> 00:18:16.909
我现在在程序包管理器中看到的问题是，我们正在处理这些巨大的

00:18:16.909 --> 00:18:22.610
巨大的存储库，我们试图一次将它们全部丢弃

00:18:22.610 --> 00:18:28.900
如果它可以像我们所摄取的那样像点播一样好，那么我们

00:18:28.900 --> 00:18:33.789
我们只摄取实际使用的那些，然后

00:18:33.789 --> 00:18:39.620
从使用软件包管理器的人员那里可以访问软件包管理器客户端

00:18:39.620 --> 00:18:46.450
返回您知道他们使用的软件包列表，然后这些是我们

00:18:46.450 --> 00:18:53.419
为他们摄取，所以我认为NPM在线PFS已经在

00:18:53.419 --> 00:19:02.720
我很乐意在将软件包添加到您的方式中使用八分法

00:19:02.720 --> 00:19:08.179
如果它已经存在，并且它是按照用户的要求通过

00:19:08.179 --> 00:19:17.690
NPM ipfs-NPM会懒惰地喜欢去检查它是否已经在ifs上

00:19:17.690 --> 00:19:23.179
如果不是LLL，请转到上游注册表获取Jason下载tarball

00:19:23.179 --> 00:19:30.289
头像Walter ipfs然后将带有CID的Jason更新到每个人

00:19:30.289 --> 00:19:36.100
刚添加的版本，然后将其发送回用户

00:19:37.500 --> 00:19:44.020
但它也正在积极地这样做，因为这不仅对我来说很慢

00:19:44.020 --> 00:19:48.429
意味着甚至不使用命名，而只是将所有这些软件包添加到

00:19:48.429 --> 00:19:58.720
ipfs不像HD PM PM那样快

00:19:58.720 --> 00:20:03.130
主动，因为NPM拥有更改供稿，您每次可以看到新的

00:20:03.130 --> 00:20:07.030
版本已经发布了，哦，好吧，我们不妨加此

00:20:07.030 --> 00:20:10.419
以防万一有人要它，因为他们会期望它是

00:20:10.419 --> 00:20:21.970
快速，如果他们打算将其与使用常规NPM进行比较，就像我

00:20:21.970 --> 00:20:26.110
在Debian的情况下，它的想法太大了，就像我们可以

00:20:26.110 --> 00:20:32.679
我们不想反映整个事情，但是就像个人可以说

00:20:32.679 --> 00:20:38.710
发布IP NS条目这些是我已经安装或我想要的软件包

00:20:38.710 --> 00:20:43.900
要安装，是说我正在订阅您，然后我们会

00:20:43.900 --> 00:20:48.910
知道我们只需要把那些刮下来，然后就可以

00:20:48.910 --> 00:20:54.220
默认情况下，它可能会先尝试对可用的PFS进行尝试，然后再尝试

00:20:54.220 --> 00:21:00.040
如果他们安装了一个不在ipfs上的软件，则可以从普通的Debian中获得

00:21:00.040 --> 00:21:04.660
镜像，但是他们可以更新其IP NS条目，说我想要这个

00:21:04.660 --> 00:21:10.929
包，然后我们基本上可以订阅所有内容

00:21:10.929 --> 00:21:20.070
客户IP Ness提要并弄清楚我们应该镜像哪些程序包集

00:21:20.920 --> 00:21:26.410
这听起来真的很有趣，尤其是如果您可以

00:21:26.410 --> 00:21:33.030
然后您开始在用户之间共享那些单独的列表的地步

00:21:33.030 --> 00:21:39.160
也许是在公司内部还是在社区内部，就像这里的一小块

00:21:39.160 --> 00:21:49.020
这些东西的子集，我想从结构上讲Debian或Ubuntu

00:21:49.020 --> 00:21:56.050
注册管理机构仍然需要至少包含软件包GZ文件，该文件告诉

00:21:56.050 --> 00:22:01.330
您所拥有的一切可能的东西，他们会提取完整的副本

00:22:01.330 --> 00:22:09.310
实际的话，如果他们去安装那些软件包之一，那么我们可以

00:22:09.310 --> 00:22:14.050
在要求时输入EFS，而不是尝试输入所有内容，

00:22:14.050 --> 00:22:19.630
是的，自1999年底以来我就一直不是Debian开发人员，但是他们使用了

00:22:19.630 --> 00:22:24.040
有一个叫做人气竞赛的套餐，就像他们已经有了

00:22:24.040 --> 00:22:29.890
可以将软件包列表发送到中央服务器的机制

00:22:29.890 --> 00:22:34.840
想收集列表，然后他们对哪个列表有一个了解

00:22:34.840 --> 00:22:40.240
是最受欢迎的yeah仍然存在，并且如果现在稍微偏斜

00:22:40.240 --> 00:22:47.800
因为docker和CI不包括人气竞赛，所以很多

00:22:47.800 --> 00:22:53.290
Debian用户从不喜欢举报，但是大多数情况下仍然如此

00:22:53.290 --> 00:22:59.890
您所拥有的软件包管理器就像最高级的软件包的一％构成了90％的软件包

00:22:59.890 --> 00:23:07.140
所有的选票，我们都可以很容易地算出这些选票是什么

00:23:07.140 --> 00:23:13.710
我们是否想做自己喜欢的工作来数那些

00:23:13.710 --> 00:23:22.590
我想说的是，我只是想不像刚丢掉的二手车而已

00:23:22.590 --> 00:23:28.590
让周围的事情一直困扰着我，另一件事是我们

00:23:28.590 --> 00:23:32.010
可能会探索可能只是在路上，但就像那样

00:23:32.010 --> 00:23:38.310
例如联邦（Federation），这样您就可以让多人同时摄食，例如Debian

00:23:38.310 --> 00:23:43.710
存档他们只是发布了他们想要的，但是人们会

00:23:43.710 --> 00:23:51.060
必须信任其他饲料与他们的联盟，但是因为

00:23:51.060 --> 00:23:57.990
ipfs的不可变性质可能会非常整洁，我认为这

00:23:57.990 --> 00:24:02.730
就像一个国际雪联，有一些东西，但是集群团队正在努力

00:24:02.730 --> 00:24:08.640
那就像是在像这样的人中社区范围内的集群

00:24:08.640 --> 00:24:13.550
半信任的，因此最终可能与此重叠

00:24:13.550 --> 00:24:18.660
他们也在谈论能够分拆大量标签，从而使很多标签受青睐

00:24:18.660 --> 00:24:23.910
就像第一音符一样，就像他们在浴缸里摇晃一样

00:24:23.910 --> 00:24:36.690
啤酒树是这里的一切，对于某些人来说，这将是很有帮助的

00:24:36.690 --> 00:24:41.550
我们在谈论这些事情，以确保我们知道目标是什么

00:24:41.550 --> 00:24:46.710
是或需要什么来实现类似IPS的性能，例如

00:24:46.710 --> 00:24:56.790
我有点担心，甚至就像您了解DHT之类的简单事物一样

00:24:56.790 --> 00:25:04.560
查找提供程序，如果您像鸟巢一样，这就是我通过管道传递EFS的工作方式

00:25:04.560 --> 00:25:08.760
由有限数量的人运行的记录可能不会

00:25:08.760 --> 00:25:12.720
DHT中有很多条目，这意味着您必须实际找到

00:25:12.720 --> 00:25:18.240
他们很快，如果我们正在寻找的速度量，我们会

00:25:18.240 --> 00:25:23.420
需要您知道说让这项工作对您有所了解

00:25:23.420 --> 00:25:27.650
单个包装具有IPS入口或类似性能的东西

00:25:27.650 --> 00:25:33.350
很高，我们最终将使用DNS链接或其他方式，

00:25:33.350 --> 00:25:38.720
考虑到替代方案是，现在不值得沿着那条道路走

00:25:38.720 --> 00:25:44.120
正确使用DNS，这样就知道性能要求是什么

00:25:44.120 --> 00:25:50.480
并确保他们确实可以被满足将帮助我们知道什么样的

00:25:50.480 --> 00:25:58.430
是的，计划了下一步，所以至少我在想着要开始的方法

00:25:58.430 --> 00:26:04.880
我们将采取的方法是鼓励

00:26:04.880 --> 00:26:10.060
程序包管理器从本质上将其现有注册表作为镜像

00:26:10.060 --> 00:26:15.440
ipfs而不是尝试重写其软件包的方式

00:26:15.440 --> 00:26:22.040
经理努力能够与ipfs一起更有效地工作，主要是因为

00:26:22.040 --> 00:26:25.640
这只是他们更大的任务，我认为他们不会为此而努力

00:26:25.640 --> 00:26:32.330
所以我怀疑那会稍微有点线

00:26:32.330 --> 00:26:40.430
吉姆正在谈论的事情能够塑造方式

00:26:40.430 --> 00:26:47.480
数据是经过整理的，因此数据较小或着重于个人

00:26:47.480 --> 00:26:55.940
用户或个别包装中的热点种类抱歉，我认为这是

00:26:55.940 --> 00:27:03.240
就像我们要像我们信任一样使用DNS

00:27:03.240 --> 00:27:08.190
注册表所有者，因为他们可以控制DNS的契约事件

00:27:08.190 --> 00:27:15.290
指向ipfs的世界而不是

00:27:15.590 --> 00:27:19.460
比尝试让他们有一个或先灵

00:27:19.460 --> 00:27:25.399
每个单独的程序包和每个用户很多语言的IP ns

00:27:25.399 --> 00:27:28.940
打包经理现在完全不签名

00:27:28.940 --> 00:27:38.120
依靠他们的DNS和中央数据库来推断任何类型的

00:27:38.120 --> 00:27:42.679
拥有所有权，所以设法使这些事情发生改变肯定会比较困难

00:27:42.679 --> 00:27:47.629
像新包装经理一样，我们绝对可以鼓励人们思考

00:27:47.629 --> 00:27:51.889
关于这一点的方式略有不同，但对于现有的方式，我们将

00:27:51.889 --> 00:27:58.460
必须首先尝试支持引擎盖，例如

00:27:58.460 --> 00:28:05.860
轻松工作以使其启动并运行，然后尝试使用更高级的功能

00:28:05.860 --> 00:28:11.720
嗯，这是否意味着更多的是关于更新提要

00:28:11.720 --> 00:28:16.429
初始分辨率，因为您只使用了一个像兆索引一样的索引，因此如果需要

00:28:16.429 --> 00:28:21.139
您想花一分钟的时间来找到巨型索引，但是对它的所有更新都是

00:28:21.139 --> 00:28:30.499
快，你可能还好吧，好酷，是啊，每扇门都这么近，因为

00:28:30.499 --> 00:28:34.029
团队偶尔

00:28:37.690 --> 00:28:41.779
但是是的，我希望是在日记中的某个时候多谈论这些东西

00:28:41.779 --> 00:28:49.669
因为我认为还是要优先考虑酷，酷，你知道

00:28:49.669 --> 00:28:54.499
非常感谢您每周都会来包装经理，同样的人也看到了

00:28:54.499 --> 00:28:57.309
你下周

