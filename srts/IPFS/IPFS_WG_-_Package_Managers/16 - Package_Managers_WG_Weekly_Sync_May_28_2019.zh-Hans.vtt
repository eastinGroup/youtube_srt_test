WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.620 --> 00:00:06.560
您好，欢迎来到软件包管理员特别兴趣小组，每周进行同步

00:00:06.560 --> 00:00:17.150
5月28日，我是安德鲁，今天的主持人，因为疼痛的大脑正在搬家。

00:00:17.150 --> 00:00:25.170
我们已经有一个笔记记录者，并且剪贴板中的链接在聊天中，所以我将

00:00:25.170 --> 00:00:34.170
从本周开始，我做了一个名为ipfs NPM的小项目，重新发布了这个想法。

00:00:34.170 --> 00:00:42.629
您可以进入程序和JavaScript程序的目录

00:00:42.629 --> 00:00:49.530
确实在本地安装了运行命令并拥有一个迷你注册表

00:00:49.530 --> 00:00:56.820
通过一个简单的命令就可以生成并上传到ipfs的项目

00:00:56.820 --> 00:01:03.409
一旦拥有了基本上可以下载所有内容的软件，它的效果就很好

00:01:03.409 --> 00:01:09.930
将原始的tar球拖放到temp目录中，然后将该目录添加到ipfs中

00:01:09.930 --> 00:01:18.060
就像NPM注册表一样，它是只读的，我还添加了一个

00:01:18.060 --> 00:01:24.689
命令，以便您也可以为任何单个模块执行此操作

00:01:24.689 --> 00:01:31.259
基本上会算出那个特定的的过境依存关系

00:01:31.259 --> 00:01:37.979
模块将所有这些文件一起上传到一个小型迷你注册表中，以便您

00:01:37.979 --> 00:01:44.250
然后可以说npm直接从ipfs在注册表中安装此模块

00:01:44.250 --> 00:01:49.710
基本上意味着您也可以开始共享单个模块

00:01:49.710 --> 00:01:54.060
作为IP FS上的应用程序而无需注册，因为所有

00:01:54.060 --> 00:01:59.759
付款就可以满足您的所有需求，并且就在旁边

00:01:59.759 --> 00:02:05.969
具有所有依赖项集合的单个软件包，因此它是

00:02:05.969 --> 00:02:09.810
基本上就像将所有东西都包裹在一个干净利落的小包装中，然后放进去

00:02:09.810 --> 00:02:13.190
如果我们在结束时有一些时间，请直接使用IP FS

00:02:13.190 --> 00:02:18.560
呼叫我将演示一个小演示，其中也有一些相当复杂的呼叫

00:02:18.560 --> 00:02:26.660
讨论ipfs路线图上的MPM以及程序包管理者的深入探讨

00:02:26.660 --> 00:02:33.560
我们将要在ipfs营地运行，我认为这两个项目都在进行中

00:02:33.560 --> 00:02:38.690
是笔记，我已经放入婴儿床了，但我认为没有任何解决方法

00:02:38.690 --> 00:02:40.670
我们刚刚达到的任何一个

00:02:40.670 --> 00:02:47.120
我还出现在有关程序包管理器的所有更新文档中

00:02:47.120 --> 00:02:51.769
回购，使它更有条理，并从问题跟踪器中删除，因此

00:02:51.769 --> 00:02:56.989
希望人们可以更轻松地找到它，并且我们可以开始转向

00:02:56.989 --> 00:03:04.160
变成一种故事或一条途径，您可以遵循以解决

00:03:04.160 --> 00:03:09.170
ipfs和程序包管理器如何一起工作，到底是怎么回事？

00:03:09.170 --> 00:03:16.280
就像它们是我们接下来真正要做的事情一样

00:03:16.280 --> 00:03:24.230
使用此重新发布脚本进行尝试，以使您可以拥有更多

00:03:24.230 --> 00:03:30.280
版本，而不是目前可用的解决方案，以及

00:03:30.280 --> 00:03:38.769
在ipfs营地进行进一步的深入计划，并进行头脑风暴

00:03:38.769 --> 00:03:47.019
我的包裹管理者特殊兴趣小组的下一组工作

00:03:47.019 --> 00:03:55.790
互联网对此感到非常抱歉，无论

00:03:55.790 --> 00:04:01.010
在接下来的六个月中，包管理人员的工作应该像一些人一样摆脱掉

00:04:01.010 --> 00:04:07.790
内容，以便深入探讨相关领域

00:04:07.790 --> 00:04:11.989
去工作，但是我们有点需要知道那些东西会是什么样子

00:04:11.989 --> 00:04:19.450
首先，这就是我本周要去杰西卡（Jessica）的地方

00:04:25.430 --> 00:04:30.470
包括讨论总体路线图和深入防御

00:04:30.470 --> 00:04:35.330
接下来还有一些零碎的地方，我需要为此扎实

00:04:35.330 --> 00:04:38.750
我们要留在房间里的文物，让一些人深陷其中

00:04:38.750 --> 00:04:43.160
如果有人可以敲敲一些东西，则海报上会有一些关键点

00:04:43.160 --> 00:04:49.509
我把所有的物理东西都收拾好了

00:04:51.669 --> 00:04:56.840
然后是的，下次再进行更多工作以进行深度潜水和卓越计划

00:04:56.840 --> 00:05:03.500
想看一下这个SIG的整体救济，并添加一些马里的

00:05:03.500 --> 00:05:10.430
包裹经理的笔记是的，我做了一些自述文件，我只是将其链接到

00:05:10.430 --> 00:05:14.270
聊天，但随时可以彻底修改它，它只有一点点

00:05:14.270 --> 00:05:24.169
每个页面的段落，但您可以将其用作起点

00:05:24.169 --> 00:05:27.800
马里上周从她在飞机上写的那个字文件中得到的笔记

00:05:27.800 --> 00:05:32.199
就像为什么软件包管理器是非常高级的东西，然后

00:05:32.199 --> 00:05:52.520
谢谢你的背叛，这太棒了，是的，我要做的是继续前进

00:05:52.520 --> 00:06:00.169
吉姆，我只是觉得我确实尝试过发布ipfs NPM，这是

00:06:00.169 --> 00:06:07.509
我不知道这是1930年的突破，所以我认为我们应该做一个演示

00:06:07.509 --> 00:06:27.050
但是我们要怎么一起做呢，我们谈论了这个哦，闪电公鸡

00:06:27.050 --> 00:06:37.490
我认为我已经签约了，我选择了一只闪电公鸡，或者我可以

00:06:37.490 --> 00:06:40.590
你知道闪电告诉我我要留下吗

00:06:40.590 --> 00:06:43.560
在奥克兰，还有其他东西会超级棒，我认为那实际上是

00:06:43.560 --> 00:06:54.360
超级有趣，如果您仍然对完美感到满意，是的，所以我告诉亚历克斯

00:06:54.360 --> 00:07:01.410
关于这个，但我有一个分叉的ipfs，它的吸吮版本要少得多

00:07:01.410 --> 00:07:12.290
IP，是的，一旦发现同龄人，它的速度非常快

00:07:12.650 --> 00:07:19.350
听起来很明显，但并不是因为它仍然很慢，即使您

00:07:19.350 --> 00:07:22.490
之前与每个人都有联系

00:07:24.350 --> 00:07:29.550
发现就像没有那么慢，因为它现在只需要一个DHT查询，而不是

00:07:29.550 --> 00:07:39.180
16，下一步是会合整合，这样我们就可以

00:07:39.180 --> 00:07:44.730
就像只是设置几个服务器，然后可以随着时间的推移扩展它们，

00:07:44.730 --> 00:07:49.260
希望在某个时候结盟，这应该使事情变得非常相似

00:07:49.260 --> 00:07:57.660
速度更快，而无需我们完全过渡到DNS，所以我对

00:07:57.660 --> 00:08:08.610
在我像你知道的和我的github斜线ipfs是的安德鲁和我

00:08:08.610 --> 00:08:14.190
在本周玩耍时注意到，实际上需要时间才能

00:08:14.190 --> 00:08:18.780
解决您自己的IP NS是当您刚刚发布它们时，我想知道是否

00:08:18.780 --> 00:08:25.110
如果您可以证明IP NS是

00:08:25.110 --> 00:08:29.190
自己喜欢的一种，如果您拥有专用密钥，您甚至不能

00:08:29.190 --> 00:08:36.570
麻烦去别的地方去做吧，是的，我的意思是你可以，我可以

00:08:36.570 --> 00:08:40.770
可能是因为您不再需要等待法定人数而设置

00:08:40.770 --> 00:08:48.470
因为你知道自己就是真理的源头，但这只是一切的全部

00:08:48.470 --> 00:08:55.140
就像一个节点IP一样，就像您的对等ID

00:08:55.140 --> 00:08:59.820
是IP和s的密钥，那么这很容易，但是如果您使用

00:08:59.820 --> 00:09:04.230
现在使用不同的密钥，我还必须检查密钥注册表，以查看我是否是所有者

00:09:04.230 --> 00:09:09.570
以及那个键的大小，所以它并不像

00:09:09.570 --> 00:09:16.370
可能是个好消息是

00:09:16.890 --> 00:09:24.340
合理地与您知道的发布/订阅好吧，好东西收获像

00:09:24.340 --> 00:09:27.880
允许第三方代表您重新发布记录

00:09:27.880 --> 00:09:35.500
作为pub / sub之类的八卦协议工作方式的一部分免费提供，这意味着

00:09:35.500 --> 00:09:39.760
这样您还可以免费了解自己的情况，例如

00:09:39.760 --> 00:09:44.850
这将通过意外解决，好吧，是的，这主要是为了

00:09:44.850 --> 00:09:49.540
像这样的第一次用户体验哦，我发布了一个名称，让我放进去

00:09:49.540 --> 00:09:56.170
就像在桌面上看到它看起来是什么样子，这将会

00:09:56.170 --> 00:10:04.000
请花一点时间，或者如果您想在此IP中使用，请重新发布脚本。

00:10:04.000 --> 00:10:11.230
让它在其末尾删除一个名称，然后就像您要使用该注册表一样

00:10:11.230 --> 00:10:16.680
直截了当，这使得它就像是一个较慢的体验，只是为了测试您的

00:10:16.680 --> 00:10:23.380
您创建的内容可以成功运行，是的，如果这样做的话，速度会更快

00:10:23.380 --> 00:10:27.810
意外的话那太好了，并不一定需要快捷方式，

00:10:27.810 --> 00:10:32.080
是的，我的意思是我们必须走的路线我还没有尝试太多，但是

00:10:32.080 --> 00:10:39.850
好像足够快，这部分是因为IPS

00:10:39.850 --> 00:10:46.510
 pub / sub甚至现有的类似非fork版本都具有一定级别的缓存

00:10:46.510 --> 00:10:55.030
进入它，这样一来，您就可以像它一样发布它，这样就可以了

00:10:55.030 --> 00:10:58.420
问题就像您无法访问，您无法真正访问那样

00:10:58.420 --> 00:11:03.340
最初，所以我敢打赌，如果您打开IPS ever pub / sub，并且您发布到

00:11:03.340 --> 00:11:09.030
自己，并从自己那里解决，它仍然会很快

00:11:09.329 --> 00:11:15.689
因为其中内置了缓存，所以在运行命令时只是一个标志

00:11:15.689 --> 00:11:19.980
或者即使在运行守护程序时也将运行它-有一个-启用将其命名为

00:11:19.980 --> 00:11:28.290
pub / sub命令，但请确保像最新的go ipfs一样执行此操作

00:11:28.290 --> 00:11:37.980
因为如果您使用的像是0.4点20，它将由于某些原因而挂起

00:11:37.980 --> 00:11:44.249
仍然在做它正在做的事情，就像它会挂起甚至不返回一样

00:11:44.249 --> 00:11:47.059
虽然它可能应该

00:11:47.520 --> 00:11:54.839
啊，是的，如果你想喜欢我的叉子，就像你一样漂亮

00:11:54.839 --> 00:12:01.380
知道您期望它做一个警告的事情是合理的吗

00:12:01.380 --> 00:12:04.740
如果您想做的话，如果您想做的话喜欢推送更新

00:12:04.740 --> 00:12:10.140
很快就会有一个标志，您必须通过并输入我们以确保您

00:12:10.140 --> 00:12:16.620
没有获得数据的缓存版本或CLI级别的缓存

00:12:16.620 --> 00:12:21.510
并在网络级别进行缓存，因此，如果您要在CLI上关闭缓存，

00:12:21.510 --> 00:12:29.070
级别，然后有一个标志要传递给您，例如专业要求或一些

00:12:29.070 --> 00:12:36.600
我们可以链接到的鸭子，让人们尝试一下，所以我不在那儿

00:12:36.600 --> 00:12:44.390
是一个PR，它描述了正在发生的事情以及正在发生的事情，但是为什么我

00:12:44.390 --> 00:12:49.320
与lib qaddafi乡亲交谈后，我不得不喜欢重构和rima jigger

00:12:49.320 --> 00:12:54.870
一切生活在那里，使他们的生活更轻松，等等

00:12:54.870 --> 00:12:58.290
这就是我上周一直在努力的事情，这几乎是

00:12:58.290 --> 00:13:02.100
现在完成，所以我只需要获取一些评论，然后设置一个

00:13:02.100 --> 00:13:07.470
新的公关，是的，我只是想在那里买些东西，所以你们

00:13:07.470 --> 00:13:12.690
当我快点说完之后，可能会感觉到它是什么意思

00:13:12.690 --> 00:13:19.709
是的发现，是的，这就是我希望能够在其中获得更好的东西的方式。

00:13:19.709 --> 00:13:32.220
下周吧，所以我对这个ipfs进行了一些演示，我们发布了脚本并分享了我的

00:13:32.220 --> 00:13:36.170
屏幕能工作吗

00:13:37.020 --> 00:13:46.529
好吧，现在就让我的终端进入我在这里的目录中，实际上

00:13:46.529 --> 00:13:52.620
程序本身，但重要的是它具有程序包-锁定

00:13:52.620 --> 00:14:01.649
Jason，其中包含该项目的完全解析的依赖关系树，其中

00:14:01.649 --> 00:14:05.760
有大约一百一十六种不同的东西，你知道，我认为

00:14:05.760 --> 00:14:12.470
依赖关系的负载，这里基本上所有这些东西都是

00:14:12.470 --> 00:14:17.910
他们没有使用的这个项目的扁平化依赖树没有任何

00:14:17.910 --> 00:14:22.560
依赖关系，但我只需要添加一个就可以带来另外一百个或

00:14:22.560 --> 00:14:31.380
伴随着它，所以我们可以运行的基本上是一个命令

00:14:31.380 --> 00:14:39.480
并下载您制作的软件包，然后针对指定的每个版本

00:14:39.480 --> 00:14:44.459
锁定版本，它将下载该Tarble并将其全部添加到

00:14:44.459 --> 00:14:50.310
如果它是通过网关加载的，则基本上使URL的文件夹看起来只是

00:14:50.310 --> 00:14:56.220
就像NPM注册表URL，所以现在好问我如何从

00:14:56.220 --> 00:15:06.540
现在共享，让我们让我们共享整个桌面，所以如果我们打开ipfs

00:15:06.540 --> 00:15:15.140
桌面并粘贴[音乐]

00:15:15.140 --> 00:15:26.340
生成的CID go可以看到我们基本上得到了不同的tar球，这

00:15:26.340 --> 00:15:33.120
是JSON文件，但不是将JSON放在最后，而是像斜杠

00:15:33.120 --> 00:15:38.970
软件包的名称，这就是NPM查找脚本的内容的方式

00:15:38.970 --> 00:15:50.430
我们将配置添加到NPM RC中以使用该新注册表，以便

00:15:50.430 --> 00:15:56.670
然后可以算出方框，您可以删除节点模块，然后可以

00:15:56.670 --> 00:16:03.840
删除您不需要的包裹锁jason，但我们可以想象，

00:16:03.840 --> 00:16:09.330
从头开始几乎就像有人刚刚克隆了这个，然后

00:16:09.330 --> 00:16:15.810
他们可以运行npm install，这将获取新的新更改的npm RC

00:16:15.810 --> 00:16:22.980
自动归档文件，就像您看到的那样，它的速度非常快，这不是因为

00:16:22.980 --> 00:16:31.620
它是从您本地的IP FS网关加载的，那么如果我们将该包锁定

00:16:31.620 --> 00:16:39.540
再次归档，您可以看到我们很有趣，这里有一个错误，它没有

00:16:39.540 --> 00:16:42.750
实际上会影响任何事情，但会在所有内容的末尾添加新的一行

00:16:42.750 --> 00:16:47.700
tarball网址，但无论如何都会被忽略，但每个双打都是

00:16:47.700 --> 00:16:54.600
现在解析到相同的本地网关，不是它们的cid都不一样

00:16:54.600 --> 00:17:01.530
每个Tarble而不是整个注册表的CID

00:17:01.530 --> 00:17:07.709
本身，但整个包装，整个东西的集合，然后是

00:17:07.709 --> 00:17:11.130
自动从本地网关中拉出，这样您就可以

00:17:11.130 --> 00:17:15.480
与其他人分享，他们可以开始使用它而不必

00:17:15.480 --> 00:17:22.589
甚至需要上网，如果我们进入另一个标签，例如

00:17:22.589 --> 00:17:28.420
想发布一些我关心的软件包

00:17:28.420 --> 00:17:32.980
关于，并不一定有一个应用程序是的，但我想把每个

00:17:32.980 --> 00:17:37.810
尝试PFS的各个包裹，假设我要坐飞机去，

00:17:37.810 --> 00:17:42.970
可以肯定的是，我将使用其中一些软件包

00:17:42.970 --> 00:17:46.660
我在那里，您可以选择特定版本，否则它将选择最新版本

00:17:46.660 --> 00:17:52.480
版本默认情况下，基本上可以算出

00:17:52.480 --> 00:17:57.790
该模块的特定版本的依赖树，然后执行

00:17:57.790 --> 00:18:01.980
同样的事情，这使得

00:18:02.490 --> 00:18:13.470
个人，现在我想知道是否可以在公用网关上访问此文件（可能是ipfs）

00:18:13.470 --> 00:18:19.570
是的，很酷，所以那个M还不存在，因为我已经运行过了

00:18:19.570 --> 00:18:23.560
否则，鉴于我的糟糕表现，并不一定会那么快

00:18:23.560 --> 00:18:29.800
互联网，但您可以看到我们有焦油球，而杰森·彭（Jason pang）也发表了评论

00:18:29.800 --> 00:18:38.110
杰森·帕克曼（Jason Pakman）拥有的，或者您可以在这里看到一个，嘿，亚当（Adam），

00:18:38.110 --> 00:18:42.460
到localhost 8080，这样您就可以重新安装

00:18:42.460 --> 00:18:49.630
很酷的事情是，如果我们回到上一个项目，那么这个项目有一个

00:18:49.630 --> 00:18:54.190
点M PMRC已经在其中，它将使用该本地注册表，但是

00:18:54.190 --> 00:19:05.110
如果我说使用install对我创建的这个新迷你注册表进行反应，那么它

00:19:05.110 --> 00:19:11.500
工作，并且您得到安装的这两个微型注册表的组合，然后

00:19:11.500 --> 00:19:20.710
您可以说，哦，现在我将重新发布它，并放116而不是106或

00:19:20.710 --> 00:19:25.960
不管它是进入新注册表中的任何内容，因此您都可以开始合并

00:19:25.960 --> 00:19:31.510
不同的注册表一起重新发布，而无需

00:19:31.510 --> 00:19:36.830
与上游注册表的连接，这样您就可以开始

00:19:36.830 --> 00:19:43.790
成为您自己领域的统治者

00:19:43.790 --> 00:19:51.800
分享您的包裹还有一些疑问，例如信任关系，但是那

00:19:51.800 --> 00:19:57.050
可能需要某种形式的公证服务，或需要签署

00:19:57.050 --> 00:20:04.880
包以某种方式证明，例如CID是与之匹配的还是

00:20:04.880 --> 00:20:11.840
可以将完整性哈希与NPM注册表进行比较，然后得出结论

00:20:11.840 --> 00:20:15.380
就像如果您想制作自己的包裹，您还可以

00:20:15.380 --> 00:20:21.290
将这些直接发布到ipfs，而无需通过注册表，因此您

00:20:21.290 --> 00:20:25.040
然后需要在某处说出来，就像我宣布这是我的包裹

00:20:25.040 --> 00:20:30.230
蒂姆，我不知道我们是否有足够的时间，但我想检查一下代码

00:20:30.230 --> 00:20:35.570
对于ipfs NPM重新发布，我想克隆您刚刚发布的内容，哦，肯定要

00:20:35.570 --> 00:20:42.860
如果您发布链接，则我将屏蔽共享，因此我将放置新的注册表

00:20:42.860 --> 00:20:47.500
它在这里的聊天室中，我刚发布

00:20:48.130 --> 00:21:05.630
我可能会做的事还好，我还必须检出git存储库

00:21:05.630 --> 00:21:13.940
与检出获取ipfs链接的修剪分开，所以是的，现在，

00:21:13.940 --> 00:21:20.180
该特定项目不是因为它是一个模块而不是一个而不是

00:21:20.180 --> 00:21:25.360
我不提交锁定文件的应用程序我不提交NPM RC的应用程序

00:21:25.360 --> 00:21:30.410
但我想人们会为他们的应用做些什么

00:21:30.410 --> 00:21:36.440
这两个文件，因此您可以检出git存储库和

00:21:36.440 --> 00:21:40.190
它会拥有所有内置的配置，就像可以共享一样

00:21:40.190 --> 00:21:45.500
我认为这将是一个更高层次的层，但我希望像这样建立共享

00:21:45.500 --> 00:21:53.060
他们得到像参考和事物这样的配置，以便人们

00:21:53.060 --> 00:21:58.580
可以克隆它，但更好的是能够像几乎您一样扔掉整个东西

00:21:58.580 --> 00:22:04.310
我们得到的当前目录，所有依赖项将是

00:22:04.310 --> 00:22:10.760
下一步的有趣步骤是何时获取最新信息

00:22:10.760 --> 00:22:19.370
它是从最新解析的，所以如果有

00:22:19.370 --> 00:22:24.890
pacman内列出的版本数（按semver排序并采用）

00:22:24.890 --> 00:22:30.050
除非其中有最大的数字，否则将其标记为NPM

00:22:30.050 --> 00:22:34.340
与许多其他软件包不同，您可以说您想要的任何版本是

00:22:34.340 --> 00:22:38.480
最新，您可以将其标记为最新字符串，但无法将其解析为

00:22:38.480 --> 00:22:48.200
最新的感谢，所以不知道那是否已经为您同步了，吉姆

00:22:48.200 --> 00:23:01.540
确实比我想像的注册表大得多

00:23:01.930 --> 00:23:08.920
7兆字节，这不是一个很大的数目，但我希望它会更大

00:23:08.920 --> 00:23:14.630
正在进行视频通话并同时运行IP FS迈克，就像我在

00:23:14.630 --> 00:23:20.270
不太确定我们是否可以执行此操作，或者我们其他时间也许应该检查此操作

00:23:20.270 --> 00:23:26.380
离线，是的，我们可以尝试一下，让我知道它是否可以运行

00:23:26.380 --> 00:23:36.470
松弛，它现在在网关上，因此可能会加快速度，您可以

00:23:36.470 --> 00:23:42.500
肯定会看到我在网关上发布的内容，但是我认为那是关于

00:23:42.500 --> 00:23:47.800
非常感谢大家的光临，我们下周再见

