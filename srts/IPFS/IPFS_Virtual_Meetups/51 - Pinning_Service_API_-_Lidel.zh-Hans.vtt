WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.120 --> 00:00:07.359
固定服务API是我们一直在努力的事情

00:00:07.359 --> 00:00:12.000
过去几周有点像创建通用规范

00:00:12.000 --> 00:00:19.439
一个非常小的规范，它说明了我们ipfs生态系统中的多个参与者和参与者

00:00:19.439 --> 00:00:24.240
可以在服务端和客户端达成一致

00:00:24.240 --> 00:00:29.599
促进非常基本的持久性

00:00:29.599 --> 00:00:33.120
或多或少，您可以考虑这个

00:00:33.120 --> 00:00:37.040
作为使某物变得有价值的最低价值的产品

00:00:37.040 --> 00:00:40.559
像远程固定一样，所以你就像区

00:00:40.559 --> 00:00:44.399
提到您将笔记本电脑导入数据

00:00:44.399 --> 00:00:46.800
ipfs，但是当您关闭

00:00:46.800 --> 00:00:52.239
笔记本电脑，而其他人想在笔记本电脑处于访问状态时访问数据

00:00:52.239 --> 00:00:57.120
关闭或您的服务器暂时脱机，您要保留数据

00:00:57.120 --> 00:01:01.440
在其他地方，所以至少有一个种子提供者

00:01:01.440 --> 00:01:05.760
数据提供者，因此这是固定服务API规范的地方

00:01:05.760 --> 00:01:10.799
进来这是一个非常基本的开放式API规范

00:01:10.840 --> 00:01:14.960
像服务提供商一样可以实施

00:01:14.960 --> 00:01:19.759
可以只提供您想要的身份证吗

00:01:19.759 --> 00:01:23.759
坚持下去，并获得状态是持续的

00:01:23.759 --> 00:01:29.920
它是可爱的，嗯，它不包括在内

00:01:29.920 --> 00:01:36.240
导入到ipfs，它不包括用户空间管理，只是一个

00:01:36.240 --> 00:01:41.520
您可以实现的非常小的通用规范，并且有ipfs固定

00:01:41.520 --> 00:01:44.799
服务api规范库，如果您想学习

00:01:44.799 --> 00:01:49.360
有关此的更多详细信息，有一个规范是

00:01:49.360 --> 00:01:55.759
在yaml格式中，我相信它是开放的api 3.0，并且有一个人类

00:01:55.759 --> 00:02:00.399
可读的文档，你可以看的是

00:02:00.399 --> 00:02:05.840
从该yaml文件中呈现出来，并且只是非常简短地向您展示了这个过程的简单性

00:02:05.840 --> 00:02:09.119
api是您有一个pin对象，它只是一个基本的

00:02:09.119 --> 00:02:11.680
您想要固定的东西的表示形式

00:02:11.680 --> 00:02:18.080
这是一个cid，您可以选择提供已知来源列表以加快数据处理

00:02:18.080 --> 00:02:20.319
传输和其他元数据

00:02:20.319 --> 00:02:25.760
可选，然后您会做出响应或获得初始图钉

00:02:25.760 --> 00:02:28.959
操作或稍后您要检查状态

00:02:28.959 --> 00:02:32.400
您得到了此Pin状态响应，其中您获得了ID

00:02:32.400 --> 00:02:35.599
将操作状态固定在创建位置

00:02:35.599 --> 00:02:41.440
然后您会得到固定服务提供的提供商列表

00:02:41.440 --> 00:02:45.680
他们自己，那些新的多其他人将是

00:02:45.680 --> 00:02:51.120
将数据提供给网络，当然还有其他元数据

00:02:51.120 --> 00:02:54.480
嗯，所以操作清单很短

00:02:54.480 --> 00:03:01.200
您列出了引脚，添加了引脚，您可以读取引脚状态，对其进行修改或删除

00:03:01.200 --> 00:03:07.840
只是为了强调这不只是一件很抽象的事情

00:03:07.840 --> 00:03:11.040
将由服务实现，我们将

00:03:11.040 --> 00:03:18.159
嗯，先介绍一下吧，它将介绍给我们的gui

00:03:18.159 --> 00:03:23.519
应用程序，因此，如果您安装ipfs桌面或运行Web ui

00:03:23.519 --> 00:03:27.440
在设置屏幕上，可以选择添加服务

00:03:27.440 --> 00:03:32.400
远程服务，这只是一个模型，但看起来或多或少是这样的

00:03:32.400 --> 00:03:36.159
它可能是自定义的东西，也可能是其中之一

00:03:36.159 --> 00:03:39.280
知名的已经存在的球员也许是新来的人

00:03:39.280 --> 00:03:43.920
也许是您自己创建的东西，您将能够添加固定

00:03:43.920 --> 00:03:49.760
服务到您的ipfs节点并重做远程固定和该远程

00:03:49.760 --> 00:03:53.760
固定不仅可以在ipfs桌面之类的gui应用程序中工作，

00:03:53.760 --> 00:03:58.319
将能够使用相同的固定服务

00:03:58.319 --> 00:04:02.000
从命令行开始，所以如果您只使用go ipfs而不使用

00:04:02.000 --> 00:04:08.319
ipfs台式机，您仍然可以从此规范中受益，所以这是一个

00:04:08.319 --> 00:04:11.040
规格很小，还很早，但是我们

00:04:11.040 --> 00:04:15.120
正在关闭，它已经有效地完成了，我们可能会

00:04:15.120 --> 00:04:18.560
我们可以重命名一个或两个但更多的字段，或者

00:04:18.560 --> 00:04:21.040
少一点是相当稳定的，所以如果你是

00:04:21.040 --> 00:04:26.000
对这个感兴趣的只是我会访问的链接

00:04:26.000 --> 00:04:31.759
贴在聊天中不久，我相信那是

00:04:32.520 --> 00:04:35.520
它

