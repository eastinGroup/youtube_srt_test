WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.120 --> 00:00:08.080
嗯，我很高兴见到大家。今天，我要说的是

00:00:08.080 --> 00:00:12.240
关于ipfs提取，我想看看

00:00:12.240 --> 00:00:15.519
我是如何结合一些常用的webby

00:00:15.519 --> 00:00:18.000
我们已经习惯了一些很棒的界面

00:00:18.000 --> 00:00:22.080
我们在ipfs中已经习惯了点对点接口

00:00:22.080 --> 00:00:25.760
所以这是我介绍的内容

00:00:25.760 --> 00:00:32.640
嗯，我想谈谈网络的良好状况嗯，我真的很喜欢我认为的网络

00:00:32.640 --> 00:00:37.760
几年前，当我成为开发人员时，这真的改变了我

00:00:37.760 --> 00:00:42.879
开始使用网络技术从疯狂的事物（如Java和C加）迁移

00:00:42.879 --> 00:00:46.399
而且这非常容易，我可以将一段文字打成一团

00:00:46.399 --> 00:00:50.800
文件在页面上放一些html并放一些javascript和

00:00:50.800 --> 00:00:54.559
jQuery的东西在一起只是为了使工作正常，然后突然

00:00:54.559 --> 00:00:58.079
一切都可以跨平台工作，我不必担心

00:00:58.079 --> 00:01:02.239
让人担心的可执行文件

00:01:02.239 --> 00:01:05.600
嗯，他们在平台上，并确保一切都在

00:01:05.600 --> 00:01:09.439
实际显示正确，只是可以使工作正常

00:01:09.439 --> 00:01:13.760
我真的很喜欢它如何降低创造凉爽产品的门槛

00:01:13.760 --> 00:01:17.920
事情，但是现在的网络是

00:01:17.920 --> 00:01:23.040
还捆绑了一些我认为不那么酷的东西，那是服务器数量

00:01:23.040 --> 00:01:29.040
我认为服务器一方面不好，但它们使我们得以建立

00:01:29.040 --> 00:01:32.000
这些共享信息的网络，但另一方面

00:01:32.000 --> 00:01:35.680
作为个人，服务器是进入的障碍

00:01:35.680 --> 00:01:38.880
它需要更多的专业知识才能获得

00:01:38.880 --> 00:01:42.560
任何开始，例如，您要么需要喜欢

00:01:42.560 --> 00:01:46.000
在本地运行您自己的计算机，或拥有某种虚拟机，以及

00:01:46.000 --> 00:01:49.119
那么您需要考虑要托管哪种类型的Web服务器

00:01:49.119 --> 00:01:53.200
还有所有这些东西，特别是嗯

00:01:53.200 --> 00:01:56.320
与服务器和网络的一切

00:01:56.320 --> 00:01:59.840
如果我做了一些很酷的事情，就会在这些服务器周围徘徊

00:01:59.840 --> 00:02:04.240
像博客一样，我想与我的朋友分享它，我必须通过一台服务器

00:02:04.240 --> 00:02:08.399
如果该服务器突然脱机，我的朋友将无法访问它

00:02:08.399 --> 00:02:12.080
或者说某人没有互联网或负担不起

00:02:12.080 --> 00:02:16.959
精美的互联网连接，或者说um，您知道Twitter再次掉线了

00:02:16.959 --> 00:02:22.239
突然所有的数据都消失了，这有点痛苦，我觉得

00:02:22.239 --> 00:02:25.440
阻碍了人们的发展

00:02:25.440 --> 00:02:30.160
他们可以创造一件事，那就是

00:02:30.160 --> 00:02:33.280
最近出现的一种是第三方服务

00:02:33.280 --> 00:02:37.680
提供少量费用的托管服务，所以我不必喜欢设置我的

00:02:37.680 --> 00:02:42.000
拥有服务器并对其进行配置，并确保一切都在线我可以支付

00:02:42.000 --> 00:02:47.200
钱或向第三方支付数据，然后

00:02:47.200 --> 00:02:50.879
他们会为我做一切，那很棒，除了

00:02:50.879 --> 00:02:54.560
如果说这件事不是完全属于我的

00:02:54.560 --> 00:02:58.959
这是一个谷歌产品，它可能会在几个月内消失

00:02:58.959 --> 00:03:03.519
或稍后被弃用，或说这是否是其他高科技产品

00:03:03.519 --> 00:03:07.200
只是在我的脚下改变，否则生意会倒闭

00:03:07.200 --> 00:03:10.400
突然之间我建立了任何社区

00:03:10.400 --> 00:03:14.000
我做的那件事因为恩而消失了

00:03:14.000 --> 00:03:18.000
对我来说，设置起来太难了，如果

00:03:18.000 --> 00:03:21.760
这些东西都不是问题，就像我想要没有所有这些的网络

00:03:21.760 --> 00:03:28.159
服务器和所有这些额外的外壳，所以考虑到这一点，我认为

00:03:28.159 --> 00:03:32.159
点对点um会改变

00:03:32.159 --> 00:03:36.319
一切，所以很明显，这是一个

00:03:36.319 --> 00:03:40.640
ipfs聚会，所以我认为大多数人对点对点都很满意，但是

00:03:40.640 --> 00:03:44.560
在服务器情况下重申呃

00:03:44.560 --> 00:03:48.319
通过点对点人员连接到这一中心资源

00:03:48.319 --> 00:03:52.560
直接彼此联系，所以如果我想创建一个博客，我可以发送一个

00:03:52.560 --> 00:03:54.799
链接到朋友，然后他们可以下载

00:03:54.799 --> 00:03:58.480
该博客直接来自我，然后，如果有第三个人想

00:03:58.480 --> 00:04:01.519
查看我的博客，然后他们可以直接为我下载

00:04:01.519 --> 00:04:05.680
和我的朋友以及任何有副本的人，最酷的是

00:04:05.680 --> 00:04:08.799
我并不需要设置服务器。

00:04:08.799 --> 00:04:12.000
为了使它运行，我只是将一些文件放在一个文件夹中

00:04:12.000 --> 00:04:17.840
然后它就可以工作了，我认为这真的很棒，并且可以实现

00:04:17.840 --> 00:04:21.359
整个用例用例，包括东西

00:04:21.359 --> 00:04:26.400
通过本地网状网络或脱机工作首先要说我在飞机上

00:04:26.400 --> 00:04:30.960
我想弄乱我所有的数据

00:04:30.960 --> 00:04:35.040
基于服务器的应用程序可以完成这些用例，但要困难得多

00:04:35.040 --> 00:04:39.840
而当您首先在点对点基础上构建时，这只会更容易

00:04:39.840 --> 00:04:45.759
所以什么是点对点和网络相结合的好

00:04:45.759 --> 00:04:51.600
甚至看起来像现在

00:04:51.600 --> 00:04:56.160
让我们考虑一下人们实际上是如何在网站上与网络互动的

00:04:56.160 --> 00:05:02.800
稍微低一点的水平，所以现在的网站是在http上建立的

00:05:02.800 --> 00:05:06.479
服务器说使用URL的协议

00:05:06.479 --> 00:05:13.440
所以到资源的链接它使用http方法，就像

00:05:13.440 --> 00:05:17.840
你对服务器说的um短语，例如我想得到一些

00:05:17.840 --> 00:05:20.560
我想将一些数据发布到服务器的数据

00:05:20.560 --> 00:05:24.960
我想删除该数据，您想要不同的um操作

00:05:24.960 --> 00:05:29.520
服务器为给定的URL做，然后通常是我们如何与之交互

00:05:29.520 --> 00:05:33.759
这是我们加载网页或视频，还是加载一些视频

00:05:33.759 --> 00:05:36.840
网页中执行某些操作的javascript

00:05:36.840 --> 00:05:41.759
这些天有趣的um开发人员使用界面

00:05:41.759 --> 00:05:44.639
叫做获取（fetch），所以如果您有某种幻想的话

00:05:44.639 --> 00:05:48.160
反应应用程序，这是一个很好的机会

00:05:48.160 --> 00:05:51.280
在该堆栈下方的某个位置，有一个调用

00:05:51.280 --> 00:05:56.720
在浏览器中获取此api，因此我想提出

00:05:56.720 --> 00:06:01.360
对等网络可能是什么样子，如果

00:06:01.360 --> 00:06:09.440
我们可以从um http获取数据的方式相同，我们可以从ipfs获取数据

00:06:09.440 --> 00:06:17.039
或ipns例如，我将ipfs链接与哈希值一起放入浏览器中，或者

00:06:17.039 --> 00:06:20.639
我将其推到我的应用程序中，然后它可以加载数据

00:06:20.639 --> 00:06:24.000
同样，我想解决可变数据

00:06:24.000 --> 00:06:28.800
通过ipns自动实现um，实际上这是我们所拥有的

00:06:28.800 --> 00:06:35.039
已经通过ipfs伴侣和各种网关之类的东西

00:06:35.039 --> 00:06:39.360
集成到应用程序中，所以我想在这里介绍这种新事物

00:06:39.360 --> 00:06:46.000
是将消息发布到ipfs的想法，所以现在如果您想向其中添加内容

00:06:46.000 --> 00:06:50.319
ipfs，您需要使用这些api之一，或者您需要与某些api对话

00:06:50.319 --> 00:06:55.440
通过界面再次实现um http服务器

00:06:55.440 --> 00:06:59.919
或者您需要使用纯JavaScript实现，或者您正在使用

00:06:59.919 --> 00:07:05.680
围棋库，铁锈或其他任何东西，它们都有自己喜欢的方式

00:07:05.680 --> 00:07:10.560
与互联网上的ipfs对话，如果可以的话

00:07:10.560 --> 00:07:15.039
采取完全相同的隐喻并将其推入ipfs，然后

00:07:15.039 --> 00:07:20.160
同样，如果我们可以采用类似的隐喻并将其放入ipns，该怎么办

00:07:20.160 --> 00:07:24.479
例如使用ipns，仅用于那些尚未研究过的人

00:07:24.479 --> 00:07:31.280
它可以让您采用ipfs网址，也可以采用某种名称

00:07:31.280 --> 00:07:34.720
拥有的密钥，然后您可以发布这些密钥

00:07:34.720 --> 00:07:37.840
在一起，并为您提供特殊的ipns网址

00:07:37.840 --> 00:07:42.400
有点像ipfs网址，它会随着时间而变化

00:07:42.400 --> 00:07:49.680
所以我认为这些工具相当容易使用

00:07:49.680 --> 00:07:53.039
事实上，我所做的就是将其集成到

00:07:53.039 --> 00:07:57.759
一个称为aggregor的网络浏览器，因此实际上这就是我用来加载此浏览器的内容

00:07:57.759 --> 00:08:01.280
演示文稿，现在我不从加载演示文稿

00:08:01.280 --> 00:08:07.120
ipfs，所以我有点作弊，但我可以

00:08:07.120 --> 00:08:11.840
所以我的想法是，如果我们可以采用所有这些不同的对等协议

00:08:11.840 --> 00:08:15.440
例如我用来加载幻灯片的超核协议

00:08:15.440 --> 00:08:20.800
用于存储数据的ipfs和ipns可能是以太坊

00:08:20.800 --> 00:08:23.759
与区块链进行交互，如果可以的话，我们可以做什么

00:08:23.759 --> 00:08:29.120
采取所有这些不同的原语并简化它们

00:08:29.120 --> 00:08:34.479
普通的Web开发人员喜欢我是否知道如何向

00:08:34.479 --> 00:08:38.159
一个http服务器，对我来说应该更容易发布

00:08:38.159 --> 00:08:44.640
我认为一般来说，ipfs或ens或以太坊有一些东西

00:08:44.640 --> 00:08:50.320
这是我使用此网络浏览器的目标之一，是构建一个javascript

00:08:50.320 --> 00:08:52.880
这些不同的提取API的接口

00:08:52.880 --> 00:08:57.360
以便应用程序可以将它们分别集成到他们的应用程序中

00:08:57.360 --> 00:09:00.959
还可以看到拥有将所有内容混合在一起的网络浏览器会是什么样子

00:09:00.959 --> 00:09:04.800
在协议级别的这些东西

00:09:04.800 --> 00:09:08.959
所以我走得很快，希望我有时间

00:09:08.959 --> 00:09:13.120
演示，并且不会失败

00:09:13.120 --> 00:09:22.399
所以这里是我的网络浏览器，这里有chrome开发工具

00:09:22.399 --> 00:09:26.480
只是为了证明我可以打字没有技巧

00:09:26.480 --> 00:09:30.480
因此，让我们探讨从中获取数据的含义

00:09:30.480 --> 00:09:37.839
一个网页，例如，如果

00:09:38.399 --> 00:09:42.880
如果我们从Google那里获取东西怎么办

00:09:45.360 --> 00:09:47.519
所以

00:09:48.399 --> 00:09:52.640
提取api带有url，然后是请求的一些选项

00:09:52.640 --> 00:09:56.800
所以在这里，我们要做的是使用无聊的旧版网络

00:09:56.800 --> 00:10:00.560
并向google.com进行抓取请求，看看我们能否获得

00:10:00.560 --> 00:10:05.920
哦，没有google不想，哦，没有，我应该使用其他网址

00:10:05.920 --> 00:10:09.040
在这里

00:10:10.959 --> 00:10:15.839
那里，让我们请求我的视频博客，因为它少了

00:10:16.839 --> 00:10:19.839
安全的

00:10:20.000 --> 00:10:23.360
所以我们提出了一个要求，这次我们没有失败

00:10:23.360 --> 00:10:27.839
很棒，而我们所能做的实际上是获取内容

00:10:27.839 --> 00:10:34.000
我的博客的um主页中的一个，因此我们刚得到了一个HTML字符串，其中包含一个

00:10:34.000 --> 00:10:38.160
一堆垃圾没关系，所以现在很酷

00:10:38.160 --> 00:10:43.440
我们如何将其转换为ipfs，所以现在如果我想使用ipfs我

00:10:43.440 --> 00:10:46.959
需要导入一堆库，即使它们确实很棒并且

00:10:46.959 --> 00:10:50.240
与他们一起工作是一件快乐的事，但这就像学习新事物一样，

00:10:50.240 --> 00:10:56.000
 Web开发人员如果不导入jsi pfs或某些本机库怎么办

00:10:56.000 --> 00:11:02.240
我可以直接从ipns获取

00:11:02.320 --> 00:11:09.120
说我想获得ipn uh ipfs主页，所以我再次

00:11:09.120 --> 00:11:12.399
请求将需要更长的时间来加载

00:11:12.399 --> 00:11:19.120
因为如果可以的话，我的缓存不热

00:11:19.120 --> 00:11:23.040
嗯，但是随后的请求要快得多，所以

00:11:23.040 --> 00:11:29.200
那里的第一个延迟是从ipfs提取数据到我的浏览器上

00:11:29.200 --> 00:11:32.480
然后刚才它是从缓存中提供服务的，因此它应该可用

00:11:32.480 --> 00:11:36.160
离线，但是我们就像我们一样

00:11:36.160 --> 00:11:41.040
google.org和我的博客，我们可以看看

00:11:41.040 --> 00:11:45.279
ipfs主页是，它只是一些html，所以是什么

00:11:45.279 --> 00:11:49.200
冷却任何使用ipns或ipfs的网址

00:11:49.200 --> 00:11:52.959
可以以与您完全相同的方式推入该提取界面

00:11:52.959 --> 00:11:56.480
会和嗯一起

00:11:56.480 --> 00:12:00.399
http，与您将使用的完全相同

00:12:00.399 --> 00:12:06.480
带有超大的图像或视频或其他内容，而不必进行特殊处理

00:12:06.480 --> 00:12:09.760
插件可以从网关或网关中加载内容

00:12:09.760 --> 00:12:13.440
加载到内存中或做一些疯狂的事情，例如webtorrent在哪里做

00:12:13.440 --> 00:12:18.399
下载苍蝇块，并在javascript中建立视频流

00:12:18.399 --> 00:12:20.959
哇，我们可以将链接粘贴到确切的位置

00:12:20.959 --> 00:12:25.440
我们习惯于常规的方式

00:12:25.440 --> 00:12:32.480
网络应用程序，所以接下来我将展示超困难的挑战

00:12:32.480 --> 00:12:36.079
将东西放到ipfs上，这将是真正的

00:12:36.079 --> 00:12:39.760
我们要做的很多行代码是

00:12:39.760 --> 00:12:43.920
再次我们执行获取请求

00:12:43.920 --> 00:12:51.200
这次我们要说的是ipfs，以及既然我们要上传文件

00:12:51.200 --> 00:12:54.480
到ipfs，我们实际上没有域名

00:12:54.480 --> 00:12:58.399
我们将其上传到我们只是要说ipfs冒号斜线

00:12:58.399 --> 00:13:03.440
然后添加一个新的斜杠并说index.html

00:13:03.440 --> 00:13:06.880
然后我们要说的是我们正在使用的http方法

00:13:06.880 --> 00:13:13.680
发布后默认为get，因为这次我们要上传一些数据

00:13:13.680 --> 00:13:18.000
我们要说的是身体

00:13:18.160 --> 00:13:21.839
一些HTML所以

00:13:22.240 --> 00:13:25.440
我想我早些时候有个错误

00:13:25.440 --> 00:13:30.000
上载后加载，我们将查看其是否有效

00:13:30.000 --> 00:13:37.839
手指交叉了，所以很明显，我们需要一个好的文档类型

00:13:37.839 --> 00:13:47.360
我们需要标准的现代元素，所以

00:13:47.360 --> 00:13:53.920
哦，就是这样，我刚刚创建了一个ipfs网站，哇，如果我想获取该网址，

00:13:53.920 --> 00:13:57.519
对于我的新网站

00:13:59.279 --> 00:14:02.880
我看了ipfs协议的响应

00:14:02.880 --> 00:14:09.839
在这里，我有一个常规的旧ipfs um url，所以可能有点

00:14:09.839 --> 00:14:13.519
与您习惯的网址不同，因为它没有

00:14:13.519 --> 00:14:17.440
从qm um开始，因为我们必须使用

00:14:17.440 --> 00:14:21.440
网页的编码不同，因为呃

00:14:21.440 --> 00:14:25.839
它们不区分大小写，而默认ipfs

00:14:25.839 --> 00:14:32.560
多哈希编码区分大小写，所以嗯

00:14:32.560 --> 00:14:36.000
现在我们有了这个URL，如果我们想

00:14:36.000 --> 00:14:42.959
更新我们可变的ips网址，以此类推

00:14:43.120 --> 00:14:50.880
另一个提取请求，这次我们要去做一个发布请求

00:14:50.880 --> 00:14:56.800
在ips上，所以在呃ipfs中获取就可以弥补

00:14:56.800 --> 00:15:02.720
无论您要使用什么ipfs，对不起ipns名称，这都会生成一个

00:15:02.720 --> 00:15:05.680
那个名字的秘密钥匙，它会

00:15:05.680 --> 00:15:10.160
为您生成一个ipns网址，因此作为应用程序很有用

00:15:10.160 --> 00:15:14.959
开发人员，因为您不必自己亲自管理密钥

00:15:14.959 --> 00:15:18.480
一个名称，然后协议处理程序为您完成该操作

00:15:18.480 --> 00:15:23.120
所以我们称它为我的博客，然后我们说

00:15:23.120 --> 00:15:28.320
方法发布和正文

00:15:28.320 --> 00:15:32.480
将是我们刚刚创建的ipfs网址

00:15:32.480 --> 00:15:40.560
所以我们要等一下，然后我们才能看到我们的

00:15:40.560 --> 00:15:48.800
通过查看响应whoa来获取新的ipns网址，这是我不打算进行的实时演示

00:15:48.800 --> 00:15:52.480
推动我的运气更进一步，但是你可以看到

00:15:52.480 --> 00:15:55.600
此界面与Web开发人员所使用的界面相同

00:15:55.600 --> 00:15:59.320
习惯了从http那里获取数据，我们可以

00:15:59.320 --> 00:16:04.079
ipfs和上传和加载数据是

00:16:04.079 --> 00:16:09.040
嗯，非常简单，它使用的是与我们完全相同的网络隐喻

00:16:09.040 --> 00:16:16.160
网络应用中的所有其他文件，所以基本上我只是想展示一下

00:16:16.160 --> 00:16:20.240
告诉所有人，这是我们可以考虑的更简单方法

00:16:20.240 --> 00:16:23.120
协议，我认为很多协议实际上

00:16:23.120 --> 00:16:27.920
非常相似，我认为他们的工作方式可能会非常有益

00:16:27.920 --> 00:16:30.720
上网，他们已经看到了一些东西

00:16:30.720 --> 00:16:34.959
超核社区中的很多东西是经过修改的网站Web应用程序

00:16:34.959 --> 00:16:38.399
自己或通过写信给他们自己来创造自己

00:16:38.399 --> 00:16:42.160
拥有数据，我认为使用ipfs看到更多的东西确实很棒

00:16:42.160 --> 00:16:45.600
类似的事情，例如说博客发布平台

00:16:45.600 --> 00:16:50.160
不会将任何内容发送到不涉及任何额外费用的服务器

00:16:50.160 --> 00:16:55.839
文件系统，它只是一个Web应用程序，所以希望这很有用。

00:16:55.839 --> 00:17:04.480
这会激励人们制作东西，谢谢你的时间

00:17:04.480 --> 00:17:06.559
你

