WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.040 --> 00:00:07.919
go ipfs 0.7即将发布

00:00:07.919 --> 00:00:11.519
嗯，让我们来看看其中会有什么

00:00:11.519 --> 00:00:18.640
好的，所以首先，我们默认情况下会禁用um secio支持

00:00:18.640 --> 00:00:25.840
所以secio是我们已经使用了很长时间的安全协议

00:00:25.840 --> 00:00:30.560
确保对等方可以安全地相互通信

00:00:30.560 --> 00:00:35.200
一般而言，尝试并尝试

00:00:35.200 --> 00:00:38.800
使用受到广泛支持的协议

00:00:38.800 --> 00:00:42.879
在加密空间um中，所以我们开始移动了

00:00:42.879 --> 00:00:47.920
面向其他协议，如tls和noise um

00:00:47.920 --> 00:00:52.239
现在是时候停止对

00:00:52.239 --> 00:00:57.760
到目前为止，这里有一篇博客文章，其中有更多详细信息

00:00:57.760 --> 00:01:01.680
我鼓励您检查一下，但简短的版本是，如果您是

00:01:01.680 --> 00:01:07.520
在0.4.21之前运行go ipfs uh

00:01:07.520 --> 00:01:14.479
或低于0.47 um的jsipfs，您绝对应该升级

00:01:14.479 --> 00:01:17.920
因为否则您将无法与网络上的其他对等方交谈

00:01:17.920 --> 00:01:23.280
嗯，如果您升级到最新版本，这会有很大的好处

00:01:23.280 --> 00:01:28.240
dht节点比ipvs大的地方

00:01:28.240 --> 00:01:31.200
0.5的表现要好很多，我们有

00:01:31.200 --> 00:01:35.680
我们在0.5和0.6中有很多非常好的功能

00:01:35.680 --> 00:01:41.840
有的进入0.7，因此我们鼓励升级

00:01:44.000 --> 00:01:49.680
好的um和key，所以我们要改用椭圆形了

00:01:49.680 --> 00:01:55.280
曲线键edt5519默认为键，这些是

00:01:55.280 --> 00:01:59.280
比rsa键更小，更高效

00:01:59.280 --> 00:02:02.560
并会帮助我们，向前迈进

00:02:02.560 --> 00:02:06.640
在使内容像内容更快的方面

00:02:06.640 --> 00:02:11.520
发现并且基本上我们想要的是

00:02:11.520 --> 00:02:15.599
现在将涉及某种基于用户的签名

00:02:15.599 --> 00:02:20.000
对我们来说将变得更快，更容易

00:02:20.000 --> 00:02:24.080
为了解决这个问题，我们还添加了一些命令

00:02:24.080 --> 00:02:27.680
密钥轮换以及导入和导出它们

00:02:27.680 --> 00:02:33.599
更改代表您节点的对等ID密钥，以及

00:02:33.599 --> 00:02:39.200
导入和导出您可能正在使用的ipns密钥

00:02:41.040 --> 00:02:44.480
因此，例如，您可能已经拥有了您的钥匙

00:02:44.480 --> 00:02:49.680
以前是一些rsa密钥，其对等ID看起来像这样

00:02:49.680 --> 00:02:56.319
你知道qm有点东西，然后你会旋转它

00:02:56.319 --> 00:02:59.680
到椭圆曲线键，这实际上是默认设置，如果您

00:02:59.680 --> 00:03:02.840
不指定类型标志，这将只工作

00:03:02.840 --> 00:03:07.760
um，它将保存您先前存在的密钥，因为您可能有

00:03:07.760 --> 00:03:10.560
一直使用您现有的密钥作为ipns密钥

00:03:10.560 --> 00:03:13.760
作为发布密钥，因此我们将其保留

00:03:13.760 --> 00:03:19.360
而且您会看到格式发生了变化，因此您知道了Qm而不是呃

00:03:19.360 --> 00:03:23.120
它是从一开始的二，那是因为它实际上是

00:03:23.120 --> 00:03:29.440
密钥现在足够小，我们不需要引用一些哈希

00:03:29.440 --> 00:03:33.440
rsa公钥，就像我们在实际引用整个之前一样

00:03:33.440 --> 00:03:39.280
椭圆曲线键，所以这是椭圆共和键在这里

00:03:40.720 --> 00:03:43.920
如果您想更改之间的表示形式

00:03:43.920 --> 00:03:50.159
请说以58为底和以36为底，因为也许您想

00:03:50.159 --> 00:03:57.599
将对等ID放在dns内的dns链接中

00:03:57.599 --> 00:04:01.120
我们有一个新的标记来研究对等ID基础

00:04:01.120 --> 00:04:06.879
您可以使用它，这对

00:04:06.879 --> 00:04:13.280
s uh副本中的lupita p上的http功能

00:04:13.280 --> 00:04:16.639
如您所料，导入导出密钥

00:04:16.639 --> 00:04:21.199
嗯，您只是决定说我要导出密钥

00:04:21.199 --> 00:04:24.639
这是文件，这是密钥的名称，在您导入时

00:04:24.639 --> 00:04:27.840
您只是说这是文件名，这是我想一次调用的名称

00:04:27.840 --> 00:04:30.479
我导入它

00:04:31.040 --> 00:04:36.800
以36为基数，因此我们现在切换了所有ips密钥的默认表示

00:04:36.800 --> 00:04:42.479
默认情况下，以36个cidv为基数

00:04:42.479 --> 00:04:49.520
这很好，因为当您拥有um时，您拥有子

00:04:49.520 --> 00:04:53.160
域，所以如果您想知道

00:04:53.160 --> 00:04:58.160
key.ips.localhost或您知道点ips.dlink.web

00:04:58.160 --> 00:05:02.320
嗯，所有这些都必须放在一个案例中

00:05:02.320 --> 00:05:06.560
并且它必须足够小以适合dns标签大小

00:05:06.560 --> 00:05:12.080
呃，base36允许我们这样做，而呃，base 58没有

00:05:12.080 --> 00:05:15.120
与此一起整个大写小写的东西

00:05:15.120 --> 00:05:20.240
所以现在当您使用子域名和使用域名时，情况应该看起来一样

00:05:20.240 --> 00:05:24.960
嗯，您知道ipfs命令行的输出

00:05:24.960 --> 00:05:28.320
另外，我们正在准备拥有对等ID

00:05:28.320 --> 00:05:32.800
出于类似的原因在基数36中被代表

00:05:32.880 --> 00:05:36.080
仍然有一些laptp实现

00:05:36.080 --> 00:05:42.320
不支持rep来表示中的多个地址

00:05:42.320 --> 00:05:45.759
以36为基数，所以这不是默认值，但我们

00:05:45.759 --> 00:05:51.520
希望将来能做到这一点，这已经成为一个功能

00:05:51.520 --> 00:05:55.759
它被要求了一段时间，以便能够获得一些基本统计信息

00:05:55.759 --> 00:06:00.080
尤其是嗯，比方说，你只是

00:06:00.080 --> 00:06:03.360
想要获取dag的大小，而不是unix fs对象，而是

00:06:03.360 --> 00:06:08.000
整个dag本身，我们现在有一个命令，这是

00:06:08.000 --> 00:06:13.600
也对unix fs有用，因为um中有一些快捷方式

00:06:13.600 --> 00:06:16.880
Unix fs，使您可以了解对象的大小而无需

00:06:16.880 --> 00:06:20.319
读了整本书，但有时却不读

00:06:20.319 --> 00:06:25.520
想要快捷方式，您知道尺寸，但完整尺寸为um

00:06:25.520 --> 00:06:29.199
你知道数据结构的全部大小

00:06:29.680 --> 00:06:33.520
恩，最后恩，别忘了升级

00:06:33.520 --> 00:06:40.160
在您知道disc.ipfest.io嗯，我们将去ipfs嗯

00:06:40.160 --> 00:06:45.600
它会去pfs0.7.0 rc1是否已经退出rc2应该已经退出了

00:06:45.600 --> 00:06:49.840
今天晚些时候

