WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.949 --> 00:00:07.879
我想向您展示我们目前正在研究的项目的一些演示

00:00:07.879 --> 00:00:11.029
公司，它与德国目前正在发生的事情有关

00:00:11.029 --> 00:00:15.139
因为我们在这个国家的医疗健康记录方面有些挣扎

00:00:15.139 --> 00:00:19.520
因此，作为美国人，我想您并不知道这一点，但是我们没有一年

00:00:19.520 --> 00:00:25.970
在德国，法律实际上是在强制每个参与者

00:00:25.970 --> 00:00:32.689
到2021年1月1日引入医疗健康记录的医疗系统

00:00:32.689 --> 00:00:36.739
猜猜他们使用VPN保护整个系统的安全，并且他们正在保护安全

00:00:36.739 --> 00:00:40.339
通过SSL连接，所有医疗健康记录都存储在

00:00:40.339 --> 00:00:44.390
像一个三口袋榫眼这样的中央系统，我们认为可以

00:00:44.390 --> 00:00:48.679
更好的是，第一件事是为患者准备的应用程序，他们正在创建

00:00:48.679 --> 00:00:53.659
自己记录一切都是基于IP地址，尼日利亚以及我

00:00:53.659 --> 00:00:56.239
我想做的就是在这里创建一份医疗记录

00:00:56.239 --> 00:01:00.409
几秒钟，因为我们现在锚定我们创建的用户的身份

00:01:00.409 --> 00:01:05.859
在浏览器中进入区块链，让我们给它们起个名字

00:01:10.550 --> 00:01:16.790
他们是如此的快乐，我想我的兄弟坠毁了，这很慢，对不起，你

00:01:16.790 --> 00:01:19.340
也可以选择您的生日，这很可笑，因为我认为从来没有

00:01:19.340 --> 00:01:22.910
没有人想改变你的生日，但这只是演示率，所以一次

00:01:22.910 --> 00:01:28.940
您创建了此条目，此条目存储在一个加密的ipfs文件中，并且

00:01:28.940 --> 00:01:33.680
ipfs和记录根锚定在区块链上，我的意思是你们中的许多人

00:01:33.680 --> 00:01:37.040
人们会知道我在谈论将理论锚定在区块链上的是

00:01:37.040 --> 00:01:40.790
不像最大的事情，但重要的是这是很多人

00:01:40.790 --> 00:01:45.850
不知道在德国认识到您，您当然可以与他们分享

00:01:49.450 --> 00:01:53.710
我们的想法是，如果您是从业者，您会信任，所以我们有第二点

00:01:53.710 --> 00:01:58.270
这里的应用程序是从业者的应用程序，您必须想象

00:01:58.270 --> 00:02:02.649
如果病人去练习者那里而练习的地方是

00:02:02.649 --> 00:02:06.189
QR码和患者可以坚持使用我们的代码，因此它进入了某种

00:02:06.189 --> 00:02:10.090
与从业者的信任关系这是我一开始在这里所做的

00:02:10.090 --> 00:02:14.230
这样做是为了巩固从业者之间的信任关系

00:02:14.230 --> 00:02:17.260
和病人在区块链上，但我们没有做

00:02:17.260 --> 00:02:20.459
我们不是说

00:02:22.560 --> 00:02:27.180
结束构建子上的事件以通知从业者他已经

00:02:27.180 --> 00:02:30.810
您收到了一个新病人，正如您所看到的，这也是您的一个问题

00:02:30.810 --> 00:02:32.940
伙计们啊，好吧，花了一段时间

00:02:32.940 --> 00:02:36.630
想法cos突然出现，所以有一个新兵从一个人的信息顶端

00:02:36.630 --> 00:02:40.680
浏览器窗口到另一个浏览器窗口之间，这之间没有服务器

00:02:40.680 --> 00:02:45.870
只是出现了IP嘶嘶声，从那以后从业人员可以看到

00:02:45.870 --> 00:02:50.550
患者的记录，我说这已经在患者端加密，

00:02:50.550 --> 00:02:54.870
患者的公共密钥，但是一旦您决定共享

00:02:54.870 --> 00:02:59.630
与您的执业医师一起发送的直接密码会发送给您

00:02:59.630 --> 00:03:04.320
您将从业者的CID或加密文件发送给从业者

00:03:04.320 --> 00:03:11.540
并向您展示这确实有效，我们的从业者可以做到

00:03:11.569 --> 00:03:14.750
是的，让我们输入一些数据，我认为共享并不是最好的选择

00:03:14.750 --> 00:03:19.849
Ubuntu，对不起，希望您仍然能听到我的声音，所以让我们假装一下

00:03:19.849 --> 00:03:25.010
数据，现在从业者正在创建所谓的提案文档

00:03:25.010 --> 00:03:31.549
为患者加密的信息，他现在正在锚定您看到的ID

00:03:31.549 --> 00:03:35.629
您可能会考虑将其纳入您的医疗健康记录中，然后您会看到

00:03:35.629 --> 00:03:43.819
它应该非常快地被挖，嗯，现在我们刚刚打补丁了

00:03:43.819 --> 00:03:47.540
提案，在患者方面，已经没有那么多敬酒了，

00:03:47.540 --> 00:03:52.810
我希望你可以在病人那边看到

00:03:56.450 --> 00:04:00.260
它在工作，不是，不是不是这个条目，这是可以的

00:04:00.260 --> 00:04:04.190
从业者发送给他已被自动接受，因为您

00:04:04.190 --> 00:04:09.319
信任专业改革，因此从用户体验的角度来看，这是

00:04:09.319 --> 00:04:12.290
非常好，因为感觉从业者可以真正写成

00:04:12.290 --> 00:04:16.040
您无法提供的记录，我们将接受所有这些

00:04:16.040 --> 00:04:20.479
如果启用了某种信任并自动向您显示，

00:04:20.479 --> 00:04:25.100
这确实是在ipfs um上运行的，我希望此笔记能够快速响应

00:04:25.100 --> 00:04:30.500
当然，所有这些文档都被认为是分散的，有时甚至是

00:04:30.500 --> 00:04:33.740
有时候有时候你不了解游戏，对吧，当然，有趣的是

00:04:33.740 --> 00:04:38.419
这些都使两个应用程序都在进程内部的J的ipfs节点中运行

00:04:38.419 --> 00:04:43.490
是的，如果您可以找到记录，这始终是联系能力的问题

00:04:43.490 --> 00:04:47.570
就像您点击这一样，这是我们最大的问题，因此我们将固定

00:04:47.570 --> 00:04:51.830
两者之间的节点正在读取区块链并固定所有

00:04:51.830 --> 00:04:55.850
已提出或更改的文件，因此我们能够为他们提供服务

00:04:55.850 --> 00:04:59.800
很快希望这是正确的事情

