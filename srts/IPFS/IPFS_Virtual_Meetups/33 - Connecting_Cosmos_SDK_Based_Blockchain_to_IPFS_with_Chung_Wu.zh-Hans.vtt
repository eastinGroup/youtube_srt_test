WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.480 --> 00:00:06.319
我是litecoin的区块链开发者

00:00:06.319 --> 00:00:10.160
我正在研究我们的名为litecoin chain的区块链

00:00:10.160 --> 00:00:14.880
这是一个基于cosmos sdk的区块链，所以我的主题是连接

00:00:14.880 --> 00:00:19.760
一些呃将基于化妆品sdk的区块链翻译为ipfs

00:00:19.760 --> 00:00:25.680
这个话题是分享，基本上是一个快速的介绍

00:00:25.680 --> 00:00:30.320
嗯，现在的案例研究

00:00:30.320 --> 00:00:36.399
ipfs团队感谢ipfs文档，因此，如果您需要更多详细信息，可以阅读

00:00:36.399 --> 00:00:41.280
嗯，读了案例研究，是的，所以

00:00:41.280 --> 00:00:45.840
让我们开始吧

00:00:46.000 --> 00:00:49.440
首先，让我介绍一下什么是宇宙sdk

00:00:49.440 --> 00:00:54.239
化妆品sdk是不是我们开发的sdk，但

00:00:54.239 --> 00:01:00.079
由cosmos团队提供，可轻松开发特定于应用程序的

00:01:00.079 --> 00:01:05.680
区块链，它提供了许多模块

00:01:05.680 --> 00:01:10.240
许多区块链都希望例如定义令牌

00:01:10.240 --> 00:01:14.320
或进行管理或进行抵押，以使

00:01:14.320 --> 00:01:17.360
区块链可以在股权证明上运行

00:01:17.360 --> 00:01:24.080
因此，开发人员可以制作自己的模块，以便

00:01:24.080 --> 00:01:26.880
我们为自己的功能

00:01:26.880 --> 00:01:30.640
区块链，因此称为特定于应用程序

00:01:30.640 --> 00:01:34.320
应用程序实际上是的区块链

00:01:34.320 --> 00:01:39.439
开发人员想要什么的应用逻辑，呃

00:01:39.439 --> 00:01:42.799
这是一些使用cosmos sdk的链

00:01:42.799 --> 00:01:46.320
令牌是原子的宇宙中心

00:01:46.320 --> 00:01:52.479
嗯，还有金融链嗯，这个应该很出名

00:01:52.479 --> 00:01:56.159
虹膜抢夺和乐队协议，这是一些著名的

00:01:56.159 --> 00:02:00.960
基于区块链sdk使用的区块链，因此它们具有相似的

00:02:00.960 --> 00:02:06.479
接口，是的，它们之间有相似之处

00:02:06.479 --> 00:02:11.200
也是代码库，当然我们的区块链莱特币链也是

00:02:11.200 --> 00:02:18.800
定义也是基于cosmos sdk开发的，因此

00:02:18.800 --> 00:02:24.239
您可以访问宇宙网站以获取更多有关此的详细信息

00:02:24.400 --> 00:02:28.720
对于像chang这样的区块链，它是一个区块链。

00:02:28.720 --> 00:02:32.560
在内容相关功能上指定，例如我们定义

00:02:32.560 --> 00:02:38.000
分配给分布式内容的令牌litecoin

00:02:38.000 --> 00:02:44.640
创作者，以奖励内容创作者和呃货币

00:02:44.640 --> 00:02:50.879
我们正在开发一个称为iscn的函数，这是一个称为国际标准的函数

00:02:50.879 --> 00:02:53.760
内容编号

00:02:54.640 --> 00:02:58.400
如果你去图书馆，你会看书，你会注意到

00:02:58.400 --> 00:03:04.560
这些书都有国际标准书号

00:03:04.560 --> 00:03:07.920
我们借用了这个想法，并希望将其推广

00:03:07.920 --> 00:03:11.040
互联网上的所有内容，以便人们

00:03:11.040 --> 00:03:18.159
内容创作者，例如视频创作者或写文章的作家，可以

00:03:18.159 --> 00:03:23.200
在上面注册他们的内容和他们的内容元数据

00:03:23.200 --> 00:03:29.760
区块链，然后按照uh给定uh为其内容指定一个ID，以便

00:03:29.760 --> 00:03:34.000
其他人可以分发这个，我可以识别它的属性

00:03:34.000 --> 00:03:38.480
此ID的内容就​​像

00:03:38.480 --> 00:03:42.480
您可以使用以下内容搜索和识别书籍的isbn

00:03:42.480 --> 00:03:47.680
数字然后是呃

00:03:47.840 --> 00:03:52.799
如果您有，我们将内容元数据存储在链上，因此我们想

00:03:52.799 --> 00:03:57.360
我们希望它可以被更多的可搜索，

00:03:57.360 --> 00:04:01.200
可以随时随地从任何地方访问

00:04:01.200 --> 00:04:05.120
互联网，所以我们认为ipfs非常棒

00:04:05.120 --> 00:04:08.799
网络来分发这些数据，以便我们认为

00:04:08.799 --> 00:04:17.759
如果我们可以使用ipfs访问iscn元数据，那将是一个

00:04:17.759 --> 00:04:22.560
好主意，所以我想

00:04:22.560 --> 00:04:28.720
希望通过ipfs的高端实现这一想法

00:04:28.720 --> 00:04:31.840
ipfs的主要实现是ipfs

00:04:31.840 --> 00:04:37.520
它支持插件，基本上有两种类型的插件

00:04:37.520 --> 00:04:42.720
一种是数据存储，它定义了如何存储或加载数据

00:04:42.720 --> 00:04:46.560
就像呃，例如，数据库的哪个后端

00:04:46.560 --> 00:04:51.120
默认情况下正在使用它，它应该是级别db

00:04:51.120 --> 00:04:57.919
无论如何，这是一个非常快速的数据库，另一种类型的插件是呃ipld

00:04:57.919 --> 00:05:01.039
定义如何解释数据的插件

00:05:01.039 --> 00:05:05.280
嗯，以前的发言者实际上已经在谈论

00:05:05.280 --> 00:05:11.600
他们如何使用ipld或扩展，所以我想您知道，甚至

00:05:11.600 --> 00:05:17.520
比我更多，所以我们为此做了两个插件

00:05:17.520 --> 00:05:24.240
我们的目的之一是cosmos d，它是一个数据存储库

00:05:24.240 --> 00:05:30.800
最初用于携带宇宙sdk时，我们要将其嵌入到

00:05:30.800 --> 00:05:33.840
区块链，以便它可以与共享数据库

00:05:33.840 --> 00:05:37.360
具有区块链代码的区块，以便您可以

00:05:37.360 --> 00:05:41.919
就像区块链数据库一样直接读取区块链

00:05:41.919 --> 00:05:45.759
就像您在使用leveldb level时一样

00:05:45.759 --> 00:05:49.520
db数据存储它将直接读取leveldb

00:05:49.520 --> 00:05:55.919
但是我们发现在ssdk中，这些数据库实际上被假定为

00:05:55.919 --> 00:06:00.080
是一种单线程，所以，嗯

00:06:00.080 --> 00:06:04.800
与插件共享数据库实例的可能性很小

00:06:04.800 --> 00:06:08.560
不用说破坏日志或并发ss

00:06:08.560 --> 00:06:13.280
局限性，所以我们认为

00:06:13.280 --> 00:06:20.800
我们需要更一般化，以减少干扰，然后

00:06:20.800 --> 00:06:25.039
和...的模块开发人员的多个实施者

00:06:25.039 --> 00:06:28.639
宇宙SDK可能是呃

00:06:28.800 --> 00:06:34.240
可以很容易地使用我们的插件

00:06:34.240 --> 00:06:40.800
我们决定使用宇宙提供的dlpc端点

00:06:40.800 --> 00:06:44.240
sdk，这是您从中读取的一种机制

00:06:44.240 --> 00:06:49.599
区块链，所以现在宇宙数据将其存储

00:06:49.599 --> 00:06:56.319
将从cosmos rpc端点读取数据

00:06:56.319 --> 00:07:01.120
另一个是isc和ipld，这是ipld扩展

00:07:01.120 --> 00:07:09.440
用于传递ic icm相关数据存储，这是ibfs的url

00:07:09.440 --> 00:07:14.720
 ipfs插件介绍插件

00:07:14.720 --> 00:07:17.840
如果您对此感兴趣

00:07:19.680 --> 00:07:25.520
所以基本上，这是左侧的架构，我们有一个宇宙

00:07:25.520 --> 00:07:29.599
基于sdk的区块链说，例如像一条链，它将

00:07:29.599 --> 00:07:34.560
还有更多的练习，每个模块将公开自己的rpg端点

00:07:34.560 --> 00:07:39.919
并且我们的模块icm模块将为

00:07:39.919 --> 00:07:45.440
us for the cosmos data for the cosmos data store插件

00:07:45.440 --> 00:07:50.639
它主要公开了三个函数来查询数据是否存在

00:07:50.639 --> 00:07:53.759
呃，在区块链上数据的大小

00:07:53.759 --> 00:07:58.479
日期，最后还有数据本身

00:07:58.479 --> 00:08:05.680
然后在ipfs端或任何时候

00:08:05.680 --> 00:08:09.280
该插件的主要插件将是cosmos d

00:08:09.280 --> 00:08:15.599
这是宇宙数据存储区，当有人从远程查询时

00:08:15.599 --> 00:08:20.560
或本地的cid，它将首先分析该cid以

00:08:20.560 --> 00:08:24.000
看看呃，看看类型是否真的是

00:08:24.000 --> 00:08:30.560
crd的类型实际上是一个宇宙sdk或一个宇宙sdk

00:08:30.560 --> 00:08:35.839
如果是这样，它将处理呃它将通过LPC处理它

00:08:35.839 --> 00:08:38.959
端点，以便它将携带它将调用

00:08:38.959 --> 00:08:45.600
由ifcn模块定义的特定端点或

00:08:45.600 --> 00:08:49.120
以便它将从

00:08:49.120 --> 00:08:56.240
从区块链开始，然后，如果不是cid，那么不是

00:08:56.240 --> 00:09:01.200
来自cosmos sdk的请求将被简单地转发到

00:09:01.200 --> 00:09:08.800
uh到基本的uh级db插件，之后

00:09:08.800 --> 00:09:11.839
如果是本地请求，则可能是用户

00:09:11.839 --> 00:09:16.160
需要呃想要传递ipld数据，以便

00:09:16.160 --> 00:09:21.040
因此城市数据将由ic和ipld传递

00:09:21.040 --> 00:09:24.640
插件，这样它就可以幽默地反驳了

00:09:24.640 --> 00:09:29.680
然后将响应提供给用户

00:09:30.160 --> 00:09:36.640
正如您所看到的，它实际上是一个非常简单的架构

00:09:36.640 --> 00:09:41.440
它不涉及任何与宇宙有关的东西

00:09:41.440 --> 00:09:44.640
关于数据存储的大小，因此也许应该将其称为

00:09:44.640 --> 00:09:51.040
我不知道ipfs http数据存储库或类似的东西，所以我们的目标是

00:09:51.040 --> 00:09:54.320
至少对两个宇宙都具有侵入性

00:09:54.320 --> 00:10:00.480
开发人员和ipfs用户，因此理想情况下，对于ipfs用户

00:10:00.480 --> 00:10:05.440
他们只需要编译插件，然后将其安装在

00:10:05.440 --> 00:10:10.000
ipfs客户端，则可以使用它，然后将可用

00:10:10.000 --> 00:10:16.839
经过一些配置并针对cosmis sdk模块开发人员，不仅适用于

00:10:16.839 --> 00:10:22.399
他们只需要定义一些区块链

00:10:22.399 --> 00:10:28.000
暴露的额外端点

00:10:28.000 --> 00:10:32.959
通过rpc端点满足其内容

00:10:32.959 --> 00:10:38.240
并通过cid定义他们的数据

00:10:38.480 --> 00:10:42.959
定义数据的ci变形，这是理想的偏离

00:10:42.959 --> 00:10:50.880
然后在那之后，他们可能会推动

00:10:50.880 --> 00:10:56.880
使他们的阻止数据可通过ipfs网络访问

00:10:56.880 --> 00:11:01.519
同样，这种架构对于通用化也足够简单，例如，如果

00:11:01.519 --> 00:11:05.519
不适用于sdk模块和cosmos模块数据，但

00:11:05.519 --> 00:11:08.640
对于区块数据或交易哈希，我们

00:11:08.640 --> 00:11:13.279
可以轻松地在数据存储部分中实现

00:11:13.279 --> 00:11:18.560
只是固化由宇宙sdk自己定义的端点

00:11:18.560 --> 00:11:21.920
正如我所说的，它也被概括为不同的

00:11:21.920 --> 00:11:26.800
cosmos sdk模块，而不仅仅是我们自己的区块链

00:11:26.800 --> 00:11:30.320
不仅像一个更改并访问它，而且还可以访问其他更改

00:11:30.320 --> 00:11:37.120
区块链其他开发人员可以使用此方法可以使用此方法来使他们的

00:11:37.120 --> 00:11:42.880
通过ipfs可以访问数据，所以这基本上是我想要的

00:11:42.880 --> 00:11:46.800
分享关于嗯嗯嗯

00:11:46.800 --> 00:11:53.839
用于IPFS的cosmos uh sdk插件，用于访问基于cosmos sdk的信息

00:11:53.839 --> 00:11:58.399
区块链呃，就像我在呃之前说的那样，如果你，如果

00:11:58.399 --> 00:12:02.720
您对此很感兴趣，您可以看一下

00:12:02.720 --> 00:12:07.120
案例研究非常详细，如果您

00:12:07.120 --> 00:12:11.680
对litecoin感兴趣，您可以前往like.co

00:12:11.680 --> 00:12:15.519
嗯，这是我们的主要网站，我们的代码库是

00:12:15.519 --> 00:12:19.600
在github上的uh中，您可以搜索litecoin，然后您可以看到我们的

00:12:19.600 --> 00:12:25.839
是的，这是很多指标

