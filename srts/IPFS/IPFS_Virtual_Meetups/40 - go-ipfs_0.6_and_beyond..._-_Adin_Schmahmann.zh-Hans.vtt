WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.639 --> 00:00:09.309
我叫Dean smelvin，我是Galactica的维护者，我们要

00:00:09.309 --> 00:00:17.400
谈论一下发生了什么，然后使用PFS 0.6并向前发展

00:00:17.400 --> 00:00:25.300
[音乐]好的，所以我们有0.6个亮点

00:00:25.300 --> 00:00:29.460
快速噪音

00:00:30.329 --> 00:00:37.030
生产ipfs 404和底座36的连接，所以我将逐步介绍这些

00:00:37.030 --> 00:00:42.090
有人看了看我们怎么做的如此之快，现在默认情况下已启用

00:00:42.090 --> 00:00:48.400
它已经作为实验功能存在了一段时间，现在我们正在使用

00:00:48.400 --> 00:00:56.560
快速草案28，因为它将是ipfs中最不稳定的一种

00:00:56.560 --> 00:01:00.790
你们中那些不熟悉快速的人是基于udp的流传输，

00:01:00.790 --> 00:01:05.140
与您在流媒体中可能需要的所有好东西捆绑在一起

00:01:05.140 --> 00:01:10.149
传输包括加密，流传输和流多路复用，因此

00:01:10.149 --> 00:01:16.359
快速通过单个连接允许多个数据流将使我们能够

00:01:16.359 --> 00:01:22.810
彼此之间的连接时间较短，就像您知道的1/3一样，

00:01:22.810 --> 00:01:27.609
许多往返行程，对于诸如DHT查询之类的事情而言，这真是太棒了

00:01:27.609 --> 00:01:32.170
将会查询许多新的同行，我们可以添加

00:01:32.170 --> 00:01:39.189
具备某种已知往返能力，需要恢复连接

00:01:39.189 --> 00:01:43.749
意味着您可以存储信息，例如您过去遇到的同龄人

00:01:43.749 --> 00:01:47.969
并且只要它们仍在相同的IP地址上，那么您仍然可以找到它们

00:01:47.969 --> 00:01:55.929
即使您当前未连接到他们，也可以向他们发送新消息

00:01:55.929 --> 00:01:59.799
另外不会像TCP那样消耗文件描述符，这使得它

00:01:59.799 --> 00:02:05.590
更容易建立起越来越多的联系，这对于贪婪的人来说是很棒的

00:02:05.590 --> 00:02:08.920
对等系统，它只想知道所有有关正在发生的事情

00:02:08.920 --> 00:02:12.519
在网络上，它可以让您快速到达目的地

00:02:12.519 --> 00:02:19.390
可能，最后快速真的很好，因为它铺平了

00:02:19.390 --> 00:02:24.489
在给定条件下使用基于udp的天然鬃毛技术的方式

00:02:24.489 --> 00:02:31.180
UDP夜间反转更容易完成，并且更加容易理解

00:02:31.180 --> 00:02:39.370
然后将tcp垫反转，这样就可以找到内容并提供

00:02:39.370 --> 00:02:46.930
来自掩盖的对等方的内容，或者您​​在蜂窝网络上知道的内容

00:02:46.930 --> 00:02:53.500
我真的不允许你不允许其他同伴与他们交谈以开始

00:02:53.500 --> 00:03:00.660
接下来的工作是噪音我们对噪音有实验性的支持

00:03:00.660 --> 00:03:06.579
对于大多数可能的节日，安全传输噪声将变得更容易

00:03:06.579 --> 00:03:12.870
与TLS配合使用的实现，这就是为什么许多其他外观看起来像EDP的原因

00:03:12.870 --> 00:03:18.879
除了gallupi到p之外的其他实现方法都非常擅长将噪声用作

00:03:18.879 --> 00:03:24.730
它们的安全性，因为它们的默认安全性传输噪声被更广泛地使用

00:03:24.730 --> 00:03:29.500
嵌入在Sakaya中，这是Kuraki FS的默认设置，我们将在未来

00:03:29.500 --> 00:03:34.389
计划使用噪声代替sec是默认的交叉实施

00:03:34.389 --> 00:03:40.090
安全传输，这就像我向前迈出的非常非常好的一步

00:03:40.090 --> 00:03:48.870
可以在IG喜庆的生态系统增长和安全保持联系的同时，

00:03:48.870 --> 00:03:52.900
被认为是您所连接的点对点系统，似乎需要留下

00:03:52.900 --> 00:04:00.040
连接到他们需要处理的信息

00:04:00.040 --> 00:04:03.669
事实上，我们有很多同龄人，我们正在谈论，我们可能会与您交谈

00:04:03.669 --> 00:04:08.530
知道在运行过程中和IPS节点上，我们必须确定哪些连接

00:04:08.530 --> 00:04:12.849
是最有价值的，并保持联系并摆脱联系

00:04:12.849 --> 00:04:19.539
我们现在不需要的基本上是通过计算

00:04:19.539 --> 00:04:23.740
找出每个同龄人的有用分数，然后说哦，哪些不是

00:04:23.740 --> 00:04:28.450
有用并摆脱它们，但有些同行

00:04:28.450 --> 00:04:32.300
与短期或长期保持联系极为重要

00:04:32.300 --> 00:04:37.699
长期的，所以我们希望成为现在的我们，保护这些联系并说

00:04:37.699 --> 00:04:40.430
他们甚至没有被考虑终止

00:04:40.430 --> 00:04:45.740
这意味着您就像您知道的同龄人积极地与他们交换

00:04:45.740 --> 00:04:48.889
有用的同龄人这些是我们将尝试的同龄人的类型

00:04:48.889 --> 00:04:56.780
保持连接到另外，我们现在有一个贴心的配置，如果

00:04:56.780 --> 00:05:02.990
有一个您想保持连接的特定节点，您知道您正在运行

00:05:02.990 --> 00:05:05.900
一堆基础架构节点，您想确保它们都很好

00:05:05.900 --> 00:05:10.250
彼此连接您的网关已连接到您的集群或任何其他

00:05:10.250 --> 00:05:16.280
您想要投保的其他票据的数量总是能够快速完成的

00:05:16.280 --> 00:05:20.090
诸如此类的彼此交换，您现在可以将其添加到对等网络中

00:05:20.090 --> 00:05:29.840
配置，它会为您解决，所以如果有以下任何一种情况，我会是最好的404

00:05:29.840 --> 00:05:34.570
您曾经从某人那里得到一个错误的链接，我喜欢一个永远无效的链接

00:05:34.570 --> 00:05:40.130
例如，这可能会导致您收到严重错误消息，但是如果

00:05:40.130 --> 00:05:48.139
您可能会收到一条错误消息，看起来像这样，这是更好的选择

00:05:48.139 --> 00:05:52.099
不一定是关键的最佳路径的共同点，因为它们是不可变的，因此

00:05:52.099 --> 00:05:56.419
有人给你一条糟糕的道路的几率很低，但是对于可变的道路

00:05:56.419 --> 00:06:04.789
如果我使用a，如果您知道我可以S或DNS，这完全有可能

00:06:04.789 --> 00:06:10.580
链接来解析一些您知道可能在这里的路径

00:06:10.580 --> 00:06:16.009
可能是一周前在那儿，但现在不在那儿，因为下面的数据

00:06:16.009 --> 00:06:19.340
它已经改变了，这是易变的事物的本质，而不是

00:06:19.340 --> 00:06:25.490
不变的东西，所以让您知道更方便的错误消息或更好的消息

00:06:25.490 --> 00:06:36.469
一个已经是一项要求功能，可以在36基础上支持，所以多

00:06:36.469 --> 00:06:41.810
包括多库在内的格式项目使我们可以有多种不同的方式

00:06:41.810 --> 00:06:48.440
代表我们现在使用基数36支持的相同位

00:06:48.440 --> 00:06:56.770
将椭圆曲线键作为IP NS键并在Web域中使用它们

00:06:56.770 --> 00:07:05.690
添加了子域网关，您知道了大约五个答案，并且基本上已经有了它

00:07:05.690 --> 00:07:10.250
允许在Web浏览器中提供额外的安全性，但标签数量上限

00:07:10.250 --> 00:07:14.750
尺寸，所以我们使用基数36来解决这个问题，这将使我们能够使用

00:07:14.750 --> 00:07:23.690
默认情况下的椭圆曲线键默认情况下的椭圆曲线键很棒

00:07:23.690 --> 00:07:29.900
您是否应该对口红曲线键感到非常兴奋，我知道我是因为

00:07:29.900 --> 00:07:35.449
它们的小尺寸使我们可以节省带宽，存储和内存，但是

00:07:35.449 --> 00:07:39.710
当您告诉别人时，还允许我们最终签署提供者记录

00:07:39.710 --> 00:07:45.139
有关内容的信息，现在以特殊方式提供给他们，以确保

00:07:45.139 --> 00:07:50.570
你知道你是告诉别人你有数据的同龄人，但是如果你有

00:07:50.570 --> 00:07:56.479
签署提供商记录，然后突然间您可以要求人们与

00:07:56.479 --> 00:08:01.099
DHD代表您说，哦，嘿，我有数据，请告诉DHD

00:08:01.099 --> 00:08:06.080
我有数据，这也增加了我们向提供者记录添加更多上下文并添加

00:08:06.080 --> 00:08:12.370
更多添加更多字段，说像我不仅有这个C ID，还有整个

00:08:12.370 --> 00:08:21.620
拖到CID的下方，然后继续前进，我们会有一些DHT复原力的东西，

00:08:21.620 --> 00:08:27.349
我们想在特定的路由表中进行操作，该表可以告诉您哪些对等端

00:08:27.349 --> 00:08:32.300
应该与您互动并帮助您在通过DHT进行爬网时引导自己的方式

00:08:32.300 --> 00:08:37.699
网络以查找当前信息，我们只是寻找看起来有用的同伴，

00:08:37.699 --> 00:08:43.279
我们与他们交谈，但我们想找到其他方法来保持我们的同龄人

00:08:43.279 --> 00:08:48.589
有兴趣与您交谈时，您会发现这些等级中有更好的一套，

00:08:48.589 --> 00:08:53.240
从历史上讲非常有用，有些已经在线，并且已经

00:08:53.240 --> 00:08:57.650
过去几个小时对您来说很稳定，并且有多种

00:08:57.650 --> 00:09:02.840
特性，使我们不受网络某一区域的影响

00:09:02.840 --> 00:09:13.990
如莫莉先前所示，遇到麻烦和网络过渡

00:09:13.990 --> 00:09:19.670
自从人们发布性能提升以来，甚至发布了0.5版

00:09:19.670 --> 00:09:24.020
网络的数量增加了，但我们不得不等待，这有点可耻

00:09:24.020 --> 00:09:29.330
为刚认识您的人升级的网络知道您是否升级到您

00:09:29.330 --> 00:09:33.350
知道第一天是否要升级到0.5，如果您

00:09:33.350 --> 00:09:37.070
无需等待其余的就可以经历很多升级

00:09:37.070 --> 00:09:45.890
网络也要更新其版本，因此弄清楚该如何做

00:09:45.890 --> 00:09:50.960
每个人的生活都容易得多，因为它高度

00:09:50.960 --> 00:09:54.410
立即激励您进行更新，因为您会得到很好的体验

00:09:54.410 --> 00:09:58.880
好处而不必等待其他所有人，这将使我们能够

00:09:58.880 --> 00:10:04.810
更快，更有效地迭代协议

00:10:05.440 --> 00:10:12.830
这就是我们的生命，很高兴提出任何问题，谢谢

00:10:12.830 --> 00:10:20.390
您太棒了，谢谢院长，我们确实有几个非常令人兴奋的问题

00:10:20.390 --> 00:10:24.920
网络升级对于未来将是巨大的，并且能够

00:10:24.920 --> 00:10:30.950
继续推出很棒的东西，所以从Stefan那里拿第一个东西

00:10:30.950 --> 00:10:34.940
弄清楚节点中正在发生的事情的最佳方法，例如尝试获得想法

00:10:34.940 --> 00:10:39.380
为什么我不能路由到为特定内容调试对等方服务的另一个节点

00:10:39.380 --> 00:10:45.350
从历史等方面看，普罗米修斯·凯文娜（Prometheus kevanna）的最佳做法是

00:10:45.350 --> 00:10:52.810
我认为这是一个很好的问题，其中内置了很多调试工具

00:10:52.810 --> 00:10:58.040
您可以排序，也可以对某些子系统（例如DHT）使用日志记录

00:10:58.040 --> 00:11:02.750
您可以打印出一些事件，就像一个不错的JSON

00:11:02.750 --> 00:11:07.640
格式，以使您知道使解析起来更容易一些

00:11:07.640 --> 00:11:11.060
发生了什么困难的事情之一

00:11:11.060 --> 00:11:17.930
像第一步一样检查这些同伴是否实际上实际上现在就已经病了

00:11:17.930 --> 00:11:21.860
就像这样，我们绝对应该在CYFS中添加一些方法

00:11:21.860 --> 00:11:25.490
告诉你，就像你是点子，你知道你好吗

00:11:25.490 --> 00:11:32.390
还是您没有拨通所有您认为自己应该是​​的电话，所以这就是我们

00:11:32.390 --> 00:11:39.040
应该肯定会添加更多，但是FS命令行中有这样的内容

00:11:39.040 --> 00:11:43.490
大量工具可用，并且还具有Prometheus指标等

00:11:43.490 --> 00:11:47.570
您可以与之互动以尝试并了解更多有关什么的信息

00:11:47.570 --> 00:11:57.230
发生在您的节点上很好，接下来的问题是

00:11:57.230 --> 00:12:04.970
在基座58上使用基座36的好处是它可以表示为

00:12:04.970 --> 00:12:11.860
小写或大写，尤其是使用base 36的原因

00:12:11.860 --> 00:12:20.390
是获取密钥获取椭圆曲线密钥的IP和s密钥以适合

00:12:20.390 --> 00:12:27.410
子网域，就像您知道KABC dot ip-ah ip-ah不错，

00:12:27.410 --> 00:12:33.200
 Web点链接，基本上它不会这样做，因为它既具有大写字母又具有大写字母

00:12:33.200 --> 00:12:42.410
小写字符，因此DNS就像没有坏消息，因此它是唯一的

00:12:42.410 --> 00:12:48.170
选项，我们以前使用的是基数32，但是键只是一个

00:12:48.170 --> 00:12:55.010
标签尺寸太大了，是的，这引起了SSL和所有产品的噩梦

00:12:55.010 --> 00:13:01.460
是的，很酷，将go ipfs作为

00:13:01.460 --> 00:13:08.930
隐藏的服务不确定首次运行是隐藏的服务，但是

00:13:08.930 --> 00:13:15.710
只在聊天中指出，您可以进行类似交通工具的旅行

00:13:15.710 --> 00:13:22.010
如果您有兴趣使用分布式保护您的IP地址，请使用

00:13:22.010 --> 00:13:27.190
喜欢或在上课时

