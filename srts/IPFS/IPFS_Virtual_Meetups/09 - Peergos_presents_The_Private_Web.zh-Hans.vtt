WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.719 --> 00:00:04.319
所以我想从分享我们对私有网络的愿景开始

00:00:04.319 --> 00:00:09.679
但是我所说的私人网络是指您不必在其中建立一个网络

00:00:09.679 --> 00:00:12.240
分别登录到每个不同的站点

00:00:12.240 --> 00:00:17.520
而您拥有自己的身份的地方，可以想象一个不经常监视的网络

00:00:17.520 --> 00:00:21.119
你的每一个动作，对你使用

00:00:21.119 --> 00:00:24.960
想象拥有您在应用程序中创建的数据并能够使用

00:00:24.960 --> 00:00:29.679
在其他应用程序中安全地存储数据，这是我们对私有网络的愿景，

00:00:29.679 --> 00:00:34.880
我们正在尝试使用Pierce进行构建，任何人都可以轻松共享

00:00:34.880 --> 00:00:38.960
私人或公开的媒体网站或应用

00:00:38.960 --> 00:00:43.600
没有任何扩展名的任何浏览器中的进度

00:00:43.600 --> 00:00:48.160
pegos是私有存储社交媒体的协议

00:00:48.160 --> 00:00:55.039
以及基于ipfs构建的应用程序，其中包括用户控制的身份

00:00:55.039 --> 00:00:58.640
无法监视的沙盒应用程序

00:00:58.640 --> 00:01:04.239
不信任的服务和量子抵抗力我们大多数人都是专有的，因此我们关心

00:01:04.239 --> 00:01:08.560
关于这一点和我们将成为受保护的元数据的很多内容

00:01:08.560 --> 00:01:12.400
稍后再讨论，让我们先快速浏览一下

00:01:12.400 --> 00:01:17.520
体系结构物理体系结构相当平坦

00:01:17.520 --> 00:01:21.520
每个paregos实例都有一个嵌入式idfs实例

00:01:21.520 --> 00:01:25.040
这些都通过bitwap dht进行通信

00:01:25.040 --> 00:01:28.960
和点对点流，还有一个pki

00:01:28.960 --> 00:01:32.799
它将数据存储在那些ipfs实例中

00:01:32.799 --> 00:01:36.320
但关键是我们依赖

00:01:36.320 --> 00:01:40.159
是这完全不依赖于dns

00:01:40.159 --> 00:01:44.079
或tls证书颁发机构，如果您想访问

00:01:44.079 --> 00:01:50.320
通过dns的pago服务器，如果需要，可以使用，但协议不依赖于它

00:01:50.640 --> 00:01:54.000
逻辑架构也很简单

00:01:54.000 --> 00:01:58.079
每个用户都有一个家用服务器，负责存储他们的数据

00:01:58.079 --> 00:02:02.640
它们可以具有任意数量的镜像，并且每个家庭服务器可以存储为

00:02:02.640 --> 00:02:07.119
它可以处理许多用户，因此每个用户都在自己的家庭服务器中

00:02:07.119 --> 00:02:10.959
用户有一组使用的密钥对

00:02:10.959 --> 00:02:15.200
对ipfs中的数据的Merkle根进行签名

00:02:15.200 --> 00:02:18.480
这些称为“可变指针”

00:02:18.480 --> 00:02:22.319
它们类似于ipns，但属性略有不同

00:02:22.319 --> 00:02:25.840
而我们仅有的另一件事是邮箱

00:02:25.840 --> 00:02:31.120
因此，这是一个盲目的加密邮箱，原因稍后我们将进行讨论

00:02:31.120 --> 00:02:34.239
但这不是那没有被存储的一件事

00:02:34.239 --> 00:02:39.280
在ipfs中与量子电阻有关

00:02:41.440 --> 00:02:44.640
pegos分解为多个桁架边界

00:02:44.640 --> 00:02:49.599
所以这些是互不信任的区域，所以如果有任何数据或哈希

00:02:49.599 --> 00:02:52.800
越过这些边界之一，然后由收件人验证是否是

00:02:52.800 --> 00:02:56.560
哈希或签名，例如pagos客户不会

00:02:56.560 --> 00:03:01.120
信任Pig或服务器，服务器本身不信任ibfs

00:03:01.120 --> 00:03:05.200
而且应用也可以从客户端沙箱中移除

00:03:05.200 --> 00:03:09.360
所以这些沙箱实际上是操作系统级别的进程

00:03:09.360 --> 00:03:14.000
如果您关心诸如旁道之类的事情，就需要这样做

00:03:14.000 --> 00:03:18.560
从诸如融化检查器之类的东西来看，左边的箭头很有趣

00:03:18.560 --> 00:03:23.599
一个，所以这是s3直接s3块存储的情况

00:03:23.599 --> 00:03:27.360
我们将在后面讨论，但在这种情况下，块存储本身

00:03:27.360 --> 00:03:32.640
实际验证来自客户端的写入哈希

00:03:32.640 --> 00:03:36.239
但是稍后我们会详细介绍这些细节

00:03:36.239 --> 00:03:42.400
在文件上传过程中，文件被分成五个兆字节的块，每个块

00:03:42.400 --> 00:03:45.680
独立加密，然后拆分为以下片段

00:03:45.680 --> 00:03:50.319
然后存储在ipfs中，以及我们从中获得的关键利益

00:03:50.319 --> 00:03:52.879
这是我们从中获得的关键利益之一

00:03:52.879 --> 00:03:57.439
是分块的，它允许我们隐藏文件的大小，因此

00:03:57.439 --> 00:04:01.439
文件的不同块不能链接在一起

00:04:01.439 --> 00:04:04.560
从服务的角度来看，您最终会

00:04:04.560 --> 00:04:08.159
每块最大为5兆

00:04:08.159 --> 00:04:12.400
实际上我们走得更远，所以我们在加密之前填充文件

00:04:12.400 --> 00:04:16.479
到4k的倍数，所以你就结束了

00:04:16.479 --> 00:04:20.320
整个系统中唯一可能的块大小

00:04:20.320 --> 00:04:24.320
呃，有5兆除以4k，即1280。

00:04:24.320 --> 00:04:29.360
所以我们试图使熵非常低

00:04:29.360 --> 00:04:33.919
我们做访问控制，它是无服务器访问控制

00:04:33.919 --> 00:04:37.120
因此它基于每个文件或目录的功能

00:04:37.120 --> 00:04:40.720
有几个与之相关的对称密钥

00:04:40.720 --> 00:04:43.919
如果您想授予某人访问权限

00:04:43.919 --> 00:04:48.560
整个子树或仅一个文件，您可以通过与以下对象共享密钥来做到这一点

00:04:48.560 --> 00:04:51.759
他们，然后他们可以解密文件呃或

00:04:51.759 --> 00:04:55.360
如果只是元数据密钥，他们可以解密路径和元数据

00:04:55.360 --> 00:04:57.840
包括名字

00:04:58.160 --> 00:05:01.440
还有一个正确的暴击树，这有点简单

00:05:01.440 --> 00:05:09.039
但仍然基于对称密钥和一个属性

00:05:09.039 --> 00:05:12.240
我们非常关心的树木与

00:05:12.240 --> 00:05:16.880
量子电阻，因此对于文件的隐私性

00:05:16.880 --> 00:05:21.199
我们只依靠对称加密和散列

00:05:21.199 --> 00:05:24.800
它们都没有被量子计算机破坏

00:05:24.800 --> 00:05:28.160
一点点，你去2倍加速，但没有什么大不了的

00:05:28.160 --> 00:05:31.199
而非对称加密则完全被破坏了

00:05:31.199 --> 00:05:34.639
这就是为什么我们不依赖任何地方的原因

00:05:34.639 --> 00:05:39.360
在这些标准结构中，我们非常关心的另一件事是

00:05:39.360 --> 00:05:43.759
元数据，因此服务器看不到的东西很长

00:05:43.759 --> 00:05:48.800
呃文件名的路径大小和属性，例如mime类型

00:05:48.800 --> 00:05:52.400
修改时间，即使是文件还是文件

00:05:52.400 --> 00:05:56.000
文件夹呃，因此该服务器也

00:05:56.000 --> 00:06:00.080
看不到目录拓扑，看不到目录号

00:06:00.080 --> 00:06:04.880
文件呃或目录数或其中一些

00:06:04.880 --> 00:06:08.479
但是我们关心的另一种元数据是事物的社交方面

00:06:08.479 --> 00:06:12.800
因此服务器无法看到谁有权访问文件，甚至看不到有多少人可以访问文件

00:06:12.800 --> 00:06:17.360
人们可以访问文件，并且可以访问社交图谱

00:06:17.360 --> 00:06:20.000
所以这是我前面提到的邮箱

00:06:20.000 --> 00:06:24.319
蒙蔽了双眼，因此服务器看不到谁向谁发送了跟踪请求

00:06:24.319 --> 00:06:28.479
所以你的社交图完全在你的控制之下

00:06:28.479 --> 00:06:32.639
服务器可以看到的主要内容是空间总量的上限

00:06:32.639 --> 00:06:34.880
使用，如果您在乎，您可以

00:06:34.880 --> 00:06:38.319
用空数据填充它

00:06:38.720 --> 00:06:44.479
因此，这就是2020年一些亮点的架构。

00:06:44.479 --> 00:06:48.560
在2020年初，我们已经有照相馆

00:06:48.560 --> 00:06:52.000
任意大型视频的视频和音乐流

00:06:52.000 --> 00:06:59.520
我们在2020年增加了文本编辑器和pdf查看器，以做标牌或看板

00:06:59.520 --> 00:07:03.840
这样您就可以计划要私下计划的任何内容

00:07:03.840 --> 00:07:08.639
并快速加密了文件搜索，这听起来微不足道，但

00:07:08.639 --> 00:07:13.280
在端到端的加密系统中，实际上很难正式进行

00:07:13.280 --> 00:07:15.440
文件搜索，但我们对它的使用感到惊讶

00:07:15.440 --> 00:07:18.880
原来有多快

00:07:19.440 --> 00:07:22.720
现在，我们实际上尚未宣布以下三件事

00:07:22.720 --> 00:07:27.120
我正在给你里面的勺子，但是你已经可以在我们的商店里尝试了

00:07:27.120 --> 00:07:31.199
Beta服务器现在其中的第一个是日历，因此

00:07:31.199 --> 00:07:35.360
私人日历，将每个事件的模型存储为

00:07:35.360 --> 00:07:38.880
您电脑空间中的标准ical文件，以及

00:07:38.880 --> 00:07:41.520
意味着我们可以利用共享功能

00:07:41.520 --> 00:07:45.759
pagos，因此您可以与朋友分享个人事件

00:07:45.759 --> 00:07:50.479
或确实生成指向事件的秘密链接以与任何人共享

00:07:51.039 --> 00:07:56.319
从2020年开始的第二件事是对等网络托管

00:07:56.319 --> 00:08:00.319
所以这可以让您基本上托管一个网站

00:08:00.319 --> 00:08:05.199
它是直接从您的peergloss中的文件夹直接访问的静态网站

00:08:05.199 --> 00:08:08.560
在空间中，您可以获得即时更新，并且

00:08:08.560 --> 00:08:13.840
没有发布或更新所需的加密货币，它是

00:08:13.840 --> 00:08:19.280
完成后基本上只需单击一下即可发布，这样您就可以查看自己的

00:08:19.280 --> 00:08:22.960
通过任何公共Pagos网关访问您的网站，因此我们

00:08:22.960 --> 00:08:27.440
在pagos.me上设置一个，它将是您的用户名点pagos

00:08:27.440 --> 00:08:30.560
点我一下，但是查看它的一种更酷的方法是

00:08:30.560 --> 00:08:33.519
对等方式，如果您在本地运行pagos

00:08:33.519 --> 00:08:37.760
然后您可以在username.pagos.localhost中查看它

00:08:37.760 --> 00:08:42.000
如果您以这种方式查看它，则它完全独立于dns

00:08:42.000 --> 00:08:45.200
并且您已经获得了经过身份验证的安全的对等交付

00:08:45.200 --> 00:08:50.080
对等闲话和ipfs，但请耐心等待

00:08:50.080 --> 00:08:54.959
接下来是社会费用，所以我们已经花了一段时间了

00:08:54.959 --> 00:08:59.519
这就是它与您共享的事物的提要

00:08:59.519 --> 00:09:03.360
您在pago中关注的人，显然是端到端的

00:09:03.360 --> 00:09:07.519
加密，所以它是100个客户端组装的

00:09:07.519 --> 00:09:12.000
这意味着没有人工智能，也没有广告

00:09:12.800 --> 00:09:16.720
以及所有这些应用程序，我们已经在服务器端进行了一些重大改进

00:09:16.720 --> 00:09:19.279
也是在2020年，所以其中的第一个是

00:09:19.279 --> 00:09:22.800
我之前提到的东西直接S3块存储

00:09:22.800 --> 00:09:27.360
因此，在正常操作中，paragos客户端会从pagos获取所有数据

00:09:27.360 --> 00:09:33.279
与之对话但具有直接s3块存储的服务器

00:09:33.279 --> 00:09:38.320
客户端仍然授权与pagos服务器进行读写

00:09:38.320 --> 00:09:45.440
但是它随后直接与s3进行读取和写入的对话，现在可以读取您

00:09:45.440 --> 00:09:48.399
可以看到这可能如何工作，但正确的声音听起来有些棘手，尤其是当

00:09:48.399 --> 00:09:52.560
周围有多个用户，但是它的工作方式是块存储

00:09:52.560 --> 00:09:56.880
寻址的内容就是ipfs使用它的方式

00:09:56.880 --> 00:10:00.800
我们要做的是，当页面服务器授权url时

00:10:00.800 --> 00:10:04.000
它包括正在存储的事物的哈希值

00:10:04.000 --> 00:10:08.720
已写入，并且s3验证是否s3将拒绝无效的写入

00:10:08.720 --> 00:10:12.079
您尝试恶意更改数据的位置，以及

00:10:12.079 --> 00:10:15.680
显然，这很酷的事情是它减少了带宽

00:10:15.680 --> 00:10:18.640
段落服务器的要求大约增加了100倍

00:10:18.640 --> 00:10:22.320
因此，非常小的服务器肯定可以承载更多的用户，或者

00:10:22.320 --> 00:10:25.920
更多更多的数据

00:10:26.560 --> 00:10:31.120
下一个很酷的事情是服务器端是完全并发的垃圾回收

00:10:31.120 --> 00:10:35.440
所以你达到了一个点，特别是

00:10:35.440 --> 00:10:38.800
um带有一个像s3这样的远程块存储，其中

00:10:38.800 --> 00:10:44.320
垃圾收集最多可能需要一天的时间，在此期间，其他引脚

00:10:44.320 --> 00:10:49.839
操作无法进行，因此我们有一些功能

00:10:49.839 --> 00:10:52.800
设计使我们能够解决这个问题

00:10:52.800 --> 00:10:57.279
第一个是交易API，它可以帮助我们防止阻塞

00:10:57.279 --> 00:11:00.959
在被钉住之前实际上是gc

00:11:00.959 --> 00:11:03.839
我们实际上并不需要我们意识到我们甚至根本不需要固定它们

00:11:03.839 --> 00:11:08.160
不再是因为我们所有的图钉都从我的相互指针中隐含了

00:11:08.160 --> 00:11:13.600
在写期间提到等等

00:11:13.600 --> 00:11:16.959
一切都在客户端进行，因此服务器并不真正知道

00:11:16.959 --> 00:11:20.000
你知道它没有任何文件或任何概念

00:11:20.000 --> 00:11:23.040
所以你只需要开始一个交易，然后注释每个区块

00:11:23.040 --> 00:11:26.800
进行该交易，这使我们不能

00:11:26.800 --> 00:11:31.279
如果在提交之前碰巧有gc，请收集这些块

00:11:31.279 --> 00:11:35.920
而且这是完全并发的，所以没有全局锁

00:11:35.920 --> 00:11:39.680
是的，权利可以继续进行

00:11:40.839 --> 00:11:44.399
同时，这还不是全部，2020年还有很多，所以我们

00:11:44.399 --> 00:11:50.079
我们设法将上传和下载的带宽增加了大约4倍

00:11:50.079 --> 00:11:53.600
主要是通过增加最大块大小

00:11:53.600 --> 00:11:57.920
我们加快了文件系统的浏览速度，提高了大约10倍。

00:11:57.920 --> 00:12:01.920
改善了ip树，我们保存了七个文本文件

00:12:01.920 --> 00:12:06.720
快几倍，但远不及最大

00:12:06.720 --> 00:12:11.040
2020年对我们来说最重要的是

00:12:11.040 --> 00:12:15.279
地平线2020下一代互联网建筑师奖

00:12:15.279 --> 00:12:19.839
呃，扩展我们的去中心化社交媒体功能

00:12:19.839 --> 00:12:24.800
所以这就是我们明年要花费的大部分时间

00:12:24.800 --> 00:12:29.120
因此，在这些计划中，我们将扩展社交订阅源，以允许

00:12:29.120 --> 00:12:33.440
我们将要实施的更一般的发布和评论

00:12:33.440 --> 00:12:37.440
分散的群发消息，特别是不使用mls

00:12:37.440 --> 00:12:41.279
协议以及电子邮件桥，所以

00:12:41.279 --> 00:12:46.399
很多有趣的东西来了，如果您想的话，非常感谢

00:12:46.399 --> 00:12:48.480
听到更多，然后访问我们的网站或

00:12:48.480 --> 00:12:52.000
注册测试版，或者您可以提出问题

00:12:52.000 --> 00:13:02.800
在聊天中非常感谢你

