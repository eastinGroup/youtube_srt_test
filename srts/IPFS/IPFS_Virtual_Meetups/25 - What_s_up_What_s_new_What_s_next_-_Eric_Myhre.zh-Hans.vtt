WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.679 --> 00:00:06.879
嗯，所以我今天在这里与人们谈论

00:00:06.879 --> 00:00:10.880
ipld和um我们对此做了什么

00:00:10.880 --> 00:00:13.280
从历史上来看，我们现在正在做什么，以及

00:00:13.280 --> 00:00:16.320
我们将在未来使用它，因为我们已经做了很多

00:00:16.320 --> 00:00:21.039
ipld的进展第一次您可能听说过ipld可能是

00:00:21.039 --> 00:00:26.080
几年前它已经是一个来自ipfs的项目

00:00:26.080 --> 00:00:29.359
共享前缀ip不是巧合

00:00:29.359 --> 00:00:35.280
从一开始我们就已经真正地发展了这个项目，

00:00:35.280 --> 00:00:38.160
从ipfs传出来的东西，所以我要说很多

00:00:38.160 --> 00:00:44.879
过渡快速回顾ipld代表行星际链接

00:00:44.879 --> 00:00:48.559
数据，它的确来自ipfs和我们的目标

00:00:48.559 --> 00:00:53.440
这就是我们开始构建ipfs的时间

00:00:53.440 --> 00:00:56.719
我们正在建造这个东西来制作文件

00:00:56.719 --> 00:01:01.680
以分散的方式共享在世界各地

00:01:01.680 --> 00:01:05.840
而我们在这样做的过程中吸取的一些教训是

00:01:05.840 --> 00:01:09.119
我的用户界面正在给我们黑匣子，我可以使

00:01:09.119 --> 00:01:14.880
缩放不显示缩放叠加，希望没有效果更好

00:01:14.880 --> 00:01:16.560
重要内容显示在屏幕的该部分中

00:01:16.560 --> 00:01:21.439
好的，对不起，ipld的目标是制定规格

00:01:21.439 --> 00:01:24.640
和使开发更容易的库

00:01:24.640 --> 00:01:29.360
可互操作的分散式应用程序，因此吸取了我们在ipfs和

00:01:29.360 --> 00:01:33.439
试图对它们进行归纳，使更多的人可以使用它们来构建

00:01:33.439 --> 00:01:37.439
他们自己的好东西

00:01:37.439 --> 00:01:41.920
一百万年前，ipfs只是存储文件并制作文件的东西。

00:01:41.920 --> 00:01:45.280
它们在全球范围内都可以买到，这真的很酷，很困难

00:01:45.280 --> 00:01:51.280
但这只是用于文件，因此将其推广的第一步是

00:01:51.280 --> 00:01:55.040
ipld最初是​​被称为dag pb的东西，它是定向的缩写

00:01:55.040 --> 00:02:00.079
基于protobufs的非循环图

00:02:00.079 --> 00:02:06.840
描述二进制数据的大块并链接到树结构中

00:02:06.840 --> 00:02:11.039
然后从那里去，并能够

00:02:11.039 --> 00:02:15.920
以这种全局内容可寻址的方式处理那些树结构

00:02:15.920 --> 00:02:19.200
但实际上只有在这一点上

00:02:19.200 --> 00:02:22.720
解决二进制数据的斑点，也许

00:02:22.720 --> 00:02:27.200
应用程序开发人员可能还想做更多的事情

00:02:27.200 --> 00:02:33.120
这是ipld真正让我们做的重要时刻

00:02:33.120 --> 00:02:39.840
ipld现在是关于结构化数据的，所以我的意思是

00:02:39.840 --> 00:02:43.519
大概可以识别的类似于json

00:02:43.519 --> 00:02:47.360
一种动态格式，可用于存储所需的任何数据

00:02:47.360 --> 00:02:51.599
以一种结构化的有用方式，您可以围绕

00:02:51.599 --> 00:02:54.879
所以特别是当我谈论结构化数据和

00:02:54.879 --> 00:02:58.239
ipld我们将拥有诸如list之类的概念

00:02:58.239 --> 00:03:01.360
并映射出您非常熟悉的正确概念

00:03:01.360 --> 00:03:04.959
构建应用程序数据结构时可能需要

00:03:04.959 --> 00:03:08.560
数据模型知道什么字符串和整数都是布尔值

00:03:08.560 --> 00:03:12.480
常见的东西null在那儿，比

00:03:12.480 --> 00:03:14.720
json我们也有能力谈论

00:03:14.720 --> 00:03:19.920
二进制字节序列，大的blob和链接，我的意思是cid

00:03:19.920 --> 00:03:23.519
您可能已经从ipfs熟悉的结构

00:03:23.519 --> 00:03:29.760
因此，有了这个通用的数据模型概念，ipld不再仅仅是文件

00:03:29.760 --> 00:03:34.720
系统和不透明斑点有关结构化数据

00:03:34.879 --> 00:03:38.640
这是我们希望人们可以用来构建自己的应用程序的东西

00:03:38.640 --> 00:03:42.239
逻辑，我们希望可以给人们ipld

00:03:42.239 --> 00:03:46.959
可以遍历此结构并对其进行处理的库

00:03:46.959 --> 00:03:52.239
您可以将其视为一种抽象语法树

00:03:52.239 --> 00:03:56.879
但却没有s，因为这与柯达无关

00:03:56.879 --> 00:04:01.280
无需担心序列化数据的单一语法

00:04:01.280 --> 00:04:04.400
ipld数据模型实际上可以连接到

00:04:04.400 --> 00:04:08.640
dagpb就像我们谈论的是更早或更原始的旧json

00:04:08.640 --> 00:04:13.920
或其他格式（例如seaboard）以及您可以想象的任何编解码器

00:04:13.920 --> 00:04:17.840
可以插入此数据模型，我们甚至可以与其他内容建立桥梁

00:04:17.840 --> 00:04:22.400
像比特币以太坊这样的可寻址系统，真的很棒

00:04:22.400 --> 00:04:25.280
git，只要它具有哈希，我们就可以链接到

00:04:25.280 --> 00:04:27.840
它，只要我们可以定义一个

00:04:27.840 --> 00:04:33.280
从串行数据到我们的数据模型的转换，我们可以遍历它

00:04:33.280 --> 00:04:36.800
并用它做东西

00:04:36.800 --> 00:04:41.600
什么样的东西，最常见的东西就是拥有一个

00:04:41.600 --> 00:04:44.560
可以以编程方式遍历这些数据结构的库

00:04:44.560 --> 00:04:48.720
太酷了，我们还在此基础上构建了更高级别的功能

00:04:48.720 --> 00:04:52.160
例如称为选择器的东西

00:04:52.160 --> 00:04:56.400
遍历的声明式模型，稍后我会介绍

00:04:56.400 --> 00:05:00.160
一些称为高级布局模式的功能将全部包含更多幻灯片

00:05:00.160 --> 00:05:02.880
但总的来说，您可以使用数据模型做什么

00:05:02.880 --> 00:05:06.000
构建基于结构化数据的应用程序，并

00:05:06.000 --> 00:05:11.680
想要去中心化，所以首先很酷的功能是一个例子

00:05:11.680 --> 00:05:14.639
ipld拥有数据模型后，我们可以构建的东西

00:05:14.639 --> 00:05:20.479
这就是我们所说的ipld选择器选择器是一种用于

00:05:20.479 --> 00:05:23.280
声明性地指定您要行走的方式

00:05:23.280 --> 00:05:27.280
在另一棵数据树上并评估选择器

00:05:27.280 --> 00:05:31.360
进行步行并选择任何匹配的数据

00:05:31.360 --> 00:05:34.800
可以使用声明性文件自己创建这些文件，而这些文件仍然

00:05:34.800 --> 00:05:40.160
只是ipld结构，所以您可以在json中起草它们，这很好

00:05:40.160 --> 00:05:45.199
这些是为表达能力有限而建立的

00:05:45.199 --> 00:05:48.560
这很有用，因为您实际上可以在非常低的范围内评估这些选择器

00:05:48.560 --> 00:05:51.600
信任环境选择器的目的之一是您

00:05:51.600 --> 00:05:55.840
可以草拟其中的一份，然后将其发送到另一台计算机中

00:05:55.840 --> 00:05:59.280
网络并请他们评估选择

00:05:59.280 --> 00:06:01.919
然后他们可以流回数据

00:06:01.919 --> 00:06:05.680
匹配，您也可以自己评估选择器

00:06:05.680 --> 00:06:09.360
由于这些都是未经训练的完整且功能有限，因此您可以在

00:06:09.360 --> 00:06:13.120
相对安全的方式，即使您不必一定信任发送给您的人

00:06:13.120 --> 00:06:16.000
我们正在使用的查询很酷

00:06:16.000 --> 00:06:20.720
像这样的功能来开发新的数据传输，例如graphsync

00:06:20.720 --> 00:06:23.360
我已经没时间了，我还有八百万话要说

00:06:23.360 --> 00:06:26.880
关于，所以我要走的很快，我们有一个叫做adls的概念，这是

00:06:26.880 --> 00:06:31.520
短数据分片现在是高级数据布局的缩写

00:06:31.520 --> 00:06:34.400
ipld的功能，您可以实现自己的插件

00:06:34.400 --> 00:06:38.080
您想如何分片数据并使其显示为数据模型节点

00:06:38.080 --> 00:06:42.639
就像相同的地图和列表一样，这使我们拥有透明的

00:06:42.639 --> 00:06:45.680
甚至可以在非常大的启动数据结构上进行路径转换

00:06:45.680 --> 00:06:49.520
这是ipfs Web网关对sp1的unix的处理

00:06:49.520 --> 00:06:52.319
现在我们将其概括化为可以在其中使用的东西

00:06:52.319 --> 00:06:56.080
具有您自己的特殊逻辑选择器的应用程序可以在这种情况下工作

00:06:56.080 --> 00:07:01.199
当我们想要增压时，我们也很酷

00:07:01.199 --> 00:07:04.639
我们自己的开发，跳过一堆手册数据

00:07:04.639 --> 00:07:10.160
验证，我们已经实现了模式系统

00:07:10.160 --> 00:07:14.479
ipod现在具有一种架构语言，您可以使用该架构语言进行定义

00:07:14.479 --> 00:07:17.680
具有语义行为的类型

00:07:17.680 --> 00:07:20.880
有时，工会枚举您可能熟悉的类似这样的东西

00:07:20.880 --> 00:07:24.639
您曾经作为程序员使用过的其他类型的系统

00:07:24.720 --> 00:07:28.560
并在ipld模式中与该类型规范结合使用

00:07:28.560 --> 00:07:31.759
您可以将制图表达子句与之关联的语言

00:07:31.759 --> 00:07:34.639
此类型子句描述了此信息的方式

00:07:34.639 --> 00:07:37.360
应该在数据模型中进出

00:07:37.360 --> 00:07:42.160
因此，各个编解码器应如何继续表示它

00:07:42.160 --> 00:07:45.759
通过使这些东西分别可调，我们相信

00:07:45.759 --> 00:07:49.759
您将来可能会拥有一些非常酷的功能

00:07:49.840 --> 00:07:53.440
类型本身也具有数据模型接口

00:07:53.440 --> 00:07:56.800
这意味着您仍然可以运行选择器遍历并编写其他通用代码

00:07:56.800 --> 00:08:01.199
针对使用方案处理的数据，您可以在任何地方使用这些数据

00:08:01.199 --> 00:08:05.919
您将使用最酷的任何其他模式语言

00:08:05.919 --> 00:08:10.319
关于这些，我们觉得模式是可选的，它们是

00:08:10.319 --> 00:08:15.520
这是建立在ipld数据模型上的东西，但事实并非如此

00:08:15.520 --> 00:08:18.960
现在绝对必要的是，这很酷，这意味着

00:08:18.960 --> 00:08:23.440
您可以使用架构系统进行特征检测（如果您有

00:08:23.440 --> 00:08:26.080
记录在数据模型中的文件，或者说这是书面文件

00:08:26.080 --> 00:08:28.960
为了清楚起见，在json中，您有一个列表，其中仅包含

00:08:28.960 --> 00:08:32.719
第一和第二，您可以将其与以下模式进行匹配

00:08:32.719 --> 00:08:35.360
有一些命名类型，它是一个整数列表

00:08:35.360 --> 00:08:39.919
显然，此匹配项还可以将其与表示它是

00:08:39.919 --> 00:08:42.640
具有两个字段和一个表示的结构

00:08:42.640 --> 00:08:47.440
元组模式，因此通常您可以使用这种

00:08:47.440 --> 00:08:51.440
在结构上匹配数据并添加类型的功能

00:08:51.440 --> 00:08:54.399
无需将架构嵌入文档中

00:08:54.399 --> 00:08:57.279
并且不必不必

00:08:57.279 --> 00:09:00.800
模式，您也可以使用多个模式

00:09:00.800 --> 00:09:04.399
尝试匹配相同的数据并使用它来构建特征

00:09:04.399 --> 00:09:08.800
检测，我们非常希望这将使人们建立分散的

00:09:08.800 --> 00:09:12.720
以灵活的可演化方式开发应用程序，

00:09:12.720 --> 00:09:17.120
在我们还拥有一堆非常酷的东西之前，从来没有不可能

00:09:17.120 --> 00:09:19.279
最近出现的新工具

00:09:19.279 --> 00:09:23.279
我们有一位出色的同事提供了语法荧光笔

00:09:23.279 --> 00:09:26.880
我们有热电联产系统出现在早期

00:09:26.880 --> 00:09:32.160
alpha，但是如果您想尝试它，那就很酷了，请尝试一下

00:09:32.560 --> 00:09:37.600
我们有模式自动派生器，这实际上是这样的

00:09:37.600 --> 00:09:41.519
很酷，我几乎不明白，这又是来自一个名叫好同事的同事

00:09:41.519 --> 00:09:45.920
用这个可选的东西棒些很酷的东西

00:09:45.920 --> 00:09:49.760
模式系统是您可以获取没有模式的数据

00:09:49.760 --> 00:09:54.320
以前与之相关联，但仍推断出一种结构类型

00:09:54.320 --> 00:09:59.040
描述它，使人们能够构建工具

00:09:59.040 --> 00:10:03.279
自动执行此操作的gif动画在侧面是这样的

00:10:03.279 --> 00:10:05.600
查看大量数据转储的工具

00:10:05.600 --> 00:10:09.200
从文件币网络中自动推断出架构

00:10:09.200 --> 00:10:12.320
这很酷，我等不及了

00:10:12.320 --> 00:10:18.079
老实说，看看人们对此做了什么，我们甚至名单还在不断

00:10:18.079 --> 00:10:23.279
与graphql建立桥梁为什么另一个同事没有

00:10:23.279 --> 00:10:28.079
建立了这个系统，该系统主要是从ipld模式到

00:10:28.079 --> 00:10:32.000
graphql ipl这些模式要多一些

00:10:32.000 --> 00:10:35.600
比graphql更具表现力，所以有一些有趣的细节

00:10:35.600 --> 00:10:40.160
我的这个，但它让我们编写ipld模式

00:10:40.160 --> 00:10:46.720
并使用graphql可视化工具以及提交graphql查询

00:10:46.720 --> 00:10:50.959
然后将这些数据转换为ipld查询的api和

00:10:50.959 --> 00:10:56.959
做这个很酷的事情

00:10:57.200 --> 00:11:00.640
长话短说，用ipld构建应用程序

00:11:00.640 --> 00:11:04.560
这里很酷的事情正在发生，我会给你留下一堆链接

00:11:04.560 --> 00:11:08.560
如果您想了解更多信息，我可以在其中找到我们的大多数规格说明书

00:11:08.560 --> 00:11:12.240
有趣的发展正在进行中，这里还有docs网站

00:11:12.240 --> 00:11:16.000
ipld上的开发团队在irc中闲逛，这也是

00:11:16.000 --> 00:11:18.640
如果您是这种事情的爱好者，那就可以与矩阵建立桥梁

00:11:18.640 --> 00:11:22.240
如果您想在经线叉处的其他网上虫我，

00:11:22.240 --> 00:11:26.959
通常我的手柄找到那个名字的人，可能是我

00:11:26.959 --> 00:11:35.680
也许是互联网，我不知道好运

