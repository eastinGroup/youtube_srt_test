WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.200 --> 00:00:09.090
好的，这是gensokyo测试中的新功能，可以简要介绍一下

00:00:09.090 --> 00:00:12.270
你去过哪里，我们要去哪里

00:00:12.270 --> 00:00:18.150
这让我非常兴奋，所以这就是我，我是亚历克斯·普拉蒂尼（Alex platini），

00:00:18.150 --> 00:00:24.000
互联网，您可以在Twitter和github上找到我，以及所有类似的内容

00:00:24.000 --> 00:00:29.310
为协议配音工作，而我是EFS的主要维护者，那么什么是

00:00:29.310 --> 00:00:34.489
如果您不知道这是AI的实现，Chasse可以加快速度

00:00:34.489 --> 00:00:38.430
教授和所有支持协议在JavaScript中完全毁了

00:00:38.430 --> 00:00:43.050
JavaScript中的大多数Orion都没有，为什么不

00:00:43.050 --> 00:00:47.880
是的，我估计每周大约有5,000个潜在客户，并且在大多数地方

00:00:47.880 --> 00:00:54.989
Jerris在浏览器中运行的位置如此之妙，没有电子，

00:00:54.989 --> 00:01:00.030
典型的焦点一直放在神赐予我们的地方上，这就是为什么我们

00:01:00.030 --> 00:01:06.630
所以热衷于改善浏览器的支持

00:01:06.630 --> 00:01:13.679
当然，在Jaso PFS之上最酷的东西是著名的Microsoft，它推出了ion

00:01:13.679 --> 00:01:17.219
我们已经讨论了一些，稍后您将听到来自Daniel的更多内容

00:01:17.219 --> 00:01:24.119
继续，所以我们一直在做的事情会很高兴，我们看到我们一直在尝试

00:01:24.119 --> 00:01:29.100
运送东西，所以如果您查看我们发布的种类，我们已经

00:01:29.100 --> 00:01:33.420
完成了十次发行，在过去的十二个月中，他们已经提出了很多意见

00:01:33.420 --> 00:01:37.139
在此错误修复程序之类的东西之间发布，但这些是

00:01:37.139 --> 00:01:42.240
如您所见，提供新功能的产品我们正在尝试

00:01:42.240 --> 00:01:47.999
减少发布之间的天数，以便我们尽量避免大爆炸

00:01:47.999 --> 00:01:53.369
发布和做某种发布早期发布通常是一种方法并且规模很小

00:01:53.369 --> 00:01:58.409
可消化的块，因为当您升级某些产品时，没有人喜欢

00:01:58.409 --> 00:02:04.020
一切都会爆炸，然后播放一些小东西，如果你

00:02:04.020 --> 00:02:08.220
实际发货，我的意思是我们应该把所有这些东西都遍历

00:02:08.220 --> 00:02:12.300
列出，因为有太多，但是是的，所以您可以看到像回过头来一样

00:02:12.300 --> 00:02:14.810
我可以

00:02:14.900 --> 00:02:18.530
联合国儿童基金会SP 1.5，如果那是巨大的Maisoncarrée球，那是

00:02:18.530 --> 00:02:24.409
巨大是一个非常好玩的东西，所以一个可移植的请求

00:02:24.409 --> 00:02:30.590
最近登陆，这意味着您现在可以超时请求，我买了

00:02:30.590 --> 00:02:34.280
诸如此类的事情，如果事情深入人心，那么埃森哲和您

00:02:34.280 --> 00:02:40.400
取消请求，它们被删除，因为ace的一些重要功能

00:02:40.400 --> 00:02:45.799
重构用英语，因此我们有了这个使用池流的API，

00:02:45.799 --> 00:02:51.220
它确实有效，对于初学者来说很难使用，因为

00:02:51.220 --> 00:02:56.540
引入了JavaScript的本机功能，因此您必须学习的API

00:02:56.540 --> 00:03:02.420
整个模块的生态系统，我只是让生活变得非常复杂

00:03:02.420 --> 00:03:08.239
进行调试，因为堆栈跟踪实际上并没有包含所有内容

00:03:08.239 --> 00:03:14.090
真的很有用，而且一切基本上都很棒

00:03:14.090 --> 00:03:18.680
对，所以您知道猿在表面上看起来只是几处变化

00:03:18.680 --> 00:03:23.569
但实际上一直到网络堆栈都是正确的

00:03:23.569 --> 00:03:29.120
就像他们的p2p一样，现在就像我们设法通过删除的代码量一样

00:03:29.120 --> 00:03:37.549
这样做是令人难以置信的，所以它不仅比现在更容易调试unix

00:03:37.549 --> 00:03:44.120
食谱1.5是我们附带的功能，可将元数据添加到UNIX FS

00:03:44.120 --> 00:03:50.359
文件，因此最初只是箔模式和修改时间

00:03:50.359 --> 00:03:56.120
意味着您可以像安装MF或类似的东西来挂载它

00:03:56.120 --> 00:04:03.769
可以将其安装在保险丝下并在ifs中有一个本地位置

00:04:03.769 --> 00:04:10.489
任何可执行文件修改，并且您知道可读可写

00:04:10.489 --> 00:04:15.229
用户熟悉的工具只需触摸和chmod

00:04:15.229 --> 00:04:19.180
对文件进行这些更改

00:04:19.750 --> 00:04:24.529
保持它很小，我们正在努力使它变得更小，就像我说我们

00:04:24.529 --> 00:04:28.710
在浏览器中运行，因此我们对捆绑包的大小非常敏感

00:04:28.710 --> 00:04:39.150
酒吧服务员的规模很大，所以随着时间的流逝，您会发现我们并不是真的

00:04:39.150 --> 00:04:42.990
大约和它的大小相同，我们在中间有这个凸起

00:04:42.990 --> 00:04:48.300
的实际上只是一个Miss配置，但我们有点上升了，

00:04:48.300 --> 00:04:52.229
然后我们下去，我们总是试图将其缩小，因为它也太小了

00:04:52.229 --> 00:04:56.010
大它太大了为什么它这么大这就是为什么我说大

00:04:56.010 --> 00:04:59.699
如果你在右边看这种酱，那真是令人吃惊

00:04:59.699 --> 00:05:05.820
ipfs实际上是捆绑软件中的一小部分，大部分是类似

00:05:05.820 --> 00:05:11.910
注意伪造做的事，面对我聚会做一点点p2p

00:05:11.910 --> 00:05:16.620
当您在服务器上向后和向前发送内容时的加密方式

00:05:16.620 --> 00:05:24.270
网络，我的意思是，您看到那里有很多的实现方法

00:05:24.270 --> 00:05:30.090
和bnj是的，所以他们基本上非常相似，还有JSP n

00:05:30.090 --> 00:05:34.440
节点伪造，因此尝试针对此类事物以将其静音以将其移除

00:05:34.440 --> 00:05:39.870
和重构将是巨大的，所以像javascript现在有很多

00:05:39.870 --> 00:05:45.870
对，如果您看一下，实际上我们基本上可以使用大数

00:05:45.870 --> 00:05:49.860
关于此文件的第一件事，它说不适合

00:05:49.860 --> 00:05:56.099
在密码学中使用哈哈哈为什么为什么为什么我们仍然需要某种

00:05:56.099 --> 00:06:01.320
的处理方式，例如处理大于大小的数字

00:06:01.320 --> 00:06:05.220
JavaScript可以解决哪个繁琐的同行问题，因此我们将永远努力

00:06:05.220 --> 00:06:09.539
删除依赖项并使这些内容变小，因为

00:06:09.539 --> 00:06:14.550
基本上，这之前的节点模块是最重的对象之一

00:06:14.550 --> 00:06:17.030
在已知的宇宙中

00:06:17.360 --> 00:06:22.620
很好，Anya，我们正在努力使其快速发展，然后进行了大量工作

00:06:22.620 --> 00:06:27.599
改善jairus ipfs的性能，因为jess的速度很慢

00:06:27.599 --> 00:06:31.590
幸运的是，我的意思是我们所做的大多数事情实际上都是网络绑定的

00:06:31.590 --> 00:06:37.590
因此，最慢的事情是我们不能选择更快的事情，实际上是

00:06:37.590 --> 00:06:42.600
做CPU保险杠，但是我们可以使其他事情更快

00:06:42.600 --> 00:06:50.010
他比较了jsr PFS 38和46之间发布的jsr PFS之间的传输速度

00:06:50.010 --> 00:06:56.070
上周38是一年前36是一年前我没有标准

00:06:56.070 --> 00:07:02.280
您是38的SAT，并且介于38和46之间，我们看到了600％的速度

00:07:02.280 --> 00:07:06.000
增加取决于文件的大小，基本上越大

00:07:06.000 --> 00:07:10.980
手机的收入规模越来越大，这令人难以置信，我们很漂亮

00:07:10.980 --> 00:07:14.490
对此感到满意，原因有几个原因

00:07:14.490 --> 00:07:22.830
更快的是我们为1.2采用了位，它允许您优先发送

00:07:22.830 --> 00:07:26.820
对其他同龄人不利，还有其他改进，但我们也花了一些时间

00:07:26.820 --> 00:07:30.360
只是优化现有的实现，所以我们确定了

00:07:30.360 --> 00:07:33.630
一些瓶颈并消除它们，我们已经看到了巨大的速度提升，

00:07:33.630 --> 00:07:37.770
我们才刚刚开始就刚开始，以及其他一些我们一直在做的事情

00:07:37.770 --> 00:07:44.520
正在处理的是导入文件所需的时间，因此如果我运行此基准测试

00:07:44.520 --> 00:07:49.170
今天早些时候添加了一个包含两点三四个千兆字节文件的目录

00:07:49.170 --> 00:07:51.630
在200点和200兆字节之间

00:07:51.630 --> 00:07:59.160
好吧，对不起，投资36节和46节，速度提高了22％，这相当

00:07:59.160 --> 00:08:05.430
相当令人印象深刻，而且如果您看的话，它的速度比过去要快一点

00:08:05.430 --> 00:08:11.520
ipfs很棒，这是大多数e就是我更快了，所以在哪里

00:08:11.520 --> 00:08:18.660
我们下一步是下一步，所以下一步我们得到了观察组的支持，例如

00:08:18.660 --> 00:08:23.820
该外观是众多功能中的第一要求功能

00:08:23.820 --> 00:08:28.500
剪辑商店真的很想使用打字稿，我们是如此

00:08:28.500 --> 00:08:33.930
我们在库的边缘增加了空气，所以我们不是因为那种

00:08:33.930 --> 00:08:40.800
每种类型的开发人员都会发布JavaScript的旅游

00:08:40.800 --> 00:08:43.920
不是JavaScript开发人员知道打字稿，所以我们不一定要

00:08:43.920 --> 00:08:49.410
将整个库转换为更紧密的抓地力，因为它降低了它的作用

00:08:49.410 --> 00:08:53.700
潜在贡献者的数量越小，海盗的入境就越多。

00:08:53.700 --> 00:08:56.550
我们正在做的是我们将所有类型的打字稿定义废除

00:08:56.550 --> 00:09:01.500
外部接口，因此针对oSIP FS进行编码的人员可以像使用

00:09:01.500 --> 00:09:07.410
一个本机打字稿项目，我们希望重复进行说明

00:09:07.410 --> 00:09:09.810
会在本季度出现，但我认为它有所下降，但是

00:09:09.810 --> 00:09:15.810
优先级列表上绝对很高的位置也会对我们的本地支持做出反应

00:09:15.810 --> 00:09:21.029
想要追赶我们的背心跑步反应本机，所以他们可以这是一个

00:09:21.029 --> 00:09:27.120
我们希望能够非常喜欢的非常常用的功能

00:09:27.120 --> 00:09:29.639
有趣的浏览器在单个来源浏览器之间共享运行

00:09:29.639 --> 00:09:35.010
标签，如果您有一个网站，并且使用的是json AFS，则可以在以下位置打开一个新标签

00:09:35.010 --> 00:09:40.730
如果第一次加载，它必须旋转一个新的JSON的那一刻，这将使您知道

00:09:40.730 --> 00:09:45.570
可能具有相同的奇偶校验，并且您知道必须使其具有网络

00:09:45.570 --> 00:09:49.079
再次连接，并且使用相同的存储，这有点不好，所以

00:09:49.079 --> 00:09:54.060
我们要做的是移动，然后我可以首先将节点变成共享工作器，或者

00:09:54.060 --> 00:09:59.370
允许网站在共享工作者中部署，然后您将能够

00:09:59.370 --> 00:10:03.600
从所有不同的类型访问共享工作者，这将减少

00:10:03.600 --> 00:10:09.480
使用网络资源的类似CPU数量之类的东西

00:10:09.480 --> 00:10:14.250
他们也可能实际上不在表演工作者上，而实际上可能是在使用

00:10:14.250 --> 00:10:19.440
建议的台式机，如果您建立了这种通讯方式

00:10:19.440 --> 00:10:25.890
在以一种或多种方式运行的Web应用与上的中央节点之间的通道

00:10:25.890 --> 00:10:31.829
您的机器，那么它实际上使采用这些更改变得更加容易，我们

00:10:31.829 --> 00:10:35.550
会提到固定系统，因为它可以工作，但是相当

00:10:35.550 --> 00:10:40.769
速度缓慢，性能会随着时间的推移而变差，因此我们已经制定了一些计划来转移所有

00:10:40.769 --> 00:10:44.069
数据存储区中的引脚，我们的早期基准测试表明

00:10:44.069 --> 00:10:49.740
有希望的数字，这将使文件导入时间进一步缩短，

00:10:49.740 --> 00:10:55.170
 DHT真是棒极了，我们希望在大猩猩的那一刻有DHT

00:10:55.170 --> 00:10:58.410
这个团队正在大规模重构他们的DHT

00:10:58.410 --> 00:11:03.480
在某个时候肝脏会稳定下来，并且会有一个规范

00:11:03.480 --> 00:11:06.990
编写，然后我们将在JavaScript中实现该规范，

00:11:06.990 --> 00:11:11.910
有点像功能的最后一个，最后一个缺少的功能

00:11:11.910 --> 00:11:18.120
真正成为oculus网络的正式参与者，我想从来没有

00:11:18.120 --> 00:11:22.770
之前确实是一个适当的优先事项，因为因为我一直专注于跑步

00:11:22.770 --> 00:11:27.300
在浏览器中，大多数浏览器节点都不是可访问的，因此没有必要说

00:11:27.300 --> 00:11:32.610
如果没有人的话，在DA上宣传在C上提供C ID是没有意义的

00:11:32.610 --> 00:11:37.470
可以与您建立联系，因此永远不会成为头等大事，但越来越多的人

00:11:37.470 --> 00:11:42.330
在那个时候在节点上使用它变得非常重要

00:11:42.330 --> 00:11:46.920
稳定且免费的实施开始，我们有一个路线图，因此

00:11:46.920 --> 00:11:52.830
如果您跟随欧元走-我要读一遍，因为bf如果

00:11:52.830 --> 00:11:57.330
您访问路线图，可以看到即将出现的内容

00:11:57.330 --> 00:12:03.750
发布，您会发现您可以在哪里提供帮助，这使我继续说道

00:12:03.750 --> 00:12:07.290
谢谢我们所有的贡献者，所以这里是所有拥有这些人的人的清单

00:12:07.290 --> 00:12:10.890
有一个J的孔，我给我PO，有

00:12:10.890 --> 00:12:16.040
整个生态系统还有很多，这太了不起了，非常感谢大家

00:12:16.040 --> 00:12:27.480
你可以做那个项目不是因为我是她的问题，谢谢

00:12:27.480 --> 00:12:32.610
非常感谢亚历克斯（Alex）的更新，我们在这里快速浏览了一下

00:12:32.610 --> 00:12:39.090
JSF BFS的几个问题，您看到的是JSI PFS之间的关系

00:12:39.090 --> 00:12:43.080
和生锈IBM认为，生锈可以产生Web组件并在

00:12:43.080 --> 00:12:47.610
浏览器很好，我的意思是很好，有更多类似FS的实现

00:12:47.610 --> 00:12:55.530
在那里，我想你知道我认为每个实现都是我可以做的事情

00:12:55.530 --> 00:13:00.420
对它所针对的平台有意义，因此您可能会觉得很惯用

00:13:00.420 --> 00:13:05.790
Ross使用的API哦，是的，杰西（Jess）总是在哪里成为

00:13:05.790 --> 00:13:09.840
最接近您的人知道您对JavaScript开发人员的期望，但是我

00:13:09.840 --> 00:13:17.790
对每个使用杰西的人来说，这都是一个很大的麻烦和下一个问题

00:13:17.790 --> 00:13:21.670
ipfs目前最推荐的完整打字稿是什么

00:13:21.670 --> 00:13:27.540
现在就努力使用，直到正式的TS支持推出为止，所以我认为

00:13:27.540 --> 00:13:35.370
绝对类型已经有很多接口的定义我

00:13:35.370 --> 00:13:43.480
意思是我认为那是你做得很好并且给了你一些东西的那件事

00:13:43.480 --> 00:13:48.370
考虑将远程请求（例如代理请求）作为正在运行的桌面

00:13:48.370 --> 00:13:56.130
ipfs是的，是的，我的意思是，如果我们定义这些类型的

00:13:56.130 --> 00:14:02.020
正在运行的代码之间的接口，以及期望的API之间的接口

00:14:02.020 --> 00:14:05.920
远程节点变得更容易，然后采用这种

00:14:05.920 --> 00:14:10.620
是的，这绝对是我们感兴趣的东西，所以

00:14:10.620 --> 00:14:18.400
很好地在仓库中提出建议，我认为这就是问题所在

00:14:18.400 --> 00:14:23.770
有一个来自斯蒂芬的人，但我要把那个留给Go ipfs中的Dean

00:14:23.770 --> 00:14:30.160
我正在谈论新的指标，但非常感谢Alex的来访，

00:14:30.160 --> 00:14:34.450
与我们交谈，如果您还有其他疑问要问Alex，请随时提出

00:14:34.450 --> 00:14:39.900
在聊天或质量检查中，我们可以专门回答这些问题

