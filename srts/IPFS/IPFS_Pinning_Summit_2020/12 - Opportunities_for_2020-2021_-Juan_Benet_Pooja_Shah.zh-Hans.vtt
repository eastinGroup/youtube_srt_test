WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.250 --> 00:00:05.509
非常感谢您昨天参加峰会，我们度过了愉快的一天

00:00:05.509 --> 00:00:10.190
今天我们将度过又一个美好的一天，请继续思考

00:00:10.190 --> 00:00:15.500
昨天我们进行了许多精彩的演讲，真正谈论了

00:00:15.500 --> 00:00:20.150
固定服务的总裁以及各团体在做什么和他们在做什么

00:00:20.150 --> 00:00:24.320
考虑做事，前进的方向以及今天的方向

00:00:24.320 --> 00:00:29.240
关于我们谈论了一些关于未来的思考，以及关于

00:00:29.240 --> 00:00:32.930
到2020年将有更多的服务机会，并可能

00:00:32.930 --> 00:00:39.860
2021年，其中一些是相关的，所以我

00:00:39.860 --> 00:00:44.899
现在将在本次演讲中介绍这种设置

00:00:44.899 --> 00:00:50.539
其他谈话，所以我的意思是我激发了一些固定api的需求

00:00:50.539 --> 00:00:55.969
然后我们将听到更多有关如何将其集成到其中的信息。

00:00:55.969 --> 00:01:00.649
应用程序，然后我们还将看到有关潜在的Falcone的信息

00:01:00.649 --> 00:01:08.180
集成和力量获得了巨大的迅速动力，从而说明了为什么存在

00:01:08.180 --> 00:01:14.810
目前有很多有趣的机会，所以2020年和2021年是第一个

00:01:14.810 --> 00:01:18.040
关键时期，正在构建许多关键应用程序和项目

00:01:18.040 --> 00:01:23.210
和改善整个生态系统的兴趣，所以这意味着各种

00:01:23.210 --> 00:01:27.920
开发人员工具的到来正在改变着应用程序的方式

00:01:27.920 --> 00:01:33.770
ipfs的用户最终会使用该系统，因此这意味着

00:01:33.770 --> 00:01:38.390
制作新的开发人员工具的时间段，或

00:01:38.390 --> 00:01:43.730
在ipfs下或在活动家或诸如此类的东西下构建的新系统

00:01:43.730 --> 00:01:51.290
所有这些开发人员工具都在提高自由度或诸如Falcone之类的东西

00:01:51.290 --> 00:01:56.540
和即将到来的系统正在改变人们存储数据和移动方式的性质

00:01:56.540 --> 00:01:59.570
没有DFS的数据，这是一个非常有趣的时间

00:01:59.570 --> 00:02:04.580
ffs生态系统中的基础设施提供商，因为这意味着

00:02:04.580 --> 00:02:09.470
产品格局变化的机会更多，

00:02:09.470 --> 00:02:12.650
突然之间以前不可能的事情现在变成可能，或者

00:02:12.650 --> 00:02:17.090
突然间，新的能力被解锁了

00:02:17.090 --> 00:02:22.760
基础设施提供商，因此您可以将其视为例如

00:02:22.760 --> 00:02:29.630
注意到从纺织中释放出诸如水桶之类的东西，现在我们可以

00:02:29.630 --> 00:02:33.019
可以看到这些东西已经融入到其他东西中

00:02:33.019 --> 00:02:37.910
服务，所以我们昨天听到了有关整合到

00:02:37.910 --> 00:02:42.440
进入某些应用程序，但这是许多计划服务所需要的

00:02:42.440 --> 00:02:46.340
可以正确执行，因此脚本中的许多技术服务现在都可以提供复制

00:02:46.340 --> 00:02:50.720
通过存储桶复制这只是一个例子，有很多不同的地方

00:02:50.720 --> 00:02:55.610
生态系统中出现的最高级的事物，将改善人们的生活方式

00:02:55.610 --> 00:03:00.410
使用EFS的第二个原因是生态系统正在快速增长

00:03:00.410 --> 00:03:04.760
现在有很多的动力正在构建很多的应用程序，

00:03:04.760 --> 00:03:10.220
组的到来，所以这意味着所有那些

00:03:10.220 --> 00:03:14.840
您知道主要对构建其应用程序感兴趣的人会很乐意成为

00:03:14.840 --> 00:03:19.370
能够使用可靠的基础架构，他们可以依靠这些基础架构而不必

00:03:19.370 --> 00:03:25.070
不必自己弄出很多东西，这意味着他们可能想做

00:03:25.070 --> 00:03:28.489
诸如复制自己的图钉或使其在某些情况下可用

00:03:28.489 --> 00:03:32.630
世界各地区以及所有类似的事物，并且提供的服务

00:03:32.630 --> 00:03:36.680
质量很高，或者他们可以依靠该生态系统来提供支持

00:03:36.680 --> 00:03:42.829
增长，然后帮助Excel加快这里的重点

00:03:42.829 --> 00:03:47.030
您所支持的应用程序可以推动您的成功，从而促进社交

00:03:47.030 --> 00:03:51.139
提供者，您的成功取决于您所支持的应用程序以及

00:03:51.139 --> 00:03:54.319
同样，那些应用程序和服务的成功

00:03:54.319 --> 00:03:58.190
您正在推动项目和社区的成功，因此您可以

00:03:58.190 --> 00:04:03.590
认为所有ffs社区都与您的成功和发展息息相关

00:04:03.590 --> 00:04:07.489
您成为服务提供商的成功越多，产品就越多

00:04:07.489 --> 00:04:13.010
这些，所以我们都希望您建立真正成功的业务，并且我们希望

00:04:13.010 --> 00:04:16.940
您支持出色的应用程序，这意味着人们在做出贡献

00:04:16.940 --> 00:04:21.680
到ipfs等，希望能帮助您尽可能地成功，所以

00:04:21.680 --> 00:04:25.610
诸如为工具构建更好的功能或构建新事物之类的事情

00:04:25.610 --> 00:04:28.700
各种事情或确定您可能会遇到的机会

00:04:28.700 --> 00:04:34.360
追求成功可能会变成成功的成功机会

00:04:34.360 --> 00:04:38.780
这里有一个有趣的注释，因为这是一个经历了很多

00:04:38.780 --> 00:04:44.300
增长，因为相对于

00:04:44.300 --> 00:04:49.520
主流权利，所以我们还没有跨越到

00:04:49.520 --> 00:04:53.720
那里有更广阔和主流的主流世界，说只有一个巨大的市场

00:04:53.720 --> 00:04:59.960
被采纳意味着没有太多竞争意味着

00:04:59.960 --> 00:05:04.420
生态系统正在扩展，因此各方共同努力扩展

00:05:04.420 --> 00:05:10.940
ipfs的工作方式及其使用方式等都是更好的策略，

00:05:10.940 --> 00:05:15.230
更成功的事情然后是内部竞争的竞争，我们已经

00:05:15.230 --> 00:05:19.520
看到在fs中有很多基础设施提供商

00:05:19.520 --> 00:05:25.790
生态系统互相帮助，我们共同分享了超级协作的经验教训

00:05:25.790 --> 00:05:32.030
代码和所有类似的东西，因为服务实际上是有区别的

00:05:32.030 --> 00:05:36.500
足够多的维度，并且因为它们正在增长

00:05:36.500 --> 00:05:43.310
这样就没有像激烈的竞争世界一样的最后一件事

00:05:43.310 --> 00:05:49.040
我今天想总结的是，我经常被问到如何

00:05:49.040 --> 00:05:53.030
猎鹰将适合照片，以及绘画服务如何参与其中

00:05:53.030 --> 00:05:58.070
在那个生态系统中，以及当我自称有多胖会打断等等，所以我

00:05:58.070 --> 00:06:02.330
想今天创造一个机会来讨论其中的一些并总结

00:06:02.330 --> 00:06:07.520
这些其他机会带来的一些机会

00:06:07.520 --> 00:06:13.190
不太具体，所以让我们一起潜水吧

00:06:13.190 --> 00:06:18.980
在我所说的布鲁克里，布鲁克把它分成三个三个不同的部分

00:06:18.980 --> 00:06:23.020
一是用例专业化，二是扩展产品范围，

00:06:23.020 --> 00:06:27.620
三三波光粼粼，我将沿途洒一些建议

00:06:27.620 --> 00:06:30.980
所以最后我不会像推荐部分那样

00:06:30.980 --> 00:06:36.880
有点像在这里到那里提到建议

00:06:39.410 --> 00:06:45.990
因此，对于Yusuke专业化领域，我们昨天对此进行了一些讨论，但是

00:06:45.990 --> 00:06:50.790
我认为有很多不同类型的用例

00:06:50.790 --> 00:06:54.780
这确实可以是非常好的，因为它既已经非常有用，也非常非常

00:06:54.780 --> 00:07:01.050
接近于对我们有利，我们认为或我认为固定服务和

00:07:01.050 --> 00:07:05.430
叛乱的基础设施提供商最终将创造出更好的产品

00:07:05.430 --> 00:07:09.960
并仔细考虑这些使用，从而真正获得大量的用户基础

00:07:09.960 --> 00:07:14.880
案例并与之抗争意味着理解这些案例的用户如何使用

00:07:14.880 --> 00:07:22.020
案例实际上正在尝试使用ipfs，以及他们从中需要什么

00:07:22.020 --> 00:07:27.750
基础设施提供商，例如有人将Web 3应用程序作为他们的

00:07:27.750 --> 00:07:31.200
膝盖将与试图发布或编辑的人截然不同

00:07:31.200 --> 00:07:35.520
分发视频，然后思考这些用例，并思考如何

00:07:35.520 --> 00:07:40.560
您的IP是什么，或者您的性能必须进行更改以满足这些需求，这将有所帮助

00:07:40.560 --> 00:07:46.380
您可以像这些不同类型的市场一样进行定位，所以让我们一起潜水吧

00:07:46.380 --> 00:07:51.870
进入一些示例，所以您知道我们很好地讨论了三个AppData

00:07:51.870 --> 00:07:58.280
在此之前，它包括应用程序的所有前端或

00:07:58.280 --> 00:08:04.380
用户在其中生成数据，因此请以此处的受众为例

00:08:04.380 --> 00:08:09.360
想起播放列表，有关歌曲的记录，播放视图和

00:08:09.360 --> 00:08:16.740
所有这些东西，因此所有数据的结构都以您

00:08:16.740 --> 00:08:20.370
现在可以直接在伪造的服务中复制，这在大多数情况下是

00:08:20.370 --> 00:08:25.080
大部分待处理的服务都围绕着我们

00:08:25.080 --> 00:08:32.280
另一个例子非常相似，但是您可以想到Web 3应用程序

00:08:32.280 --> 00:08:38.279
基本上只是围绕一些以太坊的非常轻巧的前端

00:08:38.279 --> 00:08:42.450
聪明的承包商或其他另一个区块链中的其他合同

00:08:42.450 --> 00:08:48.690
想要流畅的用户体验，因此您给人们提供了一个与

00:08:48.690 --> 00:08:53.820
合同，以便用户界面位于通过IP FS加载的浏览器中，并且

00:08:53.820 --> 00:08:57.690
然后通过meta mask之类的东西直接打电话给以太坊

00:08:57.690 --> 00:09:02.970
这样，并成为共同点，现在的道路是人们使用

00:09:02.970 --> 00:09:07.110
固定服务，最终可以备份到某些常规云，例如

00:09:07.110 --> 00:09:13.589
AWS等，其中许多人是创作者希望获得的

00:09:13.589 --> 00:09:18.000
将他们的数据存储在区块链中，因为这对于他们

00:09:18.000 --> 00:09:22.740
合同以使整个事情完全去中心化，因此很多

00:09:22.740 --> 00:09:25.740
我们看到的生态系统的增长是通过空间在网络中进行的，所以这是一种

00:09:25.740 --> 00:09:29.250
就像一个运行良好的用例，我认为我们正在涵盖这一个

00:09:29.250 --> 00:09:32.850
好吧，也许那里还有很多事情要改进，但是总的来说，

00:09:32.850 --> 00:09:36.990
做得很好，我认为我们没有重点关注的一些事情

00:09:36.990 --> 00:09:41.279
但是我认为我们目前在寻找服务方面确实有很好的机会

00:09:41.279 --> 00:09:48.089
是开发人员资产之类的东西，所以请考虑我们如何存储

00:09:48.089 --> 00:09:52.830
或复制各种开发者资产以用于生产

00:09:52.830 --> 00:09:58.080
软件I和调整固定服务器以能够备份所有

00:09:58.080 --> 00:10:01.680
如今，人们倾向于将github用于许多方面，

00:10:01.680 --> 00:10:05.760
倾向于使用一些程序包管理器注册表，等等，但是还有一个

00:10:05.760 --> 00:10:10.709
很多不能轻松进行的工作，或者我们正在使用

00:10:10.709 --> 00:10:15.150
与这些事物结合使用新闻可以改善事物，所以我们听说

00:10:15.150 --> 00:10:19.140
关于例子，来自教授使用的方式

00:10:19.140 --> 00:10:23.100
容器并加快数据中心的分发，因此所有

00:10:23.100 --> 00:10:26.279
这些用例将需要一些工具改进和一些性能

00:10:26.279 --> 00:10:31.709
真正使他们充实的改进，这就是它的用途

00:10:31.709 --> 00:10:35.370
专注于这些用例的提供者将有助于他们的理解

00:10:35.370 --> 00:10:40.050
很好，能够帮助人们在此基础上构建应用程序

00:10:40.050 --> 00:10:46.920
有一个非常好的经验，是的，我会建议一些事情

00:10:46.920 --> 00:10:51.149
像BOTS这样的例子就是一个很好的例子，说明基础设施提供商

00:10:51.149 --> 00:10:56.070
可以运行一个可以进行一些处理或固定的机器人，或者

00:10:56.070 --> 00:11:00.120
某些机器人可以与某些平台紧密集成

00:11:00.120 --> 00:11:04.630
github或获得实验室或松弛或类似的东西

00:11:04.630 --> 00:11:10.389
当我们想到开发人员资产时，我会想到

00:11:10.389 --> 00:11:16.269
您可能不会考虑使用的不同静态资产，请考虑一下

00:11:16.269 --> 00:11:19.630
所有的二进制文件和票据都属于中间的人工产物

00:11:19.630 --> 00:11:23.740
创建了软件包，想到了容器，想到了所有类型的VM。

00:11:23.740 --> 00:11:27.550
的东西，并能够与ipfs一起分发它是真的

00:11:27.550 --> 00:11:32.079
不错，但它又不需要某种基础设施工具

00:11:32.079 --> 00:11:37.060
要改进的话，比如考虑cncd管道，

00:11:37.060 --> 00:11:41.620
他sed服务时的日志可能是这种方式移动的，或者

00:11:41.620 --> 00:11:45.970
存档在ipfs中，然后与之集成

00:11:45.970 --> 00:11:52.300
较大的数据工具，因此涉及大量数据管道的大量软件和子程序

00:11:52.300 --> 00:11:55.750
在那种情况下，很多传统工具或类似工具

00:11:55.750 --> 00:11:59.920
不起作用，因此您希望能够对版本进行很多版本控制

00:11:59.920 --> 00:12:06.279
这些较大的数据很多，然后将它们备份到某个地方，但是那种

00:12:06.279 --> 00:12:09.310
的工具不是很好充实，例如获取所有脂肪和

00:12:09.310 --> 00:12:14.250
其他存在，但它们不适合一堆很好的用例

00:12:14.250 --> 00:12:21.610
好吧，继续转向视频，因此面向视频的固定服务

00:12:21.610 --> 00:12:26.170
可能会切换真的需要不同的性能

00:12:26.170 --> 00:12:29.740
保证，所以您可能会有更高的带宽使用率，我们不得不

00:12:29.740 --> 00:12:35.199
着重于前几个最初几段的非常低的延迟交付，然后

00:12:35.199 --> 00:12:38.589
之后，只需确保有一种可靠的

00:12:38.589 --> 00:12:42.310
处理等等等等，可能看起来与

00:12:42.310 --> 00:12:47.139
与其他一些用例相比，这可能只是大量数据，所以大多数

00:12:47.139 --> 00:12:51.670
我所知道的固定服务中有多少还没有存储

00:12:51.670 --> 00:12:56.560
视频数量以及应用程序正在考虑存储的时间

00:12:56.560 --> 00:13:01.689
大量的视频然后价格变得非常重要，所以这是一个

00:13:01.689 --> 00:13:06.160
那里的可能性是，um专注于此用例将需要某种

00:13:06.160 --> 00:13:10.149
考虑成本模型和流式传输的不同方式是

00:13:10.149 --> 00:13:16.290
我们正在考虑针对Strings的基础架构的一个特别有趣的用例

00:13:16.290 --> 00:13:20.750
考虑直播视频和

00:13:20.750 --> 00:13:24.650
从工件和服务中转码并存储所有这些信息

00:13:24.650 --> 00:13:29.300
他们可能很有趣，但也可能正在中继，所以如果有一个

00:13:29.300 --> 00:13:35.210
点对点的人观看着观看一些视频

00:13:35.210 --> 00:13:42.470
能够对所有这些流量的雇用相关人员进行调查，这可能是非常非常重要的

00:13:42.470 --> 00:13:50.480
有趣的有趣的基础设施机会，然后有事情

00:13:50.480 --> 00:13:57.830
像大型数据集之类的东西，例如公共数据集，您就知道大型企业数据

00:13:57.830 --> 00:14:03.550
等等，这些用例中的很多看起来非常相似，但是它们不是

00:14:03.550 --> 00:14:09.260
他们使用已经存在的工具并不难，但是在那里

00:14:09.260 --> 00:14:15.920
对于不同的时间，有一套复杂的约束条件

00:14:15.920 --> 00:14:20.720
各种领域，例如机器学习Orient围绕某些领域

00:14:20.720 --> 00:14:24.380
具有某些种类的大小等的数据集可能会非常不同

00:14:24.380 --> 00:14:28.700
来自生物学，所以在这个用例中甚至可能会有某种

00:14:28.700 --> 00:14:33.080
有点像子用例和不同的用户来思考和

00:14:33.080 --> 00:14:37.070
给予真正引人注目的不同的不同体验

00:14:37.070 --> 00:14:41.330
引人入胜的经历我一直在思考的事情之一

00:14:41.330 --> 00:14:48.890
这也许是连接工作的一种非常非常好的方法，

00:14:48.890 --> 00:14:54.710
是我们正在FS中处理所有存档内容，而且我想

00:14:54.710 --> 00:14:58.580
与Falcone一起发现，该发现于昨天启动，您将到达那里

00:14:58.580 --> 00:15:05.660
今天的一段照明谈话视频，它只是为了创造赏金

00:15:05.660 --> 00:15:11.440
找到人们想要在ipfs上使用的非常好的有价值的数据集，然后

00:15:11.440 --> 00:15:16.580
只是作为奖励资金，将其备份到固定

00:15:16.580 --> 00:15:21.200
服务，所以想象一下，我们弄清楚一些日期，因为我们弄清楚它是什么

00:15:21.200 --> 00:15:25.160
将其固定在一种固定服务上会花费很多，然后我们就

00:15:25.160 --> 00:15:29.300
为实际处理该数据集并将其投入而提供赏金

00:15:29.300 --> 00:15:32.270
进入固定服务六个月或十二个Masterson

00:15:32.270 --> 00:15:39.800
是的，所以我很有可能会这样做，所以如果您对

00:15:39.800 --> 00:15:43.190
这种问题，或者您一直想寻找一些

00:15:43.190 --> 00:15:53.420
几天来这是一则广告，他们打败了我，昨天来了，我来找我

00:15:53.420 --> 00:15:56.660
关于游戏发行平台中的游戏，这是另一个用例，

00:15:56.660 --> 00:16:02.510
我认为已经很成熟了，仍有很多工具可以用来赚钱

00:16:02.510 --> 00:16:07.310
专为不同的组件而建

00:16:07.310 --> 00:16:12.680
我们分发游戏资产的地方可以更快地完成

00:16:12.680 --> 00:16:15.500
之所以这样，是因为特别要考虑所有不同类型的

00:16:15.500 --> 00:16:19.850
您可以得到的相同类型的带宽利用率

00:16:19.850 --> 00:16:25.220
在过去，您知道点对点维多利亚时代的方式

00:16:25.220 --> 00:16:29.510
暴雪曾经尝试通过分发补丁来使用大而

00:16:29.510 --> 00:16:32.930
我不确定软件更新是否仍然有效，但肯定是极其重要的

00:16:32.930 --> 00:16:36.110
如果您对某些工具不熟悉，将很难使用大量工具

00:16:36.110 --> 00:16:40.730
就像我自称会大大简化和改善这一点，但是

00:16:40.730 --> 00:16:43.970
将需要对流量的整体分配进行一些思考

00:16:43.970 --> 00:16:49.220
谢谢你像包管理器那样考虑一下它，但是嗯

00:16:49.220 --> 00:16:53.839
如果人们对游戏感兴趣，那么我认为fess和这可能就像

00:16:53.839 --> 00:16:57.649
一个非常有趣的方向，因为这类用例具有

00:16:57.649 --> 00:17:01.010
生成了大量数据，等等，用于固定服务

00:17:01.010 --> 00:17:05.630
专门研究这个方向，他们可能会发现它像一个很大的大型市场

00:17:05.630 --> 00:17:10.189
那里可能需要大量的开发人员工具，但这

00:17:10.189 --> 00:17:15.709
可能真的很有趣，周围有很多公司

00:17:15.709 --> 00:17:20.900
区块链空间已经建立了高质量的游戏，我认为

00:17:20.900 --> 00:17:25.459
他们仍然在构建面向普通Web 2的东西

00:17:25.459 --> 00:17:28.490
途径，因为他们不知道他们可以依靠一种

00:17:28.490 --> 00:17:31.820
基础设施提供商解决他们的数据需求，所以我认为这是

00:17:31.820 --> 00:17:36.770
这是一个非常有趣的机会，我认为很可能

00:17:36.770 --> 00:17:39.940
一个好的用例用例是

00:17:39.940 --> 00:17:44.809
decentraland和加密体素（如果有待处理的服务要备份）

00:17:44.809 --> 00:17:48.299
他们所有的数据和某种程度的工作

00:17:48.299 --> 00:17:51.690
他们想出如何构造它，如何备份它，如何固定它以及

00:17:51.690 --> 00:17:57.659
因此，然后它将开始证明用例，然后可能是一些

00:17:57.659 --> 00:18:03.150
之后发布了更多游戏，而我又开始做这件事

00:18:03.150 --> 00:18:10.320
我们看到的有趣的事情是，有许多

00:18:10.320 --> 00:18:14.610
开始增加IPO支持的浏览器，但在某些情况下

00:18:14.610 --> 00:18:18.780
特别是在移动设备中，他们选择从使用网关开始

00:18:18.780 --> 00:18:22.650
分辨率，而不是在浏览器本身中添加注释，这可能是为了

00:18:22.650 --> 00:18:26.750
资源需求等在这种情况下很有意义

00:18:26.750 --> 00:18:30.179
我们听说过，拥有

00:18:30.179 --> 00:18:34.380
可以为他们和我们的网关运行这些网关的基础架构提供商

00:18:34.380 --> 00:18:38.700
经验丰富，可以以极高的可用性运行它们，因此这

00:18:38.700 --> 00:18:42.780
我认为对于那些

00:18:42.780 --> 00:18:49.020
对这种服务有兴趣的，那就是供使用的设置

00:18:49.020 --> 00:18:54.030
案例专业化细分当然有更多的用例，但这只是

00:18:54.030 --> 00:18:58.740
一种关于待处理服务可能如何定位的味道

00:18:58.740 --> 00:19:05.340
一个方向，追逐特定种类的子市场，然后帮助

00:19:05.340 --> 00:19:09.750
我确实认为现在有很多潜在的利益，但是

00:19:09.750 --> 00:19:12.270
这些小组不能使用那里的工具

00:19:12.270 --> 00:19:15.450
所以有一点桥接可以做，然后解锁

00:19:15.450 --> 00:19:19.190
我使用的很多数据

00:19:19.300 --> 00:19:24.010
因此，就扩大产品种类而言，这样

00:19:24.010 --> 00:19:28.030
它是否仍然是一个非常通用的用例，而较少涉及放置数据和

00:19:28.030 --> 00:19:33.100
有关在ipfs中执行其他操作的更多信息，因此这可能包括操作

00:19:33.100 --> 00:19:37.960
像管理笔记一样，能够轻松地部署节点网络

00:19:37.960 --> 00:19:41.260
如果有人想要的话，可以使用所有不同类型的类似多区域支持的方式

00:19:41.260 --> 00:19:45.460
在世界上许多不同地区拥有节点

00:19:45.460 --> 00:19:48.870
指标，然后是Google Analytics（分析），以便将所有内容展示给两个

00:19:48.870 --> 00:19:53.920
用户确实非常类似于此功能，可以在以下位置部署专用网络：

00:19:53.920 --> 00:19:59.520
人们想维护一个完全独立的网络并运行一个应用程序

00:19:59.520 --> 00:20:04.360
以一种特殊的用例以单独的方式将其分为多个组

00:20:04.360 --> 00:20:07.840
感兴趣，到目前为止，这些团体不得不自己做所有的事情，所以

00:20:07.840 --> 00:20:10.810
他们无法与基础架构提供商合作，但是做到了

00:20:10.810 --> 00:20:13.750
意味着团队可以为某些应用程序提供机会

00:20:13.750 --> 00:20:17.590
想朝那个方向前进，这将需要一些有关如何

00:20:17.590 --> 00:20:22.750
做网络隔离如何设置私网密钥和

00:20:22.750 --> 00:20:27.040
等等，以及如何运行制作网络所需的不同部分

00:20:27.040 --> 00:20:33.540
工作，这意味着引导程序可能会逃脱网关中继等

00:20:33.540 --> 00:20:37.570
您也可以朝着设置交通中继的方向走

00:20:37.570 --> 00:20:41.470
极具攻击性的Nats和防火墙后面的网络中的节点数量

00:20:41.470 --> 00:20:45.700
而要实现这些目标是相当困难的，围绕此的最佳策略是

00:20:45.700 --> 00:20:48.730
默认情况下我们不会真正进行中继

00:20:48.730 --> 00:20:54.250
在ifs内部，因为这对于

00:20:54.250 --> 00:20:58.780
用户，但这可能会成为一项服务权利，因此我们可以

00:20:58.780 --> 00:21:03.820
完全看到在我使用过的地方或我自称租用流量的服务不断涌现

00:21:03.820 --> 00:21:08.950
确实是一种服务，只是将他们的所有流量都通过了某种

00:21:08.950 --> 00:21:13.200
向公众公开

00:21:15.690 --> 00:21:23.429
如此之多，就需要关于如何对他汀类药物进行更好的分析

00:21:23.429 --> 00:21:27.300
网络正在运行，所以如果某人的内容很多，他们

00:21:27.300 --> 00:21:31.290
希望它真正适合骑乘，了解其分布情况

00:21:31.290 --> 00:21:36.630
如此等等的网络并不是有用的功能集，因此各方

00:21:36.630 --> 00:21:40.440
拥有大量数据，并希望将其提供给您，可能会导致您选择

00:21:40.440 --> 00:21:46.679
在这里使用提供真正高质量体验的服务，然后

00:21:46.679 --> 00:21:52.230
也考虑为ipfs开发人员专门考虑开发人员工具

00:21:52.230 --> 00:21:57.929
这意味着在点对点交易中考虑CI a和CD管道

00:21:57.929 --> 00:22:01.890
与所有对等的东西可能会有所不同，例如

00:22:01.890 --> 00:22:07.020
以特定方式配置网络，或者连接到专用网络

00:22:07.020 --> 00:22:11.300
隔离或连接到公共网络的网络运行运行测试

00:22:11.300 --> 00:22:17.790
能够像我们刚刚发布的测试场一样成为一个项目，

00:22:17.790 --> 00:22:24.600
该项目是这种大型的点对点实验室

00:22:24.600 --> 00:22:30.390
许多团体都提到他们对运行该软件感兴趣

00:22:30.390 --> 00:22:34.170
它并加以利用，这对于基础设施提供商而言是一个机会，

00:22:34.170 --> 00:22:39.300
只是想将其包装起来就像是一键式部署

00:22:39.300 --> 00:22:43.500
整套测试套件，这是我们没有战斗力的东西

00:22:43.500 --> 00:22:47.520
可以继续工作，但是它确实可用，并且可以运行其完全开放源代码，或者

00:22:47.520 --> 00:22:52.590
任何人都可以做到这一点，我认为那是一个小生意

00:22:52.590 --> 00:23:01.200
就像特拉维斯（Travis）在那里设置一样-有人可以创建

00:23:01.200 --> 00:23:05.700
集中更强的重点以及分析和指标并可视化

00:23:05.700 --> 00:23:11.100
作为许多人想要与众不同的产品，这将非常有用

00:23:11.100 --> 00:23:15.300
能够知道其节点中正在发生的事情，尤其是在某些情况下

00:23:15.300 --> 00:23:19.200
能够在某些事情发生时获得警报

00:23:19.200 --> 00:23:24.809
网络上的Swift条件导致某种行为

00:23:24.809 --> 00:23:27.630
人们希望能够收到有关这些警报的通知

00:23:27.630 --> 00:23:32.220
这些情况，然后当然有各种各样的数据

00:23:32.220 --> 00:23:37.020
在固定之前人们想要做的处理，所以他们开始研究

00:23:37.020 --> 00:23:43.560
看起来对文件或数据集集成有多重要

00:23:43.560 --> 00:23:48.630
其他数据处理工具和系统还有很多东西

00:23:48.630 --> 00:23:54.720
嗯，它们位于数据科学的不同领域，并且能够

00:23:54.720 --> 00:23:59.490
与这两个车道融为一体，这可能会画出一幅画

00:23:59.490 --> 00:24:06.780
服务和更有用的服务，能够做到

00:24:06.780 --> 00:24:11.760
计算，所以有一种使用方法，我相信您可以开始

00:24:11.760 --> 00:24:17.150
考虑数据的代码询问代码并考虑运行

00:24:17.150 --> 00:24:22.620
在能力图上进行转换，因此能够具有

00:24:22.620 --> 00:24:27.810
建立模型，您可以在坦白的地方做MapReduce之类的事情

00:24:27.810 --> 00:24:30.300
这种性质可能真的很有趣

00:24:30.300 --> 00:24:34.320
平台，这就是它开始远离寻找服务的方式

00:24:34.320 --> 00:24:40.110
并开始进行某种形式的lambda样式计算，等等，但是

00:24:40.110 --> 00:24:45.990
可能像是一个非常有趣的有趣服务，并且与此相关

00:24:45.990 --> 00:24:50.580
机器学习社区最近有大量需求

00:24:50.580 --> 00:24:55.410
数据处理管道，特别是一旦我考虑到您知道

00:24:55.410 --> 00:24:59.430
工件记忆在哪里进行这些超级昂贵的计算

00:24:59.430 --> 00:25:03.300
并且如果可以的话，您不想再次运行它们并继续解决

00:25:03.300 --> 00:25:07.740
使您具有执行此操作的能力，因此有一些

00:25:07.740 --> 00:25:11.580
那里的服务被称为试图做到这一点，我BFS可能是

00:25:11.580 --> 00:25:16.050
这是非常非常有用的补充，所以我希望这是

00:25:16.050 --> 00:25:24.300
任何服务都可能使我的视线另一部分开始探索

00:25:24.300 --> 00:25:27.960
不同种类的访问控制，所以现在最依赖的服务

00:25:27.960 --> 00:25:32.370
以固定的方式工作往往意味着任何人都可以

00:25:32.370 --> 00:25:36.870
查看一个您只是想提供不同访问方式的号码

00:25:36.870 --> 00:25:41.610
控制他们可能只想将其固定以供自己使用的位置，或

00:25:41.610 --> 00:25:45.270
或者也许他们想发布它并将其提供给一部分用户，但是

00:25:45.270 --> 00:25:49.679
不支付来自所有人的流量，或者内容已加密，但是他们

00:25:49.679 --> 00:25:53.520
确实需要在网关中解密内容，因此

00:25:53.520 --> 00:25:56.850
解密已经尝试过的网关，我认为是纺织

00:25:56.850 --> 00:26:00.960
而其他人已经使这些人能够将其作为

00:26:00.960 --> 00:26:06.600
服务是某些团体可能想要的东西，我们谈到了

00:26:06.600 --> 00:26:10.770
昨天关于协作图钉的事，但令我震惊的是，这是一个

00:26:10.770 --> 00:26:17.309
嗯，主流数据科学中的许多小组都会

00:26:17.309 --> 00:26:20.190
真正在乎的是，有很多非常大的数据集，人们

00:26:20.190 --> 00:26:23.640
希望能够分担存储和分发这些费用

00:26:23.640 --> 00:26:30.710
因为在很多情况下，他们并没有获得社区资助

00:26:30.710 --> 00:26:35.760
数据注册表将是一件非常有用的日常工作，并且

00:26:35.760 --> 00:26:41.010
因此，这开始从广泛的钉扎转向，并开始

00:26:41.010 --> 00:26:45.630
变成了像github那样的数据，这是

00:26:45.630 --> 00:26:49.320
多年来，许多团体一直在谈论这个话题，但是

00:26:49.320 --> 00:26:54.360
真正缺少的是一个可以像大批人那样担负重任的团体

00:26:54.360 --> 00:27:00.090
涉及的数据中，您知道每个数据集的大小都为TB的数据集，然后

00:27:00.090 --> 00:27:06.600
能够完成所有卡片文件分发工作到

00:27:06.600 --> 00:27:15.030
使其一切正常，所以您知道的第三个类别

00:27:15.030 --> 00:27:20.309
PowerPoint周围有很多机会，为此，我请pooja给

00:27:20.309 --> 00:27:25.620
有兴趣为我们爆米花的人，所以我要交给

00:27:25.620 --> 00:27:32.150
片刻，然后你知道我会回去从那里准备的

00:27:32.150 --> 00:27:38.309
太好了，大家好，我很高兴能在这里谈论决赛

00:27:38.309 --> 00:27:41.850
ipfs上的硬币认为我认为有一些很棒的集成

00:27:41.850 --> 00:27:47.370
机会，所以我想从头开始，为

00:27:47.370 --> 00:27:52.770
文件硬币旨在解决的各种用例，然后我认为是

00:27:52.770 --> 00:27:55.320
要绑在一起，看看暴力如何融入

00:27:55.320 --> 00:27:58.230
更大的生态系统，然后我们将深入研究一些更具体的事物

00:27:58.230 --> 00:28:01.530
如何通过开放和依赖的服务以及其他方式进行整合的机会

00:28:01.530 --> 00:28:09.390
未来几个月的服务提供商，所以我不确定你们中有多少人

00:28:09.390 --> 00:28:12.720
一直在密切遵循Falcon路线图，但我们即将启动

00:28:12.720 --> 00:28:16.290
我在短短几个月内就认识了，文件皇后的生态系统已经

00:28:16.290 --> 00:28:20.700
充满生机和蓬勃发展的

00:28:20.700 --> 00:28:24.120
研究层为应用程序开发人员服务提供了机会

00:28:24.120 --> 00:28:28.320
提供者可能与我们今天的对话最相关，

00:28:28.320 --> 00:28:32.130
真正适合那些关心按地域有效定价的人

00:28:32.130 --> 00:28:41.640
分布式存储，所以我想先谈谈为什么存在文件硬币

00:28:41.640 --> 00:28:46.800
我们正在尝试解决哪些问题以及我们想要启用哪些用例，我会

00:28:46.800 --> 00:28:50.130
喜欢特别关注一些核心功能和文件要点

00:28:50.130 --> 00:28:54.720
使这些用例更加强大，然后我将谈谈我们作为

00:28:54.720 --> 00:29:01.050
项目社区和生态系统，然后将其交还给一个文件女王的任务

00:29:01.050 --> 00:29:06.000
为人文科学创建一个分散，高效，强大的基础

00:29:06.000 --> 00:29:10.140
在过去的几十年中，我们已经看到了许多有关

00:29:10.140 --> 00:29:13.440
集中式存储基础架构有时会变得脆弱，以及

00:29:13.440 --> 00:29:17.610
用于存储人类最有价值资源的不可靠解决方案

00:29:17.610 --> 00:29:24.420
公正的信息，而代币的目标是保持这种韧性和可信赖性

00:29:24.420 --> 00:29:27.570
人类所有知识的基础，我们正在通过

00:29:27.570 --> 00:29:31.080
解决集中式存储基础架构中存在的一些关键问题

00:29:31.080 --> 00:29:37.080
今天，第一个文件硬币是一个去中心化的云文件qin创建了一个

00:29:37.080 --> 00:29:41.310
存储客户和提供者可以直接交互的市场，因此

00:29:41.310 --> 00:29:45.060
文件点消除了对少数集中式云的依赖

00:29:45.060 --> 00:29:50.820
存储提供商，而是创建去中心化的云文件硬币用户

00:29:50.820 --> 00:29:54.360
保留对他们数据的完全控制权，这样您就可以做出自己的决定

00:29:54.360 --> 00:29:59.160
您存储在文件硬币网络文件硬币中的数据会如何处理

00:29:59.160 --> 00:30:03.210
网络上的高效存储市场用户可以设置价格

00:30:03.210 --> 00:30:06.840
他们愿意支付并接受存储空间，因此不必支付

00:30:06.840 --> 00:30:09.210
公司定价确定的价格不同

00:30:09.210 --> 00:30:12.630
用户可以自由签订最经济的合同

00:30:12.630 --> 00:30:16.290
对于他们来说，负担得起的文件钱币真正独特的一件事是

00:30:16.290 --> 00:30:22.370
可验证存储的功能，因此文件皇后区要求存储提供商

00:30:22.370 --> 00:30:26.550
反复生成存储的加密证明以验证他们说的是否正确

00:30:26.550 --> 00:30:30.990
他们正在存储您的数据，实际上是这些可验证的篡改

00:30:30.990 --> 00:30:34.920
证明加密证明使文件指向实际上可以用作

00:30:34.920 --> 00:30:39.180
还具有数据存储保证的分散协议，因此您不再需要

00:30:39.180 --> 00:30:42.630
需要信任中介组织才能知道您的数据是

00:30:42.630 --> 00:30:46.290
安全存储是协议启用的一项核心功能

00:30:46.290 --> 00:30:52.650
最后文件Queen将Zeta字节的空闲存储容量放在

00:30:52.650 --> 00:30:56.820
世界上存在的工作那里有大量的存储容量

00:30:56.820 --> 00:31:01.560
闲置在数据中心地下室和硬盘驱动器中的所有组件

00:31:01.560 --> 00:31:06.120
在全世界范围内，并且数据量每天都在增长。皇后区

00:31:06.120 --> 00:31:10.380
一个允许客户租用此存储容量的市场

00:31:10.380 --> 00:31:16.590
为文件本来未被充分利用的资产创造有效利用

00:31:16.590 --> 00:31:21.080
协议嵌入了许多功能来解决这些问题，并最终

00:31:21.080 --> 00:31:25.770
朝着创建去中心化的高效而强大的使命迈进

00:31:25.770 --> 00:31:30.420
人类信息的基础和存储层，尽管

00:31:30.420 --> 00:31:34.170
网络和生态系统还很早，我们已经看到了文件要点

00:31:34.170 --> 00:31:37.710
开始对许多非常重要的用例产生积极影响，并且

00:31:37.710 --> 00:31:42.030
这就是我想谈的下一个例子是我们与Shoah的合作

00:31:42.030 --> 00:31:46.410
去年的基金会，我们一直与usc的Shoah基金会合作

00:31:46.410 --> 00:31:49.920
将世界上最大的种族灭绝证明档案保存在文件硬币上

00:31:49.920 --> 00:31:54.360
网络今天的世界上有人否认某些暴行

00:31:54.360 --> 00:31:58.710
像大屠杀这样的种族灭绝曾经犯过基金会的

00:31:58.710 --> 00:32:03.900
使命是通过分享来建立同理心的理解和尊重

00:32:03.900 --> 00:32:08.940
这些见证故事更广泛地体现在视觉历史档案馆中

00:32:08.940 --> 00:32:14.040
所谓的包括来自9个国家的55,000多名幸存者的证词

00:32:14.040 --> 00:32:18.690
种族灭绝在62个国家/地区中进行，记录价值超过9 PB

00:32:18.690 --> 00:32:22.380
最终将存储在文件代币上，这意味着其中一些数据是

00:32:22.380 --> 00:32:25.530
全部存储在文件五重奏集上

00:32:25.530 --> 00:32:29.010
显示Foundation之所以选择使用文件点，是因为我们使用了这些文件

00:32:29.010 --> 00:32:33.510
存储文件的防篡改密码证明，女王的证明允许用户

00:32:33.510 --> 00:32:37.020
相信他们正在观看的视频没有被篡改

00:32:37.020 --> 00:32:42.270
他们是原始的真理另一个例子来自我们的工作

00:32:42.270 --> 00:32:45.720
与许多科学和文化机构合作以

00:32:45.720 --> 00:32:50.910
在文件硬币上存储有价值的海量数据集，这有点令人but舌，但我

00:32:50.910 --> 00:32:53.880
最近了解到，我们存储的数据超过了两个半

00:32:53.880 --> 00:32:58.530
每天有五百亿字节的数据用于上下文，这就像

00:32:58.530 --> 00:33:05.490
超过2,000个装满870兆cd-rom的运输集装箱，其中包括294个

00:33:05.490 --> 00:33:10.530
十亿封电子邮件，六百四十亿个whatsapp消息，五亿条推文，但它也

00:33:10.530 --> 00:33:14.790
包括有用的科学数据，例如气候科学报告疾病跟踪

00:33:14.790 --> 00:33:19.920
映射连接的卡的坐标以及更多的数据，同时存储了很多数据，

00:33:19.920 --> 00:33:23.670
保留这种情况的还有价值数百万兆字节的有用数据

00:33:23.670 --> 00:33:28.920
每天都会定期丢弃科学数据和其他类型的数据，如果

00:33:28.920 --> 00:33:33.030
当我们认为这对我们的社会来说是一个失去的机会时

00:33:33.030 --> 00:33:37.410
存储和分析这些数据可能会产生非常宝贵的知识，您知道并且

00:33:37.410 --> 00:33:41.670
无价的研究和发现，我们将不愿为此成为家

00:33:41.670 --> 00:33:46.530
在过去的几个月中，有一种重要的信息

00:33:46.530 --> 00:33:49.920
早些时候，我们一直在与多家机构合作，以保持开放

00:33:49.920 --> 00:33:53.520
访问我们已经开始将PB级数据存储到的数据

00:33:53.520 --> 00:33:56.730
文件点测试集，我们拥有数百PB的管道

00:33:56.730 --> 00:34:01.290
档案上的数据声称我们刚刚宣布了这个名为

00:34:01.290 --> 00:34:04.380
昨天在文件声明博客上提交了皇后发现文件，我们将找一个人

00:34:04.380 --> 00:34:10.020
今天晚些时候也要对此项目进行闪电演讲

00:34:10.020 --> 00:34:14.460
我要强调的是来自将Web 3应用程序和用户数据存储在文件中

00:34:14.460 --> 00:34:17.909
硬币，再来一点，但我想谈一谈

00:34:17.909 --> 00:34:23.100
特别是在这种情况下的锉刀尖角，因此我们认为是锉硬币

00:34:23.100 --> 00:34:27.600
对于ipfs生态系统中的DAP项目是一个特别好的解决方案，甚至更多

00:34:27.600 --> 00:34:31.290
如今，大约三大应用程序的存储空间分布在一个

00:34:31.290 --> 00:34:35.460
解决方案的数量，例如Web 3照片共享应用程序，我已经

00:34:35.460 --> 00:34:39.129
他们从纺织照片中抓取了一个例子

00:34:39.129 --> 00:34:41.980
将他们的业务逻辑存储在像其前端的etherium这样的网络上

00:34:41.980 --> 00:34:48.369
IP FS上的应用程序及其用户数据（IP FS或要服务的网站）

00:34:48.369 --> 00:34:52.029
像Amazon Web Services这样的提供者，其想法是使用文件硬币这些类型

00:34:52.029 --> 00:34:55.659
的应用程序可以将所有相关数据直接存储在文件硬币上

00:34:55.659 --> 00:35:00.730
网络连接加密本地Web 3解决方案与智能合约的直接桥梁

00:35:00.730 --> 00:35:04.869
文件指针的平台也已经在工作中，这应该使

00:35:04.869 --> 00:35:10.329
短期来看，文件上的数据存储将更加无缝

00:35:10.329 --> 00:35:13.240
文件硬币项目对现实世界的影响类型尤其是模式8

00:35:13.240 --> 00:35:17.770
激励着我，我个人很高兴能找到更多这些用途

00:35:17.770 --> 00:35:22.329
案例，并查看该文件点可以独特地为它们提供服务的方式，即使有一些情况

00:35:22.329 --> 00:35:26.020
在这些早期用例中，我已经可以开始看到这种未来或文件指向

00:35:26.020 --> 00:35:32.250
真的会改变我们每天与数据交互的方式

00:35:32.250 --> 00:35:36.520
文件点社区现在处于寒武纪爆炸时期

00:35:36.520 --> 00:35:40.809
我们终于有了所有核心协议和研究开发工作

00:35:40.809 --> 00:35:46.089
完成后，我们开始看到真正的业务和应用程序，功能强大

00:35:46.089 --> 00:35:49.900
在网络上构建用户体验，因此这是下一部分

00:35:49.900 --> 00:35:52.900
我想谈谈今天作为项目的五点

00:35:52.900 --> 00:35:59.349
正如我之前提到的，社区和生态系统的核心工具和构建

00:35:59.349 --> 00:36:02.440
区块现在已经到位，因此我们开始看到很多活动

00:36:02.440 --> 00:36:07.720
开发人员矿工和存储客户端或其他类型的用户文件

00:36:07.720 --> 00:36:11.200
该项目是跨200个回购协议（包括节点实现）的活跃开发

00:36:11.200 --> 00:36:15.609
文件种类证明开发人员工具和AP以及许多社区产品

00:36:15.609 --> 00:36:21.010
自2019年初启动我们的首个开发网络以来

00:36:21.010 --> 00:36:25.089
我们已经看到我们的开源开发者社区从大约20个活跃的社区成长

00:36:25.089 --> 00:36:30.039
如今一次又一次地为1,200多个累计贡献者中的贡献者

00:36:30.039 --> 00:36:32.950
该网络仍处于预发布阶段，所以我认为我们的确很棒

00:36:32.950 --> 00:36:35.920
开发人员社区，这对于所有这些新应用程序来说确实很棒

00:36:35.920 --> 00:36:40.809
和服务，我们将开始看到并希望在接下来的几年中看到

00:36:40.809 --> 00:36:45.490
年，目前有四个文件点节点实现

00:36:45.490 --> 00:36:49.450
画龙点睛的实现这些都是文件硬币

00:36:49.450 --> 00:36:52.090
加载Forrest和foo hun，他们被写成

00:36:52.090 --> 00:36:58.600
在去年的Web 3峰会上，在go rust和C ++中，我们启动了文件coin开发

00:36:58.600 --> 00:37:02.920
赠款计划为社区提供一些轻型生态系统支持2

00:37:02.920 --> 00:37:06.580
团队在文件硬币上构建应用程序和工具，今天我们已经

00:37:06.580 --> 00:37:11.160
进行了三波Deborah计划的拨款，共计四十五笔赠款，

00:37:11.160 --> 00:37:16.300
给我们生态系统中的团队一共一百五十万美元

00:37:16.300 --> 00:37:19.900
目前实际接受开发人员申请的项目第四批和

00:37:19.900 --> 00:37:24.940
您可以在我们第一个启动的网站上了解有关该程序的更多信息

00:37:24.940 --> 00:37:28.630
具有完整文件硬币测试网的功能已于2019年12月发布，这确实是

00:37:28.630 --> 00:37:31.990
令人兴奋的是，自从您几个月前才知道我们已经看到了这个网络的发展

00:37:31.990 --> 00:37:36.390
从0 PB到几乎5 PB的网络存储空间，以及

00:37:36.390 --> 00:37:40.900
有将近35个字节，但正在等待加入的PB级存储

00:37:40.900 --> 00:37:45.250
网络上也有数百名矿工积极参与

00:37:45.250 --> 00:37:49.990
每天都在文件硬币测试网上，这真的很有趣，因为您

00:37:49.990 --> 00:37:52.840
知道这些是认真的组织，拥有大量的资金和资源

00:37:52.840 --> 00:37:56.350
他们整个都知道，业务已经开始建立在

00:37:56.350 --> 00:38:00.790
采矿方面的文件硬币，这些团队真的很努力，所以我们已经看到

00:38:00.790 --> 00:38:03.670
实际上总的来说，就像我认为成千上万的活跃矿工

00:38:03.670 --> 00:38:06.940
参加了测试，在过去的几个月中，这不是一个

00:38:06.940 --> 00:38:10.450
激励网络，因此所有这些能量使我们拥有强大的

00:38:10.450 --> 00:38:14.020
期望网络将增长几个数量级

00:38:14.020 --> 00:38:18.910
总体上，当我们实际启动主网时，我们看到了一个

00:38:18.910 --> 00:38:21.970
魔术贴采矿社区内的巨大热情

00:38:21.970 --> 00:38:25.540
矿工已经开始公开宣布您知道Twitter之类的地方

00:38:25.540 --> 00:38:28.900
它们具有数十亿字节的存储容量，正等待加入

00:38:28.900 --> 00:38:33.450
每周在世界各地继续举行净启动文件硬币聚会，并且

00:38:33.450 --> 00:38:37.930
也有一些矿工发布了有关存储空间机架的视频，

00:38:37.930 --> 00:38:43.150
准备去吃文件硬币午餐了，这里有一个视频，我会跳过播放

00:38:43.150 --> 00:38:46.660
今天，但我们可以分享幻灯片，就像一个非常有趣的视频

00:38:46.660 --> 00:38:51.220
看着在产品方面工作更多的人

00:38:51.220 --> 00:38:55.330
目前，我对所有开发人员工具和应用程序感到最兴奋

00:38:55.330 --> 00:38:58.270
已经开始建立在文件临床系统上，并以最终版本为基础

00:38:58.270 --> 00:39:02.620
现在，硬币比以往任何时候都更容易我们拥有全面的文档

00:39:02.620 --> 00:39:06.160
众多面向API库开发的测试网络

00:39:06.160 --> 00:39:09.550
托管节点以及其他各种开发人员基础架构

00:39:09.550 --> 00:39:13.540
轻松建立文件硬币所必需的几个团队已经开始使用

00:39:13.540 --> 00:39:17.349
这个开发者平台，用于构建社区友好的工具，所以一些

00:39:17.349 --> 00:39:23.140
例如，通过IP FS force ipfs Union和D等工具进行区块浏览器

00:39:23.140 --> 00:39:28.060
技术上，有一个自托管的网络钱包，实际上是由镂空实验室构建的

00:39:28.060 --> 00:39:31.810
和来自镂空实验室的乔纳森（Jonathan）发表了演讲，我认为这是一个演示

00:39:31.810 --> 00:39:38.230
昨天还有一个社区团队的其他钱包手机sim手机钱包

00:39:38.230 --> 00:39:43.570
好吧，我想我相信我将成为一支最好的力量，这是一个链式可视化仪

00:39:43.570 --> 00:39:48.369
由AE studio制作，这是仪表盘的预览，它将用于

00:39:48.369 --> 00:39:55.240
是为由名为node Factory的团队构建的挖掘节点而构建的，这是

00:39:55.240 --> 00:39:57.400
我实际上非常兴奋的产品，您将听到很多

00:39:57.400 --> 00:40:01.180
今天有关它的更多信息昨天来自纺织行业的Andrew出席了会议，他是

00:40:01.180 --> 00:40:04.300
即将在动力之门与纺织团队的亚伦（Aaron）进行交流

00:40:04.300 --> 00:40:07.780
具体来说，但纺织业是一个团队，我们都听说过很多，他们只是

00:40:07.780 --> 00:40:10.839
做了不可思议的工作，并且PFS是由奥克兰生态系统在过去的几年中完成的

00:40:10.839 --> 00:40:13.599
多年以来，他们一直在构建一套工具来

00:40:13.599 --> 00:40:17.800
文件硬币无缝，直观的纺织品动力门的开发是一项

00:40:17.800 --> 00:40:21.730
易于使用的界面，用于从文件点及其中存储和检索数据

00:40:21.730 --> 00:40:26.260
还公开了一个非常直观的开发人员API，

00:40:26.260 --> 00:40:29.890
我认为很多直接固定服务的有趣用例

00:40:29.890 --> 00:40:35.440
我们当中的一些人也会在其他演讲中谈到这一点，这也很有趣

00:40:35.440 --> 00:40:39.460
我们还在构建文件硬币GUI，它将使更多的用户能够

00:40:39.460 --> 00:40:44.020
使用Dropbox和Google等熟悉的用户界面与文件硬币互动

00:40:44.020 --> 00:40:48.339
我们已经清楚地了解到您了解Web 3的驱动器类型的存储体验

00:40:48.339 --> 00:40:51.339
产品实际上可能会对初次接触产品的用户产生真正的威胁

00:40:51.339 --> 00:40:55.810
空间，这是我们试图降低进入壁垒并激发灵感的尝试

00:40:55.810 --> 00:40:59.619
喜悦和我们早期的一些投币用户，我想我们也将给予

00:40:59.619 --> 00:41:04.270
今天晚些时候对此进行闪电讨论，但该产品也很有趣，并且

00:41:04.270 --> 00:41:07.180
我认为有一些很酷的机会可以为

00:41:07.180 --> 00:41:12.700
当仪表板向用户公开时，利用这些类型的粘糊糊

00:41:12.700 --> 00:41:16.320
说选择使用文件硬币存储

00:41:16.349 --> 00:41:19.349
所有这些产品以及更多产品将在接下来的数年内投入使用

00:41:19.349 --> 00:41:24.329
提醒您，文件开放的生态系统充满活力

00:41:24.329 --> 00:41:28.349
成长只是一个开始，尤其是在世界范围内

00:41:28.349 --> 00:41:33.539
固定与文件关联的服务和其他基础架构

00:41:33.539 --> 00:41:37.259
coin.if这么早就有这么多的机会，这个空间超大

00:41:37.259 --> 00:41:41.670
开放，我们真的很高兴开始与任务一致的开发人员一起工作

00:41:41.670 --> 00:41:47.089
谁想要加入生态系统并立即开始构建，仅此而已

00:41:47.089 --> 00:41:52.140
谢谢你的介绍，所以今天晚些时候，我们将进入

00:41:52.140 --> 00:41:56.180
探索可能的集成类型还有另一个时间段

00:41:56.180 --> 00:42:02.190
致力于详细介绍什么是引荐挖掘

00:42:02.190 --> 00:42:06.269
可以解决您如何固定文件硬币和从文件硬币中固定的问题，因此，如果您是激进主义者

00:42:06.269 --> 00:42:12.839
服务您如何使用引擎盖下的五个按钮或反向获取交易

00:42:12.839 --> 00:42:18.599
从falcone中排序并固定到taco网络中，然后我们将看到其他

00:42:18.599 --> 00:42:22.460
整合我想与其余人一起做的各种方式

00:42:22.460 --> 00:42:30.079
很多时候这里只是在谈论一些关于...的特性的话题

00:42:30.079 --> 00:42:35.579
与绘画有关的猎鹰中的存储挖掘和检索挖掘

00:42:35.579 --> 00:42:42.150
服务在可能性空间的种类和可能性方面

00:42:42.150 --> 00:42:49.259
我的意思是看着这些图，我们正在理解

00:42:49.259 --> 00:42:55.920
那些网络中的参与者到底具有什么样的特征

00:42:55.920 --> 00:42:59.910
就像今天待处理的服务有如此惊人的重叠，因此

00:42:59.910 --> 00:43:05.969
意味着成为这些政党可能就像是一项强大的业务

00:43:05.969 --> 00:43:11.460
为我们提供未决服务的机会，以此类推为例

00:43:11.460 --> 00:43:17.249
在左侧，它有点像一段时间内的存储成本图

00:43:17.249 --> 00:43:21.299
根据数据的检索延迟绘制图形，所以这有点像

00:43:21.299 --> 00:43:28.219
表示这种现象的正常方式，我们可以看到冰川和s3之类的东西

00:43:28.219 --> 00:43:31.870
映射在那里，所以那些实际上很宽

00:43:31.870 --> 00:43:36.550
因为例如更大的具有不同的不同特征级别，

00:43:36.550 --> 00:43:43.390
因此，某些类型的支付和某些级别的级别可以使您保持安静

00:43:43.390 --> 00:43:46.390
支付长期存放的相同金额，但是当您支付

00:43:46.390 --> 00:43:50.980
不同数量的检索，您最终会得到不同的结果

00:43:50.980 --> 00:43:55.090
不同的时间范围，所以您知道从几分钟到多达多少分钟

00:43:55.090 --> 00:44:01.060
小时，如果三个小时要狭窄得多，并且是大多数清洁服务中的一种

00:44:01.060 --> 00:44:06.760
如今，这与等待时间段的成本跨度相匹配，因为

00:44:06.760 --> 00:44:12.490
这就像大多数云存储正在做的最甜蜜的地方

00:44:12.490 --> 00:44:16.930
对，所以这里是一个绿色的方框，表示一分钱的服务

00:44:16.930 --> 00:44:22.180
有点像大多数云存储所在的位置，例如s3 Google Cloud

00:44:22.180 --> 00:44:30.970
对象等等，然后您会看到CDN如此安静，

00:44:30.970 --> 00:44:35.650
映射的云在这里是云的前锋，这也是一个双重的“是”和“和”

00:44:35.650 --> 00:44:38.890
当然，一切都希望尽可能便宜和快速

00:44:38.890 --> 00:44:42.910
对，所以有一种我们无法完全达到的魔幻理想，

00:44:42.910 --> 00:44:46.000
那里的一切都是想去的地方，而一切都是

00:44:46.000 --> 00:44:50.380
权衡一下，您可以花更多的钱并有可能走得更快，或者

00:44:50.380 --> 00:44:55.840
您可以尝试获得更具成本效益的服务，并降低速度，

00:44:55.840 --> 00:45:00.190
当然，随着技术的进步，我们可以在这方面有所作为

00:45:00.190 --> 00:45:06.460
在这样的前沿，离理想越来越近，那又是什么

00:45:06.460 --> 00:45:10.720
我想在这里代表的是这个有趣的重叠部分

00:45:10.720 --> 00:45:15.370
我几周前才意识到这是目前正确的定位

00:45:15.370 --> 00:45:21.220
服务的位置非常理想，可以成为世界上最好的矿工

00:45:21.220 --> 00:45:25.570
Falco Network，所以我们这两个老矿工就是这种阶级

00:45:25.570 --> 00:45:33.850
服务的主要作用是保持内容的真正热度

00:45:33.850 --> 00:45:38.380
能够非常快地检索到真正需要某种延迟的地方

00:45:38.380 --> 00:45:43.960
但内容不多，所以想想您知道的顺序是

00:45:43.960 --> 00:45:48.090
个字节，大约与大多数建筑服务正在执行的操作的大小差不多

00:45:48.090 --> 00:45:53.650
因此，对于很多用例中的常见问题解答，我们将成为

00:45:53.650 --> 00:45:57.610
存储PB级的障碍和东西，我们无法保持所有这些热度

00:45:57.610 --> 00:46:02.380
然后有一个奇怪的原因为什么要存储-在这里

00:46:02.380 --> 00:46:08.410
蓝色中的这张图实际上无法像宽幅图那样更快地检索

00:46:08.410 --> 00:46:12.730
资源-花费很长时间-才能检索到，这是的功能之一

00:46:12.730 --> 00:46:17.050
我们正在使用的证明只是从密码学中脱颖而出

00:46:17.050 --> 00:46:22.930
这是一项非常昂贵的操作-在数据之上进行操作以确保

00:46:22.930 --> 00:46:26.320
各方都拥有它，如果您希望能够获取数据，则必须

00:46:26.320 --> 00:46:31.390
有效地将其解密，这需要花费一些时间

00:46:31.390 --> 00:46:37.900
证明发生了，存储矿工将能够进一步了解您的知识，

00:46:37.900 --> 00:46:42.790
更进一步，它仍然具有与其他同类成本成本相同的成本

00:46:42.790 --> 00:46:49.750
但在理想情况下能够-在这些情况下提供更快的服务

00:46:49.750 --> 00:46:53.680
各种证明都已经到位，但至少在网络开始时

00:46:53.680 --> 00:46:58.090
可能在接下来的六到十二个月内，真正的快速交付将

00:46:58.090 --> 00:47:02.350
通过检索矿工来完成，我认为这是ipfs的支出

00:47:02.350 --> 00:47:06.760
服务就像是定位最好的群体，基本上就像

00:47:06.760 --> 00:47:13.840
所有人都拥有该服务的大部分，因为它是正确的金额

00:47:13.840 --> 00:47:19.810
数据就像正确的数据大小和正确的速度，因此其中之一

00:47:19.810 --> 00:47:24.340
要考虑的事情是，这也是我们期望这些事情发生的地方

00:47:24.340 --> 00:47:30.130
随着时间的推移而变化，当然这是一种超投机性，目前尚不清楚

00:47:30.130 --> 00:47:35.110
所有这些，但很可能会大大降低

00:47:35.110 --> 00:47:40.600
证明我们正在做的事情或速度或以下的速度可能是存储矿工

00:47:40.600 --> 00:47:43.570
实际上可以在几百毫秒内完成服务

00:47:43.570 --> 00:47:48.250
不到一秒的时间，也许他们不会喜欢我们大幅降低的成本

00:47:48.250 --> 00:47:52.570
希望，但是有可能，所以我们将看到一种存储方式

00:47:52.570 --> 00:47:57.940
在接下来的几年里，矿工们逐渐向左倾斜

00:47:57.940 --> 00:48:02.349
对于两个矿工，我们同时想知道您是否会设法搬家

00:48:02.349 --> 00:48:08.200
越来越接近用户以达到某些特定功能

00:48:08.200 --> 00:48:14.589
现代化的CDN并没有在ISP级别停下来的现代化CDN，但是

00:48:14.589 --> 00:48:17.200
可能有两个老矿工，下面是您可以知道的其他人吗？

00:48:17.200 --> 00:48:23.230
您认识邻居的人在存储数据并将其提供给您时非常

00:48:23.230 --> 00:48:27.970
很快就可以从隔壁的房子或其他可能的公寓

00:48:27.970 --> 00:48:32.549
建筑物或同一建筑物的另一间公寓，就是那种优势

00:48:32.549 --> 00:48:38.170
交付水平还不是真的不存在，所以我们希望

00:48:38.170 --> 00:48:42.190
在接下来的几年中，我们可以知道这可能是两个月到两个月

00:48:42.190 --> 00:48:46.150
几年后，我们可以将其扩展出去，我们可以看到，真正的CDN受到了欢迎

00:48:46.150 --> 00:48:49.780
我们一直都在靠近用户的位置，所以我们对这两个组都寄予了厚望

00:48:49.780 --> 00:48:54.280
在某个时候开始向左缓动实际上是这种过渡

00:48:54.280 --> 00:48:57.579
足够便宜，可以将服务固定为存储矿工

00:48:57.579 --> 00:49:02.500
现在我说足够便宜，因为事实上，作为一个真正好的存储矿工

00:49:02.500 --> 00:49:08.109
如今，从经济上来说，您想拥有的PB达到了数PB的最佳平衡点

00:49:08.109 --> 00:49:11.770
这种昂贵的天花板天花板设备的存储和种类，那是

00:49:11.770 --> 00:49:14.589
而不是固定服务现在所做的事，这是完全不同的业务

00:49:14.589 --> 00:49:19.510
但是随着我们改进样张和存储空间-一直到

00:49:19.510 --> 00:49:22.660
左侧很可能会导致点蚀服务

00:49:22.660 --> 00:49:26.170
直接成为存储矿工，所以有点像有趣

00:49:26.170 --> 00:49:30.490
从我们这里脱胎换骨的功能现在和我们在哪里

00:49:30.490 --> 00:49:35.260
期望这些这些这些团体走，这当然是非常困难的

00:49:35.260 --> 00:49:39.430
要做的就是亚马逊，而亚马逊是最强大的组织之一

00:49:39.430 --> 00:49:42.730
能够优化事物，所以很多事情仍然像我们将看到

00:49:42.730 --> 00:49:48.880
发生了，但法尔科内更大的论点是，市场可以

00:49:48.880 --> 00:49:52.410
比集中计划要好得多

00:49:52.410 --> 00:49:57.099
以计划经济为中心，所以我们将看看这条路或矿工是否能够获得

00:49:57.099 --> 00:50:00.579
相同的成本削减方法比方说，比特币矿工与上帝一起

00:50:00.579 --> 00:50:06.760
硬件安装，它们运行得很好，所以这是另一种方式

00:50:06.760 --> 00:50:11.380
可视化是在左边的相同数据上，是某种图表

00:50:11.380 --> 00:50:14.110
谷歌云用来描述其种类

00:50:14.110 --> 00:50:17.770
核心数据中心，然后像边缘缓存等，您可以认为

00:50:17.770 --> 00:50:21.130
想起来就像是中央的储藏矿工，然后

00:50:21.130 --> 00:50:26.290
仪式-在边缘，我在地理上分布得很好，

00:50:26.290 --> 00:50:33.850
低延迟交付-给用户，所以我认为现在有一个

00:50:33.850 --> 00:50:41.980
为即将到来的服务提供论坛的重要经济机会

00:50:41.980 --> 00:50:48.430
进入虚拟燃料开采，然后最终在真正的地方建立服务

00:50:48.430 --> 00:50:54.580
内容的快速交付，基本上这只是C ID

00:50:54.580 --> 00:50:58.710
对，所以我承认这是C ID，这正是什么

00:50:58.710 --> 00:51:04.120
检索我很抱歉一分钱今天开始做什么，但它只是调整了哪些数据

00:51:04.120 --> 00:51:07.600
您进行存储而不是存储数据，而不是与

00:51:07.600 --> 00:51:13.330
用户长期存储他们的数据并提供服务

00:51:13.330 --> 00:51:16.720
了解此时网络正在尝试检索的内容

00:51:16.720 --> 00:51:20.470
获取并重新分配，所以有点像调整

00:51:20.470 --> 00:51:24.910
但正是在该架构的最佳解决方案中，

00:51:24.910 --> 00:51:30.970
您目前没事，我要停在那儿，希望这次演讲有

00:51:30.970 --> 00:51:35.920
给了很多给你很多的想法，我们随着时间的流逝运行了一段时间，但我

00:51:35.920 --> 00:51:43.470
会在我所说的固定中弥补，谢谢

