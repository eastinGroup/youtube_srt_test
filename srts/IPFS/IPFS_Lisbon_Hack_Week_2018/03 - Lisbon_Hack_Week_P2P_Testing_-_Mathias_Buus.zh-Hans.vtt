WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:04.740
我要谈点对点测试，所以我是队友

00:00:04.740 --> 00:00:10.440
通过数学和酷刑以及github我也写了很多纯净的东西，以及何时

00:00:10.440 --> 00:00:13.200
你写点对点的东西我觉得你在很多地方遇到了这个问题

00:00:13.200 --> 00:00:17.789
真的很难测试，我们通常所做的就是我知道我们在

00:00:17.789 --> 00:00:21.930
至少我要花一英里一堆模块，然后再写一堆磁带

00:00:21.930 --> 00:00:25.380
测试市场测试以及您喜欢的部分，然后再进行测试

00:00:25.380 --> 00:00:28.140
像这样的所有模块都非常好，您实际上得到了非常好的

00:00:28.140 --> 00:00:32.430
这样的报道，但在某些时候它说这很漂亮，我们

00:00:32.430 --> 00:00:38.660
想做网络工作，一切都变得非常棘手，所以

00:00:38.660 --> 00:00:42.989
基本上最近花了很多时间试图弄清楚我们如何

00:00:42.989 --> 00:00:46.379
基本上我所有的测试都可以使这种情况更好

00:00:46.379 --> 00:00:53.039
做像教育测试这样的网络工作，所以我也没有做任何幻灯片

00:00:53.039 --> 00:01:01.039
因为我无论如何都在修正错误，所以有人听说过迷你网吗？

00:01:01.039 --> 00:01:04.949
很酷，这是我两个月前学到的东西之一，我只是假装

00:01:04.949 --> 00:01:10.500
我一直都知道这件事，因为它基本上是一个小的框架库

00:01:10.500 --> 00:01:15.630
使您可以非常轻松地在Linux和虚拟机上设置虚拟网络

00:01:15.630 --> 00:01:18.990
如果您不熟悉网络，这就像一种基本的方法

00:01:18.990 --> 00:01:23.729
假装到她的分支机构或连接到计算机的网络，他们全都

00:01:23.729 --> 00:01:26.909
行为就像普通网络一样，但有一个额外的好处，就是您能够

00:01:26.909 --> 00:01:29.970
定义您的拓扑，并像网卡和其他东西的所有设置一样

00:01:29.970 --> 00:01:35.310
就像这样的轻量级VM网络，从那以后很酷的东西

00:01:35.310 --> 00:01:39.090
我们在Linux上，我们也有非常简单的Linux容器，因此我们可以像

00:01:39.090 --> 00:01:42.770
组合起来，一起使所有事情变得非常简单

00:01:42.770 --> 00:02:00.149
所以如果我只是阿曼达，我想那是我知道如何做的唯一方法

00:02:00.149 --> 00:02:06.180
喜欢复制我一直在搜索的东西，然后再复制丹麦国旗表情符号

00:02:06.180 --> 00:02:13.470
好吧，这就像大量的好数据，是的，这就是这个项目

00:02:13.470 --> 00:02:16.590
基本上，所以有人将我链接到这个，实际上这是

00:02:16.590 --> 00:02:20.520
设置虚拟网络非常有用，这实际上是您想要的

00:02:20.520 --> 00:02:24.570
如果您想在集成测试和其他方面想像实际测试一样

00:02:24.570 --> 00:02:27.270
就像我说的，我只是拥有一台计算机而不是拥有大量计算机，

00:02:27.270 --> 00:02:31.860
真的很好的解决方案，所以我读了生意，发现那里很漂亮

00:02:31.860 --> 00:02:36.630
很好的Python支持，这里有一个Python库，所以我写的是

00:02:36.630 --> 00:02:46.830
一个名为mini nerd的模块，因为它在NPM上也可用，并且它是节点

00:02:46.830 --> 00:02:52.830
只是在JavaScript中编写的模块，它只是在后台编写Python

00:02:52.830 --> 00:02:56.340
基本上，您可以在mini net中执行的操作是可以执行以下类似的操作：

00:02:56.340 --> 00:02:59.550
您需要它，并且可以说我想像普通人一样得到一个开关

00:02:59.550 --> 00:03:02.370
切换您在家的时间，然后您可以说我要创建一个主机和一个主机

00:03:02.370 --> 00:03:08.280
这只是一种minimap方式，就像一台计算机，基本上是一个小容器，

00:03:08.280 --> 00:03:14.340
那么您可以做一些很酷的事情，例如用交换机链接主机或链接主机

00:03:14.340 --> 00:03:17.250
主机，主机可能基本上可以构建您的拓扑，就像问一下一样

00:03:17.250 --> 00:03:23.310
然后有电缆室可以放入东西，然后可以产生东西

00:03:23.310 --> 00:03:29.730
在主机上，所以在这个简单的示例中，我只是打电话给便笺服务器，然后

00:03:29.730 --> 00:03:33.630
我有一些消息传递逻辑，您可以在其中经常发送消息

00:03:33.630 --> 00:03:39.090
服务器并对它做出反应，以便该部分真的很酷​​，因此

00:03:39.090 --> 00:03:43.530
基本上，如果您在这里有这样的服务器，则可以将其生成

00:03:43.530 --> 00:03:48.330
容器，它得到了这个，你可以要求这个迷你网络主机来

00:03:48.330 --> 00:03:50.640
向您的主机脚本发送消息，这是这里的一个

00:03:50.640 --> 00:03:55.050
所以在这里，我只是启动一个服务器，当它监听伊朗时，我发送了一个

00:03:55.050 --> 00:04:01.170
消息监听，然后在您的主机中收到一个消息监听事件，该事件

00:04:01.170 --> 00:04:05.160
您可以做出反应，在那里我只是尝试对它进行卷曲，就像一个简单的

00:04:05.160 --> 00:04:10.500
测试，所以让我们尝试一下，如果您使用的是启动工具，那么它真的很容易使用

00:04:10.500 --> 00:04:16.829
我不是，所以我做的是我有一堆容器

00:04:16.829 --> 00:04:29.430
不要吃假的，我会像虚拟的船夫那样做，所以如果我们去

00:04:29.430 --> 00:04:47.099
我想我在这里有它哦，没有模块，所以在这里我有我没有

00:04:47.099 --> 00:04:51.630
这是我没有的自述文件

00:04:51.630 --> 00:04:57.360
这里的例子哦，是在文件夹中，这就是为什么我在这里，我有那个

00:04:57.360 --> 00:05:03.599
您之前看到的服务器，并且该示例将其编排为

00:05:03.599 --> 00:05:08.940
我所能做的就是运行这个示例，然后运行MiniMed

00:05:08.940 --> 00:05:13.500
服务器，所以在这里您可以看到它说服务器正在监听10000，因为

00:05:13.500 --> 00:05:19.229
服务器正在打印出来，服务器响应和所有东西都聚集在一起

00:05:19.229 --> 00:05:21.870
所以很酷的事情是您看起来很容易设置这些虚拟网络

00:05:21.870 --> 00:05:26.250
只需编写代码，而不必担心很多东西，但这是我的一种

00:05:26.250 --> 00:05:29.009
现在做了这个，就像是很酷，然后我尝试使用它，真正的意义是

00:05:29.009 --> 00:05:34.889
很难，因为事实证明，当您进行点对点的工作时，您会有大量

00:05:34.889 --> 00:05:37.889
服务器经常，你必须做大量的编排才能测试任何东西

00:05:37.889 --> 00:05:41.250
我最终要拥有大量的盒子，然后你最终进行测试

00:05:41.250 --> 00:05:45.710
您的测试就像您作为程序员可以做的最有用的事情，因此

00:05:45.710 --> 00:05:52.110
我开始思考如何改善这一点，而且我是录音带人的忠实拥护者

00:05:52.110 --> 00:05:56.069
知道什么API或像cat一般的猫，所以就像一个非常简单的测试运行程序

00:05:56.069 --> 00:06:00.330
基本上可以让您使用基本的线性测试编写类似的节点

00:06:00.330 --> 00:06:06.630
断言，所以我开始思考如何将其转换为选项卡上的选项卡，例如

00:06:06.630 --> 00:06:15.870
的经验，我写了这个很酷的模块，称为磁带网，也称为kumain，因为它

00:06:15.870 --> 00:06:21.630
用于网络的磁带或用于网络的选项卡，因此它基本上是一个小模块，它

00:06:21.630 --> 00:06:24.979
只是使用

00:06:27.900 --> 00:06:31.050
每次我假设当我录制屏幕时，它都将花费一些时间

00:06:31.050 --> 00:06:36.810
原因是它只是一个采用相同构想的小模块，所以包裹了迷你网

00:06:36.810 --> 00:06:41.040
将其放在一个不错的小测试运行器界面中，所以这非常简单

00:06:41.040 --> 00:06:44.729
例如，您需要一个小型的磁带网，您仍然可以

00:06:44.729 --> 00:06:48.300
制作主机和交换机，您可以将它们链接在一起，然后可以

00:06:48.300 --> 00:06:50.639
在这里写一个小小的测试，你有一个小的描述

00:06:50.639 --> 00:06:54.389
这个说启动一台服务器并连接到它，然后有这种魔力

00:06:54.389 --> 00:07:00.240
名为cedar run的函数仅在虚拟实例上运行该函数，因此它

00:07:00.240 --> 00:07:02.580
实际上是在串行isis中使用此功能的，并且对Linux敏感

00:07:02.580 --> 00:07:06.900
在基于拓扑的环境中运行的容器

00:07:06.900 --> 00:07:12.320
然后运行该代码，这

00:07:12.500 --> 00:07:17.010
这些主机还充当魔术事件发射器，可用于嵌入

00:07:17.010 --> 00:07:20.970
虚拟实例之间发生事件，因此设置一堆东西真的很容易

00:07:20.970 --> 00:07:27.000
起来，所以我在这里要做的是我将它跑掉，以便在另一台主机上监听事件

00:07:27.000 --> 00:07:30.000
因为你想先编排一些东西，而我不是想

00:07:30.000 --> 00:07:37.440
在这里连接到另一台主机，然后查看我是否从中获得响应

00:07:37.440 --> 00:07:42.479
在这里，我启动了另一个服务器，并创建了一个服务器，然后回复

00:07:42.479 --> 00:07:47.130
正确的例子非常简单，用这种方法做的很酷的事情是

00:07:47.130 --> 00:07:58.830
如果您有这样的服务器火力，您可以运行它，而我将

00:07:58.830 --> 00:08:02.610
作为正常的磁带测试运行它可以为您提供磁带输出，并且测试起来非常容易

00:08:02.610 --> 00:08:05.550
并展示它在幕后做很多事情的速度有多快

00:08:05.550 --> 00:08:09.510
就像生成Python转换JavaScript或Python设置虚拟

00:08:09.510 --> 00:08:15.780
网络，是的，就像疯了一样，就像在Python中编写8,000个全局变量一样

00:08:15.780 --> 00:08:22.680
而且一切都正常，所以真的很酷，还有很多额外的功能

00:08:22.680 --> 00:08:28.410
有趣的东西在这里类型学突然变得很容易

00:08:28.410 --> 00:08:31.200
因为你想测试一堆不同的病因

00:08:31.200 --> 00:08:34.409
曾经和未来的同龄人做任何事情，我认为这里的人会

00:08:34.409 --> 00:08:39.110
找出您所有疯狂的盒子都来自人们疯狂的拓扑，并且

00:08:39.110 --> 00:08:42.529
拓扑，因为这实际上是所有软件

00:08:42.529 --> 00:08:46.670
容易，因为它只是一个JavaScript函数，所以我在这里道歉

00:08:46.670 --> 00:08:50.330
基本的调用就好比进行切换来创建一堆主机并进行链接

00:08:50.330 --> 00:08:55.460
他们在一起，您通常可以做到这一点，就像我有另一个功能一样

00:08:55.460 --> 00:09:00.770
这里用来测试只是线性拓扑或串行的大量信号

00:09:00.770 --> 00:09:03.290
主机连接到主机的拓扑，主机连接到主机

00:09:03.290 --> 00:09:09.100
就像是圣诞节的链灯，但您可以用它来测试大量的东西，

00:09:09.100 --> 00:09:18.649
迷你网络最酷的是我们的模块是

00:09:18.649 --> 00:09:25.459
很棒的选择，例如当您将事物链接在一起时，您可以说很酷的事情

00:09:25.459 --> 00:09:30.410
就像我想在此端口上使用10 MB的上行链路，但我想拥有100 MB的上行链路

00:09:30.410 --> 00:09:33.470
毫秒延迟，实际上使我丢失了10％的数据包，因为我想看看

00:09:33.470 --> 00:09:37.670
我的手指在那里表现如何，您可以再次在软件中执行此操作，然后您就可以

00:09:37.670 --> 00:09:44.750
只是将其作为磁带测试运行，以作为我们开始使用的实际示例

00:09:44.750 --> 00:09:51.279
这是一吨在我正在进行的项目中，我们开始添加一堆

00:09:51.279 --> 00:09:55.820
集成测试，因此这是一个非常简单的示例

00:09:55.820 --> 00:10:01.220
这是一个集成测试，仅测试多播DNS，而实际上只是

00:10:01.220 --> 00:10:06.890
运行两个实例，他们尝试托管并尝试使用

00:10:06.890 --> 00:10:11.959
多播enos，在执行此测试后，我从字面上修复了20美元，因为

00:10:11.959 --> 00:10:15.529
您发现当您运行实际的网络时，事情并不会像您一样

00:10:15.529 --> 00:10:22.459
期望并像这样扔东西，所以真的很容易，这就是全部

00:10:22.459 --> 00:10:27.650
我想分享一下，如果您想尝试设置测试

00:10:27.650 --> 00:10:31.550
这是一个非常好的方法，主要缺点是它们仅适用于Linux，因此

00:10:31.550 --> 00:10:35.029
如果有人想帮忙以一美元的价格运行它，那就真的很酷

00:10:35.029 --> 00:10:39.940
容器之类的东西，所以我们可以在Mac上使用它，谢谢

00:10:39.940 --> 00:10:57.520
哦，是的，是的，它确实非常强大，因为它是其中之一

00:10:57.520 --> 00:10:59.890
那些Linux Fink真的很了解，因为有关MiniMed的最难的事情

00:10:59.890 --> 00:11:03.280
正在安装它，因为您必须克隆一个存储库并像四个一样调用

00:11:03.280 --> 00:11:06.070
不同的脚本，结果是github上的脚本不在我的标签下，而您

00:11:06.070 --> 00:11:09.550
知道，所以这就是为什么您知道一个黑暗的容器可以消除所有这些痛苦的原因

00:11:09.550 --> 00:11:13.030
所以我使用我只是使用系统将您的容器作为我的容器，但是您可以完全

00:11:13.030 --> 00:11:16.570
做到这一点，但实际上运行它也非常有用

00:11:16.570 --> 00:11:20.620
网络并独立运行它，以查看您如何看待多播的行为

00:11:20.620 --> 00:11:25.150
如果您没有刊登广告，则Linux上的DNS行为会大不相同

00:11:25.150 --> 00:11:33.340
是为什么我找到我所有的虫子的原因，是的，其他任何圣诞节都很酷，谢谢

00:11:33.340 --> 00:11:35.370
你

