WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:08.490
我在Moxie工作，现在我在ipfs上工作Giuseppe面对面，所以

00:00:08.490 --> 00:00:14.490
基本上，我会让您经历一些我一直在努力的事情，以及一些

00:00:14.490 --> 00:00:24.119
他们我已经设法完成了，所以拉取请求已经完成了Viktor我已经做了一些

00:00:24.119 --> 00:00:32.600
基本上来说，我想改进的东西就像首先

00:00:32.600 --> 00:00:45.629
业力测试和实际上的浏览器构建，所以基本上我希望能够

00:00:45.629 --> 00:00:51.210
做这样的事情，我不知道你是否能看到，所以我从这个开始

00:00:51.210 --> 00:00:58.879
问题解释了一些我们可以改进的东西，但是基本的东西是

00:00:58.879 --> 00:01:05.400
改善业力和浏览器构建，并尝试遵循这些规则，因此

00:01:05.400 --> 00:01:11.070
新命令将能够从Web Pack运行原始的CL眼睛，

00:01:11.070 --> 00:01:17.490
无论我们需要什么，也可以从业力中获得收益，因此我们基本上可以

00:01:17.490 --> 00:01:24.299
将我们想要的任何东西重定向到原始CLI，这基本上可以使我们

00:01:24.299 --> 00:01:29.909
做这样的事情，所以现在一切都在它的标志后面

00:01:29.909 --> 00:01:37.350
那一个-/ ek，这样就可以启用实验业力，其余的

00:01:37.350 --> 00:01:46.590
这些东西被重定向后，我不知道该怎么办

00:01:46.590 --> 00:01:54.470
就像直接使用业力CLI一样，因此在Travis或其他任何我们可以添加更多东西的地方

00:01:54.470 --> 00:02:05.299
满足我们的需求而无需更改实际代码

00:02:05.540 --> 00:02:09.649
是的，基本上只是重定向到Shell进程

00:02:09.649 --> 00:02:13.039
所以这个

00:02:14.349 --> 00:02:24.050
我现在可以在两个浏览器chrome和firefox上运行测试，现在主要

00:02:24.050 --> 00:02:31.519
事情实际上是我们有一个错误，所以这是正常现象，我们需要

00:02:31.519 --> 00:02:43.580
只需单击即可，它就在我们需要修复的直线上，因此我们可以执行此操作

00:02:43.580 --> 00:02:53.930
再次，它应该再次运行，然后完成，所以这是主要的

00:02:53.930 --> 00:03:00.650
目标，并且它仍然没有合并，但希望胜利者会拥有

00:03:00.650 --> 00:03:07.790
是时候来审查所有这一切并进行合并了，这将暂时落后于

00:03:07.790 --> 00:03:16.430
标记浏览器帐单也位于标记后面，但这应该很容易找出

00:03:16.430 --> 00:03:23.180
在执行此操作的过程中，我设法

00:03:23.180 --> 00:03:33.200
现在我就实现了这种情况，我分叉了ipfs并发布了一个包，所以

00:03:33.200 --> 00:03:37.880
我可以向您展示这是如何工作的，基本上现在就打开包装

00:03:37.880 --> 00:03:46.670
不知道您是否知道，但这就像CDF直接连接到NPM并通过

00:03:46.670 --> 00:03:53.299
这个API FSHD是我的叉子，所以如果您想做某种事情，我们可以做

00:03:53.299 --> 00:03:59.269
像Dem之类的项目或您可以执行的操作，它会直接重定向

00:03:59.269 --> 00:04:07.840
到浏览器包中，就像一个独立的浏览器包一样，

00:04:07.840 --> 00:04:15.650
所以基本上这个包裹是我为GES交付做的一样，所以我们可以

00:04:15.650 --> 00:04:26.290
可以做完全一样的操作，或者如果您愿意，可以直接使用直接链接

00:04:26.290 --> 00:04:34.520
另一个很酷的东西，对像Diogo这样的演示很有帮助

00:04:34.520 --> 00:04:44.150
呈现的是这个示例，我不知道您是否可以阅读URL，但这是

00:04:44.150 --> 00:04:52.190
实际与实际的人联系在一起，因此，如果我们在回购中更改内容，我们

00:04:52.190 --> 00:05:01.400
也可以更改此示例，任何想玩ipfs的人都可以

00:05:01.400 --> 00:05:12.050
将其链接到自述文件上或我们想要的任何地方，然后单击它们，然后打开此文件

00:05:12.050 --> 00:05:20.180
东西，如果他们改变了这把叉子，他们就可以玩了，

00:05:20.180 --> 00:05:25.789
使演示制作任何您想要的东西，所以这将是一个喜欢port的好工具

00:05:25.789 --> 00:05:33.710
我们的示例易于输入和使用我们的示例，因为有了这个

00:05:33.710 --> 00:05:41.389
我们甚至不需要克隆仓库，我们什么也不做，这是其中之一

00:05:41.389 --> 00:05:48.139
人们现在正在使用的主要Web编辑器已经相当完善了，您

00:05:48.139 --> 00:05:53.630
可以做很多事情，例如链接和实际运行测试等等

00:05:53.630 --> 00:05:59.120
对于想了解我们原因的新人来说，这可能是一个很好的切入点

00:05:59.120 --> 00:06:06.639
PFS起作用以及我们所拥有的其他涟漪，而且启动起来非常容易

00:06:06.639 --> 00:06:12.260
是的，所以这是另一个例子，但基本上是一样的

00:06:12.260 --> 00:06:16.940
不同的Web编辑器，但是此编辑器不允许您直接连接到

00:06:16.940 --> 00:06:29.060
到github仓库，如您所见，这直接涉及到一切

00:06:29.060 --> 00:06:36.520
在这里，当我向您展示作品时，URL可能就是这样，并且

00:06:36.770 --> 00:06:50.020
像平时一样，您会在JavaScript文件中做任何您想做的事情，所以

00:06:50.020 --> 00:06:54.879
我想告诉你的另一件事是

00:06:55.240 --> 00:07:02.389
所以基本上那些其他人，我们只要把这个

00:07:02.389 --> 00:07:09.620
这里的东西是解包和Jas交付者的特定路径，

00:07:09.620 --> 00:07:19.400
自动工作，不管是捆绑包还是捆绑包，

00:07:19.400 --> 00:07:25.849
巴特勒的我们现在处于一种奇怪的情况，因为如果我想

00:07:25.849 --> 00:07:31.330
我有这个男孩让我跑步

00:07:43.090 --> 00:07:50.389
如果您想构建某些东西，我们喜欢BFS，就像看到的是2兆字节一样

00:07:50.389 --> 00:07:59.060
如果您直接使用捆绑软件，则将其全部捆绑在一起

00:07:59.060 --> 00:08:05.419
文件，因此这不是最正确的做法，因为

00:08:05.419 --> 00:08:11.930
我们使用的很多东西，例如水槽，低睫毛和其他东西

00:08:11.930 --> 00:08:16.160
实际上可能正在您的捆绑软件中的应用程序中使用，并且这可以

00:08:16.160 --> 00:08:25.130
我所支持的只是Web Pack，而不是在您的依赖项中复制

00:08:25.130 --> 00:08:33.770
捆绑在一起，所以这现在有点奇怪，因为大多数示例只是假设我们

00:08:33.770 --> 00:08:37.460
有一个像我在其他示例和其他示例上向您展示的捆绑软件

00:08:37.460 --> 00:08:43.810
使用独立的捆绑包，这里的所有内容都在一个文件中，捆绑包仅

00:08:43.810 --> 00:08:49.570
将文件与应用程序中其他文件串联在一起，但是

00:08:49.570 --> 00:08:57.380
实际上，最好的方法是运行您的BA（如您的build命令）

00:08:57.380 --> 00:09:03.770
通过我们的源代码，然后通过Web Pack以及任何您喜欢的汇总或

00:09:03.770 --> 00:09:13.550
我们将尝试优化的所有内容，您的横幅会小很多，因此

00:09:13.550 --> 00:09:19.880
事情有点奇怪，如何设置它，这样更容易

00:09:19.880 --> 00:09:28.880
对于任何一开始尝试使用ipfs的人，因为您需要的我们

00:09:28.880 --> 00:09:33.860
我们可以使用它的包装上有很多钥匙，我们有模块，我们是

00:09:33.860 --> 00:09:41.589
浏览器，当我们有了主要的东西时，所有这些东西都被捆绑器假定并使用

00:09:41.589 --> 00:09:49.339
根据一些规则，但是要简单起见，我们需要有一些很好的默认值

00:09:49.339 --> 00:09:56.120
在这里，人们可以更轻松地使用他们的应用程序，但是正确

00:09:56.120 --> 00:09:59.610
现在我们没有很多选择

00:09:59.610 --> 00:10:06.389
真正只需要拥有main，直到人们直接进入main并让网络

00:10:06.389 --> 00:10:15.420
浏览器会做他们的事情，不再关心它，但是我不需要

00:10:15.420 --> 00:10:36.899
另一个让我现在就打开一个人的样板

00:10:36.899 --> 00:10:44.579
使用它是反应的东西，所以基本上我们要么告诉人们去做

00:10:44.579 --> 00:10:52.019
并直接转到捆绑包，这很容易，因为我们无法

00:10:52.019 --> 00:10:57.660
在包上使用类似浏览器的键，如果可以使用，请指向此键

00:10:57.660 --> 00:11:04.079
那将是我们将放在那里，人们不需要在他们的身上做这些东西

00:11:04.079 --> 00:11:12.089
自己的配置，但现在我认为这是最明智的方法

00:11:12.089 --> 00:11:17.699
向人们解释一些东西，例如，如果您想使用捆绑销售商品，不在乎如何

00:11:17.699 --> 00:11:23.459
东西捆绑在一起，您只需在您的配置中进行即可，如果

00:11:23.459 --> 00:11:28.019
您想真正地在您的运行包中优化您的应用程序

00:11:28.019 --> 00:11:36.929
完全通过ipfs以及相关性来运行Bubble和Web Pack

00:11:36.929 --> 00:11:43.139
实际上，下一版本的create react create to care top会做到这一点

00:11:43.139 --> 00:11:49.350
因为这就是社区发展的方式，就像捆绑和运行圣经

00:11:49.350 --> 00:11:53.399
通过所有依赖项，因此您可以拥有最优化的捆绑包

00:11:53.399 --> 00:11:55.759
有

00:11:57.130 --> 00:12:06.350
但是您仍然需要做一些工作来优化我们自己的捆绑包，因此

00:12:06.350 --> 00:12:14.660
很大，您可以看到这种依赖性完全不存在于博世，而我们所有

00:12:14.660 --> 00:12:20.440
最后一个软件包到处都是，我们有几个新软件包-

00:12:20.440 --> 00:12:27.080
在这里重复，我们应该尝试改善这一点，其他人也可以

00:12:27.080 --> 00:12:33.980
在此之上的应用程序也可以从中受益，我的体积更小

00:12:33.980 --> 00:12:42.230
捆绑和更快的应用程序，所以这实际上是我真正要做的事情之一

00:12:42.230 --> 00:12:48.380
关心优化事物，以便其他人也可以从中受益，还有我

00:12:48.380 --> 00:12:55.670
ipfs上的主要测试都与浏览器相关，因此实际上

00:12:55.670 --> 00:13:04.790
对我当前的工作很重要，这就是我一直在努力的事情，仅此而已

00:13:04.790 --> 00:13:12.650
[鼓掌]还有一件事实际上是

00:13:12.650 --> 00:13:23.170
重要，因此今年在任何回购中，当您开始使用圣经来

00:13:23.170 --> 00:13:31.580
运行我们所有的代码或转换我们的代码，我们可以只希望添加浏览器列表

00:13:31.580 --> 00:13:37.420
你们中的一些人知道这可以工作，您可以定义要支持的浏览器，

00:13:37.420 --> 00:13:44.090
我们目前的情况是我们的实验配置，我们现在将了解

00:13:44.090 --> 00:13:49.090
您只需要将此内容放在包JSON上的仓库中即可

00:13:49.090 --> 00:13:59.390
浏览器中最少的RC文件或其他文件，我们的aja CLI会在何时启动该文件

00:13:59.390 --> 00:14:04.280
您进行捆绑交易时，它将遵循这些规则，并且仅支持和填充

00:14:04.280 --> 00:14:09.530
您在那里拥有的任何浏览器浏览器，因此您可以具有不同的配置

00:14:09.530 --> 00:14:13.040
像贝尔一样，因此您可以运行测试

00:14:13.040 --> 00:14:17.050
您可以更快地拥有不同的配置并在生产时

00:14:17.050 --> 00:14:23.540
有人发布，它将使用底部配置，您可以放

00:14:23.540 --> 00:14:30.470
您可以在仓库中的任何位置查看整个圣经

00:14:30.470 --> 00:14:36.080
在您的存储库上以及LRC上方放置LRC的配置

00:14:36.080 --> 00:14:43.100
我们可以使用大多数人使用的亚洲文件来定制配置

00:14:43.100 --> 00:14:47.810
已经拥有了，因此一切都可以一起工作，可以对其进行自定义

00:14:47.810 --> 00:14:56.839
相当灵活，就这样[鼓掌]

