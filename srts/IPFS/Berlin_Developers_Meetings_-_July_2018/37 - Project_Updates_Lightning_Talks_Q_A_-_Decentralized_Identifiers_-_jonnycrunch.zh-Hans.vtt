WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.690 --> 00:00:08.160
所以我是强尼紧缩，所以我要谈论分散的标识符

00:00:08.160 --> 00:00:11.280
我们昨天谈到了这一点，所以我制定了规范

00:00:11.280 --> 00:00:17.340
IP FS上的D ID规范（我称之为IP ID）

00:00:17.340 --> 00:00:23.400
在超级账本中使用D中的项目挫败，这是由捐赠的代码

00:00:23.400 --> 00:00:28.590
超级账本的主权基础，在我浏览的黑客马拉松中

00:00:28.590 --> 00:00:32.070
实现他们想要完成的代码是一个键值对，使用

00:00:32.070 --> 00:00:34.739
分布式哈希表，我说等等，这看起来很熟悉，这看起来

00:00:34.739 --> 00:00:37.350
像AI TFS，所以在一个周末，我一起砍了一些东西

00:00:37.350 --> 00:00:42.090
因此，自我解决方案的数字身份来自重新启动的信任网络，这是一个

00:00:42.090 --> 00:00:48.719
全局标识符，基本上是urn统一资源名称，例如UID或

00:00:48.719 --> 00:00:53.190
命名空间标识符，所以我构建了一个类似的标识符

00:00:53.190 --> 00:00:56.910
昨天的主权者或方法的特定标识符以及那里的方法

00:00:56.910 --> 00:01:01.350
是主权国家，所以我用一个名为IP ID的名称建立了一个特定的名称

00:01:01.350 --> 00:01:08.460
标识符，它是解析为IP NS的公钥的哈希

00:01:08.460 --> 00:01:13.860
实际解析为ipfs中存储的JSON文档或

00:01:13.860 --> 00:01:22.470
现在我实际上正在存储IP LD资源，所以我基本上给你

00:01:22.470 --> 00:01:27.690
这是JSON，这就是我们正在使用的diff

00:01:27.690 --> 00:01:33.300
分散的实体基金会和w3c，这是关于Jason的内容

00:01:33.300 --> 00:01:38.880
它们实际上是JSON的结构吗，实际上如何喜欢创建

00:01:38.880 --> 00:01:46.680
这些属性旋转键的方式会更新键，因此仍然存在

00:01:46.680 --> 00:01:49.530
从W3C工作中获得大量收益

00:01:49.530 --> 00:01:53.910
但是您基本上知道ipfs dag让你们知道该怎么做

00:01:53.910 --> 00:02:04.710
这个，然后你显然知道IDF的迟疑决心，让我去这里，所以我

00:02:04.710 --> 00:02:08.970
在这种情况下发布，我将其发布到IDI二五五一九密钥

00:02:08.970 --> 00:02:14.370
谢谢杰里米（Jeremy）的支持，并从根本上推动了IPO

00:02:14.370 --> 00:02:21.330
劳工处的资源是在这种情况下，欧共体确实是二五五一九和

00:02:21.330 --> 00:02:26.190
然后我构建了一些go代码来解决它，因此它将实际获取它

00:02:26.190 --> 00:02:31.170
真的谢谢凯尔（Kyle）确实解决了这种情况，以防万一

00:02:31.170 --> 00:02:34.620
我仍在使用椭圆曲线，因此实际上需要更长的时间

00:02:34.620 --> 00:02:39.480
而不是DHT中的解决方案，但是在这种情况下，它应该回来

00:02:39.480 --> 00:02:49.160
嗯，现在每秒钟都会返回带有签名的QR码的代码

00:02:49.160 --> 00:02:57.540
快来凯尔，别让我失望，我不会等待，所以让我走吧

00:02:57.540 --> 00:03:03.780
回到演示文稿，所以这就像通过

00:03:03.780 --> 00:03:08.340
分散的身份基础，所以其他例子包括主权瓦里斯

00:03:08.340 --> 00:03:13.890
实际上是由以太坊核心团队创建的一个穷人堆叠的Fabian

00:03:13.890 --> 00:03:24.450
 ERC 725有IP ID，还有其他几个

00:03:24.450 --> 00:03:28.109
此外，我们正在研究一种称为“可验证的声明”的面纱文件声明，

00:03:28.109 --> 00:03:34.260
基本上是他们实际上从椭圆曲线的签名代码的数据包

00:03:34.260 --> 00:03:40.230
主要要求保护的密钥签名，因此在这种情况下，您好

00:03:40.230 --> 00:03:46.889
EHR的医疗保健世界是疫苗接种登记处，所以我建立了一个

00:03:46.889 --> 00:03:54.450
使用D ID和可验证的声明的疫苗接种注册表，这是证明

00:03:54.450 --> 00:04:01.730
您知道由谁签发的疫苗接种凭证，该凭证由特定的密钥签名，并且

00:04:01.730 --> 00:04:05.910
在这种情况下，疫苗接种代码是CDC的一二三

00:04:05.910 --> 00:04:12.720
流感疫苗的疫苗接种代码，我也在建立像样的证明，所以如果

00:04:12.720 --> 00:04:20.060
您想要一个时间戳并将其锚定到区块链中，他们实际上可以转到

00:04:20.060 --> 00:04:25.800
聪明的合同，并实际上检查这确实是实际签署的，

00:04:25.800 --> 00:04:30.980
实际上是作为锚放置的，所以尼克的主要步骤是

00:04:30.980 --> 00:04:36.330
完成这项工作，然后创建服务端点，所以我们聊了一点

00:04:36.330 --> 00:04:43.530
有点没做，所以这是分开的，然后将D ID解析为

00:04:43.530 --> 00:04:50.310
文档，在这种情况下，IP LD实际上是服务端点，因此

00:04:50.310 --> 00:04:55.920
如果我想与au port或其他D ID规范进行通信，我需要

00:04:55.920 --> 00:04:59.580
实际上需要做diffie-hellman密钥交换的服务

00:04:59.580 --> 00:05:04.080
有一些资源，我正在理想地使用Lib p2p，所以这是我尚未构建的东西

00:05:04.080 --> 00:05:08.550
还没有出来，我认为实际上还需要做更多的工作，我觉得这很抓紧

00:05:08.550 --> 00:05:17.580
赛格威（Segway）弄清楚签约的签名是一件很棒的事。

00:05:17.580 --> 00:05:23.520
 IP LD的破坏者，也许还有赫克托（Hector），我们谈到了一些

00:05:23.520 --> 00:05:26.130
昨天是您知道我们要签署什么，您实际上签署了字节码吗

00:05:26.130 --> 00:05:29.610
您是否实际签署了JSON，所以实际上我们确保我们有一个

00:05:29.610 --> 00:05:35.220
确定性的解决方法，所以我将接受并提出问题，然后我

00:05:35.220 --> 00:05:40.410
真的很想得到反馈，这完全是我当然的做法，

00:05:40.410 --> 00:05:43.380
在一起只是因为我很沮丧，也许这不是

00:05:43.380 --> 00:05:47.960
最佳方法SOUTHLA一些反馈

00:05:52.260 --> 00:05:57.990
疯狂的想法II认为，这仅仅是解决这个问题的真正简单的方法

00:05:57.990 --> 00:06:03.480
自主权，因为这是我的问题，就像Microsoft Varys或或

00:06:03.480 --> 00:06:08.730
主权是，您仍然报告沙沙作响的某些第三方或中介机构

00:06:08.730 --> 00:06:11.790
我真的很想回到蒂姆·伯纳斯·李（Tim berners-lee）模型

00:06:11.790 --> 00:06:16.890
我注意到的是我的桌子，我在互联网上的纸条也一样有效

00:06:16.890 --> 00:06:21.350
或在这种情况下，以其他任何人的身份

00:06:28.130 --> 00:06:33.180
您如何允许与可能不支持该功能的人一起进行改装

00:06:33.180 --> 00:06:37.020
如果您有一个较旧的系统正在尝试与之集成，则该应用程序

00:06:37.020 --> 00:06:44.100
这样，现在通用解析器的工作方式基本上就是

00:06:44.100 --> 00:06:49.200
网关，所以实际上这只是一个实际起作用的协议HTTP

00:06:49.200 --> 00:06:54.950
外面只有一行代码可供Marcus实施，而解析程序也是如此

00:06:54.950 --> 00:06:59.910
人们基本上不需要运行像EFS节点这样的整体，而UD则无济于事

00:06:59.910 --> 00:07:03.870
发布它，这就是如何以实际方式包装代码的方式

00:07:03.870 --> 00:07:12.290
可以迁移到更旧的方式

