WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.439 --> 00:00:07.470
所以我们很懒，做了一张海报，我们也有一个地下室

00:00:07.470 --> 00:00:11.639
如果我们真的好好地把你放进去哦

00:00:11.639 --> 00:00:22.560
甜蜜的，所以我们中间有视觉，然后我们也将它们包含在其中

00:00:22.560 --> 00:00:29.340
文字，所以我想我很抱歉在中间的中间可见缩放

00:00:29.340 --> 00:00:33.030
在时间的前面，他是一条单独的屏幕流哦，是的，是的，所有的

00:00:33.030 --> 00:00:37.680
对，所以真的，我想我们谈到了DHT的当前状态，

00:00:37.680 --> 00:00:42.059
我当然众所周知的例子是IP NS

00:00:42.059 --> 00:00:48.300
发布和解决的问题以及谁是DHT以及如何做的问题

00:00:48.300 --> 00:00:53.489
您可以扩展，因此我们讨论了消息传递协议以及这个想法

00:00:53.489 --> 00:00:58.980
现在像使用对等垫一样扩展它，您可能会扩展到

00:00:58.980 --> 00:01:02.940
大约三十或四十个也许几百个用户，所以问题也是

00:01:02.940 --> 00:01:07.770
我认为有多个联系，所以是的，实际上您受到了

00:01:07.770 --> 00:01:12.840
连接连接，这就是我们正在与同行讨论的内容，我认为是

00:01:12.840 --> 00:01:18.840
您现在基本上就知道他的问题是他们的局限性

00:01:18.840 --> 00:01:24.450
大约三十个同龄人，但是这个主意基本上是采取状态并能够

00:01:24.450 --> 00:01:30.420
将状态报告为IP LD对象并对其进行签名或集成

00:01:30.420 --> 00:01:36.390
并创建解决冲突的建议状态，然后

00:01:36.390 --> 00:01:41.159
然后就任何冲突向他们汇报，他们实际上也是

00:01:41.159 --> 00:01:46.259
进行日历哈希，基本上，如果这是一个分离的节点，而IPL D是

00:01:46.259 --> 00:01:51.540
一个旧的状态正在使用它在这个时间点实际上是如何注入的，并且

00:01:51.540 --> 00:01:56.939
然后是一个投票机制来做到这一点，那么某些问题肯定是

00:01:56.939 --> 00:02:02.310
现在可以淹没DHT节点，这与DHT的成员资格有关

00:02:02.310 --> 00:02:07.770
基本上IP NS是如何从Kyle进行扩展的，这在很大程度上

00:02:07.770 --> 00:02:12.690
一堆额外的协议实验室节点在云中，但问题就像如何

00:02:12.690 --> 00:02:16.560
规模达到200万，所以如果他实际上是协议实验室

00:02:16.560 --> 00:02:22.320
旋转它，但是为什么我会在协议实验室上信任开放的集市dhts，所以

00:02:22.320 --> 00:02:25.590
成为可信赖的超级节点的想法实际上是如何产生的，您实际上如何

00:02:25.590 --> 00:02:29.100
好好管理一个可信任的超级节点，这是我可以验证的说法

00:02:29.100 --> 00:02:34.680
知道，以便L，所以问题一闪而过，人群涌入并尝试填充

00:02:34.680 --> 00:02:40.880
进入DHT并从根本上了解如何自我修复您的想法

00:02:40.880 --> 00:02:46.680
连续向DHT贡献资源，直到DHT实际传播并成为

00:02:46.680 --> 00:02:50.340
能够以某种方式可视化该网络，以便您可以实际

00:02:50.340 --> 00:02:53.760
获得一些反馈或网络状态，作为其自我修复和

00:02:53.760 --> 00:02:59.280
自动缩小，因此我们提出的一些解决方案是

00:02:59.280 --> 00:03:03.959
工作证明，即当您将内容推送到DHT时，需要您解决一些问题

00:03:03.959 --> 00:03:08.490
密码功能与信号协调

00:03:08.490 --> 00:03:13.500
所以这是消息的八卦，所以基本上我是在谈论八卦

00:03:13.500 --> 00:03:17.910
基本上再次谈论网络作为IP LD对象的状态

00:03:17.910 --> 00:03:22.320
概念，请参阅Rd T并进行签名和闲聊，实际上就像报告

00:03:22.320 --> 00:03:28.560
返回有关该子节点的八卦，然后将IP LD用于

00:03:28.560 --> 00:03:38.730
状态信誉系统，基本上，如果此代理未知并且正在尝试

00:03:38.730 --> 00:03:41.489
为一大堆新同伴签约

00:03:41.489 --> 00:03:45.120
试图很好地填充系统，这是一个没有足够时间的新节点

00:03:45.120 --> 00:03:51.150
在系统上，这是一个值得信赖的网络可视化，我们

00:03:51.150 --> 00:03:54.330
谈论了网络食谱，尽管那是关于

00:03:54.330 --> 00:03:59.970
是的，所以基本概念是当你最终有一对像

00:03:59.970 --> 00:04:03.660
这些网状网络嘿，这是一个已建立的网络，他们拥有我们

00:04:03.660 --> 00:04:10.470
想要做的就是根据这种情况提供食谱

00:04:10.470 --> 00:04:14.760
网络将进入，以便您可以具有不同的配置方式

00:04:14.760 --> 00:04:20.669
这些子网络想要运行，以便可以进行控制

00:04:20.669 --> 00:04:25.940
它是如何缩放的，所以如果您有某种类型的网格环并且您有

00:04:25.940 --> 00:04:30.770
这种网络拓扑结构被越来越多的书呆子共享

00:04:30.770 --> 00:04:35.930
加盟和需求有所不同，我们可以说哦，您知道我们需要什么

00:04:35.930 --> 00:04:39.890
我们需要扩大另一个DHT，我们要去我们值得信赖的公司之一

00:04:39.890 --> 00:04:44.870
节点告诉它变成DHT，然后我们可以观察网格的种类

00:04:44.870 --> 00:04:50.090
网络在过渡过程中发生转变，然后随着时间的流逝，技能会逐渐降低

00:04:50.090 --> 00:04:53.300
可以改回原来的状态，以便我们与网络讨论的一些内容

00:04:53.300 --> 00:04:57.890
可视化和仿真实际上可以设置那些配方运行

00:04:57.890 --> 00:05:00.190
模拟并观察网格的变化

00:05:00.190 --> 00:05:06.920
是的，这基本上是我的问题，因为Brian是Brendan是

00:05:06.920 --> 00:05:10.940
网络拓扑数据的模型，那么您实际上如何

00:05:10.940 --> 00:05:13.490
代表这一点，并确保他们实际上是我们所处的网络

00:05:13.490 --> 00:05:16.700
试图代表，这是实际发生冲突的提议日期

00:05:16.700 --> 00:05:21.730
分辨率以及在什么时间点，最后是的，我想看看我们的DTS

00:05:21.730 --> 00:05:27.680
重新平衡一下，所以我认为失败了，我们也有一些不同的事情

00:05:27.680 --> 00:05:32.480
还有其他需要插入的内容，尽管我有一段有趣的对话

00:05:32.480 --> 00:05:43.250
认为我们可以涵盖我们对什么候选人不太了解的所有内容

00:05:43.250 --> 00:05:45.830
解决方案，就像我们可以先实施的方案一样，

00:05:45.830 --> 00:05:50.780
缺点或问题之一全都归结为给出更好的基元

00:05:50.780 --> 00:05:56.560
让应用程序喜欢点对点提示他们需要什么，以便何时

00:05:56.560 --> 00:06:01.520
希望当我们谈论会员管理时，这真的很好

00:06:01.520 --> 00:06:06.200
就像我是一条同伴之路，我真的很感兴趣，所有与我们交谈的节点

00:06:06.200 --> 00:06:10.419
与我在同一条路径上，为什么我要连接到网络的其余部分

00:06:10.419 --> 00:06:16.070
因此，如果某个东西可以通过p2p API公开，

00:06:16.070 --> 00:06:20.510
给人们一种将信息提供给同龄人的方法

00:06:20.510 --> 00:06:23.600
点对点可以做出更好的判断，另一件事确实是

00:06:23.600 --> 00:06:28.160
协调协议，有点像很便宜的协议

00:06:28.160 --> 00:06:31.520
就像便签告诉对方，嘿，这就像我从

00:06:31.520 --> 00:06:35.840
网络似乎有很多负载，或者好像没有很多负载

00:06:35.840 --> 00:06:39.290
像这样的人当然可以受到攻击，就像有人可以撒谎，但这是

00:06:39.290 --> 00:06:44.630
这就像帮助笔记做出更好的决定（如果某些笔记正在讲述）

00:06:44.630 --> 00:06:47.960
他们就像哦，我看到三百万张钞票汇合起来，就像我们应该平静下来一样

00:06:47.960 --> 00:06:52.070
减少，就像增加我们的加密难题的大小，然后像其他十个一样

00:06:52.070 --> 00:06:55.550
便笺告诉您哦，我只是看到他们没有加入，所以您可以降低

00:06:55.550 --> 00:07:01.970
该音符的声誉，因此您可以使用所有这些音符来做得更好

00:07:01.970 --> 00:07:06.500
决定，最后像很多这样的网络，你真的不是

00:07:06.500 --> 00:07:10.460
需要超过一百到两百个连接，而这已经

00:07:10.460 --> 00:07:15.350
就像您可以做的一样，您只需访问几乎整个网络

00:07:15.350 --> 00:07:19.430
例如100到200，在某些运行时（例如浏览器）中，我们甚至没有

00:07:19.430 --> 00:07:23.030
想要拥有10个或20个以上的连接，否则我们可能会杀死

00:07:23.030 --> 00:07:28.190
所以是的，就像我猜我就像

00:07:28.190 --> 00:07:40.670
重复一些问题，我的问题使我想起了很多珊瑚，这是

00:07:40.670 --> 00:07:46.030
您正在看的很棒，我认为我认为整个领域

00:07:46.030 --> 00:07:50.390
旨在探讨这些自组织集群的协议

00:07:50.390 --> 00:07:53.870
应该做的一部分是路由，珊瑚就是珊瑚，但是有一个

00:07:53.870 --> 00:07:57.710
其他可能发生的事情我想你就是你

00:07:57.710 --> 00:08:04.030
开始发现我会担心很多这样的系统

00:08:04.030 --> 00:08:09.350
用来对这些系统如何增长合并拆分得到一个非常简单的解释

00:08:09.350 --> 00:08:16.190
回来，在房子里，当你发货时，我能很稳定吗

00:08:16.190 --> 00:08:22.370
相同的协议就可以像数百万个节点一样，因此我们节省了诸如减少

00:08:22.370 --> 00:08:27.040
它的复杂性很重要，因此我认为提出非常简单

00:08:27.040 --> 00:08:31.760
这些群集或这些子网形成的方式以及它们的工作方式

00:08:31.760 --> 00:08:39.099
有所不同很重要，但更多的是设计思考

00:08:39.099 --> 00:08:44.150
好吧，这是多个小组厌恶的事情之一，我们谈论了很多

00:08:44.150 --> 00:08:49.250
关于玩乐，我们真正想要拥有的一件事，就是多人

00:08:49.250 --> 00:08:53.750
对此感到很兴奋，只是参加一场比赛，比如让我们创建一个

00:08:53.750 --> 00:08:57.050
和许多人建立了不同的拓扑，我知道它是随之而来的

00:08:57.050 --> 00:09:00.980
所有这些用例，例如我们正在流式传输，论坛，博客和社交网络

00:09:00.980 --> 00:09:06.230
网络，就像人们疯狂的事情一样，让我们​​发起一个巨大的竞赛吧

00:09:06.230 --> 00:09:10.550
可以亲自在线可以知道研究社区

00:09:10.550 --> 00:09:12.710
黑客社区对等公社

00:09:12.710 --> 00:09:16.010
就像尝试不同的事情，并尝试找到最佳策略，以便我们

00:09:16.010 --> 00:09:19.910
然后可以像我们开始说的话一样拥有正确的食谱哦

00:09:19.910 --> 00:09:24.500
也许我们永远找不到一个千篇一律的解决方案，除非我们

00:09:24.500 --> 00:09:32.120
像所有这一切一样，但我们绝对可以提出多种解决方案，

00:09:32.120 --> 00:09:34.850
对于某些用例来说真的很不错，然后人们就可以从

00:09:34.850 --> 00:09:39.410
食谱书和应用的事情是，我们只会知道哪个是最好的食谱

00:09:39.410 --> 00:09:46.160
一旦我们让它动起来，让许多人品尝它，是的，就像我们应该

00:09:46.160 --> 00:09:49.610
像今年这样很快就要参加比赛了

00:09:49.610 --> 00:09:52.880
应该是其中一个目标，我认为这是黑客马拉松的目标

00:09:52.880 --> 00:09:59.540
在下一次会议上做了，是的，三个月后，是的，所以

00:09:59.540 --> 00:10:04.370
我们还有时间再问一个问题，我看到一个煤在举起他的手，哦，是的

00:10:04.370 --> 00:10:08.630
呼应关于简单之类的观点，我认为我已经

00:10:08.630 --> 00:10:12.680
就像已经获得了一些反馈一样

00:10:12.680 --> 00:10:17.030
像是谁的DHT问题，例如，是我应该运行自己的独立网络，还是

00:10:17.030 --> 00:10:21.080
有一个全球网络，我知道我们倾向于像单个全球网络一样专注于

00:10:21.080 --> 00:10:26.120
网络，为此，我们确实需要一种拒绝的方式

00:10:26.120 --> 00:10:29.960
最初喜欢参与所有事情，然后慢慢地让事物

00:10:29.960 --> 00:10:34.520
你不在乎超时，喜欢离开你的权限，感觉就像

00:10:34.520 --> 00:10:38.180
像这样的东西，而不是像是超级分析什么

00:10:38.180 --> 00:10:41.660
您参与并喜欢订阅管理，它可以使您获得超级

00:10:41.660 --> 00:10:45.170
复杂，是的，就像是有价值的洞察力来了

00:10:45.170 --> 00:10:50.090
马上转发我在想的事情，我们不是立即，而是

00:10:50.090 --> 00:10:56.270
在整个对话过程中，有一个非常有趣的并行策略

00:10:56.270 --> 00:10:58.910
对于建筑来说，其中一些东西会更安全

00:10:58.910 --> 00:11:06.020
可能要做一些像DHD的概率检查之类的事情，所以您

00:11:06.020 --> 00:11:08.780
旋转一千个鼻子，我们将它们分布成环，然后

00:11:08.780 --> 00:11:13.790
开始这类信誉系统系统设计的想法类型

00:11:13.790 --> 00:11:18.080
可以测试一些东西，并开始尝试找出是否有一些否定的地方

00:11:18.080 --> 00:11:23.780
行为异常，然后再加上您知道阻止音符加入

00:11:23.780 --> 00:11:29.630
特别是可以很好地结合在一起，就像使用加密难题的想法

00:11:29.630 --> 00:11:35.660
延迟和进入博士学位很容易被颠覆，你知道吗

00:11:35.660 --> 00:11:38.750
具有某种自动缩放功能，就像您注意到的那样，有很多人试图这样做

00:11:38.750 --> 00:11:42.020
持续的攻击，这只会给参与者带来一个问题，只是延迟了

00:11:42.020 --> 00:11:45.440
他们的加入，然后很长一段时间诚实地跟你一起行动

00:11:45.440 --> 00:11:49.190
时间，然后在一瞬间攻击网络，但这可能是

00:11:49.190 --> 00:11:53.720
避免使用信誉系统，信誉系统和对等系统

00:11:53.720 --> 00:11:59.450
真的很好，但是没有人真正建立一个可以很好地工作的模型，

00:11:59.450 --> 00:12:03.350
一堆类似的问题，我认为torrent和Tracker会像Tracker一样信任

00:12:03.350 --> 00:12:08.090
点对点系统以及跟踪器信誉系统和维多利亚式系统之一

00:12:08.090 --> 00:12:12.350
像比率，这是很好工作的一个很好的例子，但是有

00:12:12.350 --> 00:12:16.970
与

00:12:16.970 --> 00:12:20.480
人们尝试过这种东西的次数，但这可能效果很好

00:12:20.480 --> 00:12:24.950
一般而言，安全就是其中之一，就像您只需要发现

00:12:24.950 --> 00:12:28.910
攻击者曾经喜欢将其从网络中删除，所以它是

00:12:28.910 --> 00:12:34.400
加入网络的成本很高，那么信誉系统就可以很好地工作

00:12:34.400 --> 00:12:41.810
是的，其他任何人都有随机的想法，所以我认为只是建立在

00:12:41.810 --> 00:12:45.620
信誉系统我认为我的身份问题和能力系统

00:12:45.620 --> 00:12:49.760
认为D ID规范实际上正在支持，并且这些日子还很早

00:12:49.760 --> 00:12:54.410
用于创建规范，但基本上是这样的想法，我有一个

00:12:54.410 --> 00:12:59.570
身份，并且我有一些受我的身份控制的节点

00:12:59.570 --> 00:13:04.370
共享对等点，即使该节点不受信任，我也受信任，因此

00:13:04.370 --> 00:13:08.420
你可以绑在短暂的节点上，实际上可以扩展回我

00:13:08.420 --> 00:13:16.760
这些是来源，所以我认为是轮换身份会员

00:13:16.760 --> 00:13:25.410
那里的东西我还是很喜欢dhts，以及如何

00:13:25.410 --> 00:13:31.380
平衡负载，但我认为我也认为结构化

00:13:31.380 --> 00:13:34.830
协议实际上是上下文，我认为Stephen提到的是

00:13:34.830 --> 00:13:38.640
对我来说这很有意义，所以我想我实际上在想的另一件事

00:13:38.640 --> 00:13:44.399
关于声誉系统的代币经济学是如何做到的？

00:13:44.399 --> 00:13:48.630
就像你知道它不一定是单独的一样，但我认为实际上

00:13:48.630 --> 00:13:55.560
如何使其距离消散是的，是的，我喜欢极端的微观思想，但是

00:13:55.560 --> 00:13:59.640
就溪流而言，我觉得超级便宜

00:13:59.640 --> 00:14:03.690
就协议设计和保持而言，临时流真的很棒

00:14:03.690 --> 00:14:10.200
复杂性下降，所以我去斯蒂芬去去每个人都去让我们看看

00:14:10.200 --> 00:14:18.089
出来，因为是的，我无法想象在

00:14:18.089 --> 00:14:29.700
像流水线一样，却没有引入如此庞大的复杂性，所以我觉得

00:14:29.700 --> 00:14:33.810
我的很多想法都被其他人代表在这里，所以如果我很多余的话

00:14:33.810 --> 00:14:38.339
告诉我停下来，但我绝对想带的是

00:14:38.339 --> 00:14:42.600
在这种声誉系统上，确保我们不

00:14:42.600 --> 00:14:46.470
泄漏有关使用网络的用户的重要信息，我们

00:14:46.470 --> 00:14:50.040
通常认为信誉系统就像是解决所有问题的锤子

00:14:50.040 --> 00:14:54.570
他们确实解决了很多问题，但同时也意味着它们像状态一样，对，我

00:14:54.570 --> 00:14:57.720
随着时间的流逝获得诸如可以开始分析的事物之类的事物

00:14:57.720 --> 00:15:01.620
只是观察模式并观察该身份在何处有效

00:15:01.620 --> 00:15:07.020
在哪里等，您需要找到其他机制来享有声誉，但是

00:15:07.020 --> 00:15:11.250
我将单击同一用户，这很容易，对此有一些有趣的研究

00:15:11.250 --> 00:15:16.589
有一篇关于非代表的论文，基本上是点对点匿名

00:15:16.589 --> 00:15:20.160
声誉系统我还没有真正探索构建的机会

00:15:20.160 --> 00:15:26.209
深入，但是就像很多人一样，伟大的人们谈论它，

00:15:26.209 --> 00:15:33.060
其他事物，例如仅用于关键旋转的结构，以及类似的想法

00:15:33.060 --> 00:15:38.130
就像双棘轮算法一样，就像在

00:15:38.130 --> 00:15:44.130
不仅是同行的一种加入方式，而且实际上是穿戴设备加入您或

00:15:44.130 --> 00:15:50.310
其他同伴则喜欢，如果我有一群人，并且我在聊天室中聊天

00:15:50.310 --> 00:15:55.500
在我的桌面上，我想让手机加入那个房间，所以我可以做点什么

00:15:55.500 --> 00:16:00.000
就像II通知所有人我正在加入设备一样，我证明

00:16:00.000 --> 00:16:04.800
设备是我的，但只是要确保没有恶意实体在尝试

00:16:04.800 --> 00:16:09.180
强迫我说服每个人在另一个设备上加入想象

00:16:09.180 --> 00:16:14.000
NSA就像通过网络向我添加一个设备，您可以拥有其他设备

00:16:14.000 --> 00:16:18.029
同行只喜欢检查，它可以通过副渠道检查

00:16:18.029 --> 00:16:22.529
就像是的，我实际上喜欢添加设备的视频，这很好

00:16:22.529 --> 00:16:28.050
关于矩阵和每个孔兆欧的事情上的有趣工作

00:16:28.050 --> 00:16:33.839
这也非常有趣，还有什么是我对网络感到非常兴奋

00:16:33.839 --> 00:16:38.040
可视化，就像比赛一样，我们应该完全做到同伴出现像

00:16:38.040 --> 00:16:42.510
扩展到数百万竞赛，我看到你是谁首先或每年获得

00:16:42.510 --> 00:17:04.319
就像拉近一点，只是我们的相关性问题

00:17:04.319 --> 00:17:07.709
在D ID规范中谈到了这一点，我们想到的是

00:17:07.709 --> 00:17:13.049
短暂标识符等是成对的，所以这就是为什么255 1 9是

00:17:13.049 --> 00:17:16.260
其实至关重要的是，实际上，您要做的是感觉到一些

00:17:16.260 --> 00:17:19.110
像Tiffany Hellman密钥交换一样，您会得到一个素数

00:17:19.110 --> 00:17:23.699
代表成对关联，并且它本身实际上是

00:17:23.699 --> 00:17:26.309
往前走，所以实际上是成对的，所以他们实际上永远不会

00:17:26.309 --> 00:17:30.470
在少于相同的关系中被重用

