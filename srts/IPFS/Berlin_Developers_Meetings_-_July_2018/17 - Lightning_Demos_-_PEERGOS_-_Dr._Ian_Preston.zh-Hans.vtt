WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.310 --> 00:00:05.430
帕里斯（Parris）哦，我希望这会在我讲完之后，在这种情况下，您会有一个

00:00:05.430 --> 00:00:10.500
内容更多，但长话短说Pegasus是一个端到端的加密文件

00:00:10.500 --> 00:00:15.450
PFS上的存储和社交网络，所以我将演示一些基本信息

00:00:15.450 --> 00:00:21.289
事情，所以让我们从注册开始

00:00:26.300 --> 00:00:32.210
显然，这不是安全密码，但是今天已经不重要了

00:00:51.730 --> 00:00:58.200
好吧，所以我们注册了一个帐户，让我们创建另一个帐户

00:01:25.450 --> 00:01:32.659
rightio，现在让我们看看社交内容，然后将关注者任务发送给

00:01:32.659 --> 00:01:41.509
另一个人，这是在做什么，基本上是在发送密码

00:01:41.509 --> 00:01:47.530
该用户文件系统中的一部分的功能，然后我们可以通过该功能共享

00:01:47.530 --> 00:01:55.179
克里斯跟着其他人一起走，现在我们回到另一个人身上

00:01:55.179 --> 00:01:59.780
看起来，如果我们已经注销并登录，我们就会得到一个

00:01:59.780 --> 00:02:07.689
这一点加一件事，但是是的，让我们现在就让它允许

00:02:16.500 --> 00:02:20.130
很酷，所以现在我们双向关注，所以我们都是

00:02:20.130 --> 00:02:26.580
现在彼此，所以是的，每个用户都有自己的高级存储空间

00:02:26.580 --> 00:02:33.020
他们在全局名称空间中的用户名下的空格，所以测试18我们回到这里

00:02:33.020 --> 00:02:44.130
我实际上只是在做这件事，这是我们作为

00:02:44.130 --> 00:02:48.930
另一个人，所以如果我们升到最高，那么目前那里什么也没有

00:02:48.930 --> 00:02:54.410
现在看到另一个他们还没有与我们分享任何东西的家伙

00:02:54.410 --> 00:03:02.150
但让我们对文件做些什么，让我们上传图片

00:03:08.360 --> 00:03:11.900
所以这就是所有SSA的端到端加密，因此所有加密都会发生

00:03:11.900 --> 00:03:30.040
并在浏览器中进行解密，让我们分享这是17

00:03:36.850 --> 00:03:45.730
对，所以现在我们回到17，我们需要刷新根目录，以便我们可以看到

00:03:45.730 --> 00:03:49.630
另一个人，但是是的，现在你要去做，看不到，我们可以看到

00:03:49.630 --> 00:03:53.890
我们可以看到缩略图的文件，其中的所有内容均已加密，我们将全部隐藏

00:03:53.890 --> 00:04:03.820
我们可以直接在浏览器中查看的元数据和内容

00:04:03.820 --> 00:04:12.660
解决方案，你可以告诉我有一个年纪不大的孩子

00:04:12.660 --> 00:04:17.110
所以我们能得到什么屏幕，所以这使得一些目录实际上不让我们

00:04:17.110 --> 00:04:22.000
做一个公共链接，这样我们也可以创建一个公共链接，您可以

00:04:22.000 --> 00:04:25.060
与任何人分享他们不需要大量的亏损账户，基本上

00:04:25.060 --> 00:04:29.020
使用常规技术在URL本身中具有加密功能

00:04:29.020 --> 00:04:35.470
将其放在哈希中，因此您可以在另一个标签中将其打开，

00:04:35.470 --> 00:04:40.450
这些标签之间没有共享上下文，因此您可以看到现在我们可以

00:04:40.450 --> 00:04:46.990
看到这就是您得到的路径和文件本身，以及我们可以做到的相同想法。

00:04:46.990 --> 00:04:54.660
查看或下载它，或者执行其他操作，因此您可以做的另一件事是

00:04:54.660 --> 00:05:00.330
目录让我们建立一个目录

00:05:10.500 --> 00:05:15.470
去这里一个文件

00:05:24.150 --> 00:05:27.980
五分钟好吧，没时间了，所以我要跳到

00:05:27.980 --> 00:05:37.980
希望有更多令人印象深刻的演示，所以这是另一个帐户，对于

00:05:37.980 --> 00:05:41.520
在浏览器中下载和解密内容，如果您试图说这是

00:05:41.520 --> 00:05:45.480
图像很容易，它通常很小，所以您只需做一个大字节

00:05:45.480 --> 00:05:49.590
数组，然后在尝试流式传输时将其转换为浏览器中的URL

00:05:49.590 --> 00:05:53.040
视频，您无法做到这一点，因为您受到限制，因此必须适应

00:05:53.040 --> 00:05:59.310
内存中的东西，但您可以与服务人员一起解决，这仅适用于

00:05:59.310 --> 00:06:08.700
遗憾的是Chrome，但我希望它能正常运行，因此我们已经拥有了简单的功能

00:06:08.700 --> 00:06:15.390
这是很好的电影，您可以看到它适合120兆欧

00:06:15.390 --> 00:06:28.350
但我们不要这样做，我们可以尝试对其进行流式传输，以便将其下载到5 Meg

00:06:28.350 --> 00:06:33.090
一次解密后重新组合，然后将其写入此可写流

00:06:33.090 --> 00:06:41.030
哪件事情有望发挥

00:06:47.970 --> 00:06:56.740
声音以及我也听不到，但是是的，这就是您所需要的

00:06:56.740 --> 00:07:00.370
do能够比实际播放更快地下载和解密它

00:07:00.370 --> 00:07:05.530
因此，您可以解决的分辨率受到您的限制

00:07:05.530 --> 00:07:17.320
连接，但您可能会发现一百万次的想法

00:07:17.320 --> 00:07:25.810
因此，我们不要再拥有其他一些基本的媒体播放器了，所以

00:07:25.810 --> 00:07:28.780
显然，我们只是您刚刚看过的图像和视频，我们也有音频

00:07:28.780 --> 00:07:39.670
这也可以进行流式处理我们在嵌入式文本查看器中也有一个非常基本的文本，因此

00:07:39.670 --> 00:07:47.140
您知道这里有一些JavaScript，但我认为它可能仍在做一些

00:07:47.140 --> 00:07:54.070
视频内容在后台，但是是的，如果这是我们没有的格式

00:07:54.070 --> 00:08:09.220
查看器，然后使用默认后备广告，让我们找到12

00:08:09.220 --> 00:08:22.900
也许是的，所以这个家伙我们基本上还是回到了十六进制查看器，而您

00:08:22.900 --> 00:08:27.640
可以，如果您想尝试在浏览器中呈现12兆的十六进制，不是吗

00:08:27.640 --> 00:08:32.010
不会这样做，所以它会懒惰地下载您要分段的内容

00:08:32.010 --> 00:08:37.360
要显示它，以便我们继续前进，您可以看到它是PDF哈希PDF，并且可以滚动

00:08:37.360 --> 00:08:47.470
向下，按需按模5做块，但想法是

00:08:47.470 --> 00:08:51.100
希望我们会在某个时候有一个PDF查看器，但是

00:08:51.100 --> 00:08:54.930
很难确定我们会说

00:08:55.399 --> 00:09:04.970
太棒了，谢谢[鼓掌]

