WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:09.230
好的，我要演示这是有史以来的第一次半公开

00:00:09.230 --> 00:00:18.529
演示fot的实现，我将用lipitor PE进行演示

00:00:18.529 --> 00:00:23.250
对其进行网络可视化，所以最令人困扰的是该网络

00:00:23.250 --> 00:00:28.980
可视化工具包，但与我合作的是Falcone

00:00:28.980 --> 00:00:33.019
实施，所以我将带您完成

00:00:33.380 --> 00:00:46.309
您能看到同样的东西吗？可以大致阅读吗？还是需要更大的尺寸？

00:00:46.309 --> 00:01:00.030
更大，所以填满网络SIM卡电话网络模拟器并可视化地球这是一个

00:01:00.030 --> 00:01:04.199
在本地模拟Falco网络的工具，它会生成go ipfs，抱歉，会去文件

00:01:04.199 --> 00:01:09.270
注意恶魔是随机的，它通过CLI工具开始向他们发行，然后同样

00:01:09.270 --> 00:01:13.920
根据sim卡支持的程序选项集随机发出操作

00:01:13.920 --> 00:01:18.299
连接到各个Falcon注释中以手动发出命令，这意味着

00:01:18.299 --> 00:01:24.270
模拟可以进行了，您可以参与其中，还可以向SIM发送命令

00:01:24.270 --> 00:01:29.430
消耗掉所有来自这些恶魔的事件日志，并将其转换为

00:01:29.430 --> 00:01:33.900
输入用于可视化的日志，因此我将逐步介绍其工作方式

00:01:33.900 --> 00:01:37.770
我会给你一个很好的图表，我会给你看演示

00:01:37.770 --> 00:01:44.509
首先，然后我将逐步介绍该工具的工作原理

00:01:44.509 --> 00:01:49.890
因此，可视化效果很好的应用程序上，所以这个小工具有一个网络服务器和

00:01:49.890 --> 00:01:54.390
将来可能会在许多机器上运行，因此其结构已设定

00:01:54.390 --> 00:01:58.439
以便在室内我们可以轻松拆分此工具并将其

00:01:58.439 --> 00:02:03.030
在一堆机器上运行，然后聚合成一个Web

00:02:03.030 --> 00:02:08.520
该应用程序向您展示了大型网络的可视化，所以理想情况下，我会

00:02:08.520 --> 00:02:12.599
喜欢看到您知道成千上万的dhts的可视化

00:02:12.599 --> 00:02:14.850
成千上万的节点就像整个猫一样，艾米丽（Emily）

00:02:14.850 --> 00:02:19.860
就像路由表移动一样，这可能很难，但是我们可以考虑一下

00:02:19.860 --> 00:02:24.620
我们可能会做这种事情，所以这个模拟器有效地做的是

00:02:24.620 --> 00:02:30.990
有一个程序要向这些恶魔发送一组动作，

00:02:30.990 --> 00:02:35.310
程序具有很多选项，因此，例如最大节点数

00:02:35.310 --> 00:02:43.380
开始某些计时事物，无论是否检查某些属性

00:02:43.380 --> 00:02:49.290
在采矿上，这样就可以达成共识，依此类推，然后

00:02:49.290 --> 00:02:56.490
这使用的是Golc文件硬币，这是Falcone的实现，所以您起来了

00:02:56.490 --> 00:03:04.200
站在这里，所以fuckin实现是一种工具，就像每个人去试管婴儿一样

00:03:04.200 --> 00:03:10.680
熟悉我们的人会认识到这里的一些东西，例如脂质

00:03:10.680 --> 00:03:20.610
重复执行swarm命令，它在IPL D中实现了完整的区块链，所以它有一个dag

00:03:20.610 --> 00:03:27.870
命令就像执行PFS一样，因此您可以提取文件的所有对象

00:03:27.870 --> 00:03:36.300
通过熟悉的硬币区块链，我感觉到了能力的命令，你可以

00:03:36.300 --> 00:03:39.959
以这种方式遍历区块链，这样您就可以取出特定的部分，

00:03:39.959 --> 00:03:44.310
我们待会儿会看到它，这就是问题所在

00:03:44.310 --> 00:03:51.540
交易我们称这些消息为交易智能合约模型相同

00:03:51.540 --> 00:03:57.989
一种思考方式，您可以想到演员，信息和信息

00:03:57.989 --> 00:04:03.150
过去了，所以我们倾向于称他们为女演员的消息是因为一大堆

00:04:03.150 --> 00:04:09.090
无论如何都要思考类似的编程语言的原因

00:04:09.090 --> 00:04:16.080
我们现在刚刚将其重命名，好吧，我们将看看该名称是否固定，因此这

00:04:16.080 --> 00:04:21.239
我可以带您逐步完成手动初始化守护进程的操作，依此类推

00:04:21.239 --> 00:04:24.479
但是，展示模拟器和

00:04:24.479 --> 00:04:26.760
然后我将了解其中一种知识，它们都是

00:04:26.760 --> 00:04:33.000
一些命令，所以我首先要做的就是运行该工具，就像

00:04:33.000 --> 00:04:36.420
基本参数，所以现在要做的是它首先给了我一些链接

00:04:36.420 --> 00:04:44.550
因此它为我提供了一个日志记录端点，因此这实际上是同一种日志

00:04:44.550 --> 00:04:51.360
输出既是任何种类的Lipnicki实现，又是

00:04:51.360 --> 00:04:58.080
fess椅子，那里只是一堆杰森原木，但是这些已经变了

00:04:58.080 --> 00:05:01.590
我稍后再讨论，以了解这种转变是如何发生的，但它们不是

00:05:01.590 --> 00:05:06.270
从go文件硬币中取出的原始日志已被更改

00:05:06.270 --> 00:05:13.140
我进入模拟器工具的原因，为什么当我解释该工具的工作原理时

00:05:13.140 --> 00:05:17.520
还为一些可视化提供了一些类似的端点

00:05:17.520 --> 00:05:22.200
还没装上，那么他们这里有很多选择

00:05:22.200 --> 00:05:26.750
这将由标志设置，然后在这里才开始添加

00:05:26.750 --> 00:05:33.120
恶魔，它给了我一些选择，它向我展示了

00:05:33.120 --> 00:05:37.730
该特定节点在哪里，它为我提供了该节点的钱包地址

00:05:37.730 --> 00:05:42.480
这碰巧是一个矿工，所以它有一个矿工演员地址，这给了我一个

00:05:42.480 --> 00:05:47.370
如果我愿意，可以准备好连接命令，它给了我一个命令

00:05:47.370 --> 00:05:52.320
如果我想正确使用它，请准备好它，这样我就可以连接它

00:05:52.320 --> 00:06:05.390
可以说嘿，你的身份证号码是正确的，你也可以在这里做，让我们看看

00:06:05.770 --> 00:06:11.050
我可以大批刺穿，你知道这个社会盛会的典型事物

00:06:11.050 --> 00:06:17.169
应该知道那只是一个p2p，就像看P东西会解决这个问题，但是

00:06:17.169 --> 00:06:24.310
它也可以做一些事情，例如向我展示订单簿，这样我就可以看到

00:06:24.310 --> 00:06:31.509
问，所以这就像现在市场上的一组订单，所以这

00:06:31.509 --> 00:06:34.270
已经运行了一段时间，所以就像它已经生成了一个

00:06:34.270 --> 00:06:38.889
整个订单簿，我们稍后会看到，在这里，我只是停下来

00:06:38.889 --> 00:06:42.370
运行，所以有一大堆的恶魔只是为了让你得到一个

00:06:42.370 --> 00:06:45.340
感觉它是在word文件硬币上过滤的，所以这意味着有一堆

00:06:45.340 --> 00:06:48.280
的恶魔正在运行，并确保了一堆命令，所以这是

00:06:48.280 --> 00:06:54.729
只是表明，这里的模拟器正在创建一堆流程，这些流程

00:06:54.729 --> 00:06:59.229
现在运行，我要杀死它并重新启动它，因为我们真的想

00:06:59.229 --> 00:07:04.120
在一开始就加入可视化，否则就使用JavaScript d3

00:07:04.120 --> 00:07:09.820
有点爆炸，但很有趣，所以要重新开始哦，实际上

00:07:09.820 --> 00:07:22.449
在此之前，如果所有恶魔知道自己没有死，他们都应该死掉。我说哦

00:07:22.449 --> 00:07:30.449
那也许是H停，就像没有，我们走了，是的，我们开始了

00:07:37.560 --> 00:07:47.170
所以现在我们将再次编写它，并打开可视化文件，这就是

00:07:47.170 --> 00:07:53.350
他们正在做的事情，您看不到它，您几乎看不到它，所以每个

00:07:53.350 --> 00:07:56.770
这些事情是一个动作，所以这是一个付款交易，一个交易

00:07:56.770 --> 00:08:01.060
发生了一个被挖出的方块，有一个音符输入，这是另一个

00:08:01.060 --> 00:08:05.580
付款交易，并注意另一张便条是正在开采的另一个区块

00:08:05.580 --> 00:08:09.940
更多付款等等，在这里您可以看到所有比特，它要求矿工

00:08:09.940 --> 00:08:13.150
在我的护理客户那里增加了市场，在这里您可以看到深度

00:08:13.150 --> 00:08:19.780
在这里的存储市场的图表，您可以看到这些的负责人，这是

00:08:19.780 --> 00:08:24.660
随着区块链的增长而有效地发展区块链，右边是

00:08:24.660 --> 00:08:31.000
计算交易，所以这些是要价和要价，否则您什么时候知道

00:08:31.000 --> 00:08:34.599
发生并且它们重叠，那么这些是交易的候选者，并且

00:08:34.599 --> 00:08:37.720
模拟器会注意到这一点，然后告诉那些节点创建新节点

00:08:37.720 --> 00:08:41.620
好的方法是从鼻子中挑出一些，让它们达成交易，

00:08:41.620 --> 00:08:45.970
我将在这里显示，当交易发生时，实际上是文件

00:08:45.970 --> 00:08:52.930
交换，所以我将向您展示，以便表明我可以回到这里，

00:08:52.930 --> 00:09:03.040
要求查看交易订单簿交易JQ，我可以抓住其中之一

00:09:03.040 --> 00:09:11.230
东西，我去银行，问客户猫那哈希到文件，现在我可以打开

00:09:11.230 --> 00:09:15.160
文件，我不知道它是什么，我认为这是未加密的文件

00:09:15.160 --> 00:09:23.130
另一个相同的故事

00:09:24.500 --> 00:09:28.850
忘记了键盘上的杯子

00:09:29.900 --> 00:09:38.640
这是我想读懂我会得到一个更好的人

00:09:38.640 --> 00:09:42.840
这里有猫的图片，是的，我真的只需要增加

00:09:42.840 --> 00:09:52.320
通过使猫看起来还是男人来对猫进行采样的概率，这正在转移

00:09:52.320 --> 00:09:57.000
真实文件，并且它们是从一组测试文件中提取的，比我拥有的要多

00:09:57.000 --> 00:10:01.140
但这意味着这些注释实际上就是您知道的添加和

00:10:01.140 --> 00:10:06.420
传输客户正在将其真实文件发送给矿工的真实文件

00:10:06.420 --> 00:10:11.790
并将它们存储起来，这样您就知道了，因此

00:10:11.790 --> 00:10:16.860
客户正在竞标的存储市场正在运作，次要支持要求

00:10:16.860 --> 00:10:23.160
他们被合并成一笔交易，然后一旦达成交易，客户发送文件

00:10:23.160 --> 00:10:26.700
给矿工存储，这就是您所看到的，所以我们没有

00:10:26.700 --> 00:10:30.600
相当于此处所示的检索市场，但这将是

00:10:30.600 --> 00:10:34.860
对称的操作集，在这里您可以看到一组

00:10:34.860 --> 00:10:40.860
心跳，所以在这里，如果您仔细观察，会有点困难

00:10:40.860 --> 00:10:45.390
看到，但是您看到所有这些链头切换并会聚，因为

00:10:45.390 --> 00:10:57.630
这是共识的发生，因此到目前为止，这一过程大约有六个

00:10:57.630 --> 00:11:03.380
在某个时刻有一千七百次事件，他变得太多了，所以我

00:11:03.380 --> 00:11:09.480
需要喜欢重启模拟器，因为您知道这就像在运行

00:11:09.480 --> 00:11:14.940
我的机器中有15个不同的taco节点

00:11:14.940 --> 00:11:18.470
点击我在[音乐]上落下的其中一项内容

00:11:18.470 --> 00:11:23.010
手机资源管理器，实际上类似于区块链资源管理器工具，但

00:11:23.010 --> 00:11:28.530
它是内置的，所以它遵循链条，我可以

00:11:28.530 --> 00:11:33.510
点击进入它，看到这是特别的块，这是矿工这

00:11:33.510 --> 00:11:37.560
是状态路线，状态路线是

00:11:37.560 --> 00:11:40.740
该块的状态，所以这意味着像所有状态转换一样

00:11:40.740 --> 00:11:43.350
已经应用了IPL D，所以您可以

00:11:43.350 --> 00:11:51.630
现在浏览它，例如，我看到Ram我们拥有所有IPL进口商

00:11:51.630 --> 00:11:57.300
对于以太坊，所以我们也可以在定理中做同样的事情，这是

00:11:57.300 --> 00:12:00.000
一组消息，因此它们类似于实际交易，您可以看到

00:12:00.000 --> 00:12:03.330
正在发生的方法调用以及正在那里发送的参数

00:12:03.330 --> 00:12:07.440
所以在这个特定的区块中，我们看到那些没有

00:12:07.440 --> 00:12:11.040
方法只是汇款，所以这就像您知道的交易一样正常

00:12:11.040 --> 00:12:14.850
就像您不会用比特币付款一样，这里还要求另一笔付款，

00:12:14.850 --> 00:12:20.339
所以在这一点上没有交易，这些有点像

00:12:20.339 --> 00:12:24.740
每个消息中的每个消息我们还可以看到一组参与者，所以这是

00:12:24.740 --> 00:12:30.930
从某种意义上看链的本地存储，我们可以看到每个

00:12:30.930 --> 00:12:36.240
这些参与者之一将其视为具有其地址的智能合约

00:12:36.240 --> 00:12:41.580
执行此actor的代码的SE ID，它具有的内存是

00:12:41.580 --> 00:12:46.320
内存就像参与者或智能合约的本地存储，

00:12:46.320 --> 00:12:50.070
这里就像导出的功能一样，虽然可以，但是您可以在这里调用

00:12:50.070 --> 00:12:56.070
这些是自我类型，将来将不再是自我类型，你知道

00:12:56.070 --> 00:13:00.690
一堆不同类型的帐户，例如实例化一个

00:13:00.690 --> 00:13:05.339
这些演员为您服务，并维护了一组当地遗产，因此，这

00:13:05.339 --> 00:13:09.540
资源管理器是您知道我们单击的不是特别单击的节点，如果

00:13:09.540 --> 00:13:12.930
网络被分割了，然后我们点击了另一个，然后我们将看到

00:13:12.930 --> 00:13:17.040
可能存在不同的状态，所以这种可视化的想法是

00:13:17.040 --> 00:13:23.190
进行设置，以便您现在可以按正确的方向探索网络

00:13:23.190 --> 00:13:27.120
资源管理器直接连接到该节点，并且喜欢索要东西和它

00:13:27.120 --> 00:13:32.580
将来可能还会编写此可视化文件，但仅用于

00:13:32.580 --> 00:13:39.120
只读或至少具有只读模式，在此模式下它可以完全正常工作

00:13:39.120 --> 00:13:43.410
离开日志，其目的是我们应该能够追踪

00:13:43.410 --> 00:13:48.480
先前运行的运行树并存储它，然后仅从日志中

00:13:48.480 --> 00:13:51.330
能够重播整个内容以查看它

00:13:51.330 --> 00:13:55.050
理想情况下，稍后可能会有一些播放控件，因此我们可以

00:13:55.050 --> 00:13:58.649
我们实际上可能希望加快或降低速度或跳到特定点

00:13:58.649 --> 00:14:02.610
这样做的想法是，它可以极大地帮助调试，因此

00:14:02.610 --> 00:14:06.420
现在这似乎超级混乱，因为发生了很多事情，但是你

00:14:06.420 --> 00:14:09.350
知道我们可以玩这个游戏，而您知道，除了做所有这些事情，我们可以

00:14:09.350 --> 00:14:13.769
你知道关掉一堆正在做的事情，然后说

00:14:13.769 --> 00:14:18.810
也许不执行任何自动操作，然后实际手动编写我想要的脚本

00:14:18.810 --> 00:14:24.149
就像现在一样，我想连接到很多IPTV

00:14:24.149 --> 00:14:30.779
从某种意义上讲，但这基本上是电视的设备

00:14:30.779 --> 00:14:35.610
例如针对此特定于此的特定模拟操作

00:14:35.610 --> 00:14:40.320
应用程序加上一些事件翻译，所以我进行了事件翻译

00:14:40.320 --> 00:14:45.589
提到我要进入那是因为事件日志是

00:14:45.589 --> 00:14:51.690
来自节点的信息特定于go文件电话的实现方式

00:14:51.690 --> 00:14:55.110
可以正常工作，所以您知道事件日志就像

00:14:55.110 --> 00:14:58.800
开发人员现在想摆脱那些可能无法通过可视化获得的日志

00:14:58.800 --> 00:15:04.680
一次翻译就可以使每一组

00:15:04.680 --> 00:15:09.630
开发人员专注于他们关心的事情，这样猎鹰开发人员就可以

00:15:09.630 --> 00:15:13.620
只是考虑他们要放入falcore falcore节点中的事件，然后

00:15:13.620 --> 00:15:16.529
可视化开发人员可以考虑他们想要的事件

00:15:16.529 --> 00:15:23.279
可视化正确的东西，例如发送付款之类的东西进行交易等

00:15:23.279 --> 00:15:26.850
在某个事件上可能存在一对一的对应关系

00:15:26.850 --> 00:15:30.120
可能正是他们在寻找什么，但也许是他们想要的参数

00:15:30.120 --> 00:15:33.300
寻找不同的内容，也许整个事件日志的输出太多了，也许我们

00:15:33.300 --> 00:15:35.730
不需要所有这些，或者实际上是缺少了一些东西

00:15:35.730 --> 00:15:39.149
并且您需要将多个事件汇总到一个事件中，以便

00:15:39.149 --> 00:15:44.940
中间是非常重要的部分，可以轻松构建

00:15:44.940 --> 00:15:50.779
只需将原始事件日志放在原始事件日志之上，就可以实现可视化

00:15:50.779 --> 00:15:56.279
在某种意义上将可视化的智能转化为翻译，所以我

00:15:56.279 --> 00:16:00.449
认为这种结构对于脂质api确实很有希望-总的来说

00:16:00.449 --> 00:16:04.860
因为它对于DHD可以同样有效

00:16:04.860 --> 00:16:08.670
与ad / hd可视化类似，这与您在环上了解的情况类似

00:16:08.670 --> 00:16:16.770
我们只有鼻子，看到的就是像推杆和推杆

00:16:16.770 --> 00:16:23.460
您知道检索，因此将其放到DHD上，我们可以看到这些

00:16:23.460 --> 00:16:26.970
有点像实际的请求正在执行，或者理想情况下，我们也可以

00:16:26.970 --> 00:16:32.790
画出这些鼻子之间的连接并正确看到水桶，这样

00:16:32.790 --> 00:16:35.700
现在在高清上这是什么样的趋势，我们将

00:16:35.700 --> 00:16:42.750
必须考虑如何形象化，但是你知道那里就像

00:16:42.750 --> 00:16:46.050
就像这类内容的真正可视化一样，我们确实知道如何

00:16:46.050 --> 00:16:58.800
以获取大量数据，如果这就是我所希望的，我想要

00:16:58.800 --> 00:17:04.200
但是，有一些方法可以很好地可视化大量数据，因此我们

00:17:04.200 --> 00:17:08.370
完全可以做到这一点，我们可以完全编写可以帮助我们调试的可视化文件

00:17:08.370 --> 00:17:12.690
帮助我们通过教育是另一回事来理解协议

00:17:12.690 --> 00:17:20.280
在这里我们可以编写脚本以遵循潜在的用户输入并告诉

00:17:20.280 --> 00:17:24.930
喜欢的人可以通过仔细编写脚本来教某人有关协议的知识

00:17:24.930 --> 00:17:29.820
事件，并在它们之间移动之前等待用户输入，以便您进行解释

00:17:29.820 --> 00:17:34.860
DHT如何通过仅在普通内容之上编写的此交互式内容进行工作

00:17:34.860 --> 00:17:41.810
您和您的协议的事件跟踪，您可以通过以下方式制作该事件跟踪

00:17:41.810 --> 00:17:46.770
自己编写事件日志，就像记录某些内容，然后

00:17:46.770 --> 00:17:51.300
您已对其进行了微调，以实现正确的教学效果和正确的外观

00:17:51.300 --> 00:17:53.370
也许您减少了正在发生的事件的数量

00:17:53.370 --> 00:17:57.150
也许您选择一个特定的有趣案例来演示一些东西

00:17:57.150 --> 00:18:02.010
这就是这种工具的潜力，而我

00:18:02.010 --> 00:18:07.470
想和它一起去我想和它一起去的地方

00:18:07.470 --> 00:18:11.700
可以安装为特定协议编写可视化文件的位置

00:18:11.700 --> 00:18:15.390
像这个非常通用的工具一样，它可以完成我们所有的辐射活动

00:18:15.390 --> 00:18:18.759
和选项设置一样，

00:18:18.759 --> 00:18:23.979
编排，如我们所知，有些类似于模块化插件

00:18:23.979 --> 00:18:28.389
就是这样前进的方向，只是为了向您展示您知道这一点

00:18:28.389 --> 00:18:39.669
其他可视化效果在这里，我将向您展示一个可以运行的其他视图

00:18:39.669 --> 00:18:42.159
再次模拟器并查看区块链的不同之处

00:18:42.159 --> 00:18:51.429
可视化及其作用是向我展示链条a，所以这就是

00:18:51.429 --> 00:18:56.589
完全一样的东西只是一个不同的前端

00:18:56.589 --> 00:19:00.009
不同的事件，然后是我感兴趣的事件

00:19:00.009 --> 00:19:04.299
阻止来自每个节点的公告，因此，每当一个节点看到一个阻止时，它都会发出一个

00:19:04.299 --> 00:19:08.769
事件，并且每当节点选择一个块作为其链的头部时，它也会发出

00:19:08.769 --> 00:19:13.809
一个事件，所以我在这里正在做的是我只是在作图，我的意思是

00:19:13.809 --> 00:19:21.999
尼古拉·尼古拉（Nicola Nicola）写道，这是因为他每当看到一个

00:19:21.999 --> 00:19:26.199
新块，他将其添加到图形中，然后每当看到其他

00:19:26.199 --> 00:19:30.549
看到那个障碍的事件，他只是将其记录为一个计数，因此黑暗

00:19:30.549 --> 00:19:34.449
我们在底部看到的数字是多少节点已看到该块和

00:19:34.449 --> 00:19:37.929
蓝色数字是多少个节点正在使用该块作为头

00:19:37.929 --> 00:19:41.979
连锁店，所以我们可以立即看到是否正在达成共识

00:19:41.979 --> 00:19:46.029
而且这种速度很快，但是像这样不起作用，这些事情是

00:19:46.029 --> 00:19:50.799
收敛并保持不变，因此在这里我设置了一个参数，专门尝试

00:19:50.799 --> 00:19:56.709
使它达到4k，您知道每轮有两个或三个三个块，只是为了

00:19:56.709 --> 00:20:00.159
告诉你知道当多方参加时会发生什么情况

00:20:00.159 --> 00:20:03.579
然后你知道我们是收敛还是分叉，你知道

00:20:03.579 --> 00:20:07.599
他们现在在这里如此融合当然是全本地的，就像是不现实的

00:20:07.599 --> 00:20:10.509
设置等，但它使您了解我们如何使用此类工具

00:20:10.509 --> 00:20:13.629
调试共识协议并了解它们是否

00:20:13.629 --> 00:20:18.129
会聚或或了解是否喜欢一些重要知识

00:20:18.129 --> 00:20:23.619
事件就像迷路一样，我通过这本书找到了一本书，

00:20:23.619 --> 00:20:28.599
事件之一不是由至少一个节点发出的，我认为

00:20:28.599 --> 00:20:32.380
是100％确定生成块的节点，但是

00:20:32.380 --> 00:20:36.130
你看着它们不匹配的母牛，就像总少一头，反正

00:20:36.130 --> 00:20:42.040
就像球迷一样，所以这只是你知道一个不同的方面

00:20:42.040 --> 00:20:44.530
结束，您完全可以想象产生一堆不同的战线

00:20:44.530 --> 00:20:51.270
结束于协议，所以让我们看一下ipfs有点像交换

00:20:51.270 --> 00:20:55.660
前端可以看到您的位就像是对等端，以及您有多少带宽

00:20:55.660 --> 00:20:59.920
您已将他们想要的清单发送给他们，然后开始做面包

00:20:59.920 --> 00:21:03.880
您知道这些非常专注的应用程序仅基于该协议并仅将其挂载

00:21:03.880 --> 00:21:12.420
到目前为止，有些问题使某些问题推翻了与条目完全相同的东西

00:21:12.420 --> 00:21:18.160
这是一个模拟人生，我将阻止时间设置为三秒钟，不，不，那也是

00:21:18.160 --> 00:21:25.750
我应该这么说，这对于正常的全球性工作来说太快了

00:21:25.750 --> 00:21:34.630
达成共识，我们可能会很快将其付诸实践，但我们不需要

00:21:34.630 --> 00:21:39.400
开始做一些聪明的事情，比如维持太多的连锁店

00:21:39.400 --> 00:21:42.700
一次有很多负责人，最后我得到了他们

00:21:42.700 --> 00:21:47.470
随着时间的流逝，您不仅可以扩展规模，而且还可以绘制图表等内容

00:21:47.470 --> 00:21:51.280
可以让他们的鬼魂出现的技术非常令人印象深刻，例如

00:21:51.280 --> 00:21:55.060
幽灵纸声称您可以在这里知道一两个秒的车道

00:21:55.060 --> 00:21:57.700
像这样的东西，我认为没有人部署

00:21:57.700 --> 00:22:04.330
认真堕胎是的，其他问题是目前正在使用IP TB

00:22:04.330 --> 00:22:08.530
还是某些类似的东西，它目前没有使用Epi TV

00:22:08.530 --> 00:22:14.820
它应该只是有点像历史原因，为什么要等待它没有

00:22:14.820 --> 00:22:20.380
从此开始，但这完全应该成为申请BB的理由

00:22:20.380 --> 00:22:24.090
听起来不错，谢谢

00:22:25.350 --> 00:22:27.410
你

