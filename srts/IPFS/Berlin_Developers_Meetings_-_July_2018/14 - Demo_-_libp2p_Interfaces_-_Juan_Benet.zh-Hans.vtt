WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:10.679
好的，这是什么，这是用一种语言描述的目标

00:00:10.679 --> 00:00:18.449
这是不完全正确的描述

00:00:18.449 --> 00:00:24.990
尽可能简洁地进行交互，并尝试获得某种结构

00:00:24.990 --> 00:00:31.050
然后我们可以将其潜在地编译成我认为的那种

00:00:31.050 --> 00:00:34.860
就像G RPC之前的proto一样，您将拥有接口定义语言

00:00:34.860 --> 00:00:38.700
您将在其中写出一个接口，然后就可以使用某种

00:00:38.700 --> 00:00:42.719
切实可行的工具来完成一些工作，例如生成存根实现

00:00:42.719 --> 00:00:46.980
或生成RPC事物或互操作性测试，或至少

00:00:46.980 --> 00:00:51.780
检查是否正在使用某些其他语言实际具有的API

00:00:51.780 --> 00:00:58.469
覆盖范围不仅是这项工作的目标，而且还只是标准化

00:00:58.469 --> 00:01:04.290
之类的东西，因为现在很多东西都在文档中

00:01:04.290 --> 00:01:08.490
比我们拥有一个可以测试是否测试的测试用例更成功

00:01:08.490 --> 00:01:13.439
就像是每个人都对不起，我要经历这些

00:01:13.439 --> 00:01:21.030
这些只是草稿，但似乎有些

00:01:21.030 --> 00:01:25.350
有点明显，但它的下面有点时髦，所以您知道

00:01:25.350 --> 00:01:31.140
最重要的是，至少在这里，这就是github刚决定

00:01:31.140 --> 00:01:34.770
展示它，因为这不是我一定要介绍的

00:01:34.770 --> 00:01:38.850
我们有leviair发现，所以这是刚刚发现的界面

00:01:38.850 --> 00:01:46.110
刺穿一个发出纯信息数组的单个函数，所以这个想法是

00:01:46.110 --> 00:01:49.860
对等发现协议只是给您一个单一的

00:01:49.860 --> 00:01:55.590
功能，并且偶尔会发出一组对等点来发现

00:01:55.590 --> 00:02:01.829
非常相似，它只发出一组C ID，现在您可能会说嘿

00:02:01.829 --> 00:02:05.719
走私CID对我的果皮D意味着什么，就像在那里做什么

00:02:05.719 --> 00:02:09.979
也许那应该在那里也许我不应该在那里

00:02:11.280 --> 00:02:18.100
在对等路由中，我们实际上开始考虑寻找

00:02:18.100 --> 00:02:23.260
特定的同行，因此我们在这里具有我们可以胜任的职能

00:02:23.260 --> 00:02:29.080
ID，我们会先获取该点的特定对等方信息，然后再对等

00:02:29.080 --> 00:02:33.250
跑步者将是我们尝试对内容进行同样的操作，就像我们说过的那样

00:02:33.250 --> 00:02:37.360
我们返回了到目前为止可能具有该内容的一组对等信息

00:02:37.360 --> 00:02:44.709
如此美好的权利，就像任何人都看到的一样，就像全新的一样，不是很好

00:02:44.709 --> 00:02:53.410
太棒了，这就是我开始变得有点有趣的地方，所以

00:02:53.410 --> 00:02:56.950
Vino很久以前就谈到了唱片店的想法，这是

00:02:56.950 --> 00:03:00.700
像是打字员的废话之类的地方，等等，但基本思想

00:03:00.700 --> 00:03:06.580
有人说像奶酪之类的东西，像DNS之类的东西

00:03:06.580 --> 00:03:14.350
像pub / sub一样都使用相同的原语，这有点

00:03:14.350 --> 00:03:19.660
通常具有某种密码检查和某种信息的信息

00:03:19.660 --> 00:03:25.150
有效期的条件，每个人都可以一次重新发明一次

00:03:25.150 --> 00:03:32.140
虽然每个系统都有不同的版本，所以它可能会很有用

00:03:32.140 --> 00:03:37.690
这种想法可以综合起来，并且只有一种非常简单的方法

00:03:37.690 --> 00:03:40.870
描述记录是什么，以及您可能要进行的加密操作

00:03:40.870 --> 00:03:46.060
记录就像签名一样，包括像嘿这样的证明

00:03:46.060 --> 00:03:52.989
您声称您有一些文件，可能包括证明，然后

00:03:52.989 --> 00:03:57.010
有效性之类的东西可能已经过期了，您必须检查一下

00:03:57.010 --> 00:04:01.660
根据您的说法是正确的，也许有TTL或基于到期时间

00:04:01.660 --> 00:04:06.970
在某些时间概念（例如NTP）上，或者由于某些更强大的功能而到期

00:04:06.970 --> 00:04:12.820
时间概念像区块链一样，所以如果我们开始，这个想法就好了

00:04:12.820 --> 00:04:19.330
然后创建诸如HDS之类的东西，然后弹出以进行这种处理

00:04:19.330 --> 00:04:24.639
记录，否则到目前为止我们可能会重复很多

00:04:24.639 --> 00:04:29.229
这个想法就像生活在一些问题上，我想也许黛比

00:04:29.229 --> 00:04:31.870
外交官只是总结了一些东西，但据我所知

00:04:31.870 --> 00:04:35.919
因为这就是我们完成许多IP LD工作的方式，因此我们开始了

00:04:35.919 --> 00:04:40.659
想着哦，如果我们开始构造它，那就是我们尝试

00:04:40.659 --> 00:04:46.150
整理这些记录并放入BFS，我们说哇

00:04:46.150 --> 00:04:50.050
看起来真的很糟糕，因为您在ipfs中没有结构化数据

00:04:50.050 --> 00:04:53.949
拥有这些文件，而您则无法仅放入类似文件

00:04:53.949 --> 00:04:59.979
JSON或C Bohr并很好地处理它，这就是我们开始的时候

00:04:59.979 --> 00:05:06.879
探索整个世界，然后我们迷路了一段时间，我们

00:05:06.879 --> 00:05:11.349
终于回来了，所以还有待观察我们将使用多少

00:05:11.349 --> 00:05:16.090
但我提出来的原因是，一旦有了唱片店，您就可以

00:05:16.090 --> 00:05:23.020
它可以做很多事情，基本上可以构建内容路由器

00:05:23.020 --> 00:05:29.110
对等路由器对等发现和任何记录存储上的内容发现，现在

00:05:29.110 --> 00:05:33.789
取决于记录存储的语义，这可能不是一个好主意，但是

00:05:33.789 --> 00:05:38.289
这样的想法是，如果要推动，就可以使用它，那又如何呢？

00:05:38.289 --> 00:05:42.490
这是否意味着高清可以成为唱片商店，并且具有一定的

00:05:42.490 --> 00:05:46.389
如我们所见，可以缩放属性，因此它可以很好地完成某些工作，并且

00:05:46.389 --> 00:05:51.279
如果区块链也是唱片商店并且拥有

00:05:51.279 --> 00:05:55.180
完全不同的性能保证，这是您所知道的

00:05:55.180 --> 00:06:00.039
永久的，所以您知道您的分辨率可能会很好，但是发布

00:06:00.039 --> 00:06:05.169
会非常慢，但浪费的程度要低于当前的DHD，但可能是

00:06:05.169 --> 00:06:07.839
永久性的审查，这样您就可以开始获得这些不同的属性

00:06:07.839 --> 00:06:11.710
掉下来，可能有原因，您可能想要这个

00:06:11.710 --> 00:06:18.969
那种抽象，无论如何，我将在那个唱片店里说所有的话，那么我们

00:06:18.969 --> 00:06:24.580
开始考虑像dhts一样，到目前为止，DHD到底是什么样呢？

00:06:24.580 --> 00:06:31.240
的实现这些不同接口这些对等方式的不同方式

00:06:31.240 --> 00:06:35.190
发现出现路由等等

00:06:35.340 --> 00:06:38.490
你知道像这样的事情艾米丽的行为给你给你我们所拥有的那些东西

00:06:38.490 --> 00:06:45.600
在弹出之前谈论过这就像在尝试另一种尝试

00:06:45.600 --> 00:06:50.699
共识之一，我不是，我不一定喜欢这个，那是

00:06:50.699 --> 00:06:54.750
很清楚，脂质重复序列必须包含密码，必须定义一个

00:06:54.750 --> 00:06:58.470
整个加密模块中，您实际上无法定义诸如对等ID之类的东西

00:06:58.470 --> 00:07:04.530
没有它而不注入公共密钥的概念，那么一旦你

00:07:04.530 --> 00:07:09.690
在那里，您必须包括私钥，公钥和哈希，然后还要

00:07:09.690 --> 00:07:14.250
如果您有记录和签名等等，那边也要加密

00:07:14.250 --> 00:07:19.560
很明显，无论您知道p2p的核心接口是什么，

00:07:19.560 --> 00:07:28.820
必须在加密一侧包含一些抽象集，请注意此文件

00:07:28.820 --> 00:07:33.240
这个文件的历史是它生成的，我正和Tim坐下来

00:07:33.240 --> 00:07:36.990
berners-lee解释了PGP是什么，因为您知道它确实很大并且

00:07:36.990 --> 00:07:40.800
令人困惑并且很好，让我们像浏览界面，然后像

00:07:40.800 --> 00:07:47.450
那不是像这个文件的开头那样开始，所以有点有趣

00:07:49.039 --> 00:07:54.000
我要听到的一件事是，它可能对

00:07:54.000 --> 00:07:59.460
我们在看到ID之前应该先看到这一点，理想情况下实际上

00:07:59.460 --> 00:08:05.039
而不是在livia上被视作实际上是建筑的一部分

00:08:05.039 --> 00:08:10.169
感觉它泄漏得太多了，就像您想要插入多个散列一样，但是

00:08:10.169 --> 00:08:13.430
可能有这样做的理由

00:08:13.760 --> 00:08:18.450
那么Lipitor e的许多复杂性都生活在网络中

00:08:18.450 --> 00:08:23.760
的东西，我有点想隐藏，我想几乎都喜欢分开所有

00:08:23.760 --> 00:08:31.169
像普通连接网络这样的网络部分不像DHT

00:08:31.169 --> 00:08:37.669
联网等事物，例如连接端点，加密连接，卢克索

00:08:37.669 --> 00:08:41.700
流拨号程序的侦听器，还传输各种内容

00:08:41.700 --> 00:08:46.050
然后将其放在一旁，就像一堆

00:08:46.050 --> 00:08:50.500
与连接有关的所有东西可能应该从中分离出来

00:08:50.500 --> 00:08:57.820
它，然后我想摆脱主机阻塞不会走ipfs或

00:08:57.820 --> 00:09:01.779
负面和守门员philippi，我想将其替换为一个

00:09:01.779 --> 00:09:06.640
节点就像JavaScript一样，因为我认为这是更好的主意，

00:09:06.640 --> 00:09:10.230
主机的概念很糟糕

00:09:10.709 --> 00:09:30.390
是的，是的，你知道的，是的，你有个好主意，但似乎

00:09:30.390 --> 00:09:33.640
他的血脂不需要比这个更大

00:09:33.640 --> 00:09:44.980
哦，不断变化的风暴力量，这是另一回事

00:09:44.980 --> 00:09:51.490
没错，您在这家银行所做的事差不多

00:09:51.490 --> 00:09:53.850
这是正确的

00:09:58.320 --> 00:10:05.790
是的，我有点把它拆开了，是的，这是一个纯粹的想法，凯伦首先

00:10:05.790 --> 00:10:12.350
离开客户，他们在这里还好

00:10:15.440 --> 00:10:18.120
正确的紧固件就像被推入

00:10:18.120 --> 00:10:23.399
切换，是的，我有点想像所有连接杂乱的东西一样

00:10:23.399 --> 00:10:26.970
就像被捆在地毯下一样，就像你想偷看一样

00:10:26.970 --> 00:10:31.410
在那里完全欢迎您，否则您不应该不应该

00:10:31.410 --> 00:10:43.170
必须要做的是进入阁楼就像这里没用的，是的，这也不是没有

00:10:43.170 --> 00:10:46.920
值得考虑的是，这就像是尝试提炼出的草稿。

00:10:46.920 --> 00:10:49.500
接口到更容易理解的东西

00:10:49.500 --> 00:10:55.350
我不知道快速反馈是您追求的一件好事吗？

00:10:55.350 --> 00:11:00.060
就像追求不错，这是一件好事，好吧，我们将继续关闭自行车

00:11:00.060 --> 00:11:11.610
我会把这个问题交给任何人看，是的，这是

00:11:11.610 --> 00:11:16.430
追求不错的事情，并且与我尝试使用文档所做的工作类似

00:11:16.430 --> 00:11:22.170
总的来说，无论我们得到什么，我都认为p2p中有很多空间

00:11:22.170 --> 00:11:26.639
一些更有条理的Doc，用于类似的相似概念集，我认为

00:11:26.639 --> 00:11:31.170
在很多方面都非常紧密地映射到您要在此处执行的操作，所以

00:11:31.170 --> 00:11:39.449
有很好的协调性，这些东西可以一起使用，谢谢

00:11:39.449 --> 00:11:42.920
其他想法评论问题

00:11:46.400 --> 00:11:55.550
昨天与b5一起进行IPR工作，我们要做的一件事是

00:11:55.550 --> 00:12:02.430
遇到的是有验证方案，然后有

00:12:02.430 --> 00:12:07.710
排序，我们最终解决了像选择这样的问题

00:12:07.710 --> 00:12:14.850
方案，作为弄清楚应该从一组记录中选择什么记录的一种方法

00:12:14.850 --> 00:12:23.910
有效的，这是我们唯一喜欢的，所以嗯，所以这就是

00:12:23.910 --> 00:12:29.150
条件函数排序的思想是，它应该始终是

00:12:29.150 --> 00:12:36.780
可能会选择最好的记录，但是您应该有一个最好的记录，然后我

00:12:36.780 --> 00:12:39.600
猜想选举是你的意思是你可能有不同的人

00:12:39.600 --> 00:12:42.030
许多有效的记录，您可能有多个目的

00:12:42.030 --> 00:12:50.310
记录更多，就像是您将最高的记录作为您的最佳记录，但它仍然

00:12:50.310 --> 00:12:58.860
其余的仍然有效是的是的是的是的

00:12:58.860 --> 00:13:03.690
而且您知道很多IPR的事情都是原始的，就像那种

00:13:03.690 --> 00:13:07.140
像是II约会，然后在我们推出时被抛弃了一段时间

00:13:07.140 --> 00:13:16.650
进入默克尔森林并迷路了好几年，但是

00:13:16.650 --> 00:13:21.660
这里很有希望的东西很有魅力，所以我们应该保持

00:13:21.660 --> 00:13:25.410
进行按摩直到我们发现好的东西之一就是

00:13:25.410 --> 00:13:29.580
也很容易陷入这个问题，这就是为什么我剥皮

00:13:29.580 --> 00:13:36.600
重要的是，如果记录具有吸引力，那么您可以怎么做？

00:13:36.600 --> 00:13:45.450
可以以经过验证的方式链接到代码，因此您可以有一条记录链接到

00:13:45.450 --> 00:13:49.740
验证它的代码，其中可能包括所有检查代码

00:13:49.740 --> 00:13:56.790
签名检查证明和所有类似的东西，因此您可以

00:13:56.790 --> 00:14:01.300
记录是我的对象，它代表一棵树

00:14:01.300 --> 00:14:08.020
事情，那么你可以自我描述整个事情，你可以自我描述

00:14:08.020 --> 00:14:12.400
整个过程，您需要确保该事情是正确的，并且

00:14:12.400 --> 00:14:17.530
之所以有用的原因是，当有人出现并建立一个新的

00:14:17.530 --> 00:14:22.240
一种DHD和/或新系统（例如ipfs）并发明了新记录，例如

00:14:22.240 --> 00:14:29.200
提供者，等等，如果可以很容易地入职，那将是很棒的

00:14:29.200 --> 00:14:32.170
毫无意义地进入网络的其余部分，突然每个人

00:14:32.170 --> 00:14:37.180
必须喜欢处理这个奇怪的新事物，应该有可能

00:14:37.180 --> 00:14:42.700
将这种新事物贡献给不断增长的记录库

00:14:42.700 --> 00:14:46.450
系统在DNS方面也要考虑它，因此DNS

00:14:46.450 --> 00:14:52.780
有一堆随机记录，它们的类型很奇怪，而且很奇怪，就像大量的

00:14:52.780 --> 00:14:56.110
系统不实施任何支持，因为它们仅实施了基本

00:14:56.110 --> 00:14:59.920
那些，现在有所有其他类型都无法与

00:14:59.920 --> 00:15:03.400
一堆工具，拥有这样一种方法真的很好

00:15:03.400 --> 00:15:08.230
顺利升级所有这些，以便所有这些工具都可以说哦

00:15:08.230 --> 00:15:13.420
是的，该记录指向由某些

00:15:13.420 --> 00:15:18.430
这样的权威，所以我们完全愿意采用全新的

00:15:18.430 --> 00:15:23.110
记录类型，甚至根本不需要更改代码，因此这就是

00:15:23.110 --> 00:15:27.850
这就是为什么我觉得被偷运到这里，但后来

00:15:27.850 --> 00:15:30.640
这很烦人，因为它然后像气泡一样一直上升到脂质

00:15:30.640 --> 00:15:36.130
重复这是令人沮丧的接口的任何其他问题，否则我会

00:15:36.130 --> 00:15:41.250
好吧，把它翻到珠子上

