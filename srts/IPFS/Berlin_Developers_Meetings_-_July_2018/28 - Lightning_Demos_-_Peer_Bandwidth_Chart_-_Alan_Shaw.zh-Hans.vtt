WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.399 --> 00:00:07.310
你好呼吸在你的耳朵

00:00:08.160 --> 00:00:14.460
所以这是您正在查看的是图表，它显示了总额

00:00:14.460 --> 00:00:20.850
进入和退出运行的带宽，我去了ipfs节点，并且

00:00:20.850 --> 00:00:25.590
下方有一个表格宽度，以每对为基础显示

00:00:25.590 --> 00:00:34.500
那些家伙占用的带宽，它正在使用中，这非常酷

00:00:34.500 --> 00:00:42.360
此统计信息带宽统计信息API，并使用窗口点自动更新

00:00:42.360 --> 00:00:49.649
随播广告提供的ipfs，因此随播广告将在其上放置IP FS对象

00:00:49.649 --> 00:00:56.180
看起来像一个IP FS节点的窗口，您可以用来与之对话

00:00:56.180 --> 00:01:01.890
如果您在后台或同伴中运行您的goai PFS守护程序，

00:01:01.890 --> 00:01:08.070
想要在浏览器中直接在您中运行JSI PFS节点以便您与您交谈

00:01:08.070 --> 00:01:12.270
您可以将它们交换进出，并与那些直接但缠绕IPF的人进行对话

00:01:12.270 --> 00:01:18.060
所以我教授把每一页都放在窗口上，所以是这样

00:01:18.060 --> 00:01:22.740
在此页面中，它只是查询该节点并绘制出总带宽

00:01:22.740 --> 00:01:28.710
对于这个节点，每隔几秒钟更新一次此列表，如果我们

00:01:28.710 --> 00:01:33.390
很好地扫过了它们，这是我初次建造时所做的，因为我得到了

00:01:33.390 --> 00:01:36.540
同行我们认识的所有同行都差不多一千，然后

00:01:36.540 --> 00:01:41.520
API就像您可以请求特定对等方的带宽一样，因此

00:01:41.520 --> 00:01:45.360
就像是，向我的IVF节点发出每千个两个带宽的请求

00:01:45.360 --> 00:01:51.630
请几秒钟，那不是很好，所以通过他们的这种步骤

00:01:51.630 --> 00:01:55.170
并没有什么不同，您知道您基本上可以得到所有更新

00:01:55.170 --> 00:02:00.659
就像你不明白这是不正确的，所以如果它是红色的

00:02:00.659 --> 00:02:08.550
该API是，如果我能说一个像这样的流来进行调用

00:02:08.550 --> 00:02:13.650
我认为未来每个节点的带宽

00:02:13.650 --> 00:02:18.690
是的，所以我只是有点发现而已，希望会有一些东西

00:02:18.690 --> 00:02:26.430
在“状态”页面上的新Web UI插件中就可以做到这一点，我认为这就是我的全部

00:02:26.430 --> 00:02:28.700
必须说

00:02:29.230 --> 00:02:32.330
[掌声]

