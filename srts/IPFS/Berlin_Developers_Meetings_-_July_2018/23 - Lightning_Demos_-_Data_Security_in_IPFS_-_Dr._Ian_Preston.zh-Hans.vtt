WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:05.520
所以这将是大约五倍的速度，请耐心等待您的数据安全

00:00:05.520 --> 00:00:10.050
对于大多数人来说，答案是否定的。我们的解决方案是建立在巨大的损失之上的

00:00:10.050 --> 00:00:14.130
IP FS的顶部我不需要说服你们为什么分散和

00:00:14.130 --> 00:00:18.300
安全很重要这是我要进行安全控制的三件事

00:00:18.300 --> 00:00:25.529
便利性，让我们从控制开始，以便自我托管将有选择地共享

00:00:25.529 --> 00:00:33.390
隐藏上下文的文件这基本上是我们的逻辑体系结构

00:00:33.390 --> 00:00:39.469
ipfs中的美元，我们使用IP NS类的

00:00:40.760 --> 00:00:45.480
这个结构就是您拥有的是全局全局加密的文件系统

00:00:45.480 --> 00:00:51.750
您的空间在全局名称空间中的用户名下我们每个人都有

00:00:51.750 --> 00:00:56.309
有一个对称密钥树，用于控制对文件的访问

00:00:56.309 --> 00:00:59.969
这就是所谓的ip树，您可以阅读其中的一篇论文，因此您最终获得了

00:00:59.969 --> 00:01:05.040
位置塑料密钥是您的加密密钥功能，这是

00:01:05.040 --> 00:01:10.170
cr树的样子，所以钥匙的每个盒子里都有一堆

00:01:10.170 --> 00:01:14.400
第一列是目录，然后是子目录，然后有一个文件，因此

00:01:14.400 --> 00:01:18.330
如果我将文件的父密钥授予某人，并且他们可以读取

00:01:18.330 --> 00:01:22.770
该文件的属性和内容以及父键向后

00:01:22.770 --> 00:01:27.720
只是意味着一切都有明确的全局路径，但如果我做了我做的事，

00:01:27.720 --> 00:01:31.920
刚才说过，在同一个目录中还有一个文件，这个人不会

00:01:31.920 --> 00:01:36.890
能够告诉任何有关此的信息，因此它的访问控制非常精细

00:01:36.890 --> 00:01:42.270
这就是我们要做的，我们将文件的五个Meg加密成碎片

00:01:42.270 --> 00:01:49.500
可能的数组地理编码将它们转储到ipfs中，然后创建cripsy节点

00:01:49.500 --> 00:01:55.140
其中有到每个片段的本地链接，我们所做的一切都已经在其中

00:01:55.140 --> 00:02:02.700
IP LD幻灯片上的内容太多，无法谈论文件系统本身

00:02:02.700 --> 00:02:07.200
称为champ的数据结构，它是压缩的哈希数组映射到

00:02:07.200 --> 00:02:13.260
试试看，它有很多奇妙的特性，如果我们决定搬到一个

00:02:13.260 --> 00:02:16.069
CID T的未来将使一切变得更加容易

00:02:16.069 --> 00:02:23.040
在这种情况下，我们得到的主要是目录结构，实际上

00:02:23.040 --> 00:02:26.760
同一文件的不同部分之间的链接对网络不可见

00:02:26.760 --> 00:02:33.150
他们看到的只是一张包含五个Meg块的大地图，如果不是，则不是五个Meg

00:02:33.150 --> 00:02:40.050
目录，因此看起来您有Tramp节点，最终

00:02:40.050 --> 00:02:44.040
同意这些都是IPL中所有深层的本地链接，并最终指向

00:02:44.040 --> 00:02:49.770
加密文件片段的权限访问由您控制，如您所愿

00:02:49.770 --> 00:03:03.390
通过共享密钥对，基本上我们在用户之间发送了一个功能

00:03:03.390 --> 00:03:06.930
在他们的文件系统中，然后他们使用它们来基本上进行引导

00:03:06.930 --> 00:03:12.959
其他功能，以便当前发生的事情必须

00:03:12.959 --> 00:03:16.500
通过非对称加密发生，这是我们系统中唯一的

00:03:16.500 --> 00:03:21.660
如果一台大型的量子计算机目前很容易受到攻击

00:03:21.660 --> 00:03:27.930
足够，但我们正在考虑从中迁移，而最重要的是

00:03:27.930 --> 00:03:33.720
最后是方便，就像它对于典型的人来说应该很容易使用

00:03:33.720 --> 00:03:37.799
Facebook用户，因此没有哈希，没有可见键，也没有

00:03:37.799 --> 00:03:42.360
这样的事情，人们想要的第一件事就是能够登录

00:03:42.360 --> 00:03:47.640
在任何机器上都可以，因此我们采取的方式是使用您的密码，并对其加盐

00:03:47.640 --> 00:03:52.620
通过您的用户名并通过脚本运行它，这是一个内存硬哈希

00:03:52.620 --> 00:03:57.930
我们的调谐器功能可以在手机或PC上花费大约一秒钟的时间，而您

00:03:57.930 --> 00:04:02.790
知道那些最终以您的两个密钥对和一个路由对称密钥结尾

00:04:02.790 --> 00:04:08.010
仅存储在从未写入过的RAM中，从未写入过磁盘或已传输过，我们可以

00:04:08.010 --> 00:04:12.150
做公共链接基本上只是编码我演示的URL中的功能

00:04:12.150 --> 00:04:19.440
早些时候，我还演示了您看到的媒体播放，但我没有提到我们也想

00:04:19.440 --> 00:04:25.349
基本上在墩玻璃中有一个您可以授予特定用途的应用程序

00:04:25.349 --> 00:04:29.580
功能，但我们希望将其沙盒化，以使它们无法

00:04:29.580 --> 00:04:33.949
摆脱这种情况，特别是在浏览器中，我们有一个原型

00:04:33.949 --> 00:04:41.219
基本上将浏览器，wine和x86模拟器交叉编译为JavaScript

00:04:41.219 --> 00:04:51.990
通过AM脚本不是很快，但是是的，所以要确保我们的安全

00:04:51.990 --> 00:04:55.650
从根本上关心目录被破解

00:04:55.650 --> 00:05:02.699
您执行数学TLDR随机14个字符的密码否，除非您拥有3000亿个密码

00:05:02.699 --> 00:05:08.430
一千年来的美元是要花多少钱的图表

00:05:08.430 --> 00:05:17.669
一年后破解密码，您会看到那里有一条红线，还有

00:05:17.669 --> 00:05:27.749
我做的时间还可以，所以还可以很快回去，所以基本上不要

00:05:27.749 --> 00:05:32.849
使用11个字符的密码或什至是12个字符的14密码是好的，是的

00:05:32.849 --> 00:05:37.289
基于量子计算机的应该是随机的

00:05:37.289 --> 00:05:42.029
就像我前面提到的那样，攻击具有隐窝免费功能，即链接

00:05:42.029 --> 00:05:46.409
密钥之间是与源对称加密的目标密钥

00:05:46.409 --> 00:05:51.990
关键，这就是您遍历那棵树的方式以及我刚才解释的登录内容

00:05:51.990 --> 00:05:56.550
这只是散列这两个都没有已知的量子攻击

00:05:56.550 --> 00:06:00.479
无论如何，重要的文件都会变成2倍，所以基本上所有文件

00:06:00.479 --> 00:06:07.560
任何不共享的东西都已经可以从量子计算机上安全地获得

00:06:07.560 --> 00:06:12.509
事情很明显，您的工作我们仍然在签署权利，那

00:06:12.509 --> 00:06:16.500
基本上所有它们都是对称加密，所有标准的非对称加密都被破坏了

00:06:16.500 --> 00:06:22.639
一台量子计算机，以便他们可以删除您的数据，但我无法读取，

00:06:22.639 --> 00:06:30.240
那么最后的攻击通常是床栏可以做的是不安全的，是的

00:06:30.240 --> 00:06:34.259
如果您是随意信任的临时用户，则取决于您的威胁模型

00:06:34.259 --> 00:06:39.209
某人的公共服务器信任SSL证书层次结构，当然，您的

00:06:39.209 --> 00:06:43.790
机器，那么您就可以使用网络界面

00:06:43.790 --> 00:06:51.210
就像Facebook一样，更多的偏执狂用户可以做各种事情，基本上

00:06:51.210 --> 00:06:56.820
编译并在自己的计算机上运行，​​这是我早些时候掩饰的一件事

00:06:56.820 --> 00:07:03.270
幻灯片是我们试图明确避免对DNS或SSL的任何依赖

00:07:03.270 --> 00:07:13.050
证书颁发机构，使用ipfs容易得多，我想谢谢您建立

00:07:13.050 --> 00:07:16.889
安全性，因此我们在服务器和前端上都具有可复制的构建

00:07:16.889 --> 00:07:20.639
不要使用NPM，我们只有八个javascript依赖项

00:07:20.639 --> 00:07:24.090
结束了其中三个是加密库，我们有自己的确定性

00:07:24.090 --> 00:07:28.680
替代Web Pack和Minifiers，我们可以自行托管所有资产，因此

00:07:28.680 --> 00:07:34.650
没有跨域请求到任何CD结尾哦，而且大多数

00:07:34.650 --> 00:07:38.610
客户代码也以安全类型的语言编写并交叉编译为

00:07:38.610 --> 00:07:52.650
使用JavaScript进行提问，但是，如果您有演示线路，可以尝试一下

00:07:52.650 --> 00:08:01.380
有一本书会进入小册子，然后会更详细

00:08:01.380 --> 00:08:03.979
任何问题

00:08:13.390 --> 00:08:23.810
好的，您好，您在构建此模型时有多偏执，但由于它仍在

00:08:23.810 --> 00:08:29.240
开发不会像我们将要做的那样多，您有没有感觉到系统的任何部分

00:08:29.240 --> 00:08:36.110
可能不是很偏执，我的意思是说，所以最初我们会

00:08:36.110 --> 00:08:40.910
通过飞马本身进行释放，但是使用一些

00:08:40.910 --> 00:08:44.570
例如一种多重签名的东西，这样我们中的一个人就受到了损害

00:08:44.570 --> 00:08:55.960
不会妥协整个事情，像这样的问题

00:08:55.960 --> 00:09:00.800
确定性的构建者，尤其是面向目标的构建者，这真的很酷

00:09:00.800 --> 00:09:04.910
确保那里没有很多项目

00:09:04.910 --> 00:09:08.480
导入那么多用于安全应用程序的东西会很漂亮

00:09:08.480 --> 00:09:16.190
人们可以找到的所有这些模块都很可怕，是的，所以

00:09:16.190 --> 00:09:20.210
now瑙火本身，我们没有写那是另一回事，但这是

00:09:20.210 --> 00:09:27.610
是的，很酷的其他问题

00:09:30.270 --> 00:09:35.040
我想你可以你想要另一件事，就是你可以给别人

00:09:35.040 --> 00:09:38.520
公共链接，因此您可以拥有无​​需登录即可访问的公共链接

00:09:38.520 --> 00:09:44.339
查看特定的特定文件或特定的目录，这样我就可以

00:09:44.339 --> 00:09:58.110
快速演示，这是一个公共链接，这就是它的样子

00:09:58.110 --> 00:10:05.820
您浏览到的哈希之后有很多东西可以完成它的工作，

00:10:05.820 --> 00:10:11.850
那是我们可以看到的目录，所以如果我们返回到实际登录的用户

00:10:11.850 --> 00:10:15.089
那是目录，所以您可以看到有很多同级物品

00:10:15.089 --> 00:10:21.930
如果我们尝试建立目录，则看不到任何目录，我们可以进入

00:10:21.930 --> 00:10:27.560
这些家伙，看看，所以您支持链接到整个子树

00:10:34.440 --> 00:10:40.470
您需要社区方面的帮助吗？

00:10:40.470 --> 00:10:52.650
 UI开发人员会很棒，因为是的，我们不是UI开发人员，所以

00:10:52.650 --> 00:11:03.710
不像它看起来那么漂亮，是的，其他的都很好

00:11:04.910 --> 00:11:14.010
安全审核，我们收到了QA 53的报价，但是20周年，还有什么

00:11:14.010 --> 00:11:22.520
尝试一下实际个人的条件给我们反馈

00:11:25.830 --> 00:11:32.250
是的，我们讨论过的另一件事是，我们需要用于交易的API

00:11:32.250 --> 00:11:38.160
 ipfs的数据权利，因此不会被固定，中间是

00:11:38.160 --> 00:11:40.519
关于它

00:11:41.630 --> 00:11:47.130
如果我们现在要这样做，那么您有一台必须运行的服务器，

00:11:47.130 --> 00:11:51.839
之前谈论要使它变得尽可能接近将需要什么

00:11:51.839 --> 00:11:56.010
可能只是一个Web应用程序，它们可以加载到某个地方，因此您不必

00:11:56.010 --> 00:12:01.560
甚至取决于服务器该故事的内容基本上是这样的

00:12:01.560 --> 00:12:07.680
实际使用的条件，所以有很多我们只使用块放置和

00:12:07.680 --> 00:12:15.660
获取引脚添加更新，我们将计算大小，我们使用块统计，

00:12:15.660 --> 00:12:21.990
有我们等效的IPS，它只有两个电话，有一个电话发送一个

00:12:21.990 --> 00:12:26.700
遵循我们将轻松替代的基础要求

00:12:26.700 --> 00:12:34.860
点对点流和PKI调用，但这些都是PKI数据，现在也

00:12:34.860 --> 00:12:40.800
在ipfs本身中仍然是集中签名的，因为我们需要确保

00:12:40.800 --> 00:12:47.430
用户名，但想法是PKI将在每个节点上进行镜像，因此

00:12:47.430 --> 00:12:52.880
他们可以进行本地查询而不会泄漏正在查找的键

00:12:54.829 --> 00:12:58.850
太好了，非常感谢

