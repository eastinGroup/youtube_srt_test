WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.680 --> 00:00:14.599
好吧，好吧，我要做两个演示，一个使我受到启发去做一个额外的Q，然后

00:00:14.599 --> 00:00:21.869
第一个将是该界面的延续

00:00:21.869 --> 00:00:29.820
讨论，我基本上只是想表明事情已经完成，但是从

00:00:29.820 --> 00:00:35.309
杰夫（Jeff）或至少我们是如何准备要完成的工作的

00:00:35.309 --> 00:00:40.110
多种语言，但GSI并不经常使用它们，所以是的，我们

00:00:40.110 --> 00:00:45.480
准备其中的一件事情我们只是来自关于接口的讨论

00:00:45.480 --> 00:00:49.950
点对点接口，我们讨论了我们众所周知的恐惧，就像这组

00:00:49.950 --> 00:00:54.390
如果每个模块都有一个非常好的模块，则它们可以很好地相互配合

00:00:54.390 --> 00:00:58.739
特定的已定义接口，以便我们就像交换它们并放入新

00:00:58.739 --> 00:01:06.000
升级我们的网络堆栈的碎片我应该显示一些图像，我喜欢

00:01:06.000 --> 00:01:10.619
城市的面孔看起来像，但只是给每个像这样的想法

00:01:10.619 --> 00:01:13.439
像这样的积木彼此之间，您经常会看到一个奥林匹亚

00:01:13.439 --> 00:01:17.939
看起来像这些回购之一，它们总是以两张脸开始-

00:01:17.939 --> 00:01:23.159
然后是管道，然后在该仓库上，您得到的就像人们制作的模块

00:01:23.159 --> 00:01:26.070
界面，例如，如果您自己动手，欢迎您提交或

00:01:26.070 --> 00:01:30.509
请求者，你们的名单真的不是一个很好的匹配，所以人们

00:01:30.509 --> 00:01:34.409
在您的报告中认识到我支持您实施接口，就像是享有盛誉的

00:01:34.409 --> 00:01:39.840
对于您的兼容模块，您可以喜欢一些代码来设置测试，

00:01:39.840 --> 00:01:43.350
就像当您使用JavaScript时必须处理的那种事情

00:01:43.350 --> 00:01:48.240
因为我们没有好的接口，所以我们克服了好的方法

00:01:48.240 --> 00:01:52.710
描述程序实现的接口，从而解决该问题的一种方法

00:01:52.710 --> 00:01:58.979
就像创建一组人们可以导入和使用的测试，其中一个

00:01:58.979 --> 00:02:03.719
他们很好的例子是流拳击手

00:02:03.719 --> 00:02:08.789
所以这里的最大流实际上是原始接口-回购的飞跃

00:02:08.789 --> 00:02:13.110
乌托邦目前有一二三四

00:02:13.110 --> 00:02:17.050
或女孩和五个女孩之间的五个六个模块

00:02:17.050 --> 00:02:22.840
修补此界面，他们还会得到一个漂亮的徽章，就像设置一些代码一样

00:02:22.840 --> 00:02:29.380
该测试由您自己的测试跑步者进行，这是设置测试的一种特定方法，

00:02:29.380 --> 00:02:36.489
你能找到在那儿做的女孩回购吗？所有这些都在这里描述，但是

00:02:36.489 --> 00:02:42.489
当您向下滚动时，像是在此说明中或我们不想

00:02:42.489 --> 00:02:45.670
变得非常明确，就像有时这些界面会发生变化，而我

00:02:45.670 --> 00:02:48.760
知道我们必须像他们想要的那样更新它们，就像我们应该传达的那样

00:02:48.760 --> 00:02:52.840
是用户可以使用的东西，例如附加很多圆圈连接，

00:02:52.840 --> 00:02:57.610
摄取我们说的好吧，重要的是您看到连接，然后告诉您是否

00:02:57.610 --> 00:03:01.959
您知道的收听者或接收者可能是完全不同的名称，可能是

00:03:01.959 --> 00:03:05.860
将调音台连接到没有连接的连接的一种完全不同的方法

00:03:05.860 --> 00:03:09.790
很重要，但至少您先揭露某些东西，然后再揭露所有

00:03:09.790 --> 00:03:13.420
用一种语言实现该接口应该完全公开相同的功能

00:03:13.420 --> 00:03:20.010
拨号和聆听是一样的，所以我们有了这个界面，这些

00:03:20.010 --> 00:03:28.950
测试套件在这里，我们不仅后悔，就像我想检查源文件夹一样

00:03:28.950 --> 00:03:32.530
因为这是作为模块代码测试套件的模块，所以

00:03:32.530 --> 00:03:44.709
测试不是模块的测试，而是一堆测试，例如基础测试

00:03:44.709 --> 00:03:49.239
从拨号器打开流，从您所知道的网罗的方式开始流

00:03:49.239 --> 00:03:53.260
就像双手之间的连接之类的连接打开了双方的信息流

00:03:53.260 --> 00:04:00.459
双方确保他们像我们可以从双方打开流，有一些

00:04:00.459 --> 00:04:03.880
其他的事情，比如关闭，就像我们关闭流一样，就像我们关闭流一样

00:04:03.880 --> 00:04:08.170
搅拌机，因为当您关闭像水一样打开的溪流时，一些拳击手

00:04:08.170 --> 00:04:12.100
主机自动销毁，我们只需要彼得·皮奥特（Peter Piot），就像您可以添加

00:04:12.100 --> 00:04:15.730
混合器打开，关闭所有渣土流，并保持拳击手的状态，因为您可能

00:04:15.730 --> 00:04:19.090
仍然想没收你只是没用的东西

00:04:19.090 --> 00:04:23.530
现在，有一个压力测试，这就是所谓的大型压力测试

00:04:23.530 --> 00:04:27.460
因为就像他要花一个小时跑一样，就像我们检测到

00:04:27.460 --> 00:04:35.460
我的问题等等，通过这一系列的测试，我们实施了两个

00:04:35.460 --> 00:04:41.349
Jess的三个多路复用器一个基于快速的复用器，另一个基于我们要做的事情

00:04:41.349 --> 00:04:46.690
创建内部综合系统，我们就像在这些模块上运行测试一样，

00:04:46.690 --> 00:04:51.580
看到他们符合该接口，这就是我们的合作方式

00:04:51.580 --> 00:05:03.490
在Jess中测试该界面，如果我去前任做这个，我们会在这里看到通过

00:05:03.490 --> 00:05:18.280
就像他们俩都通过相同的接口一样，所以不，我知道

00:05:18.280 --> 00:05:24.789
很重要，所以现在我知道我可以进入你的嘴里，你做同龄人捆绑，就像

00:05:24.789 --> 00:05:30.400
用另一个替换三个月，两个都可以在我的堆栈上工作，是的

00:05:30.400 --> 00:05:36.009
这就是我们在对等网络中使用多个构建块的方式

00:05:36.009 --> 00:05:40.840
很酷，这是一个您可以找到所有其他对等事物接口的接口

00:05:40.840 --> 00:05:47.590
对于经验呼叫ray的内容路由，您总是会得到一个漂亮的徽章，是的

00:05:47.590 --> 00:05:53.530
没关系，这是演示的第一部分，第二部分是第一部分

00:05:53.530 --> 00:06:01.659
将这些东西整合在一起真的是我的全部，而我要很快

00:06:01.659 --> 00:06:06.159
您会发现将在该对等存储库上运行的所有代码

00:06:06.159 --> 00:06:10.449
examples文件夹中，您可以找到许多示例，例如“我将传输协议”

00:06:10.449 --> 00:06:16.870
流多路复用效果很好，您在这里有发言权，所以如果我们去

00:06:16.870 --> 00:06:21.810
杀了我已经在那里

00:06:23.970 --> 00:06:35.700
如果我们去杀死杀手，让我们先尝试运输工具，那么最重要的是

00:06:35.700 --> 00:06:40.530
这些示例中的所有示例始终像创建便笺功能，就像

00:06:40.530 --> 00:06:44.880
阅读对等信息并向其中添加多个其他信息

00:06:44.880 --> 00:06:49.050
总是发生动作的一部分，在这里我们就像

00:06:49.050 --> 00:06:53.850
起始节点，喜欢在两者之间建立连接，但是我

00:06:53.850 --> 00:06:58.710
真的要您注意的是这个捆绑软件，就像这样的构造函数

00:06:58.710 --> 00:07:04.440
点对点节点的方式，所以在这里我们可以看到它非常简单，就像我们

00:07:04.440 --> 00:07:12.600
实际上，我认为这是激光指示器，好了，我得到了你的提示，所以你有

00:07:12.600 --> 00:07:16.920
此处的捆绑包接受对等类获取以下任何一种的构造函数的方式

00:07:16.920 --> 00:07:22.680
默认值，因此我作为点对点用户超过了我自己的Whipple损益表

00:07:22.680 --> 00:07:27.540
扩展了点对点骨架的方式，我说我想使用传输TCP

00:07:27.540 --> 00:07:30.690
这很像一个权重将显示堆栈，该协议

00:07:30.690 --> 00:07:34.560
多路复用，但不做任何事情，您知道不做任何对等发现

00:07:34.560 --> 00:07:44.310
就像TCP，所以如果我运行这段代码，基本上可以做到这一点

00:07:44.310 --> 00:07:53.790
从一个到另一个的风格好，所以没有人在听，没有两个人在听

00:07:53.790 --> 00:07:59.280
拨号到Nile协议事物上的另一个事物，然后对等

00:07:59.280 --> 00:08:04.110
世界，消息传递非常简单，通过TCP传递专业喜剧

00:08:04.110 --> 00:08:07.770
这并不是什么令人兴奋的事情，就像任何人都可以要求该模块一样

00:08:07.770 --> 00:08:15.690
输入指法，让我们转到示例示例的最大流，

00:08:15.690 --> 00:08:26.310
混合，所以在这里我们又有一次像我的默认设置一样，其余的

00:08:26.310 --> 00:08:31.380
代码与协议上的绑定几乎相同，我想我知道

00:08:31.380 --> 00:08:36.060
现在我但是现在我正在使用TCP，我是说我先生有一个流

00:08:36.060 --> 00:08:41.640
为此使用快速，所以当我执行多个拨号协议时

00:08:41.640 --> 00:08:49.020
从节点1到节点2，而不是创建多个原始套接字

00:08:49.020 --> 00:08:52.680
实际上在该流轴上创建了很多流，并重用了

00:08:52.680 --> 00:08:57.750
连接，对于用户来说，这非常重要，是的，用户也很漂亮

00:08:57.750 --> 00:09:01.589
非常透明的权利，因为您无法感觉到同一件事，而我们纯粹是恐惧

00:09:01.589 --> 00:09:06.570
非常聪明，可以理解哦，除了要去的这个码头，我有一条小溪

00:09:06.570 --> 00:09:11.459
如果没有使用它，我尝试打开一个新的连接，我们都很高兴，所以如果

00:09:11.459 --> 00:09:23.279
您运行该文件，现在将OB放到每个副本另一个角落，所以顺便说一句

00:09:23.279 --> 00:09:26.640
API的图块协议，您基本上可以指定码头，如果您

00:09:26.640 --> 00:09:32.910
想拨打要与之通话的协议出现在这里，我说像

00:09:32.910 --> 00:09:38.250
我想谈谈协议a，它可以是协议B中的任何类型的字符串，

00:09:38.250 --> 00:09:43.350
就像这样，当他们在学生笔记上死亡时-您甚至可以打开

00:09:43.350 --> 00:09:46.110
多个连接到同一协议，因此多个浪费

00:09:46.110 --> 00:10:00.000
相同的协议，另一个例子在这里，适用于流拳击手，这是

00:10:00.000 --> 00:10:03.959
就像我们一样，因为我要运行该地址

00:10:03.959 --> 00:10:15.779
如您所见，它可以正常工作，并且在以下两个示例中都可以

00:10:15.779 --> 00:10:19.860
我可以做的一件事就是不要指责我可以在这里做

00:10:19.860 --> 00:10:23.760
更改为Multiplex并使其变得明显，我也重命名了

00:10:23.760 --> 00:10:32.450
这些变量现在我要运行

00:10:36.190 --> 00:10:41.240
他们做了同样的事情，就像超级可交换模块一样

00:10:41.240 --> 00:10:44.530
实现与工作相同的接口

00:10:46.120 --> 00:10:55.190
[笑声]发生了更多的冲突，所以有

00:10:55.190 --> 00:11:02.510
发现了许多其他东西，例如检测使用多播之类的东西

00:11:02.510 --> 00:11:08.240
dns在局域网上查找对等点，就像对等点一样

00:11:08.240 --> 00:11:11.810
彼此之间第二次玩家不会互相争斗

00:11:11.810 --> 00:11:15.860
消失的发现，一旦发现同伴，他们就说好吧

00:11:15.860 --> 00:11:21.020
在此局域网上找到了对等方，但您也可以执行以下操作

00:11:21.020 --> 00:11:31.190
吡啶是周期性的，所以我们这个例子是更高级的例子，我们已经

00:11:31.190 --> 00:11:36.440
说我想使用TCP，这可能又是多次传输

00:11:36.440 --> 00:11:40.010
我想使用Emplex，是说买一买一加密

00:11:40.010 --> 00:11:45.080
我的连接con加密是安全的，我想使用此DHT模块

00:11:45.080 --> 00:11:49.190
这使对等路由和内容路由具有超能力

00:11:49.190 --> 00:11:52.940
捆绑然后我也有我的配置值，这就像标准配置

00:11:52.940 --> 00:11:58.910
就像巨型对象一样，有一些配置选项，我也做同样的事情

00:11:58.910 --> 00:12:05.780
如果我创建节点，我会使用这些属性来连接它们，所以就像

00:12:05.780 --> 00:12:11.330
跪着的魔杖，我也知道，我知道一棵树，然后那棵老树

00:12:11.330 --> 00:12:17.300
使用内容路由来提供，然后像内容低树一样会找到

00:12:17.300 --> 00:12:22.160
提供者，没有其他人进入文件夹pirata您的内容

00:12:22.160 --> 00:12:39.080
很好的驾驶没关系，它表明，是的，例如，一支长矛

00:12:39.080 --> 00:12:43.600
要做的事情就是内容路由，所以请确保我没有失去你

00:12:43.600 --> 00:12:47.300
因为没有人会说嘿，就像你在找东西一样

00:12:47.300 --> 00:12:52.490
来找我，我知道树会找到

00:12:52.490 --> 00:12:58.959
具有提供可见广告的节点对每个人都有意义没有

00:12:58.959 --> 00:13:08.209
很酷，所以生物节点再次做这件事，最终我们将带来

00:13:08.209 --> 00:13:14.529
结果这是来自以下方面的证明

00:13:15.069 --> 00:13:27.259
这是我们今天早上发现的，就像一个模块，是的，这是

00:13:27.259 --> 00:13:29.000
今天早上坏了，对不起

00:13:29.000 --> 00:13:37.880
这是一块木板，是的，现在是晚上，您将能够找到这个

00:13:37.880 --> 00:13:44.810
示例工作，是的，就像您看到的那样，获得了所有这些属性

00:13:44.810 --> 00:13:50.959
很容易喜欢配置，我们可能会出现在resti中

00:13:50.959 --> 00:13:57.430
您会得到一个例子，就像您可以做的所有事情一样

00:13:57.430 --> 00:14:04.100
是的，如果交通工具可以通过课程类型甚至是麻烦的话，那么如果

00:14:04.100 --> 00:14:07.579
您的传输带有一些设置，您可以传递实例

00:14:07.579 --> 00:14:11.600
您甚至可以同时使用多个流多路复用器的传输

00:14:11.600 --> 00:14:15.439
时间到了，为什么不呢？您可能想与网络中不同的部分进行交谈。

00:14:15.439 --> 00:14:18.350
支持船，你也可以，这就是为什么这总是

00:14:18.350 --> 00:14:22.819
可以支持多个加密的数组（如加密通道）可以

00:14:22.819 --> 00:14:26.540
支持多种对等发现机制，您可以拥有多种

00:14:26.540 --> 00:14:32.899
周期性的事物，就像所有这些配置值一样，有些实验性的

00:14:32.899 --> 00:14:36.889
beautify标记yes还会公开pub / sub，然后如果您想学习

00:14:36.889 --> 00:14:40.550
从一开始就确定一些我们点对点的东西，我们并不是一堆东西

00:14:40.550 --> 00:14:44.389
电子邮件和其中类似的原始内容是2000年的另一件事

00:14:44.389 --> 00:14:49.759
表，所以我们有一个不同的p2p节点开始，然后我们可以像平铺一样

00:14:49.759 --> 00:14:55.279
我和丹尼尔（Daniel）和我的歌剧打电话区别真的是这样

00:14:55.279 --> 00:14:58.760
连接，这样我就可以倾听某人的声音，并且喜欢第二秒钟和您摇晃

00:14:58.760 --> 00:15:02.070
这句话先生所有这些事情，但我不会

00:15:02.070 --> 00:15:07.470
创建到该节点的MOOC流，但我只是要对其进行预热，然后如果

00:15:07.470 --> 00:15:12.600
我想以点对点的用户身份以特定协议拨号

00:15:12.600 --> 00:15:16.710
例如，我说我想拨号到该码头，以便最终

00:15:16.710 --> 00:15:23.880
协议多路复用出现，我们有一个紧密的连接，我们告诉它

00:15:23.880 --> 00:15:30.780
挂断电话，因为如果我们挂断电话，有些人会对

00:15:30.780 --> 00:15:37.500
这样的名称，他们不用担心像边界内容路由这样的路由

00:15:37.500 --> 00:15:41.430
我向您展示的两件事可以处理多种协议，这就是

00:15:41.430 --> 00:15:45.420
就像您说出协议的字符串和单词Fund和

00:15:45.420 --> 00:15:51.570
匹配的放克和匹配的放克是如果您想做更多异国情调的东西

00:15:51.570 --> 00:15:56.100
像semper这样的异国情调，例如对于您的协议，您可以使用匹配函数

00:15:56.100 --> 00:16:00.540
做semper，以便在承受支持的情况下可以打四个电话

00:16:00.540 --> 00:16:04.680
多个版本是同一件事，因为我知道令人讨厌，他们喜欢我们有这些事件

00:16:04.680 --> 00:16:12.900
一直在那里，我们有一颗流星，那就是当您在这里发现它时

00:16:12.900 --> 00:16:16.890
当您连接出现，当您断开连接或出现时，如果您只想

00:16:16.890 --> 00:16:21.600
出于统计原因喜欢统计，这就是原因

00:16:21.600 --> 00:16:24.480
聆听此信息，或者如果您想在访问时更主动地做某事

00:16:24.480 --> 00:16:28.260
掩盖同伴连接到它，您可以默认情况下做到这一点

00:16:28.260 --> 00:16:32.760
发现后立即将其连接的示例，因为为什么不可以

00:16:32.760 --> 00:16:35.310
您可以使用ping等纯书

00:16:35.310 --> 00:16:39.240
您知道的所有类似P的时期都会增强有关以下内容的信息：

00:16:39.240 --> 00:16:44.490
就像他们问其他人一样，你自己是在听不利的地方

00:16:44.490 --> 00:16:50.310
是其他同伴从外部世界看到您，您也获得了地图

00:16:50.310 --> 00:16:55.350
API与s公开时我喜欢的API相同，如果熟悉的话

00:16:55.350 --> 00:16:58.980
有了那个，你也得到了这个，还有其他的东西，还有一个

00:16:58.980 --> 00:17:06.839
stats API，因此您可以从笔记中进行交互，从而获得类似的数据

00:17:06.839 --> 00:17:14.350
这群人在其他方面，我想就是这样

00:17:14.350 --> 00:17:19.030
显示我将仅配置对等螺母

00:17:19.030 --> 00:17:43.220
有任何问题，如果您想了解此处的此处协议是如何变暖的

00:17:43.220 --> 00:17:46.970
像暖接地连接一样建立连接，说什么是什么协议

00:17:46.970 --> 00:17:58.940
它是否可用，所以当您拨打码头电话时，我只会听到这件事

00:17:58.940 --> 00:18:03.110
码头可能出现敌人，在码头支撑处有质子，或者

00:18:03.110 --> 00:18:07.610
我们知道对方支持它的PID或不是其他人

00:18:07.610 --> 00:18:12.860
我们拨打他们的电话，然后进行识别并检查对方告诉对方的位置

00:18:12.860 --> 00:18:17.630
他们支持的协议，所以我们可以转到该对象

00:18:17.630 --> 00:18:20.600
我们的记事本有点像黄页

00:18:20.600 --> 00:18:27.740
出现，您可以看到其他对等设备支持的协议，然后再次

00:18:27.740 --> 00:18:32.150
当我们第一次彼此连接时，它会识别并识别仅发生一次

00:18:32.150 --> 00:18:35.960
因此，请想象您的应用程序可以终止所有协议，我知道

00:18:35.960 --> 00:18:41.000
多次并不意味着事实是最新的，所以您最好的事情

00:18:41.000 --> 00:18:46.340
必须要做的真的很好，您可以将其用作一个，每六个就可以知道

00:18:46.340 --> 00:18:50.450
如果您应该拨号，但是您始终可以尝试通过协议拨号，而另一方

00:18:50.450 --> 00:18:58.420
我可以告诉你的是，我是否支持

00:19:01.510 --> 00:19:08.630
是的，所以我们输入EFS LAN，甚至出现跳跃的内部，我们都做了很多

00:19:08.630 --> 00:19:12.800
例如刷新协议名称和应用程序版本，以便我们可以在

00:19:12.800 --> 00:19:24.050
未来的任何问题都可以了，非常感谢哦，是的

00:19:24.050 --> 00:19:38.300
麦克风先生，您在这里，您认为我们应该制作那个版本吗

00:19:38.300 --> 00:19:46.160
绝对你是说是的，我相信你

00:19:46.160 --> 00:19:57.500
为此打开一个问题，是的，我喜欢，因为那对于每个人来说都是显而易见的

00:19:57.500 --> 00:20:01.010
像“自动”这样的用户可以独立于语言配置您认识的每个人

00:20:01.010 --> 00:20:06.440
昨天我们已经看到了如今添加交通工具的便捷程度

00:20:06.440 --> 00:20:10.970
太棒了，但如果只是像描述的​​话，那就更好了

00:20:10.970 --> 00:20:15.470
配方，然后我们告诉它，我们将其提供给该语言

00:20:15.470 --> 00:20:22.040
Give是给我们一个实例，还是我们可以作为我们需要的所有东西出现

00:20:22.040 --> 00:20:26.840
有些时候，我们甚至想到，我希望拥有一个像

00:20:26.840 --> 00:20:31.070
冰淇淋机，谢谢，我可以说哦，我想要更多的TCP和一些

00:20:31.070 --> 00:20:35.990
三岁，第二个成熟哦，我喜欢把它混合在一起，然后我继续

00:20:35.990 --> 00:20:41.960
有点像圣代，就像是JavaScript捆绑包一样，

00:20:41.960 --> 00:20:48.740
我们的配置确实出现了您想要的样子，就像一个有趣的主意，好吗，所有

00:20:48.740 --> 00:20:54.470
是的，我想这对测试非常有用，所以您可以

00:20:54.470 --> 00:21:02.090
轻松使用这些配置，然后在相同的测试中运行它们，是的

00:21:02.090 --> 00:21:08.840
所以我想这个问题就像您需要的语言有多复杂

00:21:08.840 --> 00:21:12.620
就像我们是否有每个协议的标识符一样

00:21:12.620 --> 00:21:17.750
实现，如果我们只是一个喜怒无常的原因，我想为战利品流行

00:21:17.750 --> 00:21:25.160
重新路由多个传输等，那么我们只需要有这个，但是

00:21:25.160 --> 00:21:30.710
这些ID，以便双方都能听到她的锈蚀，而其他所有人都可以看到

00:21:30.710 --> 00:21:36.100
这些ID与我们在货架上的模型模块中的表相比，

00:21:36.100 --> 00:21:45.440
混合成分等等，是的，就像我认为我们可以很快开始

00:21:45.440 --> 00:21:52.070
那我退出配置是外部的

00:21:52.070 --> 00:21:58.250
就像每个模块的配置都是外部的一样，它变得更加

00:21:58.250 --> 00:22:01.940
如果您想使用该语言说或者我想使用PD但使用

00:22:01.940 --> 00:22:05.660
正确的方法是，这样做变得有些复杂

00:22:05.660 --> 00:22:12.050
好吧，多语言，就像我试图避免像

00:22:12.050 --> 00:22:15.590
陈，我不知道我们能很快做一些事，

00:22:15.590 --> 00:22:27.860
我们可以优化目标，所以我不只是好奇，例如

00:22:27.860 --> 00:22:33.440
有这个周期性和连续性的um，我们想得到这些，我们得到它

00:22:33.440 --> 00:22:43.250
VHT，如果您转到VHD，您会看到所有这些徽章，因为它确实

00:22:43.250 --> 00:22:46.700
同时做所有这些事情，它在前面有周期性

00:22:46.700 --> 00:22:50.480
对等体，它被剪切并路由，因为就像我们知道内容在哪里一样，

00:22:50.480 --> 00:22:53.690
以及对等发现，因为当您运行更多的waka DHT时，您就是

00:22:53.690 --> 00:22:57.110
发现随机的对等点，并喜欢刷新路由表，这是

00:22:57.110 --> 00:23:02.780
超级有用，但理想情况下这还不错，但理想情况下，所有这些

00:23:02.780 --> 00:23:06.890
在此生成包中也应该分开，以便当

00:23:06.890 --> 00:23:11.990
您正在将其加载到一个纯对等端中，您可以说我只想加载这些

00:23:11.990 --> 00:23:17.350
周期性模块，现在通过其他内容路由，我们通过

00:23:17.350 --> 00:23:21.710
启用禁用它的一部分，就像我们获得整个软件包一样，然后您就可以

00:23:21.710 --> 00:23:27.140
如果您想让其他大多数人可以禁用它

00:23:27.140 --> 00:23:32.680
反正会用数字来使用整个东西的10点

00:23:32.680 --> 00:23:46.100
还可以回答任何其他问题，谢谢[众笑]

