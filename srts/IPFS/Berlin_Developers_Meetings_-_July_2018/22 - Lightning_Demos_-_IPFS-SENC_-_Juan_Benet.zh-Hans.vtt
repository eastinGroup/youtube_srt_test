WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.689 --> 00:00:10.380
所谓的ipfs下沉就是简单加密的意思，这主要是

00:00:10.380 --> 00:00:23.640
一个命令行工具，它的工作方式是如果您说“帮助”，ipfs就会沉没

00:00:23.640 --> 00:00:30.779
向您提供共享源路径的说明，并将其加密

00:00:30.779 --> 00:00:35.219
我要做的就是抓起本地路径焦油

00:00:35.219 --> 00:00:41.430
然后使用对称的S密钥对其进行加密，然后为您输出该密钥，从而

00:00:41.430 --> 00:00:45.239
然后在反面，您可以使用相同的工具来完成输出

00:00:45.239 --> 00:00:49.680
但是我想显示的是浏览器中的内容，所以如果我在这里做

00:00:49.680 --> 00:01:08.880
我得到的是这是密文，这是AES密钥，因此没有任何广告

00:01:08.880 --> 00:01:15.020
整件事，所以它没有任何真正非常好的树样式

00:01:15.020 --> 00:01:19.710
像这样的目录的个人解密会很棒，所以我可能

00:01:19.710 --> 00:01:24.270
看看同龄人的地穴树，将其构建成像想象的拼音一样

00:01:24.270 --> 00:01:27.420
tarball，然后将Treeble the Tarble加密，这样您就可以像

00:01:27.420 --> 00:01:35.840
您可以四处浏览的档案，然后这里有这个查看器，

00:01:35.840 --> 00:01:45.860
糟糕，我的域名出现问题了

00:02:08.209 --> 00:02:13.550
值得庆幸的是，我不必依靠DNS，因为

00:02:32.780 --> 00:02:41.160
因此，它将存档下载到浏览器中，然后将其解密

00:02:41.160 --> 00:02:43.980
因此它将下载整个内容，然后将其解密，这当然是行不通的

00:02:43.980 --> 00:02:48.120
对于任何很大的东西，这就是为什么您需要更智能的东西

00:02:48.120 --> 00:02:52.620
解密网关或允许您访问的某些网关将需要

00:02:52.620 --> 00:02:55.290
就像可能会流一些部分并将其解密并像遍历那样

00:02:55.290 --> 00:03:00.060
有点辛苦，所以现在正在做什么，不是正确的方法，但是

00:03:00.060 --> 00:03:04.770
然后它会完成所有这些东西的显示，所以这使用了一堆

00:03:04.770 --> 00:03:09.420
NPM上有可用的模块来执行所有这些操作，例如渲染，我认为它们是

00:03:09.420 --> 00:03:15.330
从网络Tori处将其签出，您可以像知道mp3一样进行操作，但是

00:03:15.330 --> 00:03:21.000
那么解密就在本地进行，这里的密钥在

00:03:21.000 --> 00:03:27.270
地址栏中的，因此您从未将密钥共享给

00:03:27.270 --> 00:03:32.130
服务器，所以我们最终可能会混合使用网关来做一些

00:03:32.130 --> 00:03:38.250
解密或像帮助寻求某些地点然后其他一些地点

00:03:38.250 --> 00:03:41.370
一组东西就像地窖速率，其中服务器只为您服务

00:03:41.370 --> 00:03:45.810
只是一堆加密块，然后您就像拔出

00:03:45.810 --> 00:03:48.870
特定的并解密它们，是的，希望我们能得到一些

00:03:48.870 --> 00:03:52.650
私有内容的融合看到如此多的私有内容真是太棒了

00:03:52.650 --> 00:03:58.140
在ipfs上已经存在，因此我们可能会在六个月内拥有更多的功能

00:03:58.140 --> 00:04:00.500
谢谢你

