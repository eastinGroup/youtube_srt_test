WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.680 --> 00:00:08.460
我会告诉你拉宾的作品，所以你们当中有一些人知道

00:00:08.460 --> 00:00:22.949
当您添加某些内容时，chunker的夜间教授可能会占用太多麦克风

00:00:22.949 --> 00:00:26.730
指定一个特定的分块器，它的作用是选择一种不同的方式

00:00:26.730 --> 00:00:33.719
分割一个文件并创建一个布局，普通的天真块分割器只是分割

00:00:33.719 --> 00:00:39.920
大小真的很愚蠢Robin是基于Robin指纹识别的

00:00:39.920 --> 00:00:45.690
巧妙地分块以尝试导致两个不同版本的算法

00:00:45.690 --> 00:00:51.300
要删除重复数据的文件的意思是如果您有两个大文件，而您有一个

00:00:51.300 --> 00:00:55.350
大文件，您在某处创建了一个插入，所以现在您喜欢长大了

00:00:55.350 --> 00:00:58.469
如果您再次将其添加到我的档案中，那么从磨损的文件会创建一个新版本

00:00:58.469 --> 00:01:02.430
您将创建两个不同的散列，但理想情况下，您将复制尽可能多的散列

00:01:02.430 --> 00:01:06.150
可能会覆盖整个文件，因为如果您在

00:01:06.150 --> 00:01:09.780
幼稚的方式与基于大小的分块，然后是文件的第一部分

00:01:09.780 --> 00:01:12.689
会是一样的，但是一旦插入，其余的全部

00:01:12.689 --> 00:01:17.189
不同，所以您不会复制所有其他内容，因此

00:01:17.189 --> 00:01:22.909
知更鸟的工作方式是它试图神奇地我将离线解释

00:01:22.909 --> 00:01:29.159
使用加密来对齐分块边界，以确保仅插入

00:01:29.159 --> 00:01:33.060
可能只会花费两个或三个不同的块，但是其余的

00:01:33.060 --> 00:01:36.180
的文件将被复制这是我自称的功能

00:01:36.180 --> 00:01:42.360
很长一段时间，人们想知道嘿，这是否真的有效，所以转

00:01:42.360 --> 00:01:45.570
当我将Robin与平面FS一起使用时，旧版本的创建所有

00:01:45.570 --> 00:01:50.460
数据存储中块中的不同对象，这些对象非常昂贵，并且

00:01:50.460 --> 00:01:54.000
所以它会非常慢，所以人们只是不想使用它，但是现在

00:01:54.000 --> 00:01:56.969
我们有badge，这真的可以很快

00:01:56.969 --> 00:02:01.979
基本上和普通的分块一样快，所以我做了一个工具

00:02:01.979 --> 00:02:07.290
称为ifs基准广告选项以仅显示质量，这很简单

00:02:07.290 --> 00:02:12.599
您可以在github上找到它的工具，它的作用是一旦您将其抽出

00:02:12.599 --> 00:02:19.020
运行它会创建一个不同的回购与

00:02:19.020 --> 00:02:23.340
不同的配置，例如badge或其他，然后它将在以下位置运行

00:02:23.340 --> 00:02:27.420
带有指定的分块器和拆分器的命令等等，这样我们就可以看到

00:02:27.420 --> 00:02:31.860
对回购的影响是什么？运行时间和所有种类的差异

00:02:31.860 --> 00:02:38.610
的东西，它会吐出像报告一样的东西，所以这个报告是他

00:02:38.610 --> 00:02:45.540
就像说嘿，这一次它跑了，就像它变成了多大

00:02:45.540 --> 00:02:51.870
出来是因为这花了42秒，这就像基于普通尺寸的东西

00:02:51.870 --> 00:02:58.620
这是罗宾（Robin），所以我猜它要慢两个三或四个

00:02:58.620 --> 00:03:07.590
它比较慢，但是尺寸还是2点1演出这是尺寸，所以

00:03:07.590 --> 00:03:10.890
这使您对行为有一个想法，那么数据集是什么？

00:03:10.890 --> 00:03:16.260
是我在主题演讲中进行的所有演讲，其中都有大量的嵌入内容

00:03:16.260 --> 00:03:20.310
图片，这些图片到处都是，但是如果您复制所有图片，

00:03:20.310 --> 00:03:24.480
原始数据集是8个演出，大小块的东西是7点

00:03:24.480 --> 00:03:28.620
一些东西，然后是一点点数据，然后是拉宾指纹

00:03:28.620 --> 00:03:32.340
一个基础下降到两个演出，所以显示在包管理器中

00:03:32.340 --> 00:03:35.270
很棒

00:03:36.910 --> 00:03:40.190
[音乐]

