WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:05.580
好的，我叫杜克，我在ipfs进行位交换，今天我要

00:00:05.580 --> 00:00:09.620
在谈论新的比特交换带来的一些变化

00:00:09.620 --> 00:00:16.529
这大约是一分两分，因此基本上您应该获得标题项

00:00:16.529 --> 00:00:20.430
您的网络中出现的重复块更少了，原因是

00:00:20.430 --> 00:00:25.619
现在，我们不仅可以要求阻拦，还可以询问谁拥有该阻拦，因此我们

00:00:25.619 --> 00:00:29.880
可以更具体地说明我们如何指导我们的请求，其次您

00:00:29.880 --> 00:00:34.320
我们应该期望文件传输速度更快，部分原因是因为我们拥有

00:00:34.320 --> 00:00:38.730
少一些积极的速率限制，这也是因为当我们发现

00:00:38.730 --> 00:00:42.239
如果某人没有障碍物，那么我们可以去问其他人，嘿，你呢

00:00:42.239 --> 00:00:49.140
取而代之的是这个块，这样就可以更深入地研究这一切的工作原理，

00:00:49.140 --> 00:00:53.309
这将描述旧的交换，然后我将谈论

00:00:53.309 --> 00:00:58.800
新的更新，因此旧的交换方式是ipfs时发现工作的方式

00:00:58.800 --> 00:01:03.989
要求对文件进行位交换我要求的第一个块称为

00:01:03.989 --> 00:01:10.049
dag的根块，因此位交换字向所有

00:01:10.049 --> 00:01:16.049
与其连接的同伴说“嘿”给我根块，如果没有

00:01:16.049 --> 00:01:23.130
他们中的人有根块，然后它会出去问DHT，所以一旦

00:01:23.130 --> 00:01:27.210
一些同龄人回答说是的，我有一个障碍，那就是他们进入了

00:01:27.210 --> 00:01:30.960
所谓的会话，而该会话只是将某些内容组合在一起的一种方式

00:01:30.960 --> 00:01:35.130
可能在一个特定文件中拥有所有块的对等体

00:01:35.130 --> 00:01:42.450
随后的请求将发送给这些对等方，因此一旦我们在会话中有一些对等方

00:01:42.450 --> 00:01:49.770
对于后续请求，我们选择性地向同伴发送一条消息

00:01:49.770 --> 00:01:54.390
我待会儿再跟您谈谈我们如何做到这一点，同行们记得还可以

00:01:54.390 --> 00:01:57.960
家伙想要这些障碍物，所以，如果我遇到这些障碍物，或者如果我有它们

00:01:57.960 --> 00:02:05.130
我的数据存储区将通过旧的交换方式发送给我们

00:02:05.130 --> 00:02:09.330
会决定将哪个P发送给哪个人，我们会进行拆分

00:02:09.330 --> 00:02:13.740
将需求分成小组，我们会将整个小组发送给几个同龄人

00:02:13.740 --> 00:02:17.640
因此，当然，如果有几个同龄人有那个特定的障碍，他们都会

00:02:17.640 --> 00:02:21.150
发回去，我们有很多重复的东西，所以我们有点像

00:02:21.150 --> 00:02:27.390
调整每组一次的次数以尝试保持平衡

00:02:27.390 --> 00:02:32.840
在获得太多重复和获得不错的传输率之间

00:02:33.350 --> 00:02:37.620
因此，在新的出价互换中，我们添加了一些协议扩展，而不是

00:02:37.620 --> 00:02:43.980
直接问一个街区我们可以问这啤酒有街区吗

00:02:43.980 --> 00:02:47.340
通常我们要做的是当我们收到来自

00:02:47.340 --> 00:02:53.210
ipfs，我们将发送所谓的1/2或ps的信息，说嘿，您是否有此阻止，

00:02:53.210 --> 00:02:58.620
乐观地，我们将向其中一个同行询问该区块，然后

00:02:58.620 --> 00:03:02.490
同行没有它，然后我们出去，我们问一位同行

00:03:02.490 --> 00:03:10.980
有了它，我们如何选择将哪个乐观者发送给哪个对等方

00:03:10.980 --> 00:03:14.070
顺便说一句，一个乐观的方法是尝试减少往返时间，因为

00:03:14.070 --> 00:03:18.660
如果可以的话，我们尽可能地直接要求它，基本上

00:03:18.660 --> 00:03:23.610
为了选择哪个似乎将那个块发送给我们，我们会优先考虑同伴

00:03:23.610 --> 00:03:28.140
告诉我们他们有障碍，如果没有同龄人，或者他们都

00:03:28.140 --> 00:03:31.800
告诉我们他们拥有了它，然后我们根据

00:03:31.800 --> 00:03:36.960
过去哪个会话向我们发送了最多的阻止，因此

00:03:36.960 --> 00:03:40.140
这种优化是针对延迟时间最长的对等节点进行的。

00:03:40.140 --> 00:03:42.530
带宽

00:03:43.819 --> 00:03:46.430
三分钟，所以我跑得非常快，但只是说说一些

00:03:46.430 --> 00:03:51.950
结果，史蒂文（Steven）展示了其中的一些幻灯片，基本上您可以看到

00:03:51.950 --> 00:03:56.569
在左侧，我们有时间在y轴上获取文件，这是文件

00:03:56.569 --> 00:04:04.790
在x轴上的大小，每一行都在问，这是什么时候交换一次

00:04:04.790 --> 00:04:11.780
问一个种子两个种子或四个种子的文件，所以蓝线是

00:04:11.780 --> 00:04:14.329
旧的交换，您可以看到它们比红线高得多

00:04:14.329 --> 00:04:18.079
这是新的位交换，意味着新的位交换能够检索

00:04:18.079 --> 00:04:24.440
右侧的块更快，我们有一些重复块的图形，

00:04:24.440 --> 00:04:28.430
我在史蒂文（Steven）前面提到过，旧的掉期交易通常可以

00:04:28.430 --> 00:04:31.340
重复的块，但是图形上实际上没有红线，因为

00:04:31.340 --> 00:04:36.949
在大多数情况下，基本上没有重复的块，所以说那是一个

00:04:36.949 --> 00:04:42.139
超级快速的汇总，但总而言之，您可以期望获得新的位交换

00:04:42.139 --> 00:04:46.099
更好的传输速度和更少的重复块

00:04:46.099 --> 00:04:49.240
网络谢谢

