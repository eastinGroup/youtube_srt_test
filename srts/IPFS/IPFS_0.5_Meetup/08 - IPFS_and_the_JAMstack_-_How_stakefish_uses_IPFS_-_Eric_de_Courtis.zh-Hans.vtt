WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.110 --> 00:00:07.740
好吧，我叫埃里克·D·柯蒂斯（Eric D Curtis），我为牛排鱼工作，我在这里与

00:00:07.740 --> 00:00:15.690
关于我们如何使用ipfs和gem stack的问题，是的，我们是谁

00:00:15.690 --> 00:00:23.189
牛排鱼是验证者的主要操作者之一

00:00:23.189 --> 00:00:27.480
牛排区块链，因此代币持有者可以坚持我们

00:00:27.480 --> 00:00:31.980
确保您知道网络并奖励您，因此我们提供了很多牛排证明

00:00:31.980 --> 00:00:38.399
基础设施牛排鱼是一个姊妹公司，有两个水池，所以如果有两个水池

00:00:38.399 --> 00:00:45.510
正在处理工作量证明区块链，所以也许您已经

00:00:45.510 --> 00:00:51.059
想知道你怎么知道我怎么能成为你知道ipfs native我们怎么能

00:00:51.059 --> 00:00:56.850
在我们的网站上部署一个PFS和两个，然后开始使用它，因此我们经历了

00:00:56.850 --> 00:01:01.410
这个过程，我在这里基本上是要告诉你我们是如何做到的，并给你

00:01:01.410 --> 00:01:08.100
关于可能遇到的挑战或完成任务所需的想法

00:01:08.100 --> 00:01:12.659
所以首先要意识到的是，您不能有任何动态联系

00:01:12.659 --> 00:01:17.610
显然在内容分发层上

00:01:17.610 --> 00:01:22.310
要完全从我的PFS提供服务的网站，您必须将api和

00:01:22.310 --> 00:01:29.670
静态内容和jan就像是一种用于执行此操作的架构

00:01:29.670 --> 00:01:36.509
有很多与此架构兼容的框架，我将在这里

00:01:36.509 --> 00:01:43.680
与您交谈，所以我们使用盖茨比（Gatsby）和是的，基本上就是这样

00:01:43.680 --> 00:01:49.110
好吧，因为如果您不将这两件事分开，那么基本上

00:01:49.110 --> 00:01:57.030
除了使用一些静态缺席外，我无法使用它，所以

00:01:57.030 --> 00:02:02.579
牛排鱼完全由ipfs提供动力，它是ipfs原生的，因此我们

00:02:02.579 --> 00:02:10.170
首先定位目标ipfs，然后我们将普通网改造到其上，以便您了解牛排

00:02:10.170 --> 00:02:13.680
fish网站基本上是用fold静态编译的，看到了

00:02:13.680 --> 00:02:19.680
我们通过该管道的管道会渗入Tapenade上的所有资产

00:02:19.680 --> 00:02:27.349
然后我们更新DNS链接文本记录，以便我们更新DNS，以便

00:02:27.349 --> 00:02:35.430
基本上，它会路由到该网站的最新版本，是的，所以

00:02:35.430 --> 00:02:42.629
然后对于正常流量，它是通过Web进入IP FS网关的，因此

00:02:42.629 --> 00:02:46.439
它实际上并没有得到服务，这不像我们有一个正常的堆栈，然后

00:02:46.439 --> 00:02:52.950
IPF堆栈，我们有点像您所知道的，您知道您知道两个不同的地方

00:02:52.950 --> 00:02:57.959
我们实际上刚刚将其部署到ipfs的副本，因此您可以在此处看到

00:02:57.959 --> 00:03:02.639
DNS链接看起来很简单，这意味着有一个子域

00:03:02.639 --> 00:03:08.099
在这里，您不必使用子域，但这就是我们做到的方式

00:03:08.099 --> 00:03:13.769
这样更安全，因为这样您就可以委派该子域并进行更改

00:03:13.769 --> 00:03:20.849
是的，安全性非常简单，因此您可以在这里看到

00:03:20.849 --> 00:03:27.870
通过任何网关，我们的网站就会基本加载，并且一切正常

00:03:27.870 --> 00:03:34.049
就像您期望的任何需要API的内容直接进入该API一样

00:03:34.049 --> 00:03:40.560
通过正常，他们不能通过我的尿尿FS，但这里的所有静态内容

00:03:40.560 --> 00:03:47.519
是通过ipfs进行的，没有服务器端渲染，因此您可以看到

00:03:47.519 --> 00:03:55.019
抱歉，所以这有点像1

00:03:55.019 --> 00:03:59.040
万英尺的角度看那里到底发生了什么，所以我们有了

00:03:59.040 --> 00:04:05.729
CloudFlare，当我们通过get提交时转到CDI

00:04:05.729 --> 00:04:10.560
 CD管道我们将数据固定在pinata上，然后更新记录

00:04:10.560 --> 00:04:16.769
CloudFlare和所有正常HTTP请求的问题都转到ipfs网关，并且

00:04:16.769 --> 00:04:24.060
所有的api调用都进入了api集群，这几乎是很多

00:04:24.060 --> 00:04:27.100
更简单，更清洁，效果也很好

00:04:27.100 --> 00:04:34.210
那么如果您想了解更多关于我们的信息，您将想像如此

00:04:34.210 --> 00:04:39.250
如果您愿意，我们可以自由地与我们联系

00:04:39.250 --> 00:04:45.430
到ipfs项目上的Wikipedia，因为我认为该项目需要一点点

00:04:45.430 --> 00:04:51.970
是一点爱和对，所以如果有开发者有兴趣帮助

00:04:51.970 --> 00:04:55.660
我们正在招聘，所以请随时发送

00:04:55.660 --> 00:05:00.720
您的简历很好，非常感谢

