WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:06.000
哦，这是我们正在做的第二集，就像我在PFS和咖啡中一样

00:00:06.000 --> 00:00:09.830
要坐在这里煮咖啡，谈论一些与背心有关的事情

00:00:09.830 --> 00:00:15.990
这周，我将讨论文件API，以及更多类似过去的内容

00:00:15.990 --> 00:00:20.640
NFS实施和文件系统通常我也要制作

00:00:20.640 --> 00:00:26.250
咖啡和所谓的“连接”，这是一种过度使用的设备，如果有人

00:00:26.250 --> 00:00:30.750
曾经用过那些，这是非常好的，这是我每天要做的

00:00:30.750 --> 00:00:36.600
咖啡，我开水了，我已经抓了一些豆子，所以

00:00:36.600 --> 00:00:44.579
发生这种情况，我将开始讨论Dubbo中文件API的含义。

00:00:44.579 --> 00:00:50.730
 40我们有一个新的东西叫做I PFS files命令，您可以输入它

00:00:50.730 --> 00:00:58.800
为您提供了许多类似Unix的命令，因此您可以进行移动复制，读写

00:00:58.800 --> 00:01:07.049
文件使它们变为nls，并且像对象一样处理I PFS，但它抽象了很多

00:01:07.049 --> 00:01:10.920
V的人喜欢忙于远离哈希处理和担心的工作

00:01:10.920 --> 00:01:16.020
像更新链一样，所以如果我更改文件，我也必须更新其目录

00:01:16.020 --> 00:01:20.549
在有关它的目录中以及该目录的上方，AP家伙只是对所有文件进行了抽象

00:01:20.549 --> 00:01:25.650
这样对你来说就做到了，它真的很酷，而且适度

00:01:25.650 --> 00:01:32.759
很快，我们最近切换了我的PFS添加，以便在后端的代码中使用它，并且

00:01:32.759 --> 00:01:38.369
对于大多数工作负载，它的速度至少要快至少一百倍

00:01:38.369 --> 00:01:44.759
在我的书中这是一个很好的收获，嗯，它的工作原理是

00:01:44.759 --> 00:01:50.909
本质上仅实现一个虚拟文件系统，内存中的每个节点都有其

00:01:50.909 --> 00:01:55.829
默拉德（Merald）蛋蛋与它的纽带绑在一起，然后在您添加孩子时，它会添加

00:01:55.829 --> 00:02:00.240
子节点进入虚拟节点，然后在刷新时将这些子节点

00:02:00.240 --> 00:02:06.630
um同步并混搭，然后将该哈希添加到节点虚拟位，并且

00:02:06.630 --> 00:02:09.750
然后将其写入同步并散列的stag节点，然后一直沿链

00:02:09.750 --> 00:02:16.290
那只是发生，所以你知道有很多机会

00:02:16.290 --> 00:02:19.620
看到可以在目录下写入多个文件，然后只需要同步

00:02:19.620 --> 00:02:23.720
一次，这只会导致散列，您知道三重奏一次，而不是两次

00:02:23.720 --> 00:02:29.130
节省了我们很多时间，所以有很多机会可以

00:02:29.130 --> 00:02:34.440
以此为基础构建的应用程序我正在做的一件事是

00:02:34.440 --> 00:02:39.810
项目标志，因为我没有获取javascript是JavaScript面部网络文件

00:02:39.810 --> 00:02:44.130
资源管理器，看起来就像您知道您单击Windows资源管理器一样将其打开

00:02:44.130 --> 00:02:51.960
您的文件会像这样弹出，但对于我的PFS，它现在可以正常工作了，嗯，

00:02:51.960 --> 00:02:56.040
真的很丑，因为我没有任何设计技能，我敢肯定这是

00:02:56.040 --> 00:03:02.130
黑色，白色和灰色，但最酷的是您能够

00:03:02.130 --> 00:03:06.600
想要在网络浏览器中能够点击您可以拖动的文件

00:03:06.600 --> 00:03:10.260
将文件添加到其中，并能够将目录拖动到其中

00:03:10.260 --> 00:03:17.690
您知道通过目录遍历I PFS上的该文件系统，并且

00:03:17.690 --> 00:03:21.840
只是想让您知道一些很酷的界面来查看您的

00:03:21.840 --> 00:03:25.650
文件，我们还不太了解，就像您知道我们有保险丝一样

00:03:25.650 --> 00:03:30.720
保险丝接口，但是除了I pns um这是不可变的

00:03:30.720 --> 00:03:35.340
比管理上的几个文件要多一点

00:03:35.340 --> 00:03:42.810
您的文件系统，以便它看起来像是其背后的历史

00:03:42.810 --> 00:03:47.730
就像我想要的一样，所以我开始构建它，并且它开始于更多

00:03:47.730 --> 00:03:52.860
比现在具有的功能更多，但未来还有很多

00:03:52.860 --> 00:03:56.850
我真正想要的想法就是要努力工作，您知道朝着那个方向努力，而我

00:03:56.850 --> 00:04:01.739
仍然想在将来朝着um努力，这个想法就像我们有这个

00:04:01.739 --> 00:04:07.260
该文件系统空间和文件系统空间就像不可知的um和

00:04:07.260 --> 00:04:12.330
那么您可以将我的PFS东西装入我们，就像我说将此I PFS哈希装入到一个

00:04:12.330 --> 00:04:16.560
文件系统中的路径，然后您可以将其放入CD，然后放入I PFS中

00:04:16.560 --> 00:04:21.960
你也可以，然后我也将pns hash散入文件系统

00:04:21.960 --> 00:04:26.070
在某个时候，然后您可以将CD插入其中并在其中更改文件

00:04:26.070 --> 00:04:30.750
它会自动记录我输入的PNS，然后您就可以执行操作

00:04:30.750 --> 00:04:35.910
就像um Mount一样，甚至制作管道都是我想要的非常酷的东西，所以你

00:04:35.910 --> 00:04:39.630
可以在您的文件系统中建立管道，这将产生一个哈希，任何人

00:04:39.630 --> 00:04:44.220
其他能够接收该哈希值或写入该哈希值的人与

00:04:44.220 --> 00:04:48.900
是同一个人，所以如果我数了哈希值，而大卫写了哈希值，那么我会看到

00:04:48.900 --> 00:04:52.980
他的鸡巴数据通过网络无缝连接，这是我的想法之一

00:04:52.980 --> 00:04:56.310
拥有，您可以做很多不同的事情，例如

00:04:56.310 --> 00:05:01.830
詹纳这样的通用文件系统，可以完全适应任何情况

00:05:01.830 --> 00:05:05.960
你想让水沸腾吗

00:05:24.069 --> 00:05:30.740
好吧，这是一个有趣的部分，只关心我的PFS东西

00:05:30.740 --> 00:05:39.919
看着咖啡，然后过滤器放进去，实际上看起来很酷

00:05:39.919 --> 00:05:53.199
像正方形，而这个小三角形菱形的东西会过滤掉，

00:05:53.199 --> 00:06:11.449
拿走你的豆子，看到一种想要展示这部分时间把我的

00:06:11.449 --> 00:06:21.800
笔记本电脑在这里也许是的，那样的话豆子就在那里

00:06:21.800 --> 00:06:25.849
你做的事情实际上是非常重要的一部分，就是你让他们

00:06:25.849 --> 00:06:32.360
有点湿，然后，如果您可能想看到它，因为我知道

00:06:32.360 --> 00:06:38.389
网络摄像头是很糟糕的，但是豆子会开始像泡芙一样起起伏来，

00:06:38.389 --> 00:06:42.440
的东西，它被称为绽放，就像豆子里所有的二氧化碳一样

00:06:42.440 --> 00:06:48.289
离开，它有一种使它全部膨胀的效果，也闻起来很神奇

00:06:48.289 --> 00:06:56.150
嗯，为什么要让它发生大约30秒钟，然后您要做的是我的天哪

00:06:56.150 --> 00:07:04.099
猜到了或浇水的神，只是将其填满或循环

00:07:04.099 --> 00:07:11.659
直到它到达基本类型的东西的顶部，所以我不知道它是什么

00:07:11.659 --> 00:07:18.320
真正叫做chemex，然后一旦它到达顶部，我就慢慢地倒入

00:07:18.320 --> 00:07:24.080
直到我把水倒进去，这大约三杯

00:07:24.080 --> 00:07:28.849
像不像杯子量杯，但像杯子一样自由我喝了多少杯子

00:07:28.849 --> 00:07:35.900
杯咖啡，很快就能轻松清理所有工作

00:07:35.900 --> 00:07:40.880
就是在这里拿这个小纸过滤器然后扔掉，那差不多

00:07:40.880 --> 00:07:45.410
清洁它是由一个不错的班级制成的，该班级没有污迹或其他任何东西，所以我已经

00:07:45.410 --> 00:07:58.070
真的不需要真正进行重型清洁，就是这样，我只是在等待

00:07:58.070 --> 00:08:14.780
知道我的笔记本电脑需要找到一个新家，好了，这要快得多

00:08:14.780 --> 00:08:23.120
比上次来的要多，所以现在那只是我的日常，因为那是我的工作

00:08:23.120 --> 00:08:26.630
每天早上煮咖啡，或更确切地说，我的室友醒来后会做什么

00:08:26.630 --> 00:08:35.870
在执行um之前，请回到I PFS文件和NFS内容，以便

00:08:35.870 --> 00:08:41.089
实施就像我们需要的基于分数的概念，然后再进行

00:08:41.089 --> 00:08:45.589
接下来，我们将利用我们在这里拥有的东西，并将其构建为更通用的

00:08:45.589 --> 00:08:50.150
与您一起使用的单个文件系统真的很酷的全局路径功能

00:08:50.150 --> 00:08:55.310
真的，一个迷是小牛能够描述什么

00:08:55.310 --> 00:09:03.410
这样的话，您可以说/ as / ssh主机，您可能知道端口或

00:09:03.410 --> 00:09:06.860
无论如何，然后/某事/某事，所以您正在构建这些路径

00:09:06.860 --> 00:09:11.240
通过所有这些不同的传输方式，便笺簿和文件系统齐头并进

00:09:11.240 --> 00:09:16.460
因此，如果您要构建想要思考的文件类型的文件，

00:09:16.460 --> 00:09:21.080
系统，您将获得很多非常有趣的东西，说实话

00:09:21.080 --> 00:09:26.210
这是我什至不知道期望的东西，一旦我们到达那里就好了

00:09:26.210 --> 00:09:31.730
如此抽象并在那里，但它也非常接近且可实现，它只是

00:09:31.730 --> 00:09:35.570
可能还要花几个月的时间才能完成工作

00:09:35.570 --> 00:09:43.370
它工作正常，因此ffs文件api现在正被用于

00:09:43.370 --> 00:09:47.240
做几件很酷的事情现在最大的事情是

00:09:47.240 --> 00:09:52.970
大卫正在研究的是注册表镜像，它占用了我所有的NPM

00:09:52.970 --> 00:09:59.660
所有的软件包和所有内容，并将其存储在I PFS上，然后将每个

00:09:59.660 --> 00:10:05.800
单用户可以打开注册表，仅运行在我PFS Damon和

00:10:05.800 --> 00:10:11.930
那么您将能够从本地Damon安装所有

00:10:11.930 --> 00:10:17.330
哦，三个ifs和所有三个我的PFS文件ap，我觉得David真的很想要

00:10:17.330 --> 00:10:21.320
现在说些什么，因为我可能正在看这个，你想

00:10:21.320 --> 00:10:31.730
就像扬克，我向您展示的只是一个主意，看到我们真的很喜欢

00:10:31.730 --> 00:10:36.649
文件API的姐姐，它必须足够聪明才能知道何时

00:10:36.649 --> 00:10:42.620
更新麦克风，例如音符，并且位于我要更改的链中的上方

00:10:42.620 --> 00:10:47.990
子目录中的文件，我们会或对某事有任何想法

00:10:47.990 --> 00:10:52.850
就像一个钩子，我们可以在每次目录更改时都说，因为有

00:10:52.850 --> 00:10:57.680
某些文件，数据文件发生更改，您只需要更新此IP NS记录

00:10:57.680 --> 00:11:04.190
直接，这样我们就不必强迫MF冲洗即可

00:11:04.190 --> 00:11:09.709
我很喜欢Dennis，所以实际上是那个确切的功能是

00:11:09.709 --> 00:11:15.829
在我以前写的文件API的早期版本中，我们花了很多时间

00:11:15.829 --> 00:11:22.250
那是因为这是一个PR，而且规模很大，而且一个，我正在尝试

00:11:22.250 --> 00:11:26.959
弄清楚第一次迭代应该是什么样子

00:11:26.959 --> 00:11:30.709
就像是绝对有计划的，这肯定是将会发生的事情

00:11:30.709 --> 00:11:35.600
在那里，我们只需要四处实施它，然后将其放入

00:11:35.600 --> 00:11:41.630
要做的事情，希望它能迅速升到顶峰啊，但是，这就像其他

00:11:41.630 --> 00:11:46.459
前面的方法是您可以安装它，这样就好像有一个IP FS，

00:11:46.459 --> 00:11:51.770
称为NFS挂载，它将接受它，除了其中几个参数之一

00:11:51.770 --> 00:11:55.670
就像您要安装的东西，其中之一是发布命令，因此

00:11:55.670 --> 00:12:00.320
这是一个当um时调用的shell命令

00:12:00.320 --> 00:12:04.460
该节点何时需要更新，以便何时知道以下所有更改

00:12:04.460 --> 00:12:08.360
它冒泡到那个节点，您指定他们所谓的命令

00:12:08.360 --> 00:12:13.100
然后它会做一些事情，所以您知道，对于我而言，您将安装IP NS

00:12:13.100 --> 00:12:18.470
东西，然后更新命令将是我命名为PFS的publish the hash and

00:12:18.470 --> 00:12:23.090
在其他情况下，您可以将其写入数据库，而您知道将其写入数据库或

00:12:23.090 --> 00:12:26.480
您可能会因此而向某人发送消息，所以有很多

00:12:26.480 --> 00:12:31.360
当您允许它们变得通用时，您将获得许多非常酷的应用程序

00:12:32.230 --> 00:12:38.480
对我自己来说，这真的很酷，所以还有其他什么问题

00:12:38.480 --> 00:12:45.760
讨论是，就像我们一直喜欢在这里到处发布一样

00:12:45.760 --> 00:12:54.440
改变就像从我的书comment或评论中删除猫和那只猫，而我只是在使用

00:12:54.440 --> 00:13:00.110
该文件之一，所以我一直使用我的PFS文件，因为里程广告和

00:13:00.110 --> 00:13:08.020
那些主要的船长f但同样肯定给了用户

00:13:08.020 --> 00:13:12.860
比我对普通文件使用的方式更熟悉的方式

00:13:12.860 --> 00:13:19.340
系统，但也意味着像每个人一样都将开始创建目录

00:13:19.340 --> 00:13:23.600
在IFS储存库中，我可能不会期望如此，因为

00:13:23.600 --> 00:13:33.290
那么我不能在没有目录的情况下从同一目录中添加两个文件

00:13:33.290 --> 00:13:41.150
我更喜欢分开，所以一件事我在想类似的线条

00:13:41.150 --> 00:13:46.370
不知道我们是否应该像您所知道的主要产品那样去掉IPS add和cat

00:13:46.370 --> 00:13:51.260
命令，但是就像在运行时我在想的一样，我给我们添加

00:13:51.260 --> 00:13:55.280
在其中您知道它会正确固定，但是每个人总是会迷失方向

00:13:55.280 --> 00:14:01.730
他们结束的事情，所以我的想法是每次添加时都可以

00:14:01.730 --> 00:14:05.180
我的想法不是IRC中有人提到并提出来吗，我的意思是我以为

00:14:05.180 --> 00:14:10.670
每次添加时都是一个好主意，它使用文件名作为文件名，

00:14:10.670 --> 00:14:13.529
您添加的内容，也许还有日期或其他内容

00:14:13.529 --> 00:14:19.259
然后将其作为条目写入文件API，这样您拥有的文件API就像/

00:14:19.259 --> 00:14:23.939
引脚/文件日期的名称或其他名称，这样非常容易

00:14:23.939 --> 00:14:27.839
只是看着那里，记得哦，我在这里添加的所有东西，我想

00:14:27.839 --> 00:14:30.949
这将是一件很棒的事情，因为这种解决方案

00:14:30.949 --> 00:14:37.709
一个长期存在的问题，我到底添加了什么，这是什么？我们

00:14:37.709 --> 00:14:42.959
甚至可以使LS引脚在MF中做一些反向搜索，或者

00:14:42.959 --> 00:14:48.149
文件API实际上喜欢从那里获取名称并将其放入

00:14:48.149 --> 00:14:54.569
显示引脚LS，这实际上是很酷的，是的，然后

00:14:54.569 --> 00:15:00.540
首先让WI或Station有了很多方法，也使很多事情变得更容易

00:15:00.540 --> 00:15:05.069
在添加了网络的地方，因此最终用户将像

00:15:05.069 --> 00:15:09.149
书面的我都知道他们有什么吸引人的注意，他们将会

00:15:09.149 --> 00:15:13.259
能够删除它们，实际上是正确的，因为并且成为您所拥有的东西

00:15:13.259 --> 00:15:20.129
不记得你也把它钉在紫色是的，不值得你当地的代码

00:15:20.129 --> 00:15:23.699
为什么现在像这样，我们使用本地存储来存储我们固定的内容

00:15:23.699 --> 00:15:28.920
网络用户界面，它与CLI不一致，如果我们切换到

00:15:28.920 --> 00:15:34.610
将文件API填充到那里，然后我们就可以很干净地解决该问题了

00:15:34.610 --> 00:15:41.790
嗯，我很抱歉十滴，以明确如何删除将在

00:15:41.790 --> 00:15:49.589
这种情况下um会删除仍只是取消固定，否则我们实际上有

00:15:49.589 --> 00:15:57.269
一种完全删除文件的方式，例如我偶然添加的文件

00:15:57.269 --> 00:16:04.649
大文件，我只想摆脱它，是的，所以我们要做的是

00:16:04.649 --> 00:16:09.779
就像您在网络用户界面中所知道的，我们可以进行删除，我们可以进行删除

00:16:09.779 --> 00:16:16.740
实际上取消固定并喜欢删除这些块，但我们还必须检查

00:16:16.740 --> 00:16:20.670
确保它没有被其他任何东西钉住，否则您会知道我们

00:16:20.670 --> 00:16:25.230
破坏事物，例如我们可以说删除，然后将其删除

00:16:25.230 --> 00:16:28.920
然后尝试然后应检查引脚设置并说“嘿”

00:16:28.920 --> 00:16:33.120
这个坠子通过其他任何东西，如果是的话，我们知道给一个错误

00:16:33.120 --> 00:16:37.410
给用户，如果没有，我们可以从块存储中擦除那些块

00:16:37.410 --> 00:16:40.830
我认为实际上抹掉这样的方块将是一件好事

00:16:40.830 --> 00:16:48.690
让用户对事情发生时有更多的感觉，我希望他们这样做

00:16:48.690 --> 00:16:55.250
是的，文件API非常酷，非常满意，我知道David也是，

00:16:55.250 --> 00:17:06.780
你们还有其他疑问，我现在不知道是否有

00:17:06.780 --> 00:17:11.910
但是，或者我正在起床的任何事情，我都不喜欢记住您可能会发生的任何事情

00:17:11.910 --> 00:17:18.620
错过了进行讨论的好处，所以是的，我认为

00:17:18.620 --> 00:17:22.710
这就是我可以如何使用pi的方式，就像它可以实现很多功能

00:17:22.710 --> 00:17:27.630
用例，实际上喜欢向后工作，我喜欢简单并且

00:17:27.630 --> 00:17:33.000
非常有意思的表达和打击我想我为我的词典清理很复杂

00:17:33.000 --> 00:17:45.420
虽然像所有故事一样，但移动房屋是的，另一件事是

00:17:45.420 --> 00:17:49.890
我一直想做的一种相关的事情是我写了一些代码

00:17:49.890 --> 00:17:55.170
对于前一段时间我称为PFS管道的东西，而我PFS管道基本上只是一个

00:17:55.170 --> 00:17:59.850
我们网络层的包装器，这样您就可以像服务名称一样监听

00:17:59.850 --> 00:18:05.010
然后您可以通过CLI以服务名称在此处拨号，而我从不

00:18:05.010 --> 00:18:08.340
之所以要完成它，是因为我们的命令库有一些限制

00:18:08.340 --> 00:18:13.500
围绕它，但是最近有一个PR可以实际解决它，并且它

00:18:13.500 --> 00:18:17.580
看起来很有效，所以我希望能够获得这种功能

00:18:17.580 --> 00:18:21.770
工作，所以您可以喜欢创建管道，然后让其他人连接到该管道

00:18:21.770 --> 00:18:26.070
因为我希望能够将其转移到文件系统界面中

00:18:26.070 --> 00:18:34.100
以及甚至一旦我们获得pub / sub，它将如何发生

00:18:34.100 --> 00:18:38.340
一旦我们获得发布/订阅，您可能会有一个管道，它可以打印出所有内容

00:18:38.340 --> 00:18:41.309
用于发布，因此可能类似于这种文件类型的界面

00:18:41.309 --> 00:18:52.499
发布/订阅我喜欢的文件相关文件，是的，除非你们还有其他东西

00:18:52.499 --> 00:18:59.309
现在问他的公鸡来讨论的是，到目前为止，我有一个问题，我是皮埃尔

00:18:59.309 --> 00:19:07.740
API将以0的8发行1的0只是来逗弄所有人，

00:19:07.740 --> 00:19:15.330
 B是完成功能的集合，将为文件API交付404，或者

00:19:15.330 --> 00:19:20.070
仍在进行中，因此文件API现在我无意

00:19:20.070 --> 00:19:25.799
将其功能集由0更改为0，然后再返回到您的

00:19:25.799 --> 00:19:30.840
第一个问题，我想完成几件小事

00:19:30.840 --> 00:19:35.999
在运输040 um之前，我记得其中的第一个

00:19:35.999 --> 00:19:40.350
我的头是当我们添加文件时，我们使用特定的分块方案，就像我们

00:19:40.350 --> 00:19:45.600
在特定的块中继算法中使用特定的布局，我想

00:19:45.600 --> 00:19:50.399
信息并将其写入创建的文件的根块，以便在

00:19:50.399 --> 00:19:56.159
将来您可以使用该信息重新创建当天的确切日期，因为您

00:19:56.159 --> 00:20:00.419
知道将来可能我们更改了一些默认的跳跃方案，而尤里（Yuri）添加了一个

00:20:00.419 --> 00:20:04.320
文件会给您带来不同寻常的激情，但是如果我们写

00:20:04.320 --> 00:20:09.210
确切的参数用于文件中，然后我们就可以准确地重新创建它，并

00:20:09.210 --> 00:20:13.740
你知道我提供了很多凉爽的保证，对我们来说真的很重要

00:20:13.740 --> 00:20:18.509
因为它会更改文件格式，所以我希望将其设置为0表示0，因为

00:20:18.509 --> 00:20:22.139
那有点像一个重大的变化，但它并没有破坏任何东西

00:20:22.139 --> 00:20:26.090
只是更改事物的哈希值，所以这是我列表中的事物之一

00:20:26.090 --> 00:20:30.299
还有一个人不太记得它在我头顶上的样子，但是

00:20:30.299 --> 00:20:35.249
我们已经很接近了，我们昨天提供了UTP支持和040，

00:20:35.249 --> 00:20:40.619
因此，如果前一天使用040，则可以使用基于UDP的传输，

00:20:40.619 --> 00:20:45.869
可以，而且非常酷，实际上，如果你们中有人在观看和

00:20:45.869 --> 00:20:49.649
我使用040绝对推荐您尝试一下并给我一些

00:20:49.649 --> 00:20:52.919
关于它是如何工作的反馈，因为当我测试它时它很好用，但是

00:20:52.919 --> 00:20:55.180
也许就像在别人的怀中生火

00:20:55.180 --> 00:21:04.780
知道他们可能不会的彼得，所以040我希望我们可以在之前或

00:21:04.780 --> 00:21:16.870
新年左右，就像我希望打一打，我们将在32 32运送

00:21:16.870 --> 00:21:24.280
c 3前一天，或者您在角落里的混乱大会上看到的是

00:21:24.280 --> 00:21:31.270
砍掉某些东西或同伴关系，我们将运送杰里米，让您进入

00:21:31.270 --> 00:21:40.690
国会的到来知道我们有一艘船，但是是的，如果我们能

00:21:40.690 --> 00:21:46.900
可以在2016年到来之时把它发布出去我非常有信心我们可以

00:21:46.900 --> 00:21:51.100
除了那些功能之外，我也要做唯一真正的捏点

00:21:51.100 --> 00:21:55.330
我想让我们的fs repo迁移离您越来越近，

00:21:55.330 --> 00:22:02.830
然后让光盘类型EFS填充并基本上整个部署

00:22:02.830 --> 00:22:07.420
我们想先了解一下升级路径和安装路径

00:22:07.420 --> 00:22:12.910
对需要大量迁移的每个人进行重大更改

00:22:12.910 --> 00:22:18.130
和新的东西要学习，但是是的，我想我相信我们可以完成这项工作，

00:22:18.130 --> 00:22:24.130
接下来我们要两三个星期，今天的十一号是几号

00:22:24.130 --> 00:22:37.600
是的，像三个星期一样，所以，手指略微交叉，所以我认为

00:22:37.600 --> 00:22:41.980
对我们来说，将这些讨论保持在大约半个小时左右是很好的

00:22:41.980 --> 00:22:51.010
这是一个很好的长度，非常感谢大家的收看，非常感谢

00:22:51.010 --> 00:22:55.980
干杯谢谢你杰里米

