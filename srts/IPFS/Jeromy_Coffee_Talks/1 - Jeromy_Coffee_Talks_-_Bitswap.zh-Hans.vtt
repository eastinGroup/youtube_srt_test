WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:04.319
嗯，是的，我要煮咖啡，然后同时谈论交换位

00:00:04.319 --> 00:00:10.110
上周末我要去斯波坎喝咖啡

00:00:10.110 --> 00:00:17.250
一周是墨西哥，墨西哥和肯尼亚的融合，我需要在镜头前

00:00:17.250 --> 00:00:22.080
很好，但是用我的研磨机在这里研磨，然后我要

00:00:22.080 --> 00:00:29.150
放在咖啡那边，然后我要去拿点水，所以一秒钟

00:00:49.789 --> 00:00:58.649
好了，我去了椅子，换了一些不知道是谁的东西

00:00:58.649 --> 00:01:04.350
我的bffs就像在同伴之间发送数据一样，所以当我想要一些东西时

00:01:04.350 --> 00:01:09.540
告诉bit swap嘿，我想要这个东西，然后bit talk开始并设法询问

00:01:09.540 --> 00:01:16.500
网络上的每个人都喜欢这个，嗯，这与bittorrent的工作方式相似

00:01:16.500 --> 00:01:22.380
它可以让您知道广播皮尔斯想要和想要的东西

00:01:22.380 --> 00:01:27.659
希望它能吸引他们，但这是不同的，因为在bittorrent中

00:01:27.659 --> 00:01:32.310
与您交谈的人我们唯一也对同一文件感兴趣的人

00:01:32.310 --> 00:01:36.659
哦，在IPF esas案中，您正在与很多可能有或没有的人交谈

00:01:36.659 --> 00:01:41.820
文件的一小部分，甚至根本不在乎，因此您必须适应

00:01:41.820 --> 00:01:49.680
外层在这方面只是一点点，以使事情正常进行，所以在

00:01:49.680 --> 00:01:53.820
咖啡前，这是以前从未见过的任何人的副本虹吸管

00:01:53.820 --> 00:01:59.939
你把水放进去很酷，然后我用过滤器放进去

00:01:59.939 --> 00:02:06.060
它在顶部，然后我加热底部的水，它沸腾了，是的

00:02:06.060 --> 00:02:11.660
您会看到一秒钟但要烧开水，但要用一点丁烷燃烧器烧死

00:02:11.660 --> 00:02:24.349
并在其中使用丁烷，这真的很好

00:02:24.349 --> 00:02:27.349
和

00:02:38.900 --> 00:02:44.010
我大约煮了两杯咖啡，特别是

00:02:44.010 --> 00:02:48.569
因为我通常为我和我的室友都这样做，但是因为他不在这里

00:02:48.569 --> 00:02:58.230
现在这将是足够的，仍然有600毫升左右，不要

00:02:58.230 --> 00:03:08.129
知道你能在这里看到凉爽的部分，但是有火，然后我把它放进去

00:03:08.129 --> 00:03:19.530
家伙在这里鞭打沸腾，所以当我们在沸腾的时候，让我们谈谈

00:03:19.530 --> 00:03:26.189
关于今天的掉期在哪里，所以今天的比特掉期非常幼稚

00:03:26.189 --> 00:03:31.109
算法基本上说的是，每当您想要某件事时告诉每个人您

00:03:31.109 --> 00:03:36.449
知道您想要它，然后在另一端（如果您有障碍物）

00:03:36.449 --> 00:03:41.459
有人要求它就可以继续进行下去，并给他们带来好处。

00:03:41.459 --> 00:03:46.290
使开发变得更容易，我们坐在那里真的很容易

00:03:46.290 --> 00:03:49.949
说好吧，我们可以测试事物而不必担心激励措施

00:03:49.949 --> 00:03:56.129
并确保所有人都知道我给了你足够的东西

00:03:56.129 --> 00:03:59.250
我们有足够的您知道可以平衡我们想要的，他们不用担心任何

00:03:59.250 --> 00:04:03.299
那是因为这确实妨碍了在其他所有方面的工作

00:04:03.299 --> 00:04:09.060
您知道对我们有利的系统现在另一件事是

00:04:09.060 --> 00:04:13.889
对于一个人拥有一个文件而另一个人的简单情况来说，速度非常快

00:04:13.889 --> 00:04:18.750
想要它的人，因为您知道您不必担心等待或执行

00:04:18.750 --> 00:04:27.199
阻止或类似扼杀同伴并执行该um之后的所有BitTorrent逻辑

00:04:27.199 --> 00:04:34.680
所以它现在可以正常工作，相当诚实，您非常清楚如何

00:04:34.680 --> 00:04:41.789
这很简单，但是我们需要改变，我们开始注意到

00:04:41.789 --> 00:04:45.930
如果有三个人，那么会有很多人被发送阻止

00:04:45.930 --> 00:04:49.770
那里有东西，我问他们大概是三个

00:04:49.770 --> 00:04:53.100
即使我最大的努力是尽快将其发送给我

00:04:53.100 --> 00:04:56.130
当我收到一个方块告诉其他人我不想要的时候，他们可能已经

00:04:56.130 --> 00:05:02.910
从那时开始开始发送给我，这浪费了很多带宽，而您

00:05:02.910 --> 00:05:08.700
知道这对网络不利，因此我们需要弄清楚我们该如何

00:05:08.700 --> 00:05:13.050
确定要发送的块，或者我们如何确定要询问的块或车队的块

00:05:13.050 --> 00:05:20.970
碗嗯，所以决定谁去问谁是一个棘手的问题，嗯，是你

00:05:20.970 --> 00:05:26.280
知道已经在bittorrent中解决了ish，但是正如我之前提到的，我们的用例是

00:05:26.280 --> 00:05:30.570
与bittorrent的不同之处在于，并非我们正在与之交谈的每个人都是

00:05:30.570 --> 00:05:37.410
对相同的东西感兴趣，所以我们使用DHT找出实际上是谁

00:05:37.410 --> 00:05:43.080
首先拥有东西，然后从那里我们可以保持良好状态，这是一组同行

00:05:43.080 --> 00:05:47.790
谁拥有东西，然后我们想要这些障碍物，以便我们可以做一些

00:05:47.790 --> 00:05:52.620
我们可以知道不同的事情，也许您只是问每个同伴，就像问

00:05:52.620 --> 00:05:57.870
每个区块一个对等点，只要

00:05:57.870 --> 00:06:03.360
始终发送的策略不会改变，因此，如果我们现在就知道，请决定

00:06:03.360 --> 00:06:08.280
好吧，如果我们找到了一个赚钱的提供商，请问一个可能会节省我们费用的提供商

00:06:08.280 --> 00:06:13.860
在短期内有大量带宽，直到对面的变化还可以

00:06:13.860 --> 00:06:17.570
现在好了，所以他们问我要块，但我真的很想将它们设置为他们，

00:06:17.570 --> 00:06:23.340
一旦改变了整个游戏就变得很有趣，因为现在我必须弄清楚

00:06:23.340 --> 00:06:26.820
好的，我必须问多少人，以确保至少

00:06:26.820 --> 00:06:30.390
他们将在一定时间内向我发送邮件，而我不会

00:06:30.390 --> 00:06:35.250
以获得过多的重复数据，这就是我们想要的

00:06:35.250 --> 00:06:42.030
您是否知道可能是为智能代理设置的代理，可以对这些代理进行调整

00:06:42.030 --> 00:06:47.100
值，然后调整一下就知道了，可能一开始会是手动的

00:06:47.100 --> 00:06:52.440
知道了，这是您所有的输入值，这里是ABCDE，您可以对其进行调整，直到

00:06:52.440 --> 00:06:58.919
您会发现一个不错的价值，但是您知道更高级，更高级的代码将

00:06:58.919 --> 00:07:04.020
只是为您做，这很好，因为随着网络的发展，

00:07:04.020 --> 00:07:08.039
文件或多或少地变得流行，并且您知道

00:07:08.039 --> 00:07:12.000
地理位置与您知道网络客户流失以及您所在的位置和您的

00:07:12.000 --> 00:07:15.389
带宽与带宽的关系，这些因素将像真正的变化一样

00:07:15.389 --> 00:07:21.539
快速并且手动更改将不是超级可行的，所以像

00:07:21.539 --> 00:07:25.349
您要求与之交谈的人数与您知道多少人

00:07:25.349 --> 00:07:30.810
你寄去要改变我也不知道你能不能看见

00:07:30.810 --> 00:07:33.870
开始出现在这里，这有点像我的公寓里很冷，所以这

00:07:33.870 --> 00:07:38.280
煮的时间比我可能还要拉的时间还长

00:07:38.280 --> 00:07:41.909
直接从冰箱中取出，而不是将水加热到

00:07:41.909 --> 00:07:52.470
发生，所以回到大问题，这就是我们现在所拥有的，以及我们所处的位置

00:07:52.470 --> 00:07:58.979
想要开始尝试um的实际机制是不是实际的

00:07:58.979 --> 00:08:03.780
请求我不给您发送请求，等待它，您将给我的东西发回给我

00:08:03.780 --> 00:08:10.080
就像传统的RPC一样，更像是一个市场，就像一个人如何放置

00:08:10.080 --> 00:08:14.610
在纸上是你知道我基本上是说我想要

00:08:14.610 --> 00:08:18.300
这些东西，是的，我站在这里，上面写着一个招牌，嘿，所以我想要的是

00:08:18.300 --> 00:08:23.340
人们可以走过去，如果有障碍，他们可以说哦，这是本书

00:08:23.340 --> 00:08:29.610
完全是您知道选择的基础，而不是直接认识我

00:08:29.610 --> 00:08:34.200
以您为目标并等待您退还我认为实际上是的东西

00:08:34.200 --> 00:08:40.589
就um协议而言，这很酷，因为这就是您所知道的全部

00:08:40.589 --> 00:08:47.640
注册您的兴趣现在更像是一家酒吧，如果是各种各样的话

00:08:47.640 --> 00:08:51.570
就像一个酒吧，我没有，我没有看到一首令人反感的歌曲，我要去

00:08:51.570 --> 00:08:59.540
嗯，是的，这很酷

00:08:59.899 --> 00:09:07.380
戴维，您有任何具体问题要问我吗，所以

00:09:07.380 --> 00:09:12.120
看看我是伊拉克布兰登（Brandon伊拉克）的例子

00:09:12.120 --> 00:09:16.590
寻找一段时间寻找散步，但我们所有的啤酒

00:09:16.590 --> 00:09:21.390
而且我们联系的不要让它掉下来，实际上是我们在寻找的水桶

00:09:21.390 --> 00:09:27.870
是一个文件夹，并且是UNIX FS文件夹，因此它像一堆翅膀，我

00:09:27.870 --> 00:09:32.850
已经知道像哪个块哦，我知道这不是我要从中素食的

00:09:32.850 --> 00:09:38.190
他们将尝试对列在其中的每个块进行高清查询

00:09:38.190 --> 00:09:45.150
这个文件夹的这个小鸡蛋笔记，或者我现在会好吗

00:09:45.150 --> 00:09:50.190
问题嗯，我们现在有一个优化，当我尝试阅读时

00:09:50.190 --> 00:09:56.220
具有子锁的文件夹或文件um我对多个文件进行位交换请求

00:09:56.220 --> 00:10:00.690
同时封锁，然后我们最初只是寻找

00:10:00.690 --> 00:10:06.120
具有任何请求的根，然后我们发现我们做了一个

00:10:06.120 --> 00:10:11.430
搜索，然后在完成搜索之后，我们将其发送给该人

00:10:11.430 --> 00:10:17.520
我们所有的需求清单，在大多数情况下效果都很好，因为说

00:10:17.520 --> 00:10:26.010
我们正在请求文件，嗯，是说我们通常在请求文件

00:10:26.010 --> 00:10:30.210
有人知道了文件的顶部元数据块，他们还将

00:10:30.210 --> 00:10:35.160
拥有文件的其余部分，这可以为我们节省很多时间，然后位也会摆动

00:10:35.160 --> 00:10:40.650
如果没有，您知道它在一定时间内无法满足需要

00:10:40.650 --> 00:10:45.090
它会停止，并且实际上会再次请求每个人，所以它

00:10:45.090 --> 00:10:49.800
有一个后备广告，但它会首先尝试优化路径，所以当您

00:10:49.800 --> 00:10:54.900
可以看到顶部腔室中的水，它转动的底部没有太多

00:10:54.900 --> 00:11:07.100
虽然热量降低了一点，但现在有趣的部分让mmm闻起来很香

00:11:07.100 --> 00:11:15.500
在这里竖起顶部并混合一点

00:11:18.230 --> 00:11:22.580
不想因为一开始就想让自己知道就先剧烈地搅动

00:11:22.580 --> 00:11:29.480
到所谓的绽放，其中咖啡豆变热，它们

00:11:29.480 --> 00:11:33.140
释放那里的所有二氧化碳，而二氧化碳就像很多

00:11:33.140 --> 00:11:37.190
有点苦你的类型的味道，所以你想坐在上面，只是离开

00:11:37.190 --> 00:11:40.340
搅拌它会进入咖啡中，并添加一个

00:11:40.340 --> 00:11:46.580
一点点苦涩的味道，所以我搅拌一下，等待大约一分钟十

00:11:46.580 --> 00:11:53.540
几秒钟的时间或花费几秒钟的时间，所以在此过程中，水仍然静止不动

00:11:53.540 --> 00:11:56.570
在底部沸腾，每隔一段时间，我会得到一个小气泡，

00:11:56.570 --> 00:12:01.280
被推到这里，但大部分水都留在这里

00:12:01.280 --> 00:12:10.130
最奇怪的是，但是是物理上的，所以是的，你知道等等

00:12:10.130 --> 00:12:15.490
在我完成这项工作之前，还有很多事情要做，因为我在看计时器，

00:12:18.070 --> 00:12:25.550
可能看不到，但是就像在这里冒泡了一下，

00:12:25.550 --> 00:12:31.580
所有的豆子都只是坐在那里变好了，浸泡了，所有的

00:12:31.580 --> 00:12:38.900
好的，我们来的很凉快，所以我很快就会减少热量

00:12:38.900 --> 00:12:43.360
然后我要在这里搅拌

00:12:43.540 --> 00:12:52.970
很好，现在凝视着，把它放下来，它会开始吮吸你的公鸡

00:12:52.970 --> 00:13:04.120
退下来，像我最喜欢的部分，因为这是

00:13:04.120 --> 00:13:06.550
咖啡回落的唯一原因是因为这里的空气

00:13:06.550 --> 00:13:12.130
冷却并通过非常紧密的过滤器拉出咖啡，我会

00:13:12.130 --> 00:13:16.630
实际上，令我感到困惑的部分是这部手机，因为它们是

00:13:16.630 --> 00:13:20.230
不知何故，中间的管子里有空气，但我不知道

00:13:20.230 --> 00:13:26.950
管在中间，因为上面只有水，而那没有

00:13:26.950 --> 00:13:33.700
对我来说太有意义了，但是你知道什么，然后这就拉下来了

00:13:33.700 --> 00:13:39.150
当它开始冒泡时，您会知道它已经完成了，大概有五个

00:13:39.150 --> 00:13:47.080
在这里，我不知道我的相机有多好。

00:13:47.080 --> 00:14:11.950
气泡，这样就完成了，所以现在我可以冲天而为自己喝杯咖啡了，所以

00:14:11.950 --> 00:14:16.090
这就像我在IRC上聊天时正在做的一样，但实际上却不喜欢

00:14:16.090 --> 00:14:22.900
有意识的，但是这通常是我在的地方，是的，所以那是咖啡和一点

00:14:22.900 --> 00:14:33.640
明智地交换任何问题哦，咖啡很好吗，我好热，闻起来很香

00:14:33.640 --> 00:14:39.520
很好，我对此工作还有另一个疑问，尽管您知道那是

00:14:39.520 --> 00:14:48.400
如果我专门查看API的话，会非常好。

00:14:48.400 --> 00:14:55.120
位交换统计信息，其中大多数内容在听完您的信息后才有意义

00:14:55.120 --> 00:15:00.250
解释目前只有第一个提供缓冲

00:15:00.250 --> 00:15:09.370
说256中的0好是提供缓冲区，所以它具有

00:15:09.370 --> 00:15:13.690
有两种操作权，您可以要求块和新发送

00:15:13.690 --> 00:15:18.780
阻止um，所以我们提供了缓冲

00:15:18.780 --> 00:15:22.590
这是一件有趣的事情，因为它不完全属于我们

00:15:22.590 --> 00:15:27.450
添加一个新块，我们通过位交换um来添加它，所以我们告诉位交换添加

00:15:27.450 --> 00:15:32.310
块，它所做的是它将获取该块的密钥，然后它将

00:15:32.310 --> 00:15:35.520
通过数据存储将块写入到您知道的磁盘中，然后使用密钥

00:15:35.520 --> 00:15:40.590
它要做一个DHT提供网络，而那个缓冲就是当我们

00:15:40.590 --> 00:15:45.570
添加大量的块，我们可以比实际提供的块添加速度快得多

00:15:45.570 --> 00:15:50.670
它到网络，以便缓冲区是我们只是在缓冲要提供的块

00:15:50.670 --> 00:15:56.220
现在有点误导性，因为我们要做的是针对我们每个街区

00:15:56.220 --> 00:16:01.650
产生一个工作线程以使用它并提供它，因此，如果您看到

00:16:01.650 --> 00:16:06.080
实际上就像填满某些东西真的很慢，或者

00:16:06.080 --> 00:16:11.850
因为它不应该像几乎永远不应该在那里缓冲那样

00:16:11.850 --> 00:16:14.610
很快就要返工了，因为我实际上已经出乎意料了

00:16:14.610 --> 00:16:20.640
缓冲一大堆东西要占用Ram，你要走，要拿一个

00:16:20.640 --> 00:16:25.080
看一下，因为那是部分责任，你知道那个领域

00:16:25.080 --> 00:16:33.480
代码负责处理David看到的一些内存问题，但是，是的

00:16:33.480 --> 00:16:37.230
所以这就是基本上是我们添加块，这是

00:16:37.230 --> 00:16:42.810
缓冲呃提供了一个原因，那就是我们通过位交换添加块是

00:16:42.810 --> 00:16:47.490
这样我们就可以像单个界面或块一样

00:16:47.490 --> 00:16:52.320
得到一个块并正确放置一个块，您还可以检查是否有一个块

00:16:52.320 --> 00:16:56.400
而该接口只是通过您知道什么叫做块服务来完成的

00:16:56.400 --> 00:17:02.430
这是位交换um的包装，所以我们可以有一个不错的接口

00:17:02.430 --> 00:17:06.030
感觉像是本地的，我们也可以为本地块提供相同的接口

00:17:06.030 --> 00:17:10.830
但是你知道如果你要求阻止它会得到它是否在磁盘上

00:17:10.830 --> 00:17:15.690
或者它是否在其他人的磁盘上，它真的很酷，因为您

00:17:15.690 --> 00:17:22.370
知道只是觉得自己什么都没事吧，是的，是的

00:17:22.730 --> 00:17:30.300
然后关于API的另一个问题是我想要进行位交换，并且有

00:17:30.300 --> 00:17:37.380
需求列表为什么没有一个命令可以，所以我考虑添加一个需求

00:17:37.380 --> 00:17:42.690
命令，可能应该只是让API感到完整，但

00:17:42.690 --> 00:17:49.820
它只是一个BFS块获取或一个给定的um哈希的PFS猫

00:17:49.820 --> 00:17:55.230
基本上是一样的东西减去分散的数据，所以我是说我们

00:17:55.230 --> 00:17:58.590
如果您同意的话，可能应该添加一个简单的旺旺命令

00:17:58.590 --> 00:18:16.230
也许不想要甚至不尝试麦克风不，你有选择，我有一半

00:18:16.230 --> 00:18:21.870
其中，如果您订购一个期间，我可以，它有点像想要交换

00:18:21.870 --> 00:18:25.200
命令，所以我们不想为您想要的列表删除一些东西，但是

00:18:25.200 --> 00:18:28.590
有了位插槽命令就可以在没有您的情况下将某些东西添加到您的愿望清单

00:18:28.590 --> 00:18:39.530
知道尝试阅读它，是的，很酷，是的，我们可以做到，使货物在其他任何货物上

00:18:40.310 --> 00:18:52.040
没有戴维，你看上去很困惑，实际上很体贴，只是在想我是否应该

00:18:52.040 --> 00:18:58.200
提出一个问题，是否有任何讨论或喜欢下一个功能，但

00:18:58.200 --> 00:19:08.520
当它来自井壁时，我们会交换一下，就像一点交换，但就像

00:19:08.520 --> 00:19:16.970
使用其他书店就像只是两个IPA盛宴一样

00:19:16.970 --> 00:19:22.230
电力存储在某个地方，如果现在有任何指示，这是

00:19:22.230 --> 00:19:27.450
我们便盆的视频以及那些讨论的地方，这些视频真的很有趣

00:19:27.450 --> 00:19:33.360
佩特拉肯定我们现在可以谈论这个，但是请稍等

00:19:33.360 --> 00:19:36.450
像未来的事物一样，像不同类别的东西一样

00:19:36.450 --> 00:19:39.990
想一想你提到的是一种不同的东西，就像运输

00:19:39.990 --> 00:19:45.060
嗯，像现在这样，有点草率地使用了我知道的PFS来获取块

00:19:45.060 --> 00:19:50.520
从本质上讲，但是您也可以理论化一点交换，该交换只使用了HTTP

00:19:50.520 --> 00:19:54.120
每次我想获取一个块时，它都会查询一些HTTP终结点以获取

00:19:54.120 --> 00:19:59.160
块，如果得到的话，如果不是，而我们失败了，那就得到了，那就是

00:19:59.160 --> 00:20:02.940
这是一个非常酷的抽象，可以使您拥有任何想要的东西

00:20:02.940 --> 00:20:05.750
说说那个一个

00:20:07.559 --> 00:20:14.500
迈克，是的，非常好，您涵盖了所有内容，所以下一部分是

00:20:14.500 --> 00:20:21.520
我们如何要求事物，所以现在我们要求我在

00:20:21.520 --> 00:20:26.289
未来我们希望能够说我想要这个街区以及它下面的一切，或者我

00:20:26.289 --> 00:20:31.840
想要这个方块，您就知道该部分下的所有内容，并且知道

00:20:31.840 --> 00:20:37.029
能够指定您知道的unix路径（例如数据请求），因此您知道可以做

00:20:37.029 --> 00:20:42.299
像LS或reg ex，它只会返回与regex相似的事物

00:20:42.299 --> 00:20:47.770
充满激情的概念，但可能会带来更多动力，因此我们可以

00:20:47.770 --> 00:20:52.390
也许以允许我们成为

00:20:52.390 --> 00:20:58.330
关于请求更聪明，所以您较早的问题就知道要问所有人

00:20:58.330 --> 00:21:01.809
如果有一种方法可以将相同的块并获得10个相同的块

00:21:01.809 --> 00:21:07.600
要求您知道的其他每个块都可以轻松减轻

00:21:07.600 --> 00:21:13.779
收到重复的方块，这将变得很有趣

00:21:13.779 --> 00:21:19.299
而且写起来有些棘手，只是因为我PFS本身的工作方式

00:21:19.299 --> 00:21:25.899
不必进行位交换，但是使用I PFS会变得棘手，因为存在um散列

00:21:25.899 --> 00:21:30.610
放置学术界XOR表，这样您可能不一定会

00:21:30.610 --> 00:21:36.100
亲密无间，所以要问你认识一个人所有这些哈希，即使它们是

00:21:36.100 --> 00:21:42.039
不喜欢有他们，这有点奇怪，但我们已经在做

00:21:42.039 --> 00:21:45.880
假设与您所知道的请求相似，只是

00:21:45.880 --> 00:21:51.130
树上所有这些人一个人，所以这可能是一件好事

00:21:51.130 --> 00:21:59.350
让一切变得狭窄，嗯，我可以解释一些有关不良语言的问题，因此

00:21:59.350 --> 00:22:04.330
目标是喜欢构建一种我们像dag这样宽松定义的语言

00:22:04.330 --> 00:22:12.100
路径符号，它的重点是让您表达对

00:22:12.100 --> 00:22:19.640
右图，所以到目前为止所有以wap为单位的引用都已到位

00:22:19.640 --> 00:22:25.550
指向默克尔袋的散列，所以重点不仅在于

00:22:25.550 --> 00:22:30.860
将一个散列表示为该节点，但也表示图的子选择

00:22:30.860 --> 00:22:39.580
他们指向，所以想起来像CSS选择器，Jason路径或XML

00:22:39.580 --> 00:22:47.810
我猜XPath是一种语言，能够定义可以表达什么的查询

00:22:47.810 --> 00:22:53.900
您想要并且可能以什么顺序甚至超出您的顺序

00:22:53.900 --> 00:23:01.430
想要做一些事情，例如说我要自行选择此特定路径，而我想

00:23:01.430 --> 00:23:08.390
您要优先处理某些订单，例如，如果您订购所有

00:23:08.390 --> 00:23:14.360
此图中的节点向我发送其他所有注释，或者像向我发送所有其他注释

00:23:14.360 --> 00:23:20.480
就像图中的节点的mod 5一样，它允许您表达相同的含义

00:23:20.480 --> 00:23:25.670
选择器以选择多个对等方，然后要求选择不同的子项

00:23:25.670 --> 00:23:32.630
该图使它们向您发送不同类型的节点给您

00:23:32.630 --> 00:23:37.370
发送给您基本上就像一组交错的节点，

00:23:37.370 --> 00:23:41.870
一个真正强大且富有表现力的复制模型，因为您可以

00:23:41.870 --> 00:23:48.230
同时给出这些具有不同约束条件的查询，您

00:23:48.230 --> 00:23:52.970
可以像任何重复项一样使您最小化，

00:23:52.970 --> 00:23:59.300
同时避免为选择其他其他音符而进行往返旅行

00:23:59.300 --> 00:24:08.090
是的，这是这条路看起来像我一样的一个例子

00:24:08.090 --> 00:24:12.530
稍微拉一下，我在这里还有第二张幻灯片绿色哦，可以

00:24:12.530 --> 00:24:18.410
您每周制作成千上万张幻灯片，而您为此付出的成千上万

00:24:18.410 --> 00:24:22.670
Q conf就像是四百张幻灯片一样，是的，我当时很漂亮

00:24:22.670 --> 00:24:28.000
对此印象深刻，但事实证明效果很好，我有一个

00:24:28.000 --> 00:24:47.299
一杯茶里有很多好东西，我会分享我的屏幕哦，所以在这一杯茶里

00:24:47.299 --> 00:24:51.620
示例，所以这不是该语言的外观，但假设这些是

00:24:51.620 --> 00:24:54.080
我们希望能够做的正确的事情是第一行

00:24:54.080 --> 00:24:57.980
就像这里的美元参考会被特定的现金或其他东西代替

00:24:57.980 --> 00:25:03.350
否则您甚至可能考虑使用变量/星星会说“嘿”

00:25:03.350 --> 00:25:08.120
这个散列/星号下面的所有内容都将类似于UNIX中的内容

00:25:08.120 --> 00:25:13.640
把所有东西都放在它下面，然后您就可以开始选择

00:25:13.640 --> 00:25:16.700
即使您不知道哈希在其中，图下方的特定节点也是如此

00:25:16.700 --> 00:25:22.700
第三种情况，您说ref /父母生活父母/交易/ 10

00:25:22.700 --> 00:25:29.870
在这种情况下，另一个节点是要向您发送参考，然后参考当前，然后参考

00:25:29.870 --> 00:25:33.650
父代父代，然后参考父代交易，然后是最后一个

00:25:33.650 --> 00:25:39.730
这样就可以验证10个音符，以获取最后一个音符

00:25:39.730 --> 00:25:44.450
然后可能会用不同的表达方式，例如您是否想要

00:25:44.450 --> 00:25:49.970
整个路径，否则您只赢得了第四个示例中的最后一个节点，

00:25:49.970 --> 00:25:54.380
能够像杰里米（Jeremy Oh）所说的正则表达式那样表达它的想法

00:25:54.380 --> 00:26:02.200
您可以让一个有树干的人/成长想法，您可以想象一个

00:26:02.200 --> 00:26:10.880
该文件的格式为aa格式，在该格式下它们像一个称为块的键

00:26:10.880 --> 00:26:16.370
它进入一个数组，其中0是数组的第一个元素，然后

00:26:16.370 --> 00:26:21.169
就像另一个文件一样，所以它要做的就是说

00:26:21.169 --> 00:26:27.620
抓取一个图形，在任何时候您都会看到每个电影mp4下的抓取该图形

00:26:27.620 --> 00:26:31.520
每当您看到块将每种类型的链接都连接起来，然后进入第一个元素

00:26:31.520 --> 00:26:35.929
该数组并递归，并尽可能多地执行此操作，然后当您

00:26:35.929 --> 00:26:39.380
当您发现最后一个音符像该音符的每个子音一样终止时

00:26:39.380 --> 00:26:45.140
节点，这给了您一种表达方式，下面是一个图，

00:26:45.140 --> 00:26:48.470
代表电影之类的东西，我想得到的是

00:26:48.470 --> 00:26:53.899
前几块穿过图的左倾斜，所以我

00:26:53.899 --> 00:26:59.510
可以立即获取代表电影的前几个数据块

00:26:59.510 --> 00:27:04.429
开始流式传输，这将使您像真正的快速流式传输一样

00:27:04.429 --> 00:27:07.669
在一个图上，但这可以是任何一种图，就像他们不是

00:27:07.669 --> 00:27:12.950
与图表的布局相关联的时间更长，您可以指定一个查询

00:27:12.950 --> 00:27:17.690
优化这种行为的最后一个是您可能会考虑的地方

00:27:17.690 --> 00:27:22.929
将表达式嵌入另一个权利中，这样您就可以选择

00:27:22.929 --> 00:27:30.620
您可以先在一个类似图表上进行选择，然后从中抽出价值

00:27:30.620 --> 00:27:36.200
图，然后将该值用于另一个查询，因此，如果另一个节点

00:27:36.200 --> 00:27:41.389
有一个粗略的参考，然后它可以完全解决此查询并返回给您

00:27:41.389 --> 00:27:46.039
您需要自己验证的所有节点并以类似的方式进行验证

00:27:46.039 --> 00:27:48.409
不必执行这些操作，就像我们要避免的那样

00:27:48.409 --> 00:27:53.600
归根结底，这些巨大的缺口就像我要索要的一样

00:27:53.600 --> 00:27:56.630
这些节点中的每个节点都需要迭代地进行

00:27:56.630 --> 00:27:59.690
说嘿，一旦我变得粗糙，就给我一个粗略的数字，然后找出

00:27:59.690 --> 00:28:04.669
下一个说，嘿，请给我下一个，依此类推，嗯，结果

00:28:04.669 --> 00:28:08.330
真的真的很慢，所以如果你可以用另一种方式表达这一点

00:28:08.330 --> 00:28:13.250
节点可以将所有内容发送给我，而在其他地方，情况要好得多

00:28:13.250 --> 00:28:18.409
这些表达式变得很有用，您可以将它们用作条件

00:28:18.409 --> 00:28:26.179
程序，或者您可以开始在所有位置嵌入这些选择器，

00:28:26.179 --> 00:28:31.940
用它们来表示可能需要变异的图，否则我

00:28:31.940 --> 00:28:36.710
可能需要正确发送或包含在捆绑包中，所以您可以想象说

00:28:36.710 --> 00:28:41.809
嘿，我想兑现图表的一部分，因为我要下线

00:28:41.809 --> 00:28:47.269
并希望像某种图形选择一样进行缓存以进行离线阅读或

00:28:47.269 --> 00:28:52.070
随便什么，您都可以使用

00:28:52.070 --> 00:28:57.799
像这样很酷的符号，所以无论如何都还不清楚实际的语言是什么

00:28:57.799 --> 00:29:00.410
看起来像，但我说的是

00:29:00.410 --> 00:29:06.320
我们想要摆脱它，是的，我真的很喜欢，所以就像看着这个

00:29:06.320 --> 00:29:11.870
听您谈论它，使我认为我们可以对此进行概括

00:29:11.870 --> 00:29:16.250
只是不像只是进行位交换，我们可以使它成为I PFS路径

00:29:16.250 --> 00:29:22.310
格式化自身，您会知道我们拥有的路径包，然后将所有这些放进去

00:29:22.310 --> 00:29:27.560
逻辑，因此我们只有一种非常酷的方式来定义查询

00:29:27.560 --> 00:29:32.120
重新包装行李，这确实是我们在这里所做的，所以这可以与

00:29:32.120 --> 00:29:36.710
有了IPL d规范，它可能像是它的配套规范

00:29:36.710 --> 00:29:43.600
非常酷，嗯，你也在谈论像索引选择，我认为嗯

00:29:43.600 --> 00:29:48.560
真的很酷，我们可能可以避免像选择索引一样漂亮

00:29:48.560 --> 00:29:54.320
当我们转向强制命名链接，然后像我们所有的人一样时

00:29:54.320 --> 00:29:58.850
文件中的所有块都是数字，因此您实际上可以使用

00:29:58.850 --> 00:30:03.590
链接实际上只是块索引，这样我们就不必

00:30:03.590 --> 00:30:07.220
担心选择索引的任何特殊逻辑，然后我们只需要

00:30:07.220 --> 00:30:13.430
弄清楚你知道的元转义符，你拒绝文件谢谢

00:30:13.430 --> 00:30:18.500
那会很酷，我很兴奋，那会非常非常

00:30:18.500 --> 00:30:24.140
有趣，很酷，我们是否想谈一谈更多，还是我们想要

00:30:24.140 --> 00:30:28.070
尝试尝试考虑其他功能的其他功能

00:30:28.070 --> 00:30:34.310
谈论我对其他策略的钩子感到很兴奋，

00:30:34.310 --> 00:30:38.300
能够表达下载其他内容的代理，这是很多

00:30:38.300 --> 00:30:41.000
像杰里米（Jeremy）这样的事情，您可能想谈一谈

00:30:41.000 --> 00:30:45.800
机器人，您可能会写一本我觉得很有趣的东西

00:30:45.800 --> 00:30:49.970
这能够吸引各种交流，例如

00:30:49.970 --> 00:30:53.720
今天就像针锋相对，那种交流就像一对一

00:30:53.720 --> 00:31:00.410
您尝试在其中保持相同比例的有利可图的数据交换您

00:31:00.410 --> 00:31:03.950
可能会看到这变得对称，就像您开始考虑

00:31:03.950 --> 00:31:08.180
数据本身的价值，并说实际上像这样的数据不是

00:31:08.180 --> 00:31:13.779
有用或有价值的，所以我要把它折价一些，我们很高兴

00:31:13.779 --> 00:31:18.609
我分配给它的一些常量喜欢这个数据的值，而你

00:31:18.609 --> 00:31:22.960
可以在开始交换之前进行协商，然后再扩展

00:31:22.960 --> 00:31:28.059
是说像我有加密货币，并说允许说话的节点

00:31:28.059 --> 00:31:33.580
通用货币格式，以便能够根据以下信息进行协商和四处移动数据

00:31:33.580 --> 00:31:40.269
关于价格的问题，这样您就可以完全扭转今天CD结束的方式

00:31:40.269 --> 00:31:45.789
连接此类协议，因为您可以创建其他类型的行为

00:31:45.789 --> 00:31:50.009
例如通过加密货币收取货款，如果成功了

00:31:50.009 --> 00:31:54.909
与那种加密货币无关，并创建一个协议，允许任何

00:31:54.909 --> 00:31:59.589
我们班上的学生注意谈判协议并说嘿，就像你用

00:31:59.589 --> 00:32:04.239
比特币还是您使用理论阿莫尔，您是否像其他一些协议那样使用

00:32:04.239 --> 00:32:10.659
然后像我们一样准确地使用它来删除它，这将非常强大

00:32:10.659 --> 00:32:17.739
有很多新的新方法可以遍历数据和统计网络，是的，所以

00:32:17.739 --> 00:32:21.729
您带来了um的数据价值，这真的很有趣

00:32:21.729 --> 00:32:24.940
你知道一个块的值，如果一个块可溶的话，你就知道

00:32:24.940 --> 00:32:27.999
每个人都将尝试并拥有它，但是只要每个人减半，那都不是

00:32:27.999 --> 00:32:32.999
更有价值，因为获得它的成本微不足道，所以您知道

00:32:32.999 --> 00:32:37.869
确定给定成本或给定区块的价值是真的

00:32:37.869 --> 00:32:41.499
有趣的是，就像拥有它的人数的倒数一样，

00:32:41.499 --> 00:32:48.369
从创建到发现之间的时间，这将是真正的

00:32:48.369 --> 00:32:52.389
有趣的代码，是的，还有一些类似的事情，例如，您知道自己可以很快

00:32:52.389 --> 00:32:56.919
发送给我就像带宽考虑到正确的那样，所以我可能会愿意

00:32:56.919 --> 00:33:06.759
算给你更多的学分，我想如果你能得到

00:33:06.759 --> 00:33:12.820
对我而言，满足于我比其他人更快，所以我们可以在这里解锁整个

00:33:12.820 --> 00:33:16.509
长期以来在该领域处于休眠状态的大量研究

00:33:16.509 --> 00:33:21.489
轮到来了，大量的论文出来了，试图分析不同类型的

00:33:21.489 --> 00:33:29.570
基于市场的数据共享系统，任何提议的加密货币或其他

00:33:29.570 --> 00:33:34.490
各种信用核算等等，有些实际上是将其纳入

00:33:34.490 --> 00:33:39.860
试图建立像自由市场一样的围绕

00:33:39.860 --> 00:33:45.350
数据是基于有多少人想要它，以及有多少需求

00:33:45.350 --> 00:33:53.000
依此类推，如果您创建类似一个协议，就可以

00:33:53.000 --> 00:33:57.110
钩住您可以拥有所有其他这些东西，然后变成真正的

00:33:57.110 --> 00:34:00.590
容易与某种东西玩耍，因为当这些文件出来时，

00:34:00.590 --> 00:34:05.080
因为BitTorrent非常关闭，所以并没有真正移动针头

00:34:05.080 --> 00:34:09.230
尽管它是一个开放源代码协议，但它非常紧密并锁定了生态系统

00:34:09.230 --> 00:34:14.960
实际上免费的地方很难更改协议检查移动数据的方式

00:34:14.960 --> 00:34:22.010
你周围的人基本上必须像你曾经那样成为领导者之一

00:34:22.010 --> 00:34:26.929
一个非常成功的洪流客户端，每个人都在使用或使用

00:34:26.929 --> 00:34:31.720
的用户能够将新协议引入生态系统

00:34:31.720 --> 00:34:37.669
因为否则没有人会使用您的一个随机扩展，例如

00:34:37.669 --> 00:34:41.570
没有人实现，所以会很有趣，并且喜欢能够

00:34:41.570 --> 00:34:47.510
将这些行为表示为脚本，并能够进行审核和签名

00:34:47.510 --> 00:34:51.710
这些脚本，然后让它们能够在想要的节点的某些子集上运行

00:34:51.710 --> 00:34:56.210
为此，您可能会说嘿，就像我可能愿意参加

00:34:56.210 --> 00:35:00.440
协议，只要它由一组特定的人签名并且像您一样

00:35:00.440 --> 00:35:03.890
甚至不必事先拥有代码，然后可以获取代码，然后

00:35:03.890 --> 00:35:10.030
参与那种策略，是的，这真的是像直播一样的想法

00:35:10.030 --> 00:35:15.050
只要您知道就可以更新代码，只要此人发送即可

00:35:15.050 --> 00:35:19.550
我的代码，我要运行它，然后您可以知道做一些不同的事情

00:35:19.550 --> 00:35:23.150
从失败中恢复之类的事情，它们会为您提供对您不起作用的代码

00:35:23.150 --> 00:35:28.369
能够不中断而只恢复旧的东西，我使我想起了一些纸

00:35:28.369 --> 00:35:33.619
我正在阅读有关ibm的文章，我认为这是ibm的大型机资料，他们的编译器

00:35:33.619 --> 00:35:38.750
会在您的二进制文件中放一堆额外的空间，原因是

00:35:38.750 --> 00:35:43.099
您可以在代码中更新功能，然后可以将该功能实时修补到

00:35:43.099 --> 00:35:48.710
正在运行的二进制文件，并使用多余的空间来执行这些钩子和

00:35:48.710 --> 00:35:52.910
所以在代码周围有锁，它检查并拥有额外的东西

00:35:52.910 --> 00:35:57.290
令人惊讶地执行它，并且如果您可以拥有一个应用程序，那么它真的很酷

00:35:57.290 --> 00:36:05.210
它运行了多年，并且每周更新一次，您知道正常运行时间是吗

00:36:05.210 --> 00:36:10.849
是的，如果您想看看在DM级别上铺设DM的外观

00:36:10.849 --> 00:36:16.310
您可以将保留系统进行实时修补，因为

00:36:16.310 --> 00:36:20.630
不允许将其设计为停机时间，因为否则没人会

00:36:20.630 --> 00:36:27.320
电话，我是卡纳南人，很酷，很好，如果你注射的话，真是太神奇了

00:36:27.320 --> 00:36:31.910
您的代码，没问题，让我们升级是的，您可以这样做

00:36:31.910 --> 00:36:38.839
升级，是的，实际上我对操作有点失望

00:36:38.839 --> 00:36:43.580
当今的系统，因为它们可能会极大地鼓励人们

00:36:43.580 --> 00:36:48.890
许多不同的过程可以做一些小事情，因为我拥有一件事

00:36:48.890 --> 00:36:54.040
谈论的就像在单独的二进制文件中执行核心I PFS功能一样，

00:36:54.040 --> 00:36:58.310
就像使用进程间通信来完成

00:36:58.310 --> 00:37:02.839
允许您删除这些二进制文件之一并开始运行新的二进制文件，而无需

00:37:02.839 --> 00:37:08.330
整个系统都崩溃了，但是如果这些类型的事情仍然像

00:37:08.330 --> 00:37:14.060
有点贵，但不如我们只想要诱饵那样高效

00:37:14.060 --> 00:37:18.050
只是因为您了解OS流程模型的工作方式和内存

00:37:18.050 --> 00:37:25.580
管理，你知道共享内存很难看，但是是这样的，或者

00:37:25.580 --> 00:37:29.030
真的很整洁，我想这完全是一点话题

00:37:29.030 --> 00:37:32.750
s，你知道，但是我觉得这很酷

00:37:32.750 --> 00:37:37.099
如果我们能弄清楚ZFS是的，那么您就可以运行守护程序并离开

00:37:37.099 --> 00:37:41.510
它在您的余生中都在运行，这很酷，您知道永远不必担心

00:37:41.510 --> 00:37:48.859
实际上，您知道重新启动它，但是可能取决于如何放置

00:37:48.859 --> 00:37:52.190
主题使用哪种语言实现，或者您必须

00:37:52.190 --> 00:37:59.059
一堆东​​西可能在上面，是的，虽然你在那里，但你确实很酷

00:37:59.059 --> 00:38:05.690
是一点点交换的另一件事是嗯，所以一旦你到达

00:38:05.690 --> 00:38:11.089
你知道这是通用的请求和发送机制，你可以开始

00:38:11.089 --> 00:38:17.390
脚本编写，您可以开始制作一个，那就是坐在网络上做数据

00:38:17.390 --> 00:38:22.369
进行交易时，他们可以听取您对高需求的了解，然后得到

00:38:22.369 --> 00:38:28.040
自己，我们托管它，然后您将它变成这个地方，

00:38:28.040 --> 00:38:33.319
可以开始写盒子，只是试图最大程度地发挥自己的知识价值

00:38:33.319 --> 00:38:38.180
网络，我认为当我们达到这一点时，它将变得非常有趣

00:38:38.180 --> 00:38:44.630
因为我之前见过其他Bak社区，例如UM计划或打架

00:38:44.630 --> 00:38:48.790
在虚拟舞台上键入您喜欢编写脚本的脚本以及机器人和打架的内容

00:38:48.790 --> 00:38:53.690
如果我们能得到这样的事情，实际上对每个人都是有益的

00:38:53.690 --> 00:38:58.760
您知道为了建立更好的竞争而进行的某种竞争或挑战

00:38:58.760 --> 00:39:07.400
交换AI，我想这真是一件很酷的事情，你知道吗

00:39:07.400 --> 00:39:11.420
看到您想象的像脚本语言那样的交互

00:39:11.420 --> 00:39:16.790
对于这个或API骗局，是的，尤其是当您想运送该API时，

00:39:16.790 --> 00:39:23.930
像这样，必须预先定义两种外观

00:39:23.930 --> 00:39:27.260
有几种方式可以做到，就像您可以轻松实现

00:39:27.260 --> 00:39:33.140
他们修改源代码的构建，您也可以喜欢提供一些脚本

00:39:33.140 --> 00:39:38.119
会执行的语言你知道达蒙会执行娄真的很好

00:39:38.119 --> 00:39:44.660
对于这个，我认为JavaScript与某些JavaScript

00:39:44.660 --> 00:39:50.510
运行和运行的引擎会很酷，JavaScript也会更多

00:39:50.510 --> 00:39:57.710
不幸的是，它比Lua知名，但是是的，所以我认为嵌入脚本语言

00:39:57.710 --> 00:40:02.039
真的很酷，尽管它应该是一个单独的版本

00:40:02.039 --> 00:40:09.130
但这是另一个话题，但我会很高兴完成所有这些过程

00:40:09.130 --> 00:40:14.170
可能在一个单独的特殊二进制文件中，我对此提供了支持

00:40:14.170 --> 00:40:19.599
东西，甚至就像可以打开的扩展名一样，并且喜欢

00:40:19.599 --> 00:40:24.609
像我一样拥有脚本引擎，就像您知道Web一样的JavaScript lua

00:40:24.609 --> 00:40:30.760
程序集会很有趣，我在Lueth上工作很多，所以有很多游戏

00:40:30.760 --> 00:40:38.289
用lua在AI BOTS那里，所以我们确切地说可能是一吨

00:40:38.289 --> 00:40:44.109
就像不同的库一样，会很有用，是的，所以很酷

00:40:44.109 --> 00:40:49.240
现在其他人有什么东西了，因为我没有进行交换了

00:40:49.240 --> 00:40:58.990
和David谈谈，我想说的是，如果我们还有其他主题，

00:40:58.990 --> 00:41:03.490
就像您可以让他们对这些会议更熟悉，我想我是说我做到了

00:41:03.490 --> 00:41:08.020
现在尺寸不错，我认为人们可以观看它，我认为我们可以

00:41:08.020 --> 00:41:13.210
几个小时，我们了解自己，是的，我们很好，喜欢这可能会很好

00:41:13.210 --> 00:41:19.569
将这两个限制为30分钟左右，是的，非常有效，但是，我认为

00:41:19.569 --> 00:41:24.400
这真的很好，就像我们绝对可以像其他所有人一样

00:41:24.400 --> 00:41:30.640
像事件的一部分，也像发布了这12年的c之后，我们可以看到

00:41:30.640 --> 00:41:34.960
我感兴趣的其他人是我梦specific以求的人

00:41:34.960 --> 00:41:39.700
关于特定的一小时差异的问题，以便我们之后

00:41:39.700 --> 00:41:44.140
该组件的展示就像一个主要要点

00:41:44.140 --> 00:41:48.640
社区中的人们在尝试了解自己的一部分时，我喜欢它，我们只是

00:41:48.640 --> 00:41:53.230
只是一个部门，让我们去德国，您做一个迹象表明我可以停止广播

00:41:53.230 --> 00:41:59.920
我可以谈谈在我最后一个征兆之前我们该如何做

00:41:59.920 --> 00:42:05.170
工作，这就是我所想的，就像在提高性能

00:42:05.170 --> 00:42:11.740
认为可以帮助我PFS的事情之一//很多事情都会得到

00:42:11.740 --> 00:42:14.859
堤坝模式的一半注，我们之前在中解释了一些

00:42:14.859 --> 00:42:19.150
其他类似的对顶部的改进，因此值得在那里的人们注意

00:42:19.150 --> 00:42:26.049
在这个网站上做更多的工作对我来说将是非常有用的，因为

00:42:26.049 --> 00:42:33.519
是我PFS的更快和最优化的部分，是的，它还有很大的成长空间，

00:42:33.519 --> 00:42:37.900
变得更好，特别喜欢有趣的分支之一，

00:42:37.900 --> 00:42:43.839
第四是构建模拟器以了解这种希望的状态

00:42:43.839 --> 00:42:48.960
事情以及它的运作状况，是的，在那里对行为建模，所以两者

00:42:48.960 --> 00:42:54.940
我和Karthik一直在某种程度上进行调查，

00:42:54.940 --> 00:42:58.269
可能像能量一样，只是一个有趣的聊天而已

00:42:58.269 --> 00:43:04.000
像对网络进行模拟和建模一样，因为

00:43:04.000 --> 00:43:08.440
哦，是的，因为我们正在做，就像是打破目标，我们可能会出现在两个

00:43:08.440 --> 00:43:12.730
在回购周上，我们可以为Beats Lab做同样的事情，我希望您可以打开

00:43:12.730 --> 00:43:17.890
这个线程组织的仓库很好，这肯定会被分解成

00:43:17.890 --> 00:43:23.170
是的，是的，所以我是我们的听众，就像人们可以来一样，这是

00:43:23.170 --> 00:43:27.609
像是专注于获得我真正的好，还是喜欢仿真工具或

00:43:27.609 --> 00:43:34.960
消费化工具，是的，为什么它是开放的，一旦我知道很多

00:43:34.960 --> 00:43:41.109
这些讨论是的，我通过笔记让我们尝试知道，即使只是

00:43:41.109 --> 00:43:44.859
就像创建回购协议一样，我们确实知道我们是否现在还不具备神话般的魅力，

00:43:44.859 --> 00:43:48.369
就像打开指向所有其他讨论的指针的问题一样

00:43:48.369 --> 00:43:54.099
并说我们想做什么，我会哇，如果更大的话，你会在这里

00:43:54.099 --> 00:44:00.160
我只是在那个论坛上将其删除，是的，反正杰里米，您已经签名了，所以

00:44:00.160 --> 00:44:05.700
是的，这是关于交换位和煮咖啡的话题，谢谢

00:44:05.700 --> 00:44:12.390
加入，下周见

