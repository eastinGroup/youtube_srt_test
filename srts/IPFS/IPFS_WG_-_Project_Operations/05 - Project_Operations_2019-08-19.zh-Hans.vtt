WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:06.420
Stephen有足够的信誉，他已经做到了这一点，欢迎您来到ipfs Bifrost网关。

00:00:06.420 --> 00:00:10.019
服务产品的眼光，让我们在很多情况下都能很好地运行ipfs

00:00:10.019 --> 00:00:17.970
用户每周定期致电今天的议程，我们有一台电视好了

00:00:17.970 --> 00:00:26.060
签入，我们不需要花太多时间在那，让我只分享我的屏幕

00:00:26.060 --> 00:00:38.690
这本书-您能看到我们所说的东西吗？我们有烫伤吗？您能做些吗？

00:00:38.690 --> 00:00:46.140
好吧，呃，第3季度估计零是正确的，只是我们只需要报表即可

00:00:46.140 --> 00:00:53.789
看起来我敢肯定，我可以把它拉起来，是的，一切都做好了，

00:00:53.789 --> 00:00:57.600
花更多的时间来完成这项工作，并确保我们

00:00:57.600 --> 00:01:00.090
专注于最重要的事情，但我认为我们应该这样做

00:01:00.090 --> 00:01:04.530
阿德里安（Adrian）和赫克托（Hector）在场，所以我不会再花更多的钱了

00:01:04.530 --> 00:01:12.960
时间，但我想和Michael Burns谈谈ewr节点G

00:01:12.960 --> 00:01:26.340
发生了什么事Michael Burns得找到那个静音，但我不知道那是什么

00:01:26.340 --> 00:01:37.020
该问题的根本原因是，我不知道这是否像怪异的GC

00:01:37.020 --> 00:01:43.049
或性能问题冒出来，而ewr恰好就是这样

00:01:43.049 --> 00:01:45.770
碰巧是糟糕的一天，所以他有发言权的问题

00:01:45.770 --> 00:01:50.070
我们认为这是怎么回事呢？

00:01:50.070 --> 00:01:54.180
他说你就像是处于一种遗憾的状态

00:01:54.180 --> 00:02:04.049
是的，所以让我们看一下原来是这个空间被填满了，但不清楚为什么

00:02:04.049 --> 00:02:09.759
没有更温和地向我们发出警报，但银行1wr

00:02:09.759 --> 00:02:15.599
就像没有反应，所以无法让他使用SSH昨天无法

00:02:15.599 --> 00:02:23.950
可以通过控制台进行恢复，所以不确定是否出现了问题

00:02:23.950 --> 00:02:29.670
在那里，但是很遗憾，通过重建它很容易解决

00:02:29.670 --> 00:02:38.380
所以销毁它，并在地貌中重建它，这表明我们处于中期

00:02:38.380 --> 00:02:45.069
迁移是世界上最糟糕的地形

00:02:45.069 --> 00:02:52.090
对世界有不同的看法，配置然后是nginx或然后是不稳定的

00:02:52.090 --> 00:02:57.040
因此在构建nginx时会写入一个无效的配置文件

00:02:57.040 --> 00:03:00.940
尝试重新启动导致用户数据失败的守护程序时失败

00:03:00.940 --> 00:03:07.200
导致terraform失败，就像盒子只是在一个悲伤的声明中，所以你去

00:03:07.200 --> 00:03:13.840
按摩它并把一些东西弄干，我们可以轻松地做耶，用手轻松完成

00:03:13.840 --> 00:03:17.079
但是试图使那些不同步的试图从中删除所有逻辑

00:03:17.079 --> 00:03:21.609
terraform，以便nginx只能由ansible处理，而不像拆分

00:03:21.609 --> 00:03:26.200
大脑状况强烈同意我们不在

00:03:26.200 --> 00:03:32.799
现在处于最佳位置，令我惊讶的是Terra表单无法运行

00:03:32.799 --> 00:03:41.739
现在，但是我的理解是我们已经运行了，您说Terra表单运行了，但是

00:03:41.739 --> 00:03:45.819
使用的脚本存在错误，这意味着它们的格式虽然正确

00:03:45.819 --> 00:03:52.569
所以它无法部署Nginx配置文件的证书

00:03:52.569 --> 00:03:59.290
提及，因此您无法重新启动该服务，因此我们已部分迁移了该服务

00:03:59.290 --> 00:04:04.120
我们只是将terraform保留在其添加状态，不应该让它存在，它

00:04:04.120 --> 00:04:08.760
如果我们能每晚连夜赶早一点的话，那将是很好的

00:04:08.760 --> 00:04:15.130
但我正在中途修车，并且应该在一小时内达到一半的公关

00:04:15.130 --> 00:04:22.150
它只是从terraform中删除东西，基本上很不错，然后执行

00:04:22.150 --> 00:04:28.030
运行关税，或者精确地运行动物和幸福

00:04:28.030 --> 00:04:32.500
哦，最终可能还是需要两个步骤

00:04:32.500 --> 00:04:43.540
terraform将解雇Bob在战争期间取得进步的ansible伟大

00:04:43.540 --> 00:04:51.970
知道它仍然没有报告也没有流量路由到它

00:04:51.970 --> 00:04:56.260
因为从来没有安装过，因为用户数据失败了，到目前为止

00:04:56.260 --> 00:05:09.580
消息，我们很快容量有限，所以我会戳一下

00:05:09.580 --> 00:05:17.530
我相信昨天晚上我打电话给叔叔的时候，网络数据在流传，

00:05:17.530 --> 00:05:25.540
至少我也缺少监视警报以让Marcus成为您

00:05:25.540 --> 00:05:28.720
提到了这一点，我没有深入研究该代码的实际外观，但

00:05:28.720 --> 00:05:33.730
文件硬币将其作为其用户数据脚本的一部分进行处理，看起来像是

00:05:33.730 --> 00:05:41.710
但是可以使用掺杂方法来做到这一点，所以无论何时由于任何原因用户数据失败

00:05:41.710 --> 00:05:49.870
批处理脚本中有一个陷阱，然后将向该警报发出警报

00:05:49.870 --> 00:05:55.480
先前的警报安德鲁，所以任何时候都不会在统一的最低点上线

00:05:55.480 --> 00:06:01.419
所以我们不会至少能够检测到节点无法执行

00:06:01.419 --> 00:06:10.990
部署起来非常方便，大概我可以复制一些bash和wire

00:06:10.990 --> 00:06:25.000
完全正确，是的，所以所有WR都在Michael Burns上，它的盘子是

00:06:25.000 --> 00:06:29.790
好的，迈克尔·伯恩斯，是的，我可以在短时间内把它们弄起来

00:06:29.790 --> 00:06:35.009
好的，这似乎是当务之急，因为我们看到了警报内存使用情况

00:06:35.009 --> 00:06:41.570
例如剩余的一台计算机上有5％的可用RAM，这非常忙

00:06:41.570 --> 00:06:49.259
机器的陷阱，我会更快输入，不是，这不是我的目标妈妈

00:06:49.259 --> 00:06:59.669
应该优先考虑，所以最近发生的事情是

00:06:59.669 --> 00:07:05.160
现在已将所有IP FS托管站点固定到所有网关，除了

00:07:05.160 --> 00:07:15.150
讨论过的ewr尚不可能，但这还没有

00:07:15.150 --> 00:07:23.699
魔术子弹，以解决某些网站偶尔出现的缓慢问题

00:07:23.699 --> 00:07:26.430
可以访问，尽管我有兴趣继续观看它，但是它

00:07:26.430 --> 00:07:32.060
应该可以改善它，但是现在影响它的是

00:07:32.060 --> 00:07:40.020
我对网关节点具有更主动的节点故障转移策略，所以我认为

00:07:40.020 --> 00:07:46.110
今天早上，AMS车速很慢，艾伦（Alan）肯定报告说他不能

00:07:46.110 --> 00:07:54.360
加载文件，他可以加载您的Vesta IO，这似乎是下一个最重要的

00:07:54.360 --> 00:07:59.340
如果我们想真正获得体面的响应时间，就会给灵魂带来问题

00:07:59.340 --> 00:08:02.900
这些节点的可靠性

00:08:03.199 --> 00:08:08.159
我已经提出了这个问题，但是我想知道你们是否有任何问题

00:08:08.159 --> 00:08:12.630
为了确保我的评估正确无误，我们的想法

00:08:12.630 --> 00:08:18.240
在Bird bgp和dns上执行一台机器时的被动故障转移

00:08:18.240 --> 00:08:24.539
完全像鸟一样死了，这是第三只恶魔必须做的第三件事

00:08:24.539 --> 00:08:28.530
取出东西失败，然后仍然存在某种延迟

00:08:28.530 --> 00:08:37.010
几分钟的DNS他们停止路由流量是正确的是的是的

00:08:37.010 --> 00:08:41.630
我是的，这可能是一个优先事项

00:08:41.630 --> 00:08:50.330
提供重新设计，就像将nginx和bird守护程序耦合到一个

00:08:50.330 --> 00:08:56.420
机器，然后我想我认为有人建议

00:08:56.420 --> 00:09:02.510
这些上游的节点，这样我们至少可以拥有某种

00:09:02.510 --> 00:09:11.899
后端检查和故障转移，所以我想现在是的想法

00:09:11.899 --> 00:09:17.180
是我们唯一的健康检查是一个很大的缺陷，可能对我们

00:09:17.180 --> 00:09:26.779
很酷的问题完全同意，在重建之前，我将提出一个历史性的意见

00:09:26.779 --> 00:09:34.370
数据包上的网关不到一年前，我们有了一个前端模型

00:09:34.370 --> 00:09:43.190
机顶盒运行bird和nginx，然后是执行ipfs的后端盒，并从

00:09:43.190 --> 00:09:50.080
我们希望开始讨论以打开Resti，以便我们可以进行适当的讨论

00:09:50.080 --> 00:09:56.420
主动进行健康检查，因为我们遇到的故障模式是ipfs

00:09:56.420 --> 00:10:02.270
楔形但nginx不会意识到这一点，因此会一直喜欢发送流量

00:10:02.270 --> 00:10:10.070
放在容易修复的死箱上，我们专门设计了解决该问题的方案，

00:10:10.070 --> 00:10:16.190
显然发现了其他问题，但是可以进行适当的健康检查

00:10:16.190 --> 00:10:23.480
像后端和故障转移这样的处理就像是需要的一部分

00:10:23.480 --> 00:10:33.079
修复我想在这一点上什么会促使健康检查看起来像我的

00:10:33.079 --> 00:10:37.010
建议就像类型EFS获取对空目录的请求

00:10:37.010 --> 00:10:44.000
我要史蒂文说的很轻巧，这时应该进行合理的健康检查

00:10:44.000 --> 00:10:49.790
我们还有更令人满意的东西，或者是一个好人对不起是其他一切

00:10:49.790 --> 00:10:57.620
没关系，我们正在谈论IP FS恶魔有用的健康检查

00:10:57.620 --> 00:11:03.620
处于功能状态，因此nginx可以停止将流量路由到类似

00:11:03.620 --> 00:11:09.740
BFS流程和500台计算机试图解决问题，是的，没有C

00:11:09.740 --> 00:11:14.810
因为我要说尝试获取空目录，因为

00:11:14.810 --> 00:11:25.700
空目录，所以这取决于您要检查的内容，如果您只是尝试

00:11:25.700 --> 00:11:28.730
检查看看是发疯甚至回应的想法是的，这可能是

00:11:28.730 --> 00:11:31.910
很好，您可能也可以像获取版本或类似内容

00:11:31.910 --> 00:11:38.330
尽管如果您认为两者都进入了区块电路，那将不会进入区块存储

00:11:38.330 --> 00:11:41.630
缓存到处都是，但我认为这些实际上就像被迫通过

00:11:41.630 --> 00:11:45.860
有时会陷入沼泽，就像在一台机器获取时一样

00:11:45.860 --> 00:11:52.310
机器，是的，实际上，您真的很想要这样，如果您只想

00:11:52.310 --> 00:11:57.350
测试它是否比您响应的要好，我们需要

00:11:57.350 --> 00:12:03.020
像nginx这样的级别可以发出请求或打开resti或某些东西可以击中

00:12:03.020 --> 00:12:12.440
HTTP端点，然后说是的，它表示正在响应，因此您喜欢不滚动

00:12:12.440 --> 00:12:22.870
再没有诅咒不，是的，你可以卷曲API是v-0这样的人

00:12:22.870 --> 00:12:28.880
是的，那是除了告诉我们守护程序之外，不会告诉我们其他任何信息

00:12:28.880 --> 00:12:32.770
流程是融资，是投资者莱利，但它取决于您想要什么

00:12:32.770 --> 00:12:39.200
他们，如果你想，如果块存储从我们的水平响应

00:12:39.200 --> 00:12:43.100
希望他们得到对它的数据请求，所以这在其网关节点上

00:12:43.100 --> 00:12:48.380
在nginx面前，流量很高，我们一直在说我要给我们恶魔

00:12:48.380 --> 00:12:52.850
最终变得僵硬或反应迟钝，可能是因为他们

00:12:52.850 --> 00:12:59.180
负责任的是我认为是的，我会的，是的，我们没有答案失败

00:12:59.180 --> 00:13:02.290
好吧，不像第一个不够服务

00:13:02.290 --> 00:13:07.360
他们冻结的数据只是不以某种方式浏览您正在使用的内容

00:13:07.360 --> 00:13:11.950
具有我假设它已经冻结的粒度级别，而不是

00:13:11.950 --> 00:13:16.420
他们在本地缓存的东西，这意味着是的解决方案是

00:13:16.420 --> 00:13:19.360
如果您尝试在计算机上找到文件，则会找到您要添加文件的计算机

00:13:19.360 --> 00:13:24.780
我告诉你的第一台机器实际上是过时的，否则就像

00:13:24.780 --> 00:13:31.020
没有那么多，对不起，我们甚至没有发生很多锁

00:13:31.020 --> 00:13:36.490
好的，所以这里有一个潜在的问题，也许您找到了一个文件

00:13:36.490 --> 00:13:40.780
描述符在某个地方或关于nginx的位置拒绝打开超过特定数目的内容

00:13:40.780 --> 00:13:43.840
像是从字面上看，它没有响应

00:13:43.840 --> 00:13:50.470
版本，这是一个大问题，是的，这就是Nginx处理此类问题的原因

00:13:50.470 --> 00:13:53.950
是的，在您的距离上，您会看到一台机器，

00:13:53.950 --> 00:13:59.050
锁定测试版本是和空目录，然后想看看

00:13:59.050 --> 00:14:05.440
实际上发生的很好，因为第一个近似将起作用

00:14:05.440 --> 00:14:13.240
我认为我们将陷入与GC和

00:14:13.240 --> 00:14:16.750
因此，就像守护程序在响应一样，但它们没有提供任何有用的数据

00:14:16.750 --> 00:14:24.130
所以是的，这一步向前迈进了也许M可以做到的完美解决方案

00:14:24.130 --> 00:14:28.930
您重申了您的关注，因此GC是因为他们的老人们不断响应

00:14:28.930 --> 00:14:32.700
要求G坐D冻结世界吗

00:14:32.700 --> 00:14:39.430
Stephen GC确实冻结了世界，所以我无法收到EC所要求的信息

00:14:39.430 --> 00:14:47.290
进度是这样的，所以GTR GC冻结了它

00:14:47.290 --> 00:14:51.850
我不认为它不树木不冻结它在生活中冻结它的是

00:14:51.850 --> 00:14:59.950
好的，但这可能会阻止位瓦写入数据存储，是的，所以

00:14:59.950 --> 00:15:02.290
这样就意味着您已经拥有了我认为您正在尝试的日期，如果您

00:15:02.290 --> 00:15:06.330
没有它，我想你一个月还好

00:15:07.530 --> 00:15:14.089
第一次碰撞，但是这个垃圾收集

00:15:14.089 --> 00:15:19.699
有更频繁地运行它有什么好处，以便它在做

00:15:19.699 --> 00:15:25.699
减少速度，从而加快速度并减少资源消耗（如果您猜测他

00:15:25.699 --> 00:15:30.139
通常它会更快地完成，您也可以不运行它，这是另一种方法

00:15:30.139 --> 00:15:35.509
做你想念的字面意思就是删除所有内容并重新分类存储库，或者

00:15:35.509 --> 00:15:42.550
快照并从快照向下还原在大多数情况下应该是不可思议的

00:15:42.550 --> 00:15:49.220
是的，那是我想知道的事情，我们是否可以只使用一些

00:15:49.220 --> 00:15:53.240
垃圾收集调整似乎并没有那么频繁地运行，然后

00:15:53.240 --> 00:15:59.240
当它运行时，它实际上释放了盒子，我们得到了内存不足的错误

00:15:59.240 --> 00:16:04.850
在AMS上什么也没做，所以如果他们在

00:16:04.850 --> 00:16:10.249
你是，你看到Q太大了，或者一切都很好，不是

00:16:10.249 --> 00:16:16.699
看到QC工作方式的废话是它锁定了整个数据存储区，这意味着

00:16:16.699 --> 00:16:24.230
我们正在做摩根必须走路的样子，尽管在这种情况下这是一个

00:16:24.230 --> 00:16:28.970
时髦的情况是这样的，就像我们实际上什么都没有

00:16:28.970 --> 00:16:33.379
固定在这些游戏事件上的任何东西，所以现在可以了，这样就可以了

00:16:33.379 --> 00:16:36.170
使GC稍微精确一些，以便先遍历该数据，然后遍历

00:16:36.170 --> 00:16:42.610
数据存储并找出导致数据崩溃的原因，就像退化一样

00:16:42.610 --> 00:16:51.740
从字面上删除目录会更快地更改已更改的目录

00:16:51.740 --> 00:16:59.269
网关最近是因为我们看到的响应时间很慢

00:16:59.269 --> 00:17:03.290
即使我们正在尝试保持与以下内容的连接，这些内容仍在群集中

00:17:03.290 --> 00:17:08.630
聚类是常规事物，只是响应速度较慢，所以我们故意

00:17:08.630 --> 00:17:15.589
固定所有PL之前的网站，并将文件硬币漂亮地钉在

00:17:15.589 --> 00:17:19.579
网关，总共约20 GB的内容，包括

00:17:19.579 --> 00:17:23.740
摧毁了FSBO，这是高点的最大份额

00:17:23.740 --> 00:17:27.140
是的，这样会使GC花费更长的时间，因为

00:17:27.140 --> 00:17:34.960
Kurt是当前的GC，所以如果您看看它是如何编写的

00:17:34.960 --> 00:17:40.640
一秒钟一张支票，我们看不到，我们可以暂停一下，因为有问题

00:17:40.640 --> 00:17:52.370
我们可以解决这个问题，但是GC基本上是整天都在读取-

00:17:52.370 --> 00:17:55.400
就是说，它实际上读取了桌子上存在的遍历中的所有数据，而我们

00:17:55.400 --> 00:18:02.150
难道我们不缓存，一旦完成，它就会遍历

00:18:02.150 --> 00:18:05.540
数据存储，但实际上只是预先读取并删除了所有不喜欢的内容

00:18:05.540 --> 00:18:08.450
在一组事物中已经读过，因此有理由要

00:18:08.450 --> 00:18:11.570
如果不是某些东西，keep然后读取而不是它所拥有的东西X

00:18:11.570 --> 00:18:15.830
干净的样子，如果您有一些要保持的东西，它的速度要快得多

00:18:15.830 --> 00:18:20.030
实际上是第二个用户读取了所有数据，然后放入了很多您看到的GS

00:18:20.030 --> 00:18:24.700
如果您的团队中有任何人，并且经验丰富，将会减慢速度

00:18:24.700 --> 00:18:31.880
您从未见过的对话在抱怨这一点，如果您

00:18:31.880 --> 00:18:36.350
您看到的是不可扩展的吗？您是在告诉我们您的团队没有

00:18:36.350 --> 00:18:41.630
这样做的好处不，对于很多

00:18:41.630 --> 00:18:46.970
首先，工作包很好，就像基本上没有我的团队

00:18:46.970 --> 00:18:53.360
没有，那里充满了蒸汽，有你的团队，还没有真正

00:18:53.360 --> 00:18:56.270
跟随软件包管理器，因为实际上您只需要能够

00:18:56.270 --> 00:19:00.650
并快速检索文件，而实际上它们并不需要GC

00:19:00.650 --> 00:19:03.970
有点重要，但实际上很多演员都想保留旧的包

00:19:03.970 --> 00:19:09.530
就像运行激进主义者的基础设施一样，人们确实关心GC和所有其他方面

00:19:09.530 --> 00:19:20.210
这些就像更高的一样，更大的系统问题，是的，我从观点来看

00:19:20.210 --> 00:19:26.929
像P一样尝试网关的努力，无论p0努力的人如何，所以我

00:19:26.929 --> 00:19:32.710
可能在某个时候必须提高排名，但是因为我们没有

00:19:32.710 --> 00:19:39.559
带宽是极好的带宽限制，现在不是这样

00:19:39.559 --> 00:19:42.080
就像你问我是否似乎要做一些

00:19:42.080 --> 00:19:48.919
宣传我似乎说的很好，是的，是的，她了解她很抱歉，但是

00:19:48.919 --> 00:19:52.970
这不是真的，而是当您查看实际的

00:19:52.970 --> 00:20:05.750
名册上是我想打电话给我，也许伊甸园还可以，我们可以

00:20:05.750 --> 00:20:11.960
将不得不与TC一起存在，现在我们将尝试并

00:20:11.960 --> 00:20:18.169
将其提高到优先级列表中，如果他有的话，这在Adrian上最好

00:20:18.169 --> 00:20:22.580
是时候去看它赫克托（Hector）十分有限，而且即将参加

00:20:22.580 --> 00:20:30.260
很快就可以了，让我们在上面加个图钉，这样的结果是因为

00:20:30.260 --> 00:20:34.909
我们现在告诉网关GC的事情现在使我们付出了更多

00:20:34.909 --> 00:20:41.179
执行TC时的RAM RAM和CPU时间，因此我们可能会触发更多GCS GC

00:20:41.179 --> 00:20:44.630
积极主动地进行运作

00:20:44.630 --> 00:20:53.840
回购，但我们不会，我们只是会缩小高水位线

00:20:53.840 --> 00:20:57.500
像最大存储Feli而不是我的产品是

00:20:57.500 --> 00:21:01.490
交易它只是给它一个小的地球组合，这会有所帮助，我不认为

00:21:01.490 --> 00:21:04.279
会像海冰一样钩住，这会使它走得更快，但是如果您把

00:21:04.279 --> 00:21:07.490
20 GB，这意味着它必须从磁盘读取20 GB，

00:21:07.490 --> 00:21:12.860
反序列化20个字节的内容，然后就必须反序列化

00:21:12.860 --> 00:21:18.049
理解它，因此以下就是我们大部分时间的原因

00:21:18.049 --> 00:21:20.750
正在做其余的事情，就像遍历不相关的链接一样

00:21:20.750 --> 00:21:26.630
不好，是的，我们实际上是在使用badge

00:21:26.630 --> 00:21:34.100
您使用我们中的那个，假设我们使用扁平化，好吧，是的，

00:21:34.100 --> 00:21:38.840
有时可以正确读取20 GB的瘦东西多长时间

00:21:38.840 --> 00:21:47.360
通常情况下，这个数字会触手可及，因此我可以不那么深入地研究

00:21:47.360 --> 00:21:50.330
问题，也许我们可以提出最有效的策略

00:21:50.330 --> 00:21:54.110
对我们来说是短期的，然后是长期的

00:21:54.110 --> 00:21:59.420
简单的策略就像在船上拍摄红船一样

00:21:59.420 --> 00:22:04.520
良好状态并不会删除所有内容，例如btrfs或任何快照，或者只是

00:22:04.520 --> 00:22:10.940
复制东西，如果您没有空间，那么这将使事情变得很多

00:22:10.940 --> 00:22:18.230
更快，这是一个好点，是的，老实说，谢谢我，我认为他们

00:22:18.230 --> 00:22:24.710
绝对可以采取一致行动，以确保影响似乎相对较小，好吗

00:22:24.710 --> 00:22:31.370
这对于GC可能就足够了，但是在问题上是不同的，所以

00:22:31.370 --> 00:22:37.820
对拥有我们的网关节点故障转移策略的读者的一般支持，但先生。

00:22:37.820 --> 00:22:42.410
 Burnes添加了我们已经完成的20个操作，因此我们应该向

00:22:42.410 --> 00:22:47.179
历史上的错误，所以我想这会很有用。彭德里克的你可以补充一点

00:22:47.179 --> 00:22:52.250
只是对男孩的问题的笔记确保力收割者点

00:22:52.250 --> 00:22:59.450
但也许我想首先要关注ewr节点，有人添加了防油硬币证明

00:22:59.450 --> 00:23:07.850
参数和IP已下载更新到此列表，好的，这是一些

00:23:07.850 --> 00:23:13.130
为Gateway团队考虑的有趣环境，所以上周是

00:23:13.130 --> 00:23:20.679
有段时间我在度假，而五分制团队却遇到了问题

00:23:20.679 --> 00:23:30.799
从他们正在下载的网关中下载证明参数

00:23:30.799 --> 00:23:36.260
会开始，但后来会逐渐减少，就像您知道零字节

00:23:36.260 --> 00:23:42.740
被转移的人会取消，所以他们感到沮丧，所以他们

00:23:42.740 --> 00:23:54.710
决定尝试使用IP，以便他们能够下载

00:23:54.710 --> 00:24:01.460
证明参数而不涉及网关，以及有趣的是

00:24:01.460 --> 00:24:06.409
那些在那里工作的人是

00:24:06.409 --> 00:24:12.830
有些问题，但是那些起作用的仍然存在重大问题

00:24:12.830 --> 00:24:20.690
下载的机组人员接地，因此有人报告了1.5 GB的文件

00:24:20.690 --> 00:24:26.000
这将花费两个半小时或更长时间，并且他们会看到相同的结果

00:24:26.000 --> 00:24:36.559
下载的行为逐渐减少，然后再次开始，所以这是一个

00:24:36.559 --> 00:24:42.950
一点轶事/证据表明可能存在某些问题

00:24:42.950 --> 00:24:47.480
我们在网关上面临的问题并非网关所独有，而是

00:24:47.480 --> 00:24:54.470
我觉得快速的网络更加全球化，因此仅在某些情况下

00:24:54.470 --> 00:25:00.710
我们一直在看的东西不一定可以通过使用直接

00:25:00.710 --> 00:25:08.029
连接或绕过网关是，我想我对此的理解是

00:25:08.029 --> 00:25:13.820
我们已经在网关节点中添加了一些补丁，

00:25:13.820 --> 00:25:19.070
有DHT助推器，但如果我错了，请纠正我，史蒂文，但我们知道

00:25:19.070 --> 00:25:27.110
DHT仍然存在性能问题，是的，是的，所以我们

00:25:27.110 --> 00:25:32.029
知道我们是否可以肯定，就像我们没有走出困境一样，这些就是

00:25:32.029 --> 00:25:38.470
你甚至都没有关闭不，是的，可怕的是，就像

00:25:38.470 --> 00:25:44.029
目前，我们正在关闭，我们有很多修复程序，这些修复程序使我们希望

00:25:44.029 --> 00:25:47.179
不像我们现在仍在处理胸部和版本

00:25:47.179 --> 00:25:51.950
您喜欢的教堂会根据您的需要分析修复

00:25:51.950 --> 00:25:56.870
是的，就像我们已经确定了这个问题一样，但是后来我

00:25:56.870 --> 00:26:02.539
消失了，我们已经找到了解决方案，所以现在的解决方法是

00:26:02.539 --> 00:26:09.169
测试程序和新发布计划得到管理，是的

00:26:09.169 --> 00:26:14.169
发布计划是reese计划很棒，我的意思是喜欢坚持下去

00:26:14.169 --> 00:26:17.740
制定发行一

00:26:17.790 --> 00:26:23.920
亲爱的好吧，我们没有分钟了，还有其他人想要他们做的吗？

00:26:23.920 --> 00:26:33.700
谈论我只是想说我主要的兴趣领域来自

00:26:33.700 --> 00:26:38.380
佩特拉的计划文件似乎围绕服务水平和指标，以及

00:26:38.380 --> 00:26:44.320
我只想指出，我在取得任何进展方面仍然受阻

00:26:44.320 --> 00:26:49.299
那是因为我们仍然没有很多好的指标

00:26:49.299 --> 00:26:53.650
就像一个阻滞剂绝对是肯定的出口商，所以我只想

00:26:53.650 --> 00:26:58.870
确保那仍然是优先事项，因为我希望能够拥有

00:26:58.870 --> 00:27:03.780
网关的成功率，但是目前这是不可能的

00:27:03.780 --> 00:27:11.980
我们附加到净数据指标的元数据提醒我为什么

00:27:11.980 --> 00:27:18.370
当前数据是不可能的，因为只有唯一的元数据

00:27:18.370 --> 00:27:23.610
或与这些状态代码相关联的标签是

00:27:23.610 --> 00:27:29.559
实际上几乎没有任何东西，所以您得到一个，您可以看到我们有

00:27:29.559 --> 00:27:34.660
例如说四个九个九个代码，但是没有其他信息

00:27:34.660 --> 00:27:42.160
与之相关，因此我们不喜欢像任何其他那样引用请求路径

00:27:42.160 --> 00:27:49.049
这样的东西，所以你有四个四九九九是一个很大的潜力

00:27:49.049 --> 00:27:55.030
像人一样的人有问题，但因为这可能是

00:27:55.030 --> 00:28:00.610
任何我们都无法试图弄清这四个九个九个的东西

00:28:00.610 --> 00:28:07.650
意思是没有附加更多相关标签，所以出口商可以

00:28:07.650 --> 00:28:15.700
导出我们当前在法律中看到的所有字段，是或在Habana中

00:28:15.700 --> 00:28:22.090
这不会给我们更多选择，所以像是复制并制作

00:28:22.090 --> 00:28:29.799
四个9/9的意义，这对于我们的成功率指标至关重要

00:28:29.799 --> 00:28:39.159
谢谢，这仍然很重要，现在没有人在看它。

00:28:39.159 --> 00:28:43.419
但我不确定如果我们赶上多久还可以

00:28:43.419 --> 00:28:53.350
乔治，他很容易下车，我记得十月还好，这对

00:28:53.350 --> 00:28:59.049
正如我们所说，SLO对于我们的事件报告至关重要

00:28:59.049 --> 00:29:04.119
那也阻止了事件或能够宣布事件，我做了一个

00:29:04.119 --> 00:29:10.690
在那个问题上对此发表评论，我认为是的，我们只有

00:29:10.690 --> 00:29:15.730
黑匣子指标仍然如此，这就像您想要的那样非常可怕

00:29:15.730 --> 00:29:20.649
一些实际上指向某些指标的指标您知道准确的数据

00:29:20.649 --> 00:29:27.159
我们没问题，这对史蒂文来说是个很简单的问题，所以

00:29:27.159 --> 00:29:31.629
网关当前正在运行一项有趣的工作，以重新连接到每个群集节点

00:29:31.629 --> 00:29:36.720
分钟，我只是想知道是否有一个好主意

00:29:36.720 --> 00:29:42.779
它不会破坏任何东西，所以如果您已经连接到该节点

00:29:42.779 --> 00:29:48.279
从字面上看这是一个没有操作的操作，但是这样做确实使您的Isis通过

00:29:48.279 --> 00:29:53.859
当您拨打电话等待通过这种学校进行连接时，这不是等待

00:29:53.859 --> 00:29:58.690
这就像通过连接的固定的硬编码100学派

00:29:58.690 --> 00:30:01.720
经理，我不清楚的是连接内部发生了什么

00:30:01.720 --> 00:30:06.519
得分的经理会执行此操作，然后将其重置为100

00:30:06.519 --> 00:30:12.909
知道它添加了它，所以不，不，对不起，所以这些分数被利用了

00:30:12.909 --> 00:30:15.789
标签是的，具有独特的标签，所以

00:30:15.789 --> 00:30:21.700
他说，让我们纠正一下，该标签只会设置为100或零，是的，

00:30:21.700 --> 00:30:23.739
花费到100没设置，所以没关系

00:30:23.739 --> 00:30:28.179
我明白了，所以只要不断，因为标签是用户连接，值是

00:30:28.179 --> 00:30:30.879
100，如果我一直叫它总是100，就永远不可能是任何东西

00:30:30.879 --> 00:30:38.559
不是100，是的，今晚好，好吧，我们没时间了，我们四岁

00:30:38.559 --> 00:30:43.640
分钟，如果有人有任何疑问，您现在可以说，但是时间到了

00:30:43.640 --> 00:30:47.420
好了，还有太多要谈论的这些会议在30时太短了

00:30:47.420 --> 00:30:52.000
分钟让我们以后再也见不到我

