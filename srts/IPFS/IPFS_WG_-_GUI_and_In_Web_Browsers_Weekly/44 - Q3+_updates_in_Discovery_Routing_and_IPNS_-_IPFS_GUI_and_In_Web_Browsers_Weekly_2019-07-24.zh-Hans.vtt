WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.350 --> 00:00:14.690
好吧，这是绿色的，并且在Web浏览器中甜蜜地呼吁7月24日

00:00:14.690 --> 00:00:25.470
2018年，我们再次开会讨论Cookie和网络浏览器的窍门

00:00:25.470 --> 00:00:32.910
我想回顾一下议程，以确保或感兴趣，这是我的荣幸，谢谢

00:00:32.910 --> 00:00:40.760
您通过我的机会传递了机会，让我分享我的屏幕，

00:00:44.690 --> 00:00:51.960
抱歉，您能听到在我身后的院子里打工的人啊

00:00:51.960 --> 00:00:56.129
我们今天议程上的第一项是跟进上周的

00:00:56.129 --> 00:01:02.129
关于如何加载Web UI的讨论，事实证明，有很多方法，

00:01:02.129 --> 00:01:07.439
他们每个人的刺都长着玫瑰，是的，所以只有这样

00:01:07.439 --> 00:01:12.299
今天就加入我们，但我可以简要概述一下我们的位置

00:01:12.299 --> 00:01:22.100
所以基本上问题是我们正在将Web UI从网关端口加载到

00:01:22.100 --> 00:01:27.630
向激进派同伴用户提供最新版本以及存在的问题

00:01:27.630 --> 00:01:31.979
从网关端口加载时附带的是网关端口和API端口

00:01:31.979 --> 00:01:37.409
有不同的来源，因此您必须处理跨来源安全性和

00:01:37.409 --> 00:01:43.490
伴侣刚刚举起了

00:01:43.700 --> 00:01:47.939
限制，但这就像我们需要维护的其他代码

00:01:47.939 --> 00:01:55.439
并确保其正常工作，因此该计划是首先停止发货

00:01:55.439 --> 00:02:02.390
最新的Web UI带有伴侣的硬编码理论，而是委派给

00:02:02.390 --> 00:02:09.869
在jcpoa界面上的API端口处截断Web UI路径，或者走在我们前面，

00:02:09.869 --> 00:02:13.600
人们只会使用原本的版本的方式

00:02:13.600 --> 00:02:20.020
以免该特定版本会同时解决该问题

00:02:20.020 --> 00:02:26.440
随播网站，但也可以解决

00:02:26.440 --> 00:02:33.270
由于某种原因无法与较早的go ipfs或JSA PFS结合使用的最新Web UI

00:02:33.270 --> 00:02:41.290
所以我觉得我实施了PR，这就是

00:02:41.290 --> 00:02:46.510
准备合并，并且在这一方面没有技术障碍，问题是

00:02:46.510 --> 00:02:52.810
当我们想为人们提供一种测试最新Web UI的方法时，

00:02:52.810 --> 00:03:03.280
除了我们想要的API部分上特定于CID的CID之外，还要列入白名单

00:03:03.280 --> 00:03:08.350
还允许人们使用Web UI点上的DNS链接加载最新版本

00:03:08.350 --> 00:03:17.220
ipfs io，但是当我们有这种情况时，就会引入一种潜在的安全问题

00:03:17.220 --> 00:03:26.470
当我们在咖啡馆里有人时，有一个恶意的DNS服务器返回

00:03:26.470 --> 00:03:32.890
现在，一个不同的DNS链接转到了想法文件，而jessup EFS正在使用DNS

00:03:32.890 --> 00:03:37.270
操作系统提供的解析器，无法判断是否

00:03:37.270 --> 00:03:45.220
DNS查询经过加密，例如通过TLS的DNS或通过HTTP的DNS或

00:03:45.220 --> 00:03:51.370
通常是纯文本上的NS，因此上方的人可以看

00:03:51.370 --> 00:03:59.380
您查询的内容以及它们可以提供恶意DNS服务器，

00:03:59.380 --> 00:04:06.160
引入了不同的响应，从而使您的想法为您提供了

00:04:06.160 --> 00:04:15.370
不同的Web UI，因此该计划是在加载这些PRS时刹车

00:04:15.370 --> 00:04:26.560
IP网路使用者介面，以及使用DNS连结的网路使用者介面，直到我们对DNA之类的支援

00:04:26.560 --> 00:04:30.630
加密，所以我们需要的最低要求是

00:04:30.630 --> 00:04:38.560
确保go ipfs不使用操作系统中未加密的dns，我们需要

00:04:38.560 --> 00:04:45.160
切换到类似TLS上的DNS或HTTP上的DNS之类的内容，以确保我们在

00:04:45.160 --> 00:04:52.720
查找DNS链接，我们从类似的受信任的递归解析器获得

00:04:52.720 --> 00:04:58.000
类似于Firefox中的HTTP over DNS功能

00:04:58.000 --> 00:05:05.650
我相信这或多或少是我的故事，我会发布第一个补丁

00:05:05.650 --> 00:05:11.889
退回到go ipfs和下一个活动家提供的Web UI

00:05:11.889 --> 00:05:19.990
随播广告更好地发布，并启用了PR，使人们可以选择加入

00:05:19.990 --> 00:05:28.270
IP Ana的公司也准备好合并我制作它的方法，即吃掉它检测到的文本

00:05:28.270 --> 00:05:36.159
IP NS路径不受支持并回退到旧的路径，因此我们可以发货

00:05:36.159 --> 00:05:42.580
那，但是它不起作用，所以现在我可能把它停下来等待这些更改

00:05:42.580 --> 00:05:48.520
在go ipfs中，如果我有任何疑问，我想就这些了

00:05:48.520 --> 00:05:57.400
答案可以解释吗？我们可以从这些变化中得到什么？

00:05:57.400 --> 00:06:03.190
甚至像您解决do H一样，假设您解决了未加密的DNS

00:06:03.190 --> 00:06:07.960
确保它被加密的问题我们还有兼容性问题吗

00:06:07.960 --> 00:06:12.219
如果还有其他并非正在运行的IPS节点，我们可能不支持

00:06:12.219 --> 00:06:20.880
这是有兼容性向后兼容性后备mmhmm是的，所以

00:06:20.880 --> 00:06:26.289
像对抗companion木同伴一样没有问题

00:06:26.289 --> 00:06:31.930
不支持所有功能的时尚

00:06:31.930 --> 00:06:36.370
向后兼容，因为这是我们关注的，我们正在切换回

00:06:36.370 --> 00:06:41.180
旧的方式，所以即使是最古老的OFS也会起作用

00:06:41.180 --> 00:06:48.230
DNS问题的问题是，现在我们只是假设

00:06:48.230 --> 00:06:54.290
我们进行DNS链接查找，我们只是假设这是正确的，事实是，大多数

00:06:54.290 --> 00:07:01.190
的人使用其ISP提供的未加密DNS服务器，因此

00:07:01.190 --> 00:07:08.440
Go IGF存在兼容性问题，它只是一个钉子，它不知道

00:07:08.440 --> 00:07:14.030
谁解决了，它只是询问操作系统IP的名称

00:07:14.030 --> 00:07:19.430
该名称或txt记录并获取它，就像这样，所以实际上

00:07:19.430 --> 00:07:26.600
稍微安全一点哦，那会更安全，因为您将不再

00:07:26.600 --> 00:07:32.360
关于您访问​​的DNS链接网站的泄漏信息

00:07:32.360 --> 00:07:39.220
将确保您与之间没有篡改实际的DNS链接记录

00:07:39.220 --> 00:07:45.320
您在go ipfs中配置的DNS解析器，因此该想法是

00:07:45.320 --> 00:07:50.270
会有一些像是由我们托管的受信任的解析器，或者只是其中之一

00:07:50.270 --> 00:07:54.560
大型公共场所，但人们可以选择自己选择

00:07:54.560 --> 00:08:01.790
我的想法是将重点放在基于HTTPS的DNS上，因为我们将需要它，而我们

00:08:01.790 --> 00:08:07.760
实际上对此有支持，我相信Hugo已经为IP NS实施了该支持

00:08:07.760 --> 00:08:17.330
通过DNS工作，因此我们已经在网络中有了DNS解析器的有效示例

00:08:17.330 --> 00:08:26.480
通过HTTP使用DNS的浏览器，我们只是不将其用作

00:08:26.480 --> 00:08:30.710
整个IP FS并非如此，所以我认为，只要我们切换一下，这将使所有人受益

00:08:30.710 --> 00:08:33.340
腹

00:08:39.980 --> 00:08:47.720
太棒了，谢谢，还有其他什么要改变的吗？

00:08:47.720 --> 00:08:53.340
中间人的本地安全和减少地面攻击面

00:08:53.340 --> 00:08:59.490
以及调整和跟踪，就像在伴随网站上一样，

00:08:59.490 --> 00:09:03.420
消除了维护负担，就像我们删除了以前的代码

00:09:03.420 --> 00:09:11.690
负责所有业务流程，但对于常规用户而言，总体情况有所改善

00:09:11.690 --> 00:09:21.560
安全性，特别是如果我们同时添加了强化的DNS和J的功能，

00:09:21.560 --> 00:09:30.240
完全掩盖了您正在增强的网站上的秘密

00:09:30.240 --> 00:09:35.810
基本上我喜欢

00:09:36.259 --> 00:09:39.759
我们进入下一个议程

00:09:40.060 --> 00:09:47.560
下一个议程项目是浏览器中的内容和纯粹的发现

00:09:47.560 --> 00:09:51.630
我这里发生了一些变化

00:09:52.200 --> 00:10:02.890
意思是说我也可以选这个吗，是的，所以我们提出了一个日落建议

00:10:02.890 --> 00:10:11.940
星规和星规是我们的老派做法

00:10:11.940 --> 00:10:19.990
这些都为网络中的节点提供了一个信令点和集合点

00:10:19.990 --> 00:10:32.610
浏览器，并且我们有更好的方法来执行这些操作的更联盟的方法

00:10:32.610 --> 00:10:40.720
那些更好的方法已经实施或规范存在，但仍然

00:10:40.720 --> 00:10:47.140
我们所有的主要狗，如果有人开始在Web浏览器中使用Jess ipfs

00:10:47.140 --> 00:10:54.940
上下文，并且他们希望使自己的节点能够使用

00:10:54.940 --> 00:11:00.220
star协议实际上是我们宣布的默认值或类似的代码示例

00:11:00.220 --> 00:11:06.150
即使在我相信的自述对象ipfs中，这也有点像

00:11:06.150 --> 00:11:12.430
不幸的是，我们几年前仍在使用这些短暂的工作

00:11:12.430 --> 00:11:17.670
而且我们不会推动那些新的更好，更联合的分散式解决方案

00:11:17.670 --> 00:11:22.300
通过终点线，所以这就像是终止启动协议的建议

00:11:22.300 --> 00:11:27.910
从根本上说，这是一种停止向社区传达我们将要搬迁的信号的方式

00:11:27.910 --> 00:11:34.030
离开他们将需要一些时间，我相信我们将需要一个新的

00:11:34.030 --> 00:11:40.480
那些新的分散式联邦基础架构的基础架构

00:11:40.480 --> 00:11:46.750
像集合点协议这样的解决方案，以及真正的

00:11:46.750 --> 00:11:52.140
协议，所以只是将其放在地图上

00:11:52.140 --> 00:12:00.959
这就是开始协议解决内容和对等发现的方法

00:12:00.959 --> 00:12:09.000
现在，这就是为什么它在此主题下，而第二回合在此主题下

00:12:09.000 --> 00:12:13.050
主题是我们如何通过思考网络浏览器来改善委托

00:12:13.050 --> 00:12:21.390
委托路由是一种以其工作方式替换启动协议的解决方案之一

00:12:21.390 --> 00:12:27.899
您是否委托了一些查询，例如向博士询问具有此要求的同伴

00:12:27.899 --> 00:12:35.250
CID或配置文件发布记录，您可以提供此特定的CID

00:12:35.250 --> 00:12:41.730
对于人们，如果他们想要如此委托的路由，我们就像一个模块

00:12:41.730 --> 00:12:51.720
内容和矛的委托路由，问题或挑战在于

00:12:51.720 --> 00:12:57.750
需要是它将主要用于Web浏览器，并且Web浏览器随附

00:12:57.750 --> 00:13:02.459
委托路由工作方式的一些挑战基本上是您指定一个

00:13:02.459 --> 00:13:11.010
委托时JS ipfs节点将获得的Web服务端点的列表

00:13:11.010 --> 00:13:20.550
一些命令以及Web浏览器处理对远程来源的请求的方式是

00:13:20.550 --> 00:13:26.339
你有一个极限，我想我相信这是六个并发

00:13:26.339 --> 00:13:33.899
每个主机的连接数，我们还有一些命令，例如preload之类的

00:13:33.899 --> 00:13:40.670
大数据集的递归预加载可能需要一些时间，这意味着一个

00:13:40.670 --> 00:13:48.920
请求将挂起很长时间，占用这六个插槽之一，因此

00:13:48.920 --> 00:13:56.190
就像不断挑战，调整委派给路由模块的工作

00:13:56.190 --> 00:14:00.149
在Web浏览器中更好的一种方法是限制并发数量

00:14:00.149 --> 00:14:05.350
要求我相信那些公关已经登陆的下一步是

00:14:05.350 --> 00:14:10.750
支持那些长时间运行的请求的超时，因为

00:14:10.750 --> 00:14:20.530
网络浏览器上下文，如果我们点击超过5个6个预加载请求，

00:14:20.530 --> 00:14:25.570
这些请求花费太多时间，基本上会阻止其他所有请求，

00:14:25.570 --> 00:14:31.570
没有别的东西会被委派，所以这些挑战或多或少是我

00:14:31.570 --> 00:14:35.620
相信我在Sun夕阳下提到了委托路由

00:14:35.620 --> 00:14:40.090
就像插图中的协议一样，这就像我们需要不断努力

00:14:40.090 --> 00:14:45.160
登陆这些新解决方案，确保这些解决方案像

00:14:45.160 --> 00:14:48.730
默认的公共基础结构和其他人运行的说明

00:14:48.730 --> 00:14:57.730
他们自己的委托路由节点或中继，然后在某些时候

00:14:57.730 --> 00:15:04.690
将从开始协议切换，我相信这或多或少是个故事

00:15:04.690 --> 00:15:10.350
在那之后，如果有人感兴趣，我还有一个问题

00:15:10.350 --> 00:15:14.230
我们对性能上限有什么样的理解吗

00:15:14.230 --> 00:15:19.570
如果我们认为WebRTC基础连接能够摆脱这种情况

00:15:19.570 --> 00:15:23.880
上限实际上是或增加到20或类似的值，并且某些浏览器

00:15:23.880 --> 00:15:28.690
但是我们是否了解这些类型的优化有多接近

00:15:28.690 --> 00:15:32.410
增加超时和限制并发请求将使我们受益，因为

00:15:32.410 --> 00:15:36.040
似乎这种性质减少了整个网络的数量

00:15:36.040 --> 00:15:42.820
给定时间可用的吞吐量或活动，因此如果我们这样做

00:15:42.820 --> 00:15:48.370
我们认为可以在此处完成的所有操作要快多少

00:15:48.370 --> 00:15:55.390
你会问内容和同伴发现是否会像

00:15:55.390 --> 00:16:01.510
像某些第三方专门委派的路由，是的，我认为这是

00:16:01.510 --> 00:16:06.100
委派的阅读非常像那是最大的机会，

00:16:06.100 --> 00:16:10.450
在浏览器中，我们知道是的，这完全是短期的

00:16:10.450 --> 00:16:18.130
这将是最快的事情，更像是类固醇的预紧力

00:16:18.130 --> 00:16:22.630
这就像常规的HTTP请求一样，所以它不喜欢使用WebRTC

00:16:22.630 --> 00:16:30.639
或或认为它只是将API委托给我们的一些远程HTTP API，因此

00:16:30.639 --> 00:16:38.769
像短期修复一样，使人们可以运行他们自己的路透社业绩

00:16:38.769 --> 00:16:43.269
主要改进过程中的改进

00:16:43.269 --> 00:16:49.930
这是当您在Web浏览器中将内容添加到节点时

00:16:49.930 --> 00:16:57.540
将会得到它将通过网络使用委托节点来提供，这意味着

00:16:57.540 --> 00:17:04.329
由于您正在运行中而无法联系到您的所有节点

00:17:04.329 --> 00:17:09.159
Web浏览器，并且您没有打开端口，这些节点现在将能够

00:17:09.159 --> 00:17:14.079
到达并获取该内容，因为委托内容路由在以下情况下起作用

00:17:14.079 --> 00:17:21.220
您像provide方法一样执行，它将要求委托节点提取该对象

00:17:21.220 --> 00:17:27.100
来自您的数据，然后将其发布到，它将自动将其发布到

00:17:27.100 --> 00:17:31.990
它正在提供给网络的HT，因此实际上其他人希望获得

00:17:31.990 --> 00:17:39.100
他们将到达的数据并被告知该委托节点具有

00:17:39.100 --> 00:17:45.940
这个内容，所以更多地是关于解决内容实际存在的问题

00:17:45.940 --> 00:17:52.000
比在合理的情况下改进一些指标更可行

00:17:52.000 --> 00:17:55.150
再次抱歉，他们注意到由于您正在运行

00:17:55.150 --> 00:17:59.289
浏览器，然后他们才能获得想要的内容，因此他们以某种方式获得了

00:17:59.289 --> 00:18:02.530
在他们要求的乐队上访问该cid，这是他们可以获取的ID

00:18:02.530 --> 00:18:07.419
从您要求为您保留该值的委托节点开始，是的，就像

00:18:07.419 --> 00:18:16.600
几乎就像是隐约地钉住了是的，就像让您的节点

00:18:16.600 --> 00:18:21.789
请提供此内容，是的，就像您要求该节点获取

00:18:21.789 --> 00:18:27.130
来自您的内容，因为您在引导节点中已经委派了节点

00:18:27.130 --> 00:18:30.790
因此您始终保持连接状态，以便便笺能够获取内容

00:18:30.790 --> 00:18:34.780
从您那里，然后将其放入现金中

00:18:34.780 --> 00:18:41.770
该注释的涟漪回购，直到垃圾收集周期触及该数据为止

00:18:41.770 --> 00:18:46.900
是从该节点提供的，所以这很好地解决了何时

00:18:46.900 --> 00:18:52.000
您正在共享从一个波峰传播到另一个Web应用程序时的东西，这些节点是

00:18:52.000 --> 00:18:57.520
就像第二个人即使第一个人仍然能够获取数据

00:18:57.520 --> 00:19:01.180
脱机，因为数据仍然存在于委派节点上，因此

00:19:01.180 --> 00:19:07.000
就像改进的预紧力，这简直就是让人难以置信的

00:19:07.000 --> 00:19:10.570
更像是一个热土豆，你只是握住了一点，直到是，是的

00:19:10.570 --> 00:19:14.080
例如，当您共享某些东西时，可以关闭笔记本电脑了吗？

00:19:14.080 --> 00:19:18.100
您发送的人，例如链接或能够访问数据的人

00:19:18.100 --> 00:19:22.840
这就像是短期委派的路由，而从长远来看，将会

00:19:22.840 --> 00:19:30.160
像一个真正的协议和会合，这意味着人们将

00:19:30.160 --> 00:19:46.860
能够嚼口香糖的问题，所以你问那些笔记给你一些同龄人，然后

00:19:46.860 --> 00:20:00.130
您如何与那些同伴联系以赶上他们，所以那时候我们

00:20:00.130 --> 00:20:10.200
预紧力发挥作用，所以您打赌，当您得到那些同龄人时，您可以询问

00:20:10.200 --> 00:20:15.580
委托也可以自己获取该内容，那么您已经

00:20:15.580 --> 00:20:19.960
连接到代表，所以您可以从代表那里获取数据

00:20:19.960 --> 00:20:25.360
就像一个小窗口，我们尚未使用委托来解决

00:20:25.360 --> 00:20:35.500
我认为这与我询问时获取远程数据有关

00:20:35.500 --> 00:20:41.590
从伟大的方式，不确定如何到我们想要进入那里的方式

00:20:41.590 --> 00:20:45.040
但在报告中有一个问题

00:20:45.040 --> 00:20:55.809
嫉妒的p2p委派了内容路由模块，所以我们有效地使

00:20:55.809 --> 00:21:05.370
确实是Elliott节点，我们一直与这些节点保持活动连接

00:21:05.370 --> 00:21:14.230
是的，这就像委派路由一样，就像简单的解决方案

00:21:14.230 --> 00:21:21.370
现在，直到我们想要一个适当的实现，因为委托的工作方式非常

00:21:21.370 --> 00:21:27.160
像预取特定块一样天真，我们假设该块

00:21:27.160 --> 00:21:31.360
将在一段时间内供其他人提取或要求

00:21:31.360 --> 00:21:37.990
立即从此节点获取更高级的内容是

00:21:37.990 --> 00:21:49.320
当我们获得更多的对等分布式协议时，会合和中继的混合

00:21:49.320 --> 00:21:56.559
在某个遥远的集合点会面，然后意识到他们俩都可以讲话

00:21:56.559 --> 00:22:03.010
以WebRTC为例，然后他们可以升级连接并直接交谈

00:22:03.010 --> 00:22:10.330
但是直到有了这个，这就是为什么我们需要首先进行委托路由的原因，所以

00:22:10.330 --> 00:22:19.960
现在的问题是直接连接，除了我知道没有

00:22:19.960 --> 00:22:26.140
WebSocket直接通过WebSockets连接的问题是什么

00:22:26.140 --> 00:22:35.950
不管皮埃尔有什么，如果授权代表秘鲁认为我们是否属实，那我们会怎样？

00:22:35.950 --> 00:22:41.230
得到有关此商品的通知Pierre具有您想要的块，并且Pierre喜欢

00:22:41.230 --> 00:22:45.850
WebSocket地址没有问题，我们可以直接连接到它的问题

00:22:45.850 --> 00:22:51.580
是WebSocket之类的Web浏览器节点无法打开Web套接字，例如

00:22:51.580 --> 00:22:57.250
听着，我们就像建立外向的人一样，所以如果有去的话

00:22:57.250 --> 00:23:00.549
ipfs节点公开了WebSocket传输，我们可以

00:23:00.549 --> 00:23:06.129
连接到是的，但这就是我要说的，所以您使用代表来询问

00:23:06.129 --> 00:23:12.370
好吧，给我那些有障碍的同伴，并告诉我他们是否有障碍

00:23:12.370 --> 00:23:16.899
WebSockets，然后在浏览器中获取该信息，然后

00:23:16.899 --> 00:23:22.289
您遍历该列表并连接到所有这些列表，或者至少连接到具有

00:23:22.289 --> 00:23:28.570
我们现在可以做的WebSockets总的来说，是的，我

00:23:28.570 --> 00:23:34.230
问题是我一直在将其作为我正在做的工作的一部分，并且勇敢地

00:23:34.230 --> 00:23:40.269
问题是，在WebSockets上侦听的同行并不多

00:23:40.269 --> 00:23:48.210
因为这需要设置证书并使用like

00:23:48.210 --> 00:23:54.929
在go ipfs或其他人中手动配置WebSocket传输

00:23:54.929 --> 00:23:59.740
启用了未加密的Web套接字，这是一个问题，因为如果您

00:23:59.740 --> 00:24:06.909
在https上运行JS ipfs，您将无法连接哦，是的，是的，所以

00:24:06.909 --> 00:24:11.559
就像有人怀疑为什么要去ipfs而不是在听

00:24:11.559 --> 00:24:17.139
默认情况下，这就是WebSocket的原因，因为默认情况下它不是未加密的，并且大多数

00:24:17.139 --> 00:24:21.309
的网站位于HTTPS上，这意味着它们无法建立

00:24:21.309 --> 00:24:30.639
连接到未加密的网络套接字对不起，还有一个问题，所以我们大多数人

00:24:30.639 --> 00:24:41.080
网络是网络的背后，我们依靠与之相关的关系来实际获取数据

00:24:41.080 --> 00:24:50.230
从这些字段中正确选择，因此如果我们放置一些中继来启用WebSockets，

00:24:50.230 --> 00:24:57.999
可能会改善一些情况，而不是真实的，或者如果我们完全同意

00:24:57.999 --> 00:25:03.429
尤其是如果我们对此有所了解，我相信该计划是针对

00:25:03.429 --> 00:25:11.549
引导节点也像中继一样，也可以监听WebSockets和

00:25:12.609 --> 00:25:21.609
人们可以自己运行，这样可以或应该像链接程序包那样，

00:25:21.609 --> 00:25:29.649
你们都将证书上的Web套接字公开给您充当的网络

00:25:29.649 --> 00:25:37.269
进行中继，如果越来越多的人是机构，那些机构将会

00:25:37.269 --> 00:25:40.779
完全改善网络的运行状况，尤其是当您处于

00:25:40.779 --> 00:25:45.369
运行面向该浏览器的Jessica网页浏览器，该笔记将能够连接到该浏览器

00:25:45.369 --> 00:25:50.440
更多的同龄人，但我认为这不会解决这个现实。

00:25:50.440 --> 00:25:57.009
问题，我们仍然需要外部继电器，我们仍然需要

00:25:57.009 --> 00:26:01.450
会合和协议升级，但这就像我们要走的路

00:26:01.450 --> 00:26:07.479
从集中式信令服务器转变为更像Web的联合模型

00:26:07.479 --> 00:26:21.779
浏览器感谢，这非常有趣，我越来越了解

00:26:21.779 --> 00:26:29.259
关于委托路由和中继，现在它们有时是相同的，

00:26:29.259 --> 00:26:40.359
不同的是，我对此还有一个问题，好像有一个

00:26:40.359 --> 00:26:44.649
分阶段着陆以实现我们正在委托的其中一些事情

00:26:44.649 --> 00:26:49.179
兄弟首先作为一个临时的解决方法，然后我们得到充分的真正支持

00:26:49.179 --> 00:26:54.200
是真正支持的时限以及阻碍因素

00:26:54.200 --> 00:26:59.940
我相信我还在就这个问题进行讨论

00:26:59.940 --> 00:27:09.300
链接，但或多或​​少我相信我们实际上想要日落WebSockets

00:27:09.300 --> 00:27:18.120
直到我们拥有中继和会合协议的公共基础架构，例如

00:27:18.120 --> 00:27:22.100
支持集合协议的节点

00:27:23.000 --> 00:27:30.720
因为我们现在人们正在使用WebSockets star来完成

00:27:30.720 --> 00:27:38.820
这些东西会提供，但我们不能指望人们现在就自己经营

00:27:38.820 --> 00:27:45.480
人们通常在开始玩创意或点对点游戏时会使用信号

00:27:45.480 --> 00:27:49.710
WebSockets从我们为社区提供的自述文件中开始发出信号

00:27:49.710 --> 00:27:56.730
去尝试和玩耍，所以至少我们应该开始尝试

00:27:56.730 --> 00:28:02.180
我们需要使用这些替代品创建一个新的基础架构

00:28:02.180 --> 00:28:08.400
随机并行的长话短说，我相信这就像一个至少一个或

00:28:08.400 --> 00:28:17.550
进行四分之二的工作以达到我们运行时的目的

00:28:17.550 --> 00:28:22.440
一段时间，然后我们可以谈论像固体一样关闭那些

00:28:22.440 --> 00:28:41.970
节点，或者就像在将它们取下时将其日落一样，嗯，我坚持

00:28:41.970 --> 00:28:57.560
实现的数量您会看到相同的问题相同的问题

00:28:57.560 --> 00:29:08.660
发生的运行是基本信号，那么我的意思是，这意味着带宽

00:29:08.660 --> 00:29:14.950
不管真的三年，都会有同样的问题，所以

00:29:14.950 --> 00:29:28.990
我有一堆真的很寂静，我相信我们失去了雨果，是的，听起来

00:29:28.990 --> 00:29:32.470
就像问题是当努力小组回滚一堆数字时

00:29:32.470 --> 00:29:35.830
由于某些问题，上个月中继服务器，我们将如何使愈合无效

00:29:35.830 --> 00:29:42.940
这些问题与我们添加新的继电器一样，是的，所以我们意识到的问题

00:29:42.940 --> 00:29:51.580
那些继电器被用来实际推送数据之前的所有数据

00:29:51.580 --> 00:29:57.460
必须经历这些中继，然后我们开始进行实验，在那里

00:29:57.460 --> 00:30:03.400
在网络上没有其他中继，并且在出现中继时发现它们很昂贵

00:30:03.400 --> 00:30:10.270
带宽，因为像实际数据一样通过这些中继

00:30:10.270 --> 00:30:17.290
缓解既要运行这些中继，又要为

00:30:17.290 --> 00:30:22.030
节点以升级到对等连接，例如，当我必须

00:30:22.030 --> 00:30:25.560
了解在Web浏览器中运行的jaesik FS节点

00:30:25.560 --> 00:30:30.760
默认情况下，尽管这两个节点都无法互相通信，但它们将

00:30:30.760 --> 00:30:35.980
通过一些中继互相交谈，但是一旦这些节点能够

00:30:35.980 --> 00:30:44.470
彼此交谈，他们可以意识到，我们俩都可以交谈WebRTC，所以在这一点上

00:30:44.470 --> 00:30:50.650
这些节点可以将相关连接升级到对等

00:30:50.650 --> 00:30:58.210
一个，这样可以节省中继的带宽，因为那些对等体会

00:30:58.210 --> 00:31:04.600
只是将继电器用作一个会合点，当我们谈论这个时

00:31:04.600 --> 00:31:11.580
经常像会合和中继一样，因为有时

00:31:11.580 --> 00:31:22.480
因为单机单节点可以同时充当两者，所以这个想法是要消除一些障碍。

00:31:22.480 --> 00:31:28.539
通过使用该协议可以实现所有人的带宽负担

00:31:28.539 --> 00:31:33.220
一旦这些对等点发现彼此的对等点，就将其连接升级到对等点

00:31:33.220 --> 00:31:39.309
地址不确定是否有帮助，我希望您能继续观看并获得

00:31:39.309 --> 00:31:42.210
他的答案

00:31:48.820 --> 00:31:50.880
你

00:31:51.130 --> 00:31:57.789
我有一个关于集合点的快速问题，所以有计划能够

00:31:57.789 --> 00:32:02.620
也可以通过浏览器节点来实现这一点，例如，您知道

00:32:02.620 --> 00:32:05.799
我连接到另一个人未连接到我们的码头

00:32:05.799 --> 00:32:10.559
通过WebRTC进行交流可以帮助他们与其他人建立联系

00:32:12.339 --> 00:32:19.539
据我记得在那里会合会类似于

00:32:19.539 --> 00:32:28.379
成为外部接力者的方式是这样，您可以将自己标记为与他人的会合点

00:32:28.379 --> 00:32:36.159
但是我身上的那个四层涂层我也会赶上阅读那些规格的，但是我

00:32:36.159 --> 00:32:43.100
相信这将是一个不错的选择

00:32:43.100 --> 00:32:48.360
好的，我们还有20分钟左右的时间，左侧的边缘有两个主题

00:32:48.360 --> 00:32:57.990
因此，让我们继续进行网络浏览器中的IP茴香设计，前提是您如何做到这一点

00:32:57.990 --> 00:33:11.870
叹了口气，我只是很好奇，嘿，你要我谈谈。

00:33:11.870 --> 00:33:36.830
怎么了，所以我可以分享我的屏幕吗，对不起，谢谢你，我有一个

00:33:36.830 --> 00:33:53.060
跟踪问题好吧，是的，我的衣服大概是整个我的阴茎

00:33:53.060 --> 00:34:01.370
意识，在上个季度我们做了哪些

00:34:01.370 --> 00:34:08.280
实验性实施，现在是本季度的目标

00:34:08.280 --> 00:34:14.940
是为了使其像生产一样准备就绪，并将其部署到全球的每个人，但是它

00:34:14.940 --> 00:34:20.840
需要保持它的状态，就像我们不会丢失记录数据库一​​样

00:34:20.840 --> 00:34:28.770
建立并稳定一切，例如正确部署名称服务器和

00:34:28.770 --> 00:34:35.159
所有这些东西，这是本季度需要进行的工作，再加上

00:34:35.159 --> 00:34:42.570
至少在共享方面进行了一些调整，并且仍然很冷

00:34:42.570 --> 00:34:50.790
就像我们在谈论通过HTTP支持DNS一样的需求

00:34:50.790 --> 00:34:56.730
债务和另一件事，这增加了一些

00:34:56.730 --> 00:35:06.660
或者就此而言，这也是本季度的技术提示Dominic已经

00:35:06.660 --> 00:35:14.070
已经通过DNS初步实施了Robert Miss Miss农村

00:35:14.070 --> 00:35:22.109
但它仍处于早期阶段，我们仍然需要在

00:35:22.109 --> 00:35:28.580
古怪的效果，现在我和纳丁正在谈论

00:35:28.580 --> 00:35:37.350
完全从BFS中提取幸福，而Jess从

00:35:37.350 --> 00:35:44.130
十三个需要这个才能在某些服务中实际上不是

00:35:44.130 --> 00:35:51.900
知道如果完成，那么这些就是将要发生的任务

00:35:51.900 --> 00:35:58.710
这个季度，我们希望我们不属于它，它在最后准备好了

00:35:58.710 --> 00:36:04.890
因为还有一些任务要做一些事情，杰西可能会

00:36:04.890 --> 00:36:11.780
快点让我们起来吧起来效果会花费更长的时间

00:36:11.780 --> 00:36:20.820
希望能够在本季度末阅读完此书，但至少可以

00:36:20.820 --> 00:36:30.240
杰西，我来自那是我们自己的意思，我们也有可供任何人使用的DNS

00:36:30.240 --> 00:36:40.800
大家对此有任何疑问我有一个关于提取我的快速问题

00:36:40.800 --> 00:36:51.390
从主要ipfs的阴茎相关逻辑我知道该门负责的代码

00:36:51.390 --> 00:36:59.520
对于网关，也计划从go IP事务中提取

00:36:59.520 --> 00:37:05.790
就像在讨论如何使它像遵循单个

00:37:05.790 --> 00:37:16.290
在哪里切掉东西的惯例如何塑造那些新的api是的

00:37:16.290 --> 00:37:24.500
仍然没有，我们正在思考的方式与我们所拥有的方式相同

00:37:24.500 --> 00:37:34.130
从GSA BFS i中提取的存储库-但Ness将会是相同的

00:37:34.130 --> 00:37:43.020
嗯，它可以独立工作，但是在里面，我我的建议只是我需要

00:37:43.020 --> 00:37:48.119
它只是必需的，它的API将被设计为发布，但从未解决过

00:37:48.119 --> 00:37:54.869
它的细节是您只想提取IP NS还是有一个计划

00:37:54.869 --> 00:38:04.680
提取处理DNS链接等内容的人员

00:38:04.680 --> 00:38:13.970
去ipfs，是的，这是另一个，我们有点卡住了

00:38:13.970 --> 00:38:21.000
原谅什么在命名我的阴茎什么还没有得出结论

00:38:21.000 --> 00:38:29.339
关于它看到什么被提取出来，什么保留了我们还保留了什么

00:38:29.339 --> 00:38:35.010
我会去还是只是对我问，是的，因为就像我简短地记得一些

00:38:35.010 --> 00:38:40.650
在Caiaphas营地中进行的讨论，其中一些人希望使用DNS

00:38:40.650 --> 00:38:48.630
链接或IP NS而不实际使用ipfs，这就是我们想要的原因

00:38:48.630 --> 00:38:57.359
提取mmm谢谢您还有其他问题

00:38:57.359 --> 00:39:07.970
关于幸福，我有一个问题，一旦这一系列的变化降临，我会很好奇

00:39:07.970 --> 00:39:14.599
对于使用此功能的人来说，景观是什么样的，这主要是

00:39:14.599 --> 00:39:21.240
性能优势除了以前的知识外，我们还能得到什么

00:39:21.240 --> 00:39:26.150
讨论中，我们得到了很多当地的经验，

00:39:26.859 --> 00:39:33.009
从隐私转移到这，这听起来像我们也降低了

00:39:33.009 --> 00:39:37.299
一些较低的维护负担，因为可以进行沟通和解决

00:39:37.299 --> 00:39:43.380
使用也许更统一的方法，但是我们还能从这些变化中得到什么？

00:39:43.380 --> 00:39:54.930
我认为您基本上一切都很好，我们在一个路由器中获得了对

00:39:54.930 --> 00:40:06.460
例如通过Internet在全球范围内使用，我们通过DNS超额CVS获得了隐私，

00:40:06.460 --> 00:40:13.900
不要使用任何当前的类似DHT网络来执行此角色的操作，因此

00:40:13.900 --> 00:40:21.519
它不像高清那样集中化扫描，但它像是精简版

00:40:21.519 --> 00:40:29.529
所有人都已经知道了一切，因为您是技术专家

00:40:29.529 --> 00:40:32.729
这是超级快

00:40:35.180 --> 00:40:41.869
是的，用户将全部拥有可用的不同路由器

00:40:41.869 --> 00:40:52.359
问题是他得到了我听到分散响应的响应

00:40:52.359 --> 00:41:05.720
您需要在我喜欢的DNS之间进行选择，这是一些

00:41:05.720 --> 00:41:15.319
银行已经让我休息了，你听到了我的声音

00:41:15.319 --> 00:41:20.480
我可以采取行动，是的，这有点有点震撼人心

00:41:20.480 --> 00:41:35.180
它使我们为您发布新内容的所有内容都获得了32个子域

00:41:35.180 --> 00:41:45.099
每月获得一些像您一样进化的主要知识

00:41:47.670 --> 00:42:06.040
不，硬停，好吧，我喜欢你吗？我回答了你一个问题吗？

00:42:06.040 --> 00:42:11.910
是的，我对这个问题有一个后续问题，即您说有一个

00:42:11.910 --> 00:42:17.530
用户现在可以在快速选项和快速集中选项之间做出选择

00:42:17.530 --> 00:42:23.110
期权或分散期权吗，我们是否有计划使这一点

00:42:23.110 --> 00:42:26.440
更具动态性，因此可以代替二进制“ //”选择

00:42:26.440 --> 00:42:31.090
动态回退，因此，如果您选择快速集中式选项，

00:42:31.090 --> 00:42:37.690
由于状态而失败国家演员可能正在走某些xena，然后它会掉落

00:42:37.690 --> 00:42:47.020
回到这个较低的分散选项，是的，我们有一个计划要解决所有问题

00:42:47.020 --> 00:42:56.530
现在，我不认为我们不会完全实现它，我们将定义一个

00:42:56.530 --> 00:43:04.740
发布和生成结果的单一策略，但计划是添加更多选项和

00:43:04.740 --> 00:43:13.960
就像您获得该用户的回调一样，该用户也可以接收其他用户

00:43:13.960 --> 00:43:18.520
来自不同路由器的响应，因此基本上您可以选择

00:43:18.520 --> 00:43:25.420
总是拿到第一个，但是你就像钩住了另一个，

00:43:25.420 --> 00:43:30.490
然后您可以决定要做什么，或者使用第一个，或者等待

00:43:30.490 --> 00:43:35.190
对于其他人，无论您想做什么

00:43:37.020 --> 00:43:47.770
谢谢您还有其他问题，尽管我们还有10分钟的时间，

00:43:47.770 --> 00:43:53.790
一个抵押进入项目，该项目为您添加了有关同行的项目

00:43:53.790 --> 00:44:00.450
esmie真的会很快，所以不用担心，我们快要完成了，所以这是

00:44:00.450 --> 00:44:04.440
他昨天创建的所有问题，我相信我只是有一个简短的问题

00:44:04.440 --> 00:44:09.390
让我们忽略第一项，因为这与如何

00:44:09.390 --> 00:44:17.450
你们可以对位置进行排序吗？

00:44:20.730 --> 00:44:25.690
您不知道IP地址的位置，还是实际上有文字信息

00:44:25.690 --> 00:44:29.650
描述，所以我们实际上得到了很好的文字描述，这是正确的混合

00:44:29.650 --> 00:44:34.210
您在这里有很多未知的地方，然后在某个城市的某个地方

00:44:34.210 --> 00:44:39.340
国家，所以他们想按固定排序

00:44:39.340 --> 00:44:45.100
位置排序，但我很好奇，就像你们在逻辑上认为的那样

00:44:45.100 --> 00:44:51.270
排序地点名称，然后按国家/地区排序

00:44:51.270 --> 00:44:56.860
国家和城市，因此您会按字母顺序查看城市，但顺序为

00:44:56.860 --> 00:45:01.770
是的，我想找出最有意义的国家，如果

00:45:01.770 --> 00:45:07.660
因此，如果您基本上通过地名来做到这一点，那么我确实认为国家和地区

00:45:07.660 --> 00:45:12.850
然后说他会说得通，如果我们将其列为

00:45:12.850 --> 00:45:15.190
美国费尔菲尔德（Fairfield），如果我们将其列为

00:45:15.190 --> 00:45:18.430
美国费尔菲尔德（Fairfield United States），但这对我来说没有任何意义

00:45:18.430 --> 00:45:21.970
在较早的通话中谈到的是，这对我们来说更有趣

00:45:21.970 --> 00:45:27.040
看到最高的延迟，例如，可能是的，是的，实际上我

00:45:27.040 --> 00:45:29.950
正确理解，如果我们不尝试与我联系，这就是顺序

00:45:29.950 --> 00:45:37.869
我的名字是说等待时间特别有用最小的东西是的东西

00:45:37.869 --> 00:45:41.800
关于位置的是，我们有一种特殊的位置类型

00:45:41.800 --> 00:45:48.490
未知，我相信像那些未知应该在最后

00:45:48.490 --> 00:45:51.869
我同意，让您像国家一样决心

00:45:51.869 --> 00:45:58.270
像字典一样的城市，但是像未知的城市，应该在最后降落

00:45:58.270 --> 00:46:04.570
否则，我们会在最顶端得到一个非常未知的有趣列表，是的

00:46:04.570 --> 00:46:08.380
好吧，随着时间的流逝，它似乎解决了这些问题，所以很多事情都会

00:46:08.380 --> 00:46:13.090
最初处于未知状态，但随着时间的流逝，它们变为实际

00:46:13.090 --> 00:46:19.450
他们确定IP所基于的位置，很好

00:46:19.450 --> 00:46:23.220
知道我会继续前进，并在聊天埃里克（Eric）

00:46:23.220 --> 00:46:30.640
与Ya Joe的近距离是您带来了基于浏览器的GPS查找

00:46:30.640 --> 00:46:35.760
并以地理距离完成，这与

00:46:35.760 --> 00:46:39.040
延迟距离是的，看到它如何对齐将会很有趣

00:46:39.040 --> 00:46:42.640
虽然这样可能很酷

00:46:42.640 --> 00:46:46.779
我喜欢这种方法，但是会令人困惑，因为它看起来并不像

00:46:46.779 --> 00:46:50.980
是的，那是正确的命令，不是默认的，是的，我觉得

00:46:50.980 --> 00:46:58.269
是的，这是一种新颖性，是一种新颖性排序，好吧，其他这些专栏

00:46:58.269 --> 00:47:01.839
也可以排序，这有点奇怪，因为我不知道

00:47:01.839 --> 00:47:08.259
其他所有列都可以按以下任何想法或意见进行排序

00:47:08.259 --> 00:47:13.890
这些其他排序选项或您希望在此处看到的内容

00:47:16.350 --> 00:47:23.560
好吧那很好那很好我想没人会在意我们

00:47:23.560 --> 00:47:28.869
当它成为一个完美的问题时，是的，您知道延迟是等待和

00:47:28.869 --> 00:47:32.770
看，我认为那可能是最重要的一碗保龄球

00:47:32.770 --> 00:47:39.520
酷，谢谢，是的，如果有的话，谢谢

00:47:39.520 --> 00:47:43.869
有些标头是可点击的，而其他标头则不是我们可能希望在视觉上看到的

00:47:43.869 --> 00:47:50.260
区分它们也许你知道强调那些也许是的

00:47:50.260 --> 00:47:53.950
是的，我可以调查一下排序已内置到表格中

00:47:53.950 --> 00:47:57.369
我们在这里使用的组件，我将看看他们是否有关于如何

00:47:57.369 --> 00:48:01.800
显示什么是可选的，什么不是

00:48:02.240 --> 00:48:04.300
你

00:48:05.330 --> 00:48:13.950
我能说我在挖掘对瑞克的参与是因为我希望你能

00:48:13.950 --> 00:48:19.050
当我提出一些可以使我能够做些什么的时候对我感兴趣

00:48:19.050 --> 00:48:26.460
渴望获得那个水平，在您之前先感谢自己的自我倡导

00:48:26.460 --> 00:48:34.970
说话，您可以要求那级别的兴趣再见Carrie见到您很高兴

00:48:34.970 --> 00:48:40.020
今天的议程上还有其他人们想谈的事情吗

00:48:40.020 --> 00:48:51.930
关于，因为我们都在这里，我们还有六分钟，你想唱歌吗

00:48:51.930 --> 00:49:01.040
埃里克（Eric）人民的民歌中，我知道芝加哥有很酷的东西

00:49:02.120 --> 00:49:12.960
他们都是关于黑帮和披萨的芝加哥民歌试图满足

00:49:12.960 --> 00:49:25.980
你在房子里知道的陈腔滥调是的，那里有一些历史

00:49:25.980 --> 00:49:30.360
这样的话，我今天会唱歌，但也许下次会给我们带来一首歌

00:49:30.360 --> 00:49:37.890
昨天在Al Capone的坟墓旁开车，我是一个生活中的开车陈词滥调，芝加哥人，但是

00:49:37.890 --> 00:49:42.210
只是因为它正好在我要去的路上，而这正是我

00:49:42.210 --> 00:49:47.700
不会很漂亮地为此明确计划旅行

00:49:47.700 --> 00:49:57.620
令人失望的很好，谢谢大家下周见

