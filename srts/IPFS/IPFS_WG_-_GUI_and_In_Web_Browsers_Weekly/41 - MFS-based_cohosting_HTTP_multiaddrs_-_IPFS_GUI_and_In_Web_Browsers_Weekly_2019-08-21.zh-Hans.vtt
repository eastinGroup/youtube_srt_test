WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.040 --> 00:00:10.950
好的，欢迎您进入浏览器，然后单击slick likkle，这是2019年8月21日

00:00:10.950 --> 00:00:18.960
我们的人员短缺，这周我们将要讨论一些议程项目

00:00:18.960 --> 00:00:31.470
去吧，特里和把戏都在我身上，把戏是在增加一些议程项目，所以

00:00:31.470 --> 00:00:39.170
也许我应该和第一个一起去分享我的屏幕

00:00:39.170 --> 00:00:48.620
是的，所以议程上的第一项是

00:00:48.620 --> 00:00:56.039
共同主持，我希望anak可以参加这次电话会议，但是我

00:00:56.039 --> 00:01:00.989
想大概讨论一下，但我会在此提供快速更新

00:01:00.989 --> 00:01:07.260
自上一专栏以来，我们在过去一周中进行了讨论，因此关于

00:01:07.260 --> 00:01:21.990
共同托管网站，也许我让它变暗了好吧，所以这两个想法都是ipfs

00:01:21.990 --> 00:01:28.110
随播广告和ipfs桌面可以提供更好的替代方式来固定

00:01:28.110 --> 00:01:34.439
网站，我们将其命名为“共同托管”，因此其想法是，当您拥有一个网站时

00:01:34.439 --> 00:01:41.549
您所关心的应该像一个切换开关，以加入

00:01:41.549 --> 00:01:50.450
贡献带宽来托管该网站的内容，这个想法是

00:01:50.450 --> 00:01:58.560
最初应该像我们的想法是使用NFS而不是

00:01:58.560 --> 00:02:06.240
介绍诸如配置之类的任何自定义内容以及我在该想法上写的类似内容

00:02:06.240 --> 00:02:14.250
我想可能太长了，但最短最短的想法是，如果我们想出了

00:02:14.250 --> 00:02:23.520
在em FS上为跟踪或托管网站以及所有网站命名路径的约定

00:02:23.520 --> 00:02:29.460
我们实际上不需要这些网站的历史快照

00:02:29.460 --> 00:02:32.520
引入任何类似的配置文件之类的东西

00:02:32.520 --> 00:02:37.740
因为如果我们说共同托管一个目录并在其中内部

00:02:37.740 --> 00:02:48.380
该主任我们有IP NS哈希或DNS链接的DNS链接的名称为

00:02:48.380 --> 00:02:55.320
目录名称，在每个目录中，我们都有子目录

00:02:55.320 --> 00:03:01.590
带有获取我们特定内容的时间的时间戳的目录

00:03:01.590 --> 00:03:10.910
快照，我想这足以让我们分发

00:03:10.910 --> 00:03:16.500
在em中具有此目录结构时，共同托管原因的编排

00:03:16.500 --> 00:03:22.200
FS然后是ipfs伴侣或ipfs桌面，或者可能只是一个普通的线栏

00:03:22.200 --> 00:03:29.220
脚本或王冠上运行的某些工具能够使用像ipfs一样检查em FS

00:03:29.220 --> 00:03:37.520
文件LS命令并返回共同托管网站的列表，然后列出

00:03:37.520 --> 00:03:41.750
特定域的直接特定目录的内容，以及

00:03:41.750 --> 00:03:50.550
通过时间戳对它们进行排序，我们可以知道何时获取了最后一帧

00:03:50.550 --> 00:03:56.459
或最后一次打na的时间是什么时候刷新，然后如果我们同意

00:03:56.459 --> 00:04:04.310
就像每隔12个小时或其他时间刷新一次，然后每次

00:04:04.310 --> 00:04:10.530
负责刷新共同托管网站的应用程序可以在该处进行排序

00:04:10.530 --> 00:04:15.840
所有快照都会检查最新快照的最后一个快照的时间戳

00:04:15.840 --> 00:04:21.480
如果超过刷新阈值，则只会刷新

00:04:21.480 --> 00:04:27.240
网站将最新版本复制到NFS（如果与旧版本相同）或

00:04:27.240 --> 00:04:31.710
作为最新版本，它只是弄乱了时间戳，因此它重命名了目录

00:04:31.710 --> 00:04:37.560
然后，实际上这就是所有需要发生的事情，所以我们只是将NFS用于

00:04:37.560 --> 00:04:46.500
没有文本文件就没有配置，只是这个同情心，为什么它在哪里

00:04:46.500 --> 00:04:50.280
我喜欢它是因为它很简单，它不会引入任何新的配置文件，并且

00:04:50.280 --> 00:04:56.210
以新的格式，然后使我们能够尝试以下用户界面：

00:04:56.210 --> 00:05:03.419
管理共同托管的网站，这样人们既可以使用

00:05:03.419 --> 00:05:08.340
ipfs伴侣用户界面或IP first桌面，但同时

00:05:08.340 --> 00:05:15.090
只需转到Web UI中的文件屏幕，然后转到共同托管目录中的共同托管

00:05:15.090 --> 00:05:19.710
然后手动删除所有快照或仅删除特定快照

00:05:19.710 --> 00:05:25.680
域名，因此，如果有人删除了共同托管示例目录

00:05:25.680 --> 00:05:31.440
他们都删除了旧快照，并且只是从中删除了整个网站

00:05:31.440 --> 00:05:37.470
被突然的编排刷新和跟踪，这就是想法

00:05:37.470 --> 00:05:44.909
这个想法只是IT优先伙伴和IP优先桌面都可以使

00:05:44.909 --> 00:05:51.240
我们可以按照自己的步调执行此操作，当然可以像我们应该同步并

00:05:51.240 --> 00:05:55.560
同意使用类似的命名标签或类似用户界面的方式，但是

00:05:55.560 --> 00:05:59.360
基本上就是这样

00:05:59.630 --> 00:06:07.469
这个有什么问题吗，是的，这真的很整洁，因为我觉得

00:06:07.469 --> 00:06:14.909
它确实使我感觉像本地和脱机本地网络

00:06:14.909 --> 00:06:20.159
场景，所以您知道这些常见情况，即您说我们离线运行

00:06:20.159 --> 00:06:23.250
研讨会或类似的内容，一个人可以下载该网站，然后

00:06:23.250 --> 00:06:25.680
其他人可以从其他人那里获得它以将其放在本地网络上

00:06:25.680 --> 00:06:29.460
即使您没有连接互联网，也可以像这样启用

00:06:29.460 --> 00:06:33.539
UI级别我们已经讨论了很长时间的一些病态用例

00:06:33.539 --> 00:06:39.779
时间，但目前尚不可行，至少至少是

00:06:39.779 --> 00:06:43.949
能够在此基础上继续发展，这看起来像是

00:06:43.949 --> 00:06:48.839
这样做会很有用，特别是因为目标

00:06:48.839 --> 00:06:53.249
实现与不同实现之间的某种程度的互操作性

00:06:53.249 --> 00:07:02.219
节点在上面操作是的，这是一个很好的问题，我们应该在哪里期望

00:07:02.219 --> 00:07:07.800
之所以这样，是因为我对这种想法的思考方式就是我们

00:07:07.800 --> 00:07:13.289
首先在用户领域实现这种方式，它不喜欢需要更改

00:07:13.289 --> 00:07:19.139
要使用ipfs或JSA PFS，我们基本上只是使用em FS在顶部建立该东西

00:07:19.139 --> 00:07:26.430
紫水晶，然后，如果它足够好，或者我们需要更多控制，那么说

00:07:26.430 --> 00:07:33.809
更好地控制刷新率或类似的事情

00:07:33.809 --> 00:07:40.619
就像把它钉出来并将其移至ipfs核心规范一样，因此将其从

00:07:40.619 --> 00:07:45.930
例如用户登陆某物，实现一个PFS桌面并与某物相伴

00:07:45.930 --> 00:07:52.439
就像紫水晶本身一样是本机实施的，是生物活性SMG ipfs，我不是

00:07:52.439 --> 00:08:00.990
可以肯定的是，如果在该用户土地级别上，该规范将在什么时候离开II

00:08:00.990 --> 00:08:06.089
如果它存在于此问题中，或者它仅在同伴中有一个实验性目录

00:08:06.089 --> 00:08:11.459
回购或类似的东西，但我认为特别是因为目标是

00:08:11.459 --> 00:08:16.800
有多个节点能够操作并具有共同的理解，那就是

00:08:16.800 --> 00:08:20.099
为什么我真正喜欢它，应该可以期望该标签和

00:08:20.099 --> 00:08:24.719
应该以某种方式期望命名结构，或者也许或者应该

00:08:24.719 --> 00:08:31.229
像IPFS造船厂的共同主持实验一样，像献给人们一样创建

00:08:31.229 --> 00:08:37.849
我们可以像我一样保留其中的某个方面或spec目录

00:08:37.849 --> 00:08:44.940
因为这也将是同步的一个好方法，因为现在，如果

00:08:44.940 --> 00:08:51.029
像我这样或从其IP桌面连接IP时对此有疑问

00:08:51.029 --> 00:08:55.060
我们没有像项目不可知的地方那样的钻机

00:08:55.060 --> 00:08:59.050
因为这是正确的，我知道这听起来是一个很好的解决方案，是的，所以

00:08:59.050 --> 00:09:06.610
也许在这次电话会议之后，或者明天是明天，如果我说我是

00:09:06.610 --> 00:09:10.540
在同一本地上，我在同一子网中

00:09:10.540 --> 00:09:15.670
但是我们已经断开连接，并且我们都在运行ipfs节点，就像

00:09:15.670 --> 00:09:21.580
这些命令对我来说是确定您在共同托管中拥有哪些站点

00:09:21.580 --> 00:09:32.160
是的，所以实际上人们无法浏览彼此的和以弗所

00:09:32.160 --> 00:09:43.830
但是，您的节点会在DHD上宣布您回购中拥有的所有可见ID，并且

00:09:43.830 --> 00:09:49.630
如果您的本地网络上有人要求您提供您的CID

00:09:49.630 --> 00:09:56.740
只是提供了它，所以它将以隐式方式进行工作，因此，如果有人

00:09:56.740 --> 00:10:03.250
对您在商店中拥有的同一个网站感兴趣的网站

00:10:03.250 --> 00:10:08.470
像快照一样，或者大多数网站都没有变化，而您拥有的大部分

00:10:08.470 --> 00:10:12.850
因此实际上不需要通信或信令

00:10:12.850 --> 00:10:19.330
除了ipfs中已经内置的功能之外，该人还会问我想

00:10:19.330 --> 00:10:26.350
浏览example.com并像生成CID一样开始并像start一样开始

00:10:26.350 --> 00:10:32.500
请求数据块，而您通过将这些数据块作为

00:10:32.500 --> 00:10:39.700
您在NFS中拥有的快照可以很好地提供，因此，我非常喜欢

00:10:39.700 --> 00:10:47.490
在这种情况下，将劫持example.com的请求或将其拦截

00:10:47.490 --> 00:10:54.459
看到它具有该块，或者在其本地共主机中将其ffs然后

00:10:54.459 --> 00:10:59.110
会喜欢那些障碍物，所以让我们说，这只是一个单节点方案

00:10:59.110 --> 00:11:03.670
我已经共同托管了example.com，但现在未与Internet连接

00:11:03.670 --> 00:11:10.300
但是我提出了这个要求，同伴要从我的本地加载它，我是第一时间

00:11:10.300 --> 00:11:14.350
然后从本地盒存储中了解本地加载方案将如何

00:11:14.350 --> 00:11:23.080
工作是是的所以基本上就像从本地TFS加载网站不是真正的HCP

00:11:23.080 --> 00:11:29.380
网关就可以了，因为可以将这个网站作为

00:11:29.380 --> 00:11:37.630
m FS中的快照只是保持这些块周围保持的一种方法

00:11:37.630 --> 00:11:42.490
他们从垃圾收集正确，这就是为什么喜欢

00:11:42.490 --> 00:11:47.260
我们在MF中拥有它的唯一类似的有效功能功能性原因

00:11:47.260 --> 00:11:53.230
除了像管理共同托管网站的列表一样，如何做事

00:11:53.230 --> 00:11:59.650
进入该列表，我如何添加一些内容以共同主持，是的，所以无论是

00:11:59.650 --> 00:12:05.530
像ipfs伴侣之类的用户界面，或者我可以先进入桌面，我想

00:12:05.530 --> 00:12:10.630
就像在TFS随播广告中一样，它更容易，因为您可以添加一些

00:12:10.630 --> 00:12:15.040
当有人在浏览网页时，浏览器会使用新的界面元素或

00:12:15.040 --> 00:12:21.000
是的，是的，在浏览器工具栏上有一个图标，您可以

00:12:21.000 --> 00:12:25.900
与您共同托管该网站，您甚至不需要喜欢从ipfs实际加载它

00:12:25.900 --> 00:12:30.490
就像标记您要共同托管一样，它将被添加到您的

00:12:30.490 --> 00:12:39.850
滑水桌面的本地节点我想它要么是

00:12:39.850 --> 00:12:45.340
确实负责刷新并喜欢管理，但是它使用Web UI，所以我

00:12:45.340 --> 00:12:48.880
考虑一下Web UI的设置，我们希望有一个echo托管

00:12:48.880 --> 00:12:55.420
实验一下您拥有此托管目录的文本，它可以使您

00:12:55.420 --> 00:13:02.890
例如添加域名或从那里添加网站的网址，但这就像一个

00:13:02.890 --> 00:13:07.630
我可以在此基础上添加新功能，如何在嵌入式书呆子中工作

00:13:07.630 --> 00:13:14.650
因此，假设我在同伴中以同伴而闻名

00:13:14.650 --> 00:13:21.610
它的同伴实际上是贝克和techno棒，所以两者

00:13:21.610 --> 00:13:27.290
本地NGO ipfs公开的HTTP API并嵌入了J的ipfs的简要运行

00:13:27.290 --> 00:13:33.079
假设两者都公开了相同的编程接口，所以如果您添加

00:13:33.079 --> 00:13:38.630
一个la UI元素就像共同主持这个网站一样，其工作原理是一样的

00:13:38.630 --> 00:13:44.060
问题将是存储或存储（如果运行）在嵌入式节点中

00:13:44.060 --> 00:13:48.350
在浏览器扩展程序中，我们就像一个无限的存储空间，因为

00:13:48.350 --> 00:13:55.160
例如标记浏览器扩展程序可以请求，但是如果您超越了

00:13:55.160 --> 00:14:03.009
像普通网站一样，它将受到浏览器当前限制的限制

00:14:03.430 --> 00:14:08.630
是的，有趣的是，我真的很感兴趣

00:14:08.630 --> 00:14:14.899
扩展级别没有为此嵌入任何用例，因为我感觉就是那样

00:14:14.899 --> 00:14:21.800
让我们克服了让普通用户单独安装的安装难题

00:14:21.800 --> 00:14:29.449
除了伴侣软件，我的意思是这是我们正在慢慢到达那里

00:14:29.449 --> 00:14:35.839
PR就像是工作进展到实际喜欢实施并启用

00:14:35.839 --> 00:14:40.880
通常在je和J的ipfs中进行垃圾回收，就像在J的ipfs中一样，因为

00:14:40.880 --> 00:14:46.760
目前我们没有垃圾收集，因此您可以向自己的内容添加内容

00:14:46.760 --> 00:14:53.120
节点，但是您我您实际上没有自动清除的机制

00:14:53.120 --> 00:14:58.819
您没有清理或没有放入NFS的东西，是的，我们需要喜欢

00:14:58.819 --> 00:15:04.430
早点解决这个问题，是的，我真的很喜欢做类似的事情

00:15:04.430 --> 00:15:09.709
只需构建一个URL书签，然后像Firefox内部书签标签一样对其进行标记

00:15:09.709 --> 00:15:13.120
只需将其标记为代码IP加共同主机或类似的名称，然后就可以了

00:15:13.120 --> 00:15:17.120
去做我今天没有做书签的事情，是的，是的

00:15:17.120 --> 00:15:24.319
用于管理书签的Firefox API更好，例如，比起更多的选项

00:15:24.319 --> 00:15:29.689
他们将含铬，所以该切线也应如此

00:15:29.689 --> 00:15:35.300
就像它吸引了讨论，但就像

00:15:35.300 --> 00:15:42.050
我们实现功能的方式的问题是，我们需要看一下

00:15:42.050 --> 00:15:49.250
以基于铬的浏览器为基准，是的，

00:15:49.250 --> 00:15:54.110
功能我们可以在Firefox中实现的非常好用的功能，但随后又有所不同

00:15:54.110 --> 00:15:58.430
代码库，我们需要喜欢测试并有效维护两个不同的代码

00:15:58.430 --> 00:16:04.850
到目前为止，我们一直很擅长保持单个代码库，但是

00:16:04.850 --> 00:16:14.810
是的，这总是很困难的，所以，如果您选择要共同托管的网站，

00:16:14.810 --> 00:16:21.380
你看着真正的人类可读的名字，是的，这就是计划，所以计划

00:16:21.380 --> 00:16:30.430
是，如果我们走了，我们假设两只狗ipfs IO或类似土耳其维基百科的那些狗

00:16:30.430 --> 00:16:39.320
像是ipfs上的常规Wikipedia或狗的ipfs io名称以及网络上的名称

00:16:39.320 --> 00:16:44.660
单击后，浏览器在菜单菜单中会出现一个图标或一个位置

00:16:44.660 --> 00:16:52.640
在ipfs图标上共同托管该网站，所以也许这是一个愚蠢的问题，但确实

00:16:52.640 --> 00:16:58.760
这意味着如果我是第一个创建网站的人，我必须像购买一个

00:16:58.760 --> 00:17:04.190
来自Namecheap或其他任何人的域名，然后人们与某人共同托管我的东西

00:17:04.190 --> 00:17:09.290
易读的名称，或者是否有免费的名称，例如IP NS或其他名称

00:17:09.290 --> 00:17:13.610
让您做出一个易读的名称，这只是一个IPSS计划，适用于

00:17:13.610 --> 00:17:20.840
是的，所以现在您需要拥有一个域来设置DNS

00:17:20.840 --> 00:17:28.760
链接，但是就像我希望有一种服务可以使人们获得某些领域

00:17:28.760 --> 00:17:34.160
在像通用域名这样的不需要购买罐头的情况下

00:17:34.160 --> 00:17:41.090
我认为Jim会在您使用时创建一个非常有趣的演示

00:17:41.090 --> 00:17:47.520
像geek应用一样用于用户授权，因此不需要任何其他操作

00:17:47.520 --> 00:17:54.870
帐户，当您放置您的内容标识符时，它只会为您提供输入

00:17:54.870 --> 00:18:01.920
网站，然后提交并获得域名，但这就像一个单独的域名

00:18:01.920 --> 00:18:07.380
单独的主题，如果我们执行此操作时如何思考，那么我们可以考虑如何

00:18:07.380 --> 00:18:13.080
我们使人们更容易获得网站创建者或想要

00:18:13.080 --> 00:18:23.520
创建一个快速网站以获得一个不错的Hugo域名作为其IP NS的一部分

00:18:23.520 --> 00:18:32.640
作品创造了一种我称之为别名或标签的想法，即

00:18:32.640 --> 00:18:40.620
我们将提供一个域名，人们可以在该域名下指定一些标签

00:18:40.620 --> 00:18:47.490
他们发布IP NS的时间以及发布IP的时间，除非获得全部

00:18:47.490 --> 00:18:56.160
免费提供DNS链接地址作为奖励，因此不需要任何类似内容

00:18:56.160 --> 00:19:00.870
第三方服务，它将只能从命令行运行，就像

00:19:00.870 --> 00:19:07.950
仅限于您仍然需要像固定您一样固定

00:19:07.950 --> 00:19:13.350
内容仍然存在，但我们会提供域名，因此有多个

00:19:13.350 --> 00:19:16.980
处理方式的示例给出了该域名的外观

00:19:16.980 --> 00:19:22.830
就像在预配置的根域下一样，我们

00:19:22.830 --> 00:19:27.600
提供，但人们会得到一定的意思，是的，所以

00:19:27.600 --> 00:19:35.190
例如，当您发布内容时，比如说Dietrich之类的内容，您

00:19:35.190 --> 00:19:42.750
键入它作为标签，我们将为您提供Dietrich停止类似

00:19:42.750 --> 00:19:49.950
ipfs I或可能不同域名的网站完全不同

00:19:49.950 --> 00:19:54.180
出于安全原因为此目的而设置域，但是它就像

00:19:54.180 --> 00:19:58.920
如果您想快速分享有意义的内容，可以毫不费力

00:19:58.920 --> 00:20:04.130
URL而不是愚蠢的gook或查看ID

00:20:04.190 --> 00:20:09.450
但是实际上，dns永远不会准备就绪请求

00:20:09.450 --> 00:20:15.240
是的，永远不会发生，所以当您

00:20:15.240 --> 00:20:16.860
马上通过Campania加载

00:20:16.860 --> 00:20:26.340
是的，因此DNS必须对我们用于的DNS txt查找

00:20:26.340 --> 00:20:33.620
找出此域名是否由ipfs支持，我们进行DNS DX查询

00:20:33.620 --> 00:20:40.050
这样就需要进行一次DNS查找，但是之后您实际上就不需要了

00:20:40.050 --> 00:20:46.440
将任何HTTP请求发送到您仅重定向到本地网关的任何服务器，以及

00:20:46.440 --> 00:20:54.360
您可以从我的DFS加载它，是的，所以基本上就像这个摘要一样

00:20:54.360 --> 00:21:02.130
讨论是，共同托管功能将使人们喜欢别针

00:21:02.130 --> 00:21:07.950
并跟踪DNS链接的网站，这些网站具有人类易读的名称和

00:21:07.950 --> 00:21:13.350
人们以人类易读的名称进行发布的主题就像一个单独的主题，

00:21:13.350 --> 00:21:18.840
可以像单独解决一样，但是当您说Deena的链接网站时

00:21:18.840 --> 00:21:25.530
所以这不是我们不能为未启用DNS链接的网站做的事情，哦，我们可以做到的

00:21:25.530 --> 00:21:33.450
对于已发布的类似网站，请在“您的对等ID哈希”下输入以下内容，请确保

00:21:33.450 --> 00:21:38.370
是的，因此没有易读的名称，但我希望此功能对两者都适用

00:21:38.370 --> 00:21:45.410
因为像大多数对人类可读名称感兴趣的人一样

00:21:45.410 --> 00:21:52.200
仍然像Linux存储库之类的东西或软件包管理器之类的东西

00:21:52.200 --> 00:21:57.270
信息库可以在IP NS下以对等ID（而非人工）发布

00:21:57.270 --> 00:22:04.800
可读，有些人只会将该对等ID复制到共同托管目录

00:22:04.800 --> 00:22:09.990
像创建带有该名称的目录一样，它们会自动

00:22:09.990 --> 00:22:14.370
成为共同主持整个包裹经理的三件事

00:22:14.370 --> 00:22:21.120
像是的，是的，许多非常有趣的用例都是通过mm-hmm解锁的

00:22:21.120 --> 00:22:25.170
这就是我真正有兴趣看到的原因之一

00:22:25.170 --> 00:22:29.190
这种书面形式作为一个单独的方面，那些不同

00:22:29.190 --> 00:22:35.910
试图为这些用例实现的人可以在

00:22:35.910 --> 00:22:41.490
从高层次上讲，这可以为他们解锁并提供反馈意见，是的，我的意思是

00:22:41.490 --> 00:22:46.350
实验的观点，是的，现在就将其作为实验产品

00:22:46.350 --> 00:22:51.630
哦，不，但我完全同意我们应该创建该存储库并创建

00:22:51.630 --> 00:22:55.800
除了悬崖作为同伴之外，我还提供了一个规范原因，我将桌面上的内容给了我

00:22:55.800 --> 00:23:01.440
想要拥有就像一个错误的脚本，有人可以只添加cron并将其添加

00:23:01.440 --> 00:23:05.460
到他们的服务器，这就像刷新他们的网站一样

00:23:05.460 --> 00:23:10.680
网站他们的关心，所以他们也将以无头模式运行它，至少

00:23:10.680 --> 00:23:16.200
我们希望此联合托管的三个实施方案和三个实施方案

00:23:16.200 --> 00:23:23.150
计划是的，有三个不同的事实

00:23:23.150 --> 00:23:27.390
实现是您要摆脱的问题，我非常非常

00:23:27.390 --> 00:23:34.680
有兴趣了解该概念如何在多个节点上工作，是的，我

00:23:34.680 --> 00:23:38.880
真的很喜欢这种方法，我们都喜欢在用户群中发展这种方法

00:23:38.880 --> 00:23:44.640
不喜欢它，因为如果我们将其设计为汽车的一部分

00:23:44.640 --> 00:23:52.110
这将需要更长的时间，但设计之间的时间会更长，

00:23:52.110 --> 00:23:57.570
是的，但是我的意思是我对多少感兴趣

00:23:57.570 --> 00:24:00.810
无论如何，我们想建立更多的核心

00:24:00.810 --> 00:24:06.360
我们要让协议变成多少脂肪，是的，就像我真的一样

00:24:06.360 --> 00:24:10.770
像基于NFS的方法一样，因为它实际上并没有

00:24:10.770 --> 00:24:16.380
需要抬起来卷曲它可以停留在我的幻想中，这只是一个

00:24:16.380 --> 00:24:23.760
是的，是的，这就像对此的更新

00:24:23.760 --> 00:24:27.540
这是一个非常好的协议的狗食载体

00:24:27.540 --> 00:24:33.420
就像我认为人们不了解的一件事是

00:24:33.420 --> 00:24:38.790
m FS之类的东西很好，它们不存在，但它们适合的位置

00:24:38.790 --> 00:24:43.620
图片我认为大多数人的图片就是那片狭窄的大陆

00:24:43.620 --> 00:24:48.270
通过您知道的ID来访问某些内容，因此他们认为

00:24:48.270 --> 00:24:52.760
您实际上不能在协议之上构建应用程序，是的

00:24:52.760 --> 00:24:59.550
是的，很好，可变性使很多好处折衷了

00:24:59.550 --> 00:25:03.510
那时的好处-我认为这是额外的一件事

00:25:03.510 --> 00:25:07.680
对于试图弄清楚自己或他们的IP巨星的开发者用户来说还不清楚

00:25:07.680 --> 00:25:15.810
是否适合他们的需求，是的，我很快就觉得像这样的视觉效果

00:25:15.810 --> 00:25:21.900
感觉像一个带有很多快照的目录，我觉得可以

00:25:21.900 --> 00:25:27.930
解锁一些思考方式，例如创建上限或管理数据

00:25:27.930 --> 00:25:33.090
使用KP FS，因为基本上有很多人喜欢问我该如何处理

00:25:33.090 --> 00:25:38.670
例如对ipfs进行版本控制，您只需在em FS中创建正确的快照即可

00:25:38.670 --> 00:25:43.320
那实际上是在fqdn上应该实际上应该是这样的

00:25:43.320 --> 00:25:52.050
因此，对于像Micah这样的域名，我们可能还需要

00:25:52.050 --> 00:26:01.500
关于如何将原点序列化为路径结构的约定

00:26:01.500 --> 00:26:10.020
是的，只有现有的标准，是的，但是，实际上，这是一个很好的选择

00:26:10.020 --> 00:26:15.720
好主意，所以事情就是，如果我们把东西放在我在FS上，那么

00:26:15.720 --> 00:26:21.330
就像这个example.com，在此之下，我们获得了一长串的快照

00:26:21.330 --> 00:26:28.470
那么您可以复制路线的CID并将其共享给某人，然后您出去

00:26:28.470 --> 00:26:36.260
就像您在一段时间内积累的该网站的完整历史记录一样

00:26:36.520 --> 00:26:42.640
是的，那就是有趣的是，您是否不喜欢储存专精

00:26:42.640 --> 00:26:52.240
文件，因为您就像每天都在繁殖，所以如果整个

00:26:52.240 --> 00:26:59.140
网站变了，是的，但通常只有很小的一部分，更像是他们进入了

00:26:59.140 --> 00:27:03.910
得到这样的概念，哦，是的，这个词变了，但是我们不在整个过程中

00:27:03.910 --> 00:27:08.320
页面的某个地方的版本好，是的，所以就像死人一样

00:27:08.320 --> 00:27:18.070
当我们这样做时，可以在块级别免费复制

00:27:18.070 --> 00:27:28.890
我认为Dietrich冻结了，还是他只是静音了？我认为他退出了通话

00:27:31.140 --> 00:28:01.160
让他稍等一下，是的，让我喜欢快速检查一下结局，这样

00:28:01.160 --> 00:28:12.730
或多或少共同主持第二个第二项哦，是的，这是一棵树

00:28:19.450 --> 00:28:26.840
Dietrich我想我您知道那不是很好，是的，我很快转到下一个

00:28:26.840 --> 00:28:34.430
我有一些融洽的问题，如果您有任何问题，我不会动

00:28:34.430 --> 00:28:47.080
但请保持关闭该视频的状态，以使我的互联网不再占用带宽使用权限

00:28:47.080 --> 00:28:54.320
好吧，所以关于共同托管和问题的其他事情我可以从他们那里保存下来

00:28:54.320 --> 00:28:59.780
下次是的，也许下次我们有一些规格的罐装回购

00:28:59.780 --> 00:29:05.420
好吧，下一个项目是哦，这是一个

00:29:05.420 --> 00:29:19.460
就像一个硬饼干一样，因此HTTP寻址是使用URL和

00:29:19.460 --> 00:29:28.930
ipfs和p2p回声系统，我们正在使用多个其他问题

00:29:28.930 --> 00:29:38.450
有时我们想代表HTTP服务的新RL，例如HTTP API

00:29:38.450 --> 00:29:44.750
我们想使用我们要使用其他表示它，这是一个问题

00:29:44.750 --> 00:29:56.030
从URL到其他的转换，特别是对于HTTP URL的转换是有损的，因为

00:29:56.030 --> 00:30:05.890
不是一对一的映射，我们讨论了有关HTTP协议的问题

00:30:05.890 --> 00:30:13.740
如果有人对此感兴趣，可以在会议上写一些笔记，但是

00:30:13.740 --> 00:30:19.500
问题的简短描述是我们要在以下方面支持NS

00:30:19.500 --> 00:30:30.440
 HTTPS和所有通过HTTP端点的DNS都位于HTTP网站上

00:30:30.440 --> 00:30:39.090
包括域名和路径，所以这是一个问题，因为现在

00:30:39.090 --> 00:30:46.830
HTTP协议不带任何参数，经过长时间的讨论，我们

00:30:46.830 --> 00:30:55.200
意识到围绕其他问题存在一个通用问题，即如何表示协议

00:30:55.200 --> 00:31:04.740
特定参数，例如，当我们谈论HTTP HTTPS时

00:31:04.740 --> 00:31:13.919
这是TLS上的HTTP，TLS本身有一个叫做s ni s ni头的东西

00:31:13.919 --> 00:31:20.760
告诉您哪个告诉服务器您要与之对话的主机名

00:31:20.760 --> 00:31:29.399
然后像建立加密隧道内部一样在HTTP级别上

00:31:29.399 --> 00:31:37.110
通过TLS，我们可以使用主机HTTP标头请求其他主机名，因此

00:31:37.110 --> 00:31:42.960
这就是所谓的域蛙狩猎，可用于审查制度

00:31:42.960 --> 00:31:51.659
当您询问何时连接到远程服务器并要求

00:31:51.659 --> 00:31:58.799
一个域，如果有人正在查看数据包并进行深度数据包处理

00:31:58.799 --> 00:32:06.240
检查他们看TLS握手，他们认为这是一个很好的s ni字段说

00:32:06.240 --> 00:32:12.899
哦，这个人想和这个服务器通话，然后在安全隧道时

00:32:12.899 --> 00:32:20.690
建立HT实际HTTP连接开始HTT讨论开始，然后

00:32:20.690 --> 00:32:27.360
客户端可能会问使用HTTP协议输入其他主机名

00:32:27.360 --> 00:32:37.169
哪个是正确的，除了这可能是最令人兴奋的用例

00:32:37.169 --> 00:32:44.010
通过HTTP的Venus，因此通过HTTP的DNS使用相同的域名

00:32:44.010 --> 00:32:50.250
但是，它使用的是自定义路径，这是我们所没有的同一类问题

00:32:50.250 --> 00:32:58.020
当我们指定多个其他时，能够提供自定义主机名或自定义路径

00:32:58.020 --> 00:33:07.200
用于HTTP服务，因此短期使用将或多或少存在问题空间

00:33:07.200 --> 00:33:15.179
能够通过HTTP或任何其他基于HTTP的Web服务指定NS

00:33:15.179 --> 00:33:23.580
使用其他网址而不是网址，但总的来说，它不是特定于HTTP的

00:33:23.580 --> 00:33:34.620
问题，我们可能会接受其他协议，例如自定义

00:33:34.620 --> 00:33:42.750
连接将具有自定义属性，现在我们无法指定

00:33:42.750 --> 00:33:49.470
就像现在，我们只有这个，所以现在，让我放大

00:33:49.470 --> 00:33:54.299
现在我们只是想在此使用TCP连接到该IP

00:33:54.299 --> 00:34:04.650
端口，我想使用HTTP与之交谈，我们没有这部分，所以我可以连接

00:34:04.650 --> 00:34:10.859
到特定端口上的Web服务，但是我无法提供自定义主机名

00:34:10.859 --> 00:34:19.710
我无法提供自定义路径，因此只能使用暴露以下内容的Web服务：

00:34:19.710 --> 00:34:25.770
 API起源的根源，我无法使用诸如basic之类的东西

00:34:25.770 --> 00:34:36.030
或在HTTP标头中设置一些Cookie或API密钥，因此就像

00:34:36.030 --> 00:34:42.839
如果我们想让其他人更顺利，我们就会遇到麻烦的空间，并且

00:34:42.839 --> 00:34:48.479
更特别是在网络浏览器环境中，是的，我很惊讶，我的意思是

00:34:48.479 --> 00:34:54.210
问题还不是疏通我们到目前为止想要做的事情，是的，到目前为止

00:34:54.210 --> 00:35:01.829
我们一直在使用以相同主机名公开的Web服务

00:35:01.829 --> 00:35:12.749
路由就是大多数事情的工作方式，例如在J的ipfs中，我们可以选择

00:35:12.749 --> 00:35:21.660
自定义预载节点的位置，并使用其他节点指定这些预载节点的位置

00:35:21.660 --> 00:35:26.719
但是那些多其他的人看起来像这样，没有路径，就像

00:35:26.719 --> 00:35:33.479
域名，端口和协议都可以，您也可以吗？

00:35:33.479 --> 00:35:39.839
提议对电机进行多方面的改动我很尊重，所以这是一个悬而未决的问题

00:35:39.839 --> 00:35:43.349
现在如何表示协议特定的参数是不可能的

00:35:43.349 --> 00:35:51.029
我相信在上个星期的通话中，或者两个星期前

00:35:51.029 --> 00:35:57.690
如何巩固的一些方式，例如如何扩展其他语义来实现

00:35:57.690 --> 00:36:07.769
而不是像HTTP特有的那样，而是可以表示自定义

00:36:07.769 --> 00:36:13.049
任何协议的参数，因此我们基本上有两种方法

00:36:13.049 --> 00:36:20.819
是添加这样的括号表示法，其中参数以逗号分隔

00:36:20.819 --> 00:36:26.640
就像我提到的这个疯狂的域名一样，

00:36:26.640 --> 00:36:33.839
这样，您就可以连接到特定的IP了，我说的不是

00:36:33.839 --> 00:36:39.630
确保云是否具有云提供商，但不再允许域前沿

00:36:39.630 --> 00:36:45.420
可以运行它，就像在其他地方一样，因此您通过TLS进行连接即可

00:36:45.420 --> 00:36:49.859
该主机名，但是在加密隧道内，您要求使用其他主机名

00:36:49.859 --> 00:36:53.670
主机名，然后您想为添加其他令牌

00:36:53.670 --> 00:37:00.180
一些Web服务，我的意思是您知道我们只是在序列化JSON

00:37:00.180 --> 00:37:10.290
那里是正确的，所以这就是问题，如何使其变得如何使自己感觉像

00:37:10.290 --> 00:37:15.420
原生于其他规格右对多似乎有点尾巴

00:37:15.420 --> 00:37:20.670
在那儿摇狗，这就是问题所在，我们如何表示参数

00:37:20.670 --> 00:37:27.990
一个是做这样的事情，看起来丑陋，但它保持像

00:37:27.990 --> 00:37:35.400
协议段完好无损，这仍然是另一种想法去的道路上的希望

00:37:35.400 --> 00:37:39.960
像特殊目的协议一样引入，如密钥值和

00:37:39.960 --> 00:37:44.579
这适用于以前的协议，我认为这很混乱

00:37:44.579 --> 00:37:50.160
就像如果我不得不选择某些东西，它将是这样的，那就是

00:37:50.160 --> 00:37:55.920
就像我的psi一样，这是一个开放的棺材问题，如果有人有

00:37:55.920 --> 00:38:03.059
比这个更好的主意，随时单击此链接并声明您的ID其他

00:38:03.059 --> 00:38:11.579
是的，我有一个问题，就是为什么为什么要多将“多”的想法

00:38:11.579 --> 00:38:20.460
另一个是我们可以像多重希望一样封装任意路径

00:38:20.460 --> 00:38:26.069
对不起，所以我想也许这不是我的问题

00:38:26.069 --> 00:38:33.780
意味着我的意思是我可以专门用于Web服务，也可以喜欢Web服务

00:38:33.780 --> 00:38:43.380
你是说还是做我是的，我想我的意思是像是的，所以，如果感觉像

00:38:43.380 --> 00:38:46.589
我们遇到了一些设计上的限制，

00:38:46.589 --> 00:38:52.559
是多加法器是几年前放在那里，是的

00:38:52.559 --> 00:38:58.109
是不满足更复杂的协议使用的需求

00:38:58.109 --> 00:39:02.069
这不是为什么多水獭，但也许就像为什么也许我们应该改变

00:39:02.069 --> 00:39:07.150
多其他是的，所以现在

00:39:07.150 --> 00:39:13.180
事实证明，这是一个非常棘手的问题，它基本上需要像扩展

00:39:13.180 --> 00:39:18.339
其他规范，所以现在我相信我们何时将通过HTTP实现DNS和

00:39:18.339 --> 00:39:24.820
go或J的ipfs可能会使用URL（如果它们将像配置一样添加）

00:39:24.820 --> 00:39:31.060
您可以在go ID事务或Jessica首注中选择自定义选项

00:39:31.060 --> 00:39:37.480
通过HTTP提供程序的DNS，这就像常规URL，也许在

00:39:37.480 --> 00:39:43.540
未来，我们还将在同一领域中支持其他多种项目，但我们不会

00:39:43.540 --> 00:39:50.859
想要像其他一样喜欢阻止通过HTTP实现DNS

00:39:50.859 --> 00:39:57.460
讨论是的，我喜欢我喜欢在这种情况下仅使用URL的想法

00:39:57.460 --> 00:40:03.270
简化了很多这些问题，这些问题又回到了鞋拔子问题上。

00:40:03.270 --> 00:40:08.470
协议的非常复杂的设置字符串表示形式

00:40:08.470 --> 00:40:13.780
关系和期望变成多重错误，这不是真正设计的

00:40:13.780 --> 00:40:20.230
做任何事情，是的，我同意，即使我们不同意，我也想

00:40:20.230 --> 00:40:26.140
想出一种很好的表示方式，我真的很想

00:40:26.140 --> 00:40:34.150
有人像网络一样提出了另一种用例

00:40:34.150 --> 00:40:41.290
想要指定自定义主机名和路径的服务，例如

00:40:41.290 --> 00:40:46.630
现在它是非常以HTTP为中心的，我相信我们可能无法解决

00:40:46.630 --> 00:40:52.270
除非我们至少有一个其他用例，否则这将以一种干净的通用方式进行

00:40:52.270 --> 00:40:56.680
想提供或覆盖协议特定的参数可能值得

00:40:56.680 --> 00:41:01.240
与Bernie交谈，因为蓝牙有很多类似清晰的元数据

00:41:01.240 --> 00:41:05.109
您可以提供周围的连接，以指定

00:41:05.109 --> 00:41:10.990
请求的性质以及所有其他内容

00:41:10.990 --> 00:41:16.420
就像是个好主意，所以或多或少

00:41:16.420 --> 00:41:23.079
我想在这里提到的内容以及相关内容，我们有两个库

00:41:23.079 --> 00:41:29.710
在其他人转换为URL并从您的视线转换为多目之间

00:41:29.710 --> 00:41:36.819
其他两个库现在都是多格式组织的一部分，所以就像

00:41:36.819 --> 00:41:43.180
现在是官方的，这些是用于转换的库，例如，如果您有其他

00:41:43.180 --> 00:41:51.880
这将需要简单的Web服务，而您想使用常规URL就可以了

00:41:51.880 --> 00:41:57.900
也就像如果您没有在最后指定HTTP并且只有TCP端口

00:41:57.900 --> 00:42:06.130
它默认使用HTTP代码，至少在监狱和人中是这样

00:42:06.130 --> 00:42:13.089
一直在使用它，因此他们不得不在此处手动将HTTP斜杠剪掉，所以我们默认使用

00:42:13.089 --> 00:42:20.190
默认值，但是您可以根据需要禁用此行为

00:42:20.190 --> 00:42:28.000
另一个方向是你的我乘以其他，这也是有损失的，所以如果

00:42:28.000 --> 00:42:36.309
如果您有一个正在使用的网站的URL，例如DNS名称和HTTP

00:42:36.309 --> 00:42:40.420
而您想将其转换为其他所有问题是我们没有

00:42:40.420 --> 00:42:46.299
实际上就像通用DNS协议，我们拥有DNS，而DNS 6也拥有

00:42:46.299 --> 00:42:53.529
其他DNS，但这需要其他DNS链接txt查找，因此

00:42:53.529 --> 00:42:59.680
就像默认情况下的有损转换一样，我们假设使用DNS，因此当您转换URL时

00:42:59.680 --> 00:43:06.450
到一个网站以其他方式访问它，它只是假设您无法在此处写入DNS

00:43:06.450 --> 00:43:12.160
有些人如果不想混合使用URL，就像桥梁一样使用它

00:43:12.160 --> 00:43:18.369
并在其他人的应用程序配置中添加了其他功能，有些人只想使用

00:43:18.369 --> 00:43:23.170
只有所有内容的网址，或者只有其他所有内容的网址，因此这些库

00:43:23.170 --> 00:43:30.290
主要用于此，我相信就是这的更新

00:43:30.290 --> 00:43:39.800
您想要的把戏对此没有任何问题，所以没有

00:43:39.800 --> 00:43:44.570
这个问题似乎是由上一个问题解决的，那就是事实

00:43:44.570 --> 00:43:48.710
是双向有损的，是的，不是，那些库是

00:43:48.710 --> 00:43:55.250
我们现在可以提供的最好的方法就是减轻疼痛，但您仍然需要

00:43:55.250 --> 00:44:05.510
知道当您从URL转换时会丢失什么，接下来如何

00:44:05.510 --> 00:44:12.470
覆盖更多的文本矩阵，是的，这是您知道的感谢您添加

00:44:12.470 --> 00:44:19.370
伴随位进入该矩阵之一，我想我们可能想要得到

00:44:19.370 --> 00:44:28.310
涵盖更多，但这就像它非常非常

00:44:28.310 --> 00:44:34.790
现在是空的，这有点关系，我想你

00:44:34.790 --> 00:44:39.830
知道怎么问你知道当有人的时候我们可能有这个对话

00:44:39.830 --> 00:44:46.250
来自Web UI和桌面的所有不同部分，以及有关

00:44:46.250 --> 00:44:53.750
计划用一些东西填充更多内容，即使这只是问题

00:44:53.750 --> 00:44:58.730
进行跟踪，以便人们可以理解我们中的某些词

00:44:58.730 --> 00:45:04.310
知道我们想做的好主意，是的，我相信我们都会反过来

00:45:04.310 --> 00:45:08.270
是的，我相信下一个季度

00:45:08.270 --> 00:45:17.570
与她的讨论不同，她每天都在为

00:45:17.570 --> 00:45:25.850
喜欢吃醋，然后去看看是否有任何回归，所以那些测试很好

00:45:25.850 --> 00:45:33.190
我们在这里说，就像有新的PR出现时一样，成为IPO盛宴的主人

00:45:33.190 --> 00:45:38.990
我们可能希望测试服每天运行一次，以判断它是否破坏了Web用户界面

00:45:38.990 --> 00:45:44.150
或同伴，因为我们要做的只是

00:45:44.150 --> 00:45:49.160
特定的api和类似的ipfs伴侣也使用一小部分

00:45:49.160 --> 00:45:53.839
但是，AP过去的情况是

00:45:53.839 --> 00:46:00.980
改变，或者像是一个不间断的改变，事实证明这是打破性的

00:46:00.980 --> 00:46:08.289
由于不同的浏览器供应商的事实，是的，他运行相同的JavaScript

00:46:08.289 --> 00:46:16.369
结果不同，是的，我完全同意，拥有它会很好

00:46:16.369 --> 00:46:22.700
这种保障措施现在至少是我们从同伴那里做的

00:46:22.700 --> 00:46:29.619
透视我们处理此问题的方式是史蒂文宣布宣布存在

00:46:29.619 --> 00:46:36.880
或Alan，如果s或jessep EFS发行或发行了候选版本

00:46:36.880 --> 00:46:45.470
像II一样，通常会针对编译进行手动测试烟雾测试，只需确保

00:46:45.470 --> 00:46:51.200
过去，API并没有中断，我们拥有ipfs的第一个版本

00:46:51.200 --> 00:46:59.450
伴随着她的视觉手感腐烂的同伴

00:46:59.450 --> 00:47:06.650
那时有一种非常好的编排方式，就像浏览器一样

00:47:06.650 --> 00:47:13.760
运行浏览器扩展，它提供了访问权限，例如低级访问权限

00:47:13.760 --> 00:47:21.309
如果当我们移至网络扩展程序时浏览器的行为方式不是这样

00:47:21.309 --> 00:47:27.980
存在，但是已经有一段时间了，所以我认为值得一看

00:47:27.980 --> 00:47:33.890
至少有一个keifa的同伴可以看到的空间，我们是否能够像实际的那样运行

00:47:33.890 --> 00:47:40.819
像在生活Firefox或生活铬中进行的测试，现在是的，因为

00:47:40.819 --> 00:47:46.760
测试应该像我在这里列出的那样是端到端功能测试，所以

00:47:46.760 --> 00:47:52.250
基本上，它就像是单元测试的子集，我们不喜欢测试所有内容，但

00:47:52.250 --> 00:47:57.319
有像热可可粉扑一样与重定向相关的粉扑

00:47:57.319 --> 00:48:04.910
或与我们将协议处理程序标准化为ipfs的方法有关的抽吸

00:48:04.910 --> 00:48:11.989
我们处理DNS链接查找或缓存这些内容的方式

00:48:11.989 --> 00:48:19.670
测试和那些运行的测试，我们就像CI，但是那些又像那些CI一样运行

00:48:19.670 --> 00:48:26.509
只是在业力和注释中运行，而不是在实际的浏览器扩展中运行，是的，所以浏览器

00:48:26.509 --> 00:48:32.630
克里斯·克里斯·沃林（Chris Chris Waring）正在考虑建立一个

00:48:32.630 --> 00:48:38.299
浏览器堆栈开放源帐户，这将使我们能够免费访问真实帐户

00:48:38.299 --> 00:48:42.680
浏览器测试，因此可能具有CI和

00:48:42.680 --> 00:48:45.650
设置了东西，但我不知道他们对运行有多少支持

00:48:45.650 --> 00:48:54.430
网络扩展，是的，我认为我认为某些方面有所改进，我需要重新访问一下

00:48:54.489 --> 00:49:01.910
在我们不得不切换到网络扩展的时间和现在的事情之间

00:49:01.910 --> 00:49:09.440
就像无头的Chrome和无头的Firefox一样，我不确定

00:49:09.440 --> 00:49:15.650
就像那些在测试网络扩展时有用吗，但我知道是这样的

00:49:15.650 --> 00:49:20.180
超级有用，就像我为人偶编写了一个兼容层

00:49:20.180 --> 00:49:23.509
可以与Firefox一起使用的API，因此我可以同时针对Chrome和Firefox运行测试

00:49:23.509 --> 00:49:28.699
用同样的裙子，现在他们正在实施木偶戏

00:49:28.699 --> 00:49:31.969
在Firefox中原生支持，使您可以执行以下类型的操作：

00:49:31.969 --> 00:49:38.420
操作对不起并没有打扰我需要像本地脱机一样掉线

00:49:38.420 --> 00:49:41.749
卡尔合作，如果您想加入我们，欢迎您和我们

00:49:41.749 --> 00:49:44.749
应该考虑一下您是否不是在其中之一上谈论共同托管

00:49:44.749 --> 00:49:48.499
Paul接下来的几个月是基于您刚才说的话吗？听起来像这样

00:49:48.499 --> 00:49:53.180
可能很适合那个哦，是的，那绝对是我的意思

00:49:53.180 --> 00:50:00.769
可能还为时过早，但是当是的时候，当你是的时候，我会

00:50:00.769 --> 00:50:12.599
计算器是的，是的，是的，测试是的，有很多表面

00:50:12.599 --> 00:50:19.680
是的，嗯，但是我相信测试的问题就像杰西，我更喜欢

00:50:19.680 --> 00:50:24.839
进行想法阶段是那些测试已经花费了很多时间，所以

00:50:24.839 --> 00:50:30.390
这就是为什么我建议建议像基准测试那样背负这一点

00:50:30.390 --> 00:50:36.599
每天运行一次的方式，然后发送报告，如果

00:50:36.599 --> 00:50:44.099
对我们的GUI应用程序构建的基准测试超过了构建的测试，是的，确实崩溃了

00:50:44.099 --> 00:50:49.290
好主意，嗯，是的，尤其是提交量和

00:50:49.290 --> 00:50:52.530
东西绝对不是我们每次提交都需要运行的东西，而是ID

00:50:52.530 --> 00:50:56.130
每天知道一次将真正缩小许多问题的范围，并让我们知道

00:50:56.130 --> 00:50:59.670
提前，是的，我的意思是像那些测试那样

00:50:59.670 --> 00:51:06.119
防范像台式机或同伴可能无法

00:51:06.119 --> 00:51:10.530
就像他们不会花费很多时间，除非我们要确保像整个

00:51:10.530 --> 00:51:19.980
API，现在我们可能会使它运行不足，但这不是我们想要的东西

00:51:19.980 --> 00:51:31.410
添加两个常规构建，这将是单独的事情，是的，我会的

00:51:31.410 --> 00:51:35.070
至少对于同伴我需要一些东西，我需要看看我们是否能够

00:51:35.070 --> 00:51:44.070
做类似Firefox或Chrome浏览器中的实际测试

00:51:44.070 --> 00:51:51.090
敏锐的ipfs我一直喜欢为Jess ipfs编写一些补丁并运行它们

00:51:51.090 --> 00:51:56.880
就像丰田可以适应当地人的跑步一样，他需要很长时间，所以需要切换到

00:51:56.880 --> 00:52:04.110
就像我想要的那样，只需在字符串中单击一下就可以获取特定的测试

00:52:04.110 --> 00:52:11.400
像DNS名称之类的东西，就像不等半小时或

00:52:11.400 --> 00:52:20.670
大概需要15分钟才能通过测试，所以这不像我们会得到一些东西

00:52:20.670 --> 00:52:27.570
与台式机或随播广告类似，但我们肯定会测试特定的代码路径

00:52:27.570 --> 00:52:33.570
是的，也许我会开始做的是我为每个人添加一个议程

00:52:33.570 --> 00:52:40.170
在这些会议的很多周内削减清单中的项目，毫米-毫米，所以接下来

00:52:40.170 --> 00:52:44.100
一周，我将请人们写下每个烟熏测试的内容

00:52:44.100 --> 00:52:51.540
这些东西和问题的链接，然后也许我们将其分解为

00:52:51.540 --> 00:52:57.270
逐行基本上是随着时间的推移慢慢地攻击它，是个好主意，或者

00:52:57.270 --> 00:53:08.790
即使只是从一个开始就可以，我想那就是我们的想法，也许我会

00:53:08.790 --> 00:53:14.100
每周就其中一项提出问题，小组会如何讨论这些问题

00:53:14.100 --> 00:53:21.840
我们现在如何喜欢测试的东西，是的，好的，我一会儿见

00:53:21.840 --> 00:53:26.840
参加本地离线会议，是的，但是我本周无法参加

00:53:26.840 --> 00:53:33.180
就像下个月的下个月一样，因为我认为本地通话是每月一次，是的

00:53:33.180 --> 00:53:39.060
下个月，我们可能会谈谈共同举办的酷吧，我认为

00:53:39.060 --> 00:53:45.410
那对于那个团体来说将是非常有趣的

00:53:47.890 --> 00:53:49.950
你

