WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.680 --> 00:00:13.070
欢迎使用GUI和Web浏览器访问2020年3月4日，我加入了

00:00:13.070 --> 00:00:23.330
那些是新来的常客，现在让我们看看我们的议程

00:00:23.330 --> 00:00:28.529
是的，我想我已经添加了第一个，所以

00:00:28.529 --> 00:00:35.130
我可以开始，然后随意添加任何其他内容，我们应该讨论一下

00:00:35.130 --> 00:00:44.309
一周，所以我所拥有的商品是关于window.i TFS和背景的事实

00:00:44.309 --> 00:00:53.430
是那个嫉妒的ipfs和JS ipfs HTTP客户端都切换到了Assange

00:00:53.430 --> 00:01:04.260
 Iterables更改了人们在JavaScript中使用的编程API，如果

00:01:04.260 --> 00:01:08.750
他们切换到最新的JFS，

00:01:09.830 --> 00:01:17.280
相应的HTTP客户端问题是keifa的同伴正在暴露

00:01:17.280 --> 00:01:21.890
我们正在暴露的某些实验

00:01:22.310 --> 00:01:30.750
窗口对象ID FS上的编程接口，如果您有IP

00:01:30.750 --> 00:01:37.860
首先安装了同伴，它将API端点注入到一个页面和一个页面中

00:01:37.860 --> 00:01:44.369
可以请求针对特定命令的该接口的激活，并且

00:01:44.369 --> 00:01:49.500
什么掩盖了基本发生在幕后的事情，就像一个代理

00:01:49.500 --> 00:01:56.790
在网页和ipfs伴侣使用的API PFS api之间，可能是

00:01:56.790 --> 00:02:04.950
在浏览器扩展或远程HTTP api中运行的嵌入式GSI BFS可能会

00:02:04.950 --> 00:02:11.500
由go ipfs或ipfs桌面提供的localhost API

00:02:11.500 --> 00:02:23.440
因此，在某种程度上，我们并不能真正控制IP FS的该API的版本

00:02:23.440 --> 00:02:32.960
随播广告通常会连接到ipfs随播广告具有一些修复功能，

00:02:32.960 --> 00:02:39.050
我们从历史上对文件api进行重大更改的时候就开始了

00:02:39.050 --> 00:02:46.190
命令已从文件API（如ipfs文件名称空间）移至顶层

00:02:46.190 --> 00:02:54.470
命名空间中，我们已经添加了别名，因此无论在哪个版本的API中

00:02:54.470 --> 00:03:01.730
后台暴露网页的程序化界面仍然可以正常工作

00:03:01.730 --> 00:03:08.480
预期的问题是，现在我们只需一次更改就可以进行更重大的更改

00:03:08.480 --> 00:03:14.510
因素，现在不再可能以编程方式检测到什么

00:03:14.510 --> 00:03:22.810
像该网页想要的网页可能期望使用TFS卡的旧版本

00:03:22.810 --> 00:03:30.130
现在，或者它可能期望一个新版本，该版本应该像可迭代的一样返回

00:03:30.130 --> 00:03:35.270
报告了此问题，但这不是因为ipfs编译仍在使用

00:03:35.270 --> 00:03:41.239
JSI TFS HTTP客户端的旧版本，并且该客户端正在公开旧版本

00:03:41.239 --> 00:03:48.950
编程接口，需要深长的背景

00:03:48.950 --> 00:03:56.180
了解我在这个问题上发布的问题，所以基本上这个问题是

00:03:56.180 --> 00:04:03.500
我们应该禁用ipfs还是做ipfs，直到支持这些新的api倾斜和

00:04:03.500 --> 00:04:11.150
我所说的支持登陆基本上是我们需要切换的条件，我会给我们同伴

00:04:11.150 --> 00:04:16.730
到使用这些新api的新泽西州DFS和JFS HTTP客户端

00:04:16.730 --> 00:04:23.270
只是我们，也就是说，我在本季度没有这样做的带宽，所以我们

00:04:23.270 --> 00:04:26.960
推迟给您两种类似公开的问题

00:04:26.960 --> 00:04:32.539
如果有人有兴趣，可以跟踪移民情况，问题仍然存在

00:04:32.539 --> 00:04:38.120
现在，如果网站使用的是窗口ipfs以及人们使用的窗口IGF的方式

00:04:38.120 --> 00:04:45.830
对象，他们检查它是否存在，并且机会地尝试使用它，如果

00:04:45.830 --> 00:04:51.590
由于某种原因它失败了，那么他们可以喜欢回退到自己的垃圾邮件中

00:04:51.590 --> 00:04:58.460
船上或使用类似外部HTTP api的方法，但是通常与窗口ipfs一样

00:04:58.460 --> 00:05:05.150
目前存在网站尝试使用它，所以这个想法是现在它试图

00:05:05.150 --> 00:05:12.770
使用它会破坏它，这是非常糟糕的，所以这个主意是推翻历史

00:05:12.770 --> 00:05:21.819
IP伙伴，只需停止公开窗口ipfs就可以了

00:05:21.819 --> 00:05:26.870
偏好设置为灰色，并注明我们正在进行中

00:05:26.870 --> 00:05:33.440
在创建两个新的api的过程中，这不是很严重的更改，因为我没有

00:05:33.440 --> 00:05:40.250
感到很多人对此都依赖100％

00:05:40.250 --> 00:05:44.779
某人正在运行一个节点，那么人们可以使用其本地节点来代替

00:05:44.779 --> 00:05:52.909
向J的IVF发送垃圾邮件以获取数据，但这仍然是一个重大变化

00:05:52.909 --> 00:06:04.610
问题是我们应该这样做吗？我愿意接受意见，所以我们可以喜欢改变吗？

00:06:04.610 --> 00:06:08.000
就像禁用一样，可能会出现类似检测的问题

00:06:08.000 --> 00:06:16.969
像ipfs版本这样的检查可以使建议做正确的事

00:06:16.969 --> 00:06:24.409
现在他们如果您是网站开发人员，则可以执行ipfs版本

00:06:24.409 --> 00:06:31.669
命令，所以告诉后端恶魔的版本，但是我们不是真的

00:06:31.669 --> 00:06:41.370
可以检查HD客户端或JSI PFS的版本，所以这是两个

00:06:41.370 --> 00:06:50.250
不同的版本，它们公开了相同的核心接口，但我没有

00:06:50.250 --> 00:06:55.470
认为这是我们应该推给开发人员的负担，因为这将需要

00:06:55.470 --> 00:07:00.810
像开发人员一样知道哦，这些版本的J的ipfs和GS IPF

00:07:00.810 --> 00:07:05.130
 SFTP客户端公开了此版本的程序化界面，就像我们没有

00:07:05.130 --> 00:07:09.870
实际上有任何版本的程序化接口，就像我们拥有核心

00:07:09.870 --> 00:07:16.770
像发布的接口，但我不确定这是否像抽象

00:07:16.770 --> 00:07:23.669
当我们开始窗口创意时，我们应该向开发人员展示

00:07:23.669 --> 00:07:28.560
首先实验一下，该API与HTTP API基本上是一对一的

00:07:28.560 --> 00:07:34.919
没有任何风吹草动，而假设是有点像

00:07:34.919 --> 00:07:40.620
静态的野兽，它将检查我们何时进行重大更改

00:07:40.620 --> 00:07:46.740
像TI Hito v1一样，我们可能会引入一些版本控制

00:07:46.740 --> 00:08:00.930
方案，但现在我没有办法对核心API进行版本控制

00:08:00.930 --> 00:08:06.770
对我来说，制定规范听起来像是一个伟大的长期计划

00:08:06.770 --> 00:08:13.130
是的，因为就像我们所说的那样，就像我在开始录制录音之前提到的那样

00:08:13.130 --> 00:08:21.240
很多人都依赖Jas，就像Jas本身一样，这就是

00:08:21.240 --> 00:08:27.659
编程接口实际上已成为我们需要的独立API

00:08:27.659 --> 00:08:36.919
想要解决问题，并在同伴中解决问题，我们没有任何手段，

00:08:36.919 --> 00:08:46.200
当我们对方式进行更改时，人们不会检查守护程序版本

00:08:46.200 --> 00:08:53.589
像ipfs一样奇怪的东西，人们甚至都无法

00:08:53.589 --> 00:09:00.500
解决该问题的一个版本的go idea fest，所以这甚至

00:09:00.500 --> 00:09:08.600
是的，当您说人们无法检查守护程序版本时，情况更糟

00:09:08.600 --> 00:09:14.720
就像这些人是谁这些人正在使用奶酪我付钱很快

00:09:14.720 --> 00:09:21.940
看到他们的HP客户或是，是的，连接到本地恶魔，是的，基本上，当您

00:09:21.940 --> 00:09:27.830
使用ipfs api，您有一个版本命令，但是

00:09:27.830 --> 00:09:34.700
不会执行人们可能认为会执行的操作，该操作会返回该版本的

00:09:34.700 --> 00:09:40.640
可能是soo-ji PFS的coati版本的实现，并且返回

00:09:40.640 --> 00:09:50.300
协议的版本始终与0.1相同，它不会返回版本

00:09:50.300 --> 00:09:57.860
是的，它不会返回可能绑定到该程序化版本的新版本

00:09:57.860 --> 00:10:03.350
界面，我认为就是这样，因此版本与任何设置都不匹配

00:10:03.350 --> 00:10:08.060
API的含义，API的语义以及API的行为是的，更糟糕​​的是

00:10:08.060 --> 00:10:11.690
是的，是的，更糟糕​​的是，您可以指出

00:10:11.690 --> 00:10:18.350
HTTP客户端的旧版本，然后是HTTP的接收器迭代器版本

00:10:18.350 --> 00:10:23.300
客户端使用相同的HTTP API，并且像恶魔版本一样，但是

00:10:23.300 --> 00:10:29.950
Jas程序（例如J的程序接口）会有所不同，因此

00:10:29.950 --> 00:10:33.890
是的，我的意思是我保护了它，但是我认为您关于对程序化版本进行版本控制的想法

00:10:33.890 --> 00:10:38.329
API确实很有意义，因为那是

00:10:38.329 --> 00:10:42.320
开发人员将要使用的主要兼容性点是

00:10:42.320 --> 00:10:47.510
如果API有所不同或行为发生变化（如果语义上说），将会出现问题

00:10:47.510 --> 00:10:51.740
同样，所以我认为对程序化API进行版本控制确实可以带来很多好处

00:10:51.740 --> 00:10:56.779
感觉，如果除非有任何更改，否则您知道您会发现它们将会

00:10:56.779 --> 00:11:03.050
这组API的最大意义是我的意思是说，这可能真的可以解决问题

00:11:03.050 --> 00:11:07.910
一会儿，我们可以依靠那点，是的，所以

00:11:07.910 --> 00:11:13.940
然后ipfs您需要太晚才能使用ipfs是的，就像从长远来看

00:11:13.940 --> 00:11:18.980
我们只想扩展版本命令，就像守护进程一样

00:11:18.980 --> 00:11:22.760
我们可以警惕的协议，例如像添加编程接口版本一样

00:11:22.760 --> 00:11:27.290
第三件事是解决问题

00:11:27.290 --> 00:11:33.560
作为同伴的那只手打破了依赖于窗口ipfs的网站，因为api

00:11:33.560 --> 00:11:42.370
改变了，但是这样做，所以我们知道有25,000次安装的同伴

00:11:42.370 --> 00:11:46.970
好吧，我想我在这里的担心是，我们可能会过度转向

00:11:46.970 --> 00:11:50.180
一小部分人，我们可能有很高的水平

00:11:50.180 --> 00:11:59.720
与是的沟通，问题是应该不应该

00:11:59.720 --> 00:12:06.200
我们会禁用或应该采取任何措施，直到我们重构同伴以使用

00:12:06.200 --> 00:12:10.430
新的API可能是另一个问题，是的，我认为这更实用

00:12:10.430 --> 00:12:17.120
只是对事情提出疑问，因此如果我们禁用它，它也会破坏应用程序

00:12:17.120 --> 00:12:23.810
因为实际上人们使用窗口创意fess的方式都不是机会主义的

00:12:23.810 --> 00:12:27.740
东西，所以他们会检查它是否存在，如果存在，他们会使用它

00:12:27.740 --> 00:12:34.220
缺少它们会生成自己的J的ipfs或运行自己的HTTP

00:12:34.220 --> 00:12:39.950
远程API的客户端，因此我们不希望首先消失的想法就不会

00:12:39.950 --> 00:12:46.940
一般不会分手的，是的，除非代码很糟糕，但是

00:12:46.940 --> 00:12:51.430
再次，我觉得我们在谈论的仍然是一小部分人

00:12:51.430 --> 00:12:56.450
是的，问题是更多，如果我们将其删除并中断，那么我们将知道

00:12:56.450 --> 00:13:03.170
是的，更多关于那些人的知识，所以更多是关于物体的原因，例如

00:13:03.170 --> 00:13:07.970
使用IP修复伴侣的人可能对立体主义者最感兴趣

00:13:07.970 --> 00:13:14.990
项目，他们是将测试那些可能具有以下功能的应用程序的人

00:13:14.990 --> 00:13:18.160
支持这种机会主义的支持，就像

00:13:18.160 --> 00:13:23.230
我担心这种重叠，是的，我真的很想知道谁

00:13:23.230 --> 00:13:26.920
人们并不喜欢他们是否是最热情的用户，而他们是

00:13:26.920 --> 00:13:30.190
进行调试的人是开发人员，然后是

00:13:30.190 --> 00:13:33.940
也将阅读我们的博客文章的人

00:13:33.940 --> 00:13:39.189
更改或我们将转发的更改或您发布的论坛

00:13:39.189 --> 00:13:45.459
关于它，我想我很犹豫，我很犹豫做出太多的假设

00:13:45.459 --> 00:13:50.949
左右的使用水平将其与安装次数相关联，例如，如果您

00:13:50.949 --> 00:13:53.980
似乎是指您已经看到人们的特定实现

00:13:53.980 --> 00:13:57.790
在他们的代码中执行此操作，我们应该能够在github上检测到一定程度

00:13:57.790 --> 00:14:02.110
通过回购和代码搜索，我找出了项目列表

00:14:02.110 --> 00:14:06.850
也就是说在其中寻找窗口TFS及其JavaScript或网络

00:14:06.850 --> 00:14:19.750
您可以定义后备内容的内容，我们为您提供了这一点，例如

00:14:19.750 --> 00:14:28.089
我相信隐式启用，所以我们可以检查谁依赖这个声音

00:14:28.089 --> 00:14:31.269
就像删除它一样，即使按照您的意愿删除它的成本也不是

00:14:31.269 --> 00:14:35.110
真的会很高，更大的挑战是确保我们有一个

00:14:35.110 --> 00:14:39.220
采用路径迁移路径仍然保持顺畅，那么开发人员

00:14:39.220 --> 00:14:41.649
现在正在采用，他们将不得不进行太多的更改或跳过太多

00:14:41.649 --> 00:14:51.639
向前移动的滚铁应该暂时将其删除，然后在我们引入它时

00:14:51.639 --> 00:14:57.639
像这样的版本介绍它，所以肯定或多或少

00:14:57.639 --> 00:15:03.339
不知何故，假设两极分化好了，您不能开始投票吗？

00:15:03.339 --> 00:15:10.300
现在，我们所能拥有的只是一个暂停按钮，当我按下该按钮时

00:15:10.300 --> 00:15:15.420
然后打开窗口，然后我需要在网络浏览器中创建投票哦

00:15:15.420 --> 00:15:18.420
真的

00:15:21.720 --> 00:15:29.019
让我喜欢创建“是”并采取行动-否，如果是

00:15:29.019 --> 00:15:33.120
多项选择，不，我会成功

00:15:33.129 --> 00:15:41.839
不，我会为魔术效果做出多种选择，我也想知道

00:15:41.839 --> 00:15:46.669
如果是匿名的，或者您能看到其他人都可以投票吗，这是

00:15:46.669 --> 00:15:49.819
出轨好吧，绝对可以，我认为删除寡妇可能是完全可以的

00:15:49.819 --> 00:15:56.119
没什么想法，就像发生了什么事，因为我

00:15:56.119 --> 00:16:00.199
按下东西感谢坟墓

00:16:00.199 --> 00:16:06.709
向在YouTube和其他地方观看此内容的人表示歉意

00:16:06.709 --> 00:16:14.179
下次应该会做得更好，我将结束本主题，让我们暂时说

00:16:14.179 --> 00:16:21.470
是的，我们暂时应该将其删除，然后我们将有一个单独的

00:16:21.470 --> 00:16:25.549
有关开发人员可以以何种方式对程序化接口进行版本控制的讨论

00:16:25.549 --> 00:16:41.239
实际上使用下一个J的功能配置是的，所以在

00:16:41.239 --> 00:16:46.939
像实时p2p的可用性这样的术语，我们一直在研究如何

00:16:46.939 --> 00:16:55.009
简化配置，昨晚我们谈论了无数的选项

00:16:55.009 --> 00:17:02.929
我在这个问题上写下了一些关于使用功能的想法

00:17:02.929 --> 00:17:08.899
ipfs的配置，所以我认为这样做有很多潜在的优势

00:17:08.899 --> 00:17:13.959
它解决了这个问题，应该解决了很多问题，应该可以让我们出口

00:17:13.959 --> 00:17:20.510
配置以及外观方面，我们可以进行哪些改进

00:17:20.510 --> 00:17:25.459
像可操作的错误，所以如果我执行NPM，则安装p2p，然后导入

00:17:25.459 --> 00:17:29.419
来自肢体p2p技术上的Lib PDV软件包的这些配置之一

00:17:29.419 --> 00:17:34.340
因为我想要一个浏览器程序包或一个节点程序包，然后我不

00:17:34.340 --> 00:17:38.570
安装任何其他软件包，所以我知道尝试像获取一样运行该软件包

00:17:38.570 --> 00:17:42.710
可执行的错误提示，请运行此NPM安装命令以获取所有

00:17:42.710 --> 00:17:45.410
您所缺少的软件包，就像指导一样

00:17:45.410 --> 00:17:49.130
人们，以及喜欢支持想要做更多事情的用户

00:17:49.130 --> 00:17:54.980
复杂的配置，我认为这也将使我们能够做一些

00:17:54.980 --> 00:17:58.840
我们一直想做一段时间，例如将DHT分成

00:17:58.840 --> 00:18:03.380
将其放入内容路由，显示路由以及对等点发现中，就像我们将

00:18:03.380 --> 00:18:08.840
能够拆分这些组件并使该配置功能生效

00:18:08.840 --> 00:18:13.910
DHT存储库，以便在需要任何复杂设置的情况下创建模块

00:18:13.910 --> 00:18:18.140
就像将自己的配置功能导出给用户一样

00:18:18.140 --> 00:18:23.810
做并撰写p2p，因此该问题中有一个提案已链接到

00:18:23.810 --> 00:18:36.410
笔记，如果您有意见或建议，请分享

00:18:36.410 --> 00:18:44.380
超级有用，因为我一直在当前版本的接收端

00:18:44.380 --> 00:18:53.300
以目前的方式，我们覆盖了JSI PFS中的p2p配置，我认为

00:18:53.300 --> 00:19:01.880
是的，在您发布它之后，我将我们在J的ipfs中所做的更改链接到

00:19:01.880 --> 00:19:10.910
它减轻了一点痛苦，而我作为伴侣却不活跃，我压倒了

00:19:10.910 --> 00:19:14.720
默认配置中有很多东西很勇敢，原因是

00:19:14.720 --> 00:19:21.890
棘手的棘手的运行时，我们没有模板，就像浏览器一样

00:19:21.890 --> 00:19:28.250
默认，节点默认，但是勇敢的是使用TCP传输的浏览器，然后

00:19:28.250 --> 00:19:35.090
DNS发现，因此我们希望我必须基本上编写自定义自定义

00:19:35.090 --> 00:19:39.500
使用传输和发现方法的自定义列表进行配置，以及

00:19:39.500 --> 00:19:46.940
就像在jsapi fest网站上已经好了一点，但我同意它仍然

00:19:46.940 --> 00:19:50.890
棘手的尤其是那样

00:19:50.990 --> 00:19:56.040
不知道这是否不是栏杆太多，而是

00:19:56.040 --> 00:20:03.780
一直让我感到讨厌的是WebSocket明星WebRTC的方式

00:20:03.780 --> 00:20:09.510
很好，我们只喜欢过去的纯思想到构造函数，但WebSocket却是明星

00:20:09.510 --> 00:20:20.670
历史上在J的ipfs中有一个非常糟糕的附加步骤，基本上与

00:20:20.670 --> 00:20:31.380
像用WebSockets Darwins替换多个other.we一样不确定

00:20:31.380 --> 00:20:37.550
我们进行重构时可以解决的问题，但可以肯定

00:20:37.550 --> 00:20:44.010
听起来不仅是一个问题，因为我想像很多人

00:20:44.010 --> 00:20:48.660
谁想要运行自定义配置，他们可能想要运行自定义配置

00:20:48.660 --> 00:20:54.990
如果像WebSocket star之类的东西或运输的自定义列表之类的东西，它们

00:20:54.990 --> 00:21:02.310
这是热量的第一个问题，所以至少在

00:21:02.310 --> 00:21:08.970
至少看一下这是一种潜在用途的现有技术，所以我认为

00:21:08.970 --> 00:21:13.170
就像Jas J的ipfs配置一样，我们最复杂的配置

00:21:13.170 --> 00:21:17.730
今天就知道了，所以我认为如果可以的话，我们可以通过以下方式构建配置：

00:21:17.730 --> 00:21:22.410
这样就可以了，现在就可以了，就像我们只需要添加一样

00:21:22.410 --> 00:21:27.300
周围的特定内容，例如收听和宣布地址，但这也应该

00:21:27.300 --> 00:21:33.060
就像自定义功能一样完成，他们在这里收听和寻址，因此

00:21:33.060 --> 00:21:37.050
一切都只是那些特定的功能，我们应该有类似的东西

00:21:37.050 --> 00:21:43.200
只是开箱即用即可做到这一点，理想情况下，我也希望自己喜欢的东西

00:21:43.200 --> 00:21:49.980
我们需要的JSI PFS配置中的大多数应该能够像

00:21:49.980 --> 00:21:55.980
Lapita P中预包装的定制功能，因此我们只需要JSI p FS

00:21:55.980 --> 00:22:00.540
导入Lapita p通过特定的配置功能，也许

00:22:00.540 --> 00:22:06.440
一个或两个其他小功能，然后以这种方式获取实例

00:22:07.870 --> 00:22:16.610
可能需要再次通过您的笔记并重新审视我的想法

00:22:16.610 --> 00:22:22.400
勇敢，因为我觉得我更想痛点

00:22:22.400 --> 00:22:28.520
超级快速，是的，我也需要通过它，我想把它弄出来

00:22:28.520 --> 00:22:31.940
我的大脑，因为我在凌晨3:00醒来，并且出于某种原因想到了Limpy

00:22:31.940 --> 00:22:43.790
进行配置，所以我不得不记下一些东西，然后回去睡觉，但是

00:22:43.790 --> 00:22:51.370
也要睡觉醒来或睡着

00:22:52.180 --> 00:23:04.130
jaesi jaea sleep p2p配置我也将看看您的建议

00:23:04.130 --> 00:23:16.510
是的，这周的原因就像是，我想知道是否需要火箭“星尘”

00:23:16.510 --> 00:23:23.180
在必须运行的其他代码方面也面临类似的挑战

00:23:23.180 --> 00:23:30.470
在p2p之外，实际上，这些都不再需要存在

00:23:30.470 --> 00:23:34.850
就像我们可以看到的新版本一样，是否仍然需要

00:23:34.850 --> 00:23:38.390
发生，我们可以回去看看，我感觉很好，这是怎么回事，因为即使

00:23:38.390 --> 00:23:42.170
使用当前配置，您不需要这样做，因为其中之一

00:23:42.170 --> 00:23:46.520
我们在重构中所做的事情现在是我们在实例化传输时所做的

00:23:46.520 --> 00:23:53.750
我们无论如何都要通过Lib p2p来运输，所以我们可以通过TP拉Eid拉来点亮

00:23:53.750 --> 00:23:57.280
地址可以做他们需要做的任何事情

00:24:05.120 --> 00:24:13.560
好吧，我们是否应该专门审查浏览器和连接性指标，

00:24:13.560 --> 00:24:23.460
我应该以任何方式在浏览器注释中进行测量

00:24:23.460 --> 00:24:27.480
只是想快速了解一下并验证这些内容，看看是否可以

00:24:27.480 --> 00:24:34.290
知道他们是否有可能，并要求大家在此处添加任何注释

00:24:34.290 --> 00:24:39.390
围绕我们如何连接数据源的地方，以便有话要说

00:24:39.390 --> 00:24:47.100
以编程方式进行随播安装，将在其中添加指向以下注释的链接

00:24:47.100 --> 00:24:50.700
如果您知道是否有任何数据源，则其中的一些只是添加一个链接

00:24:50.700 --> 00:24:55.260
已经可用，然后我们可以将它们连接到我正在查看的语法中

00:24:55.260 --> 00:24:59.970
添加精致的插件，如果重新构建，它使它尽可能容易

00:24:59.970 --> 00:25:05.790
无需我们知道，您就可以度过一生，并在动物身上度过

00:25:05.790 --> 00:25:11.370
我们无法退缩，因此减少了将其中一些布线的痛苦，但我认为

00:25:11.370 --> 00:25:16.110
我是核心，对我来说最重要的是他们不是

00:25:16.110 --> 00:25:22.080
这些对于衡量我们整体上如何实现目标很有意义

00:25:22.080 --> 00:25:26.040
浏览器的连通性，所以对我们来说最重要的是

00:25:26.040 --> 00:25:29.580
认为其中的一部分来自您对这种理解的一些了解

00:25:29.580 --> 00:25:36.170
有特定的短期目标，例如获得引导程序，不降低负载

00:25:36.170 --> 00:25:42.570
使接力用户为零或任何正确的权利，或使用户零成为星号，这样

00:25:42.570 --> 00:25:45.390
诸如此类的事情是短期的，但不一定与

00:25:45.390 --> 00:25:48.810
我们希望拥有的长期影响，它具有更高的连通性

00:25:48.810 --> 00:25:55.920
越来越多的人在网页上使用IP FS，所以我真的需要

00:25:55.920 --> 00:25:59.970
你们全力以赴，找出正确的理解和理解方法

00:25:59.970 --> 00:26:06.810
衡量一下，你知道我认为他在谈论的方式或

00:26:06.810 --> 00:26:09.870
诸如DHT爬行之类的东西以及诸如此类的东西

00:26:09.870 --> 00:26:16.830
衡量DHT的大小以及观察的能力

00:26:16.830 --> 00:26:20.460
浏览器注释中的数量，因此，如果Jessica奶油蛋s

00:26:20.460 --> 00:26:26.220
在HTTP网页上运行的服务器正在相互连接并与之连接，

00:26:26.220 --> 00:26:32.010
对这意味着什么的看法是，这个数字永远不会增长

00:26:32.010 --> 00:26:38.010
减少周围可能有皱纹，例如

00:26:38.010 --> 00:26:42.260
三个盒子做，我将在下一个项目中讨论

00:26:42.260 --> 00:26:47.880
关于如何折叠选项卡上的节点使用率，所以您得到了一个，就得到了十八

00:26:47.880 --> 00:26:54.630
选项卡以某种方式打开，某种方式使一个jjs ipfs立即计时一些内容

00:26:54.630 --> 00:26:58.190
他正在与lunette合作，无论我们的合作伙伴越来越多

00:26:58.190 --> 00:27:02.460
像三个盒子这样的部署规模确实需要努力解决

00:27:02.460 --> 00:27:05.490
这个问题当然会使我猜到的用户数量减少

00:27:05.490 --> 00:27:09.600
仍然是同一个人，没什么大不了的，但是你知道

00:27:09.600 --> 00:27:15.810
了解数字的实际含义结不是立场，而是让

00:27:15.810 --> 00:27:18.300
我知道是否存在这些东西中的任何一个

00:27:18.300 --> 00:27:23.160
值得衡量，否则就无法衡量，绝对让我知道，

00:27:23.160 --> 00:27:27.330
那么从那就像是什么，我们到底是什么？我们的最终目标是什么？

00:27:27.330 --> 00:27:30.620
看起来当浏览器和连通性小组获胜时

00:27:30.620 --> 00:27:35.880
来自浏览器中的个人和用户的一些连接是

00:27:35.880 --> 00:27:41.720
实际上增加了，连接选项的数量看起来是否增加了

00:27:42.549 --> 00:27:49.159
如果我们拥有HD，那会更容易，因为您只要咆哮DHD，

00:27:49.159 --> 00:28:00.799
看一下其他人，现在我们需要弄清楚，好吧，亚历克斯在

00:28:00.799 --> 00:28:05.629
我以为我们刚刚同意了

00:28:05.629 --> 00:28:10.429
布鲁克林不对JavaScript的发展做出决定，但Alex表示

00:28:10.429 --> 00:28:13.940
不，他好像不知道她会在秋天实施，这将是

00:28:13.940 --> 00:28:22.339
做完了，我感觉还好，我在同一房间里就好了，每个人都出去了

00:28:22.339 --> 00:28:28.700
从房间里他们真的很喜欢我的决定我以为我是我的

00:28:28.700 --> 00:28:30.799
对这个决定的理解是保守的，我只是以为我们是

00:28:30.799 --> 00:28:35.179
告诉我们我们要自己做出决定，然后我做出决定，然后

00:28:35.179 --> 00:28:42.349
亚历克斯（Alex）决定我昨天确实找到了三个使用JSI TFS的盒子

00:28:42.349 --> 00:28:46.999
服务器也是如此，这是一次有趣的对话，我们将介绍其中的一些内容

00:28:46.999 --> 00:28:50.839
在云端报告中，但有趣的是他们有一些

00:28:50.839 --> 00:28:56.479
关于“走走走走”能力的看法，我承认，“走走走走”的能力

00:28:56.479 --> 00:28:59.869
似乎植根于整个项目的态度

00:28:59.869 --> 00:29:05.839
就像哦是官方的实现，我感觉到

00:29:05.839 --> 00:29:09.889
缺乏对JavaScript中某些内容的支持，并且不清楚从中读取的地图

00:29:09.889 --> 00:29:14.509
他们了解了gsfs的能力或支持水平

00:29:14.509 --> 00:29:19.700
进入未来，所以我觉得好像我们正在寻找更多的用户

00:29:19.700 --> 00:29:24.169
我们已经制作出来的软件，我们不知道自己是我们的用户

00:29:24.169 --> 00:29:29.179
软件，即使他们是非常紧密的合作者，并且对此有更多的了解

00:29:29.179 --> 00:29:33.440
您是否会知道他们对DHT是否存在等问题的反馈

00:29:33.440 --> 00:29:37.519
支持会决定他们的用例成败，但现在他们会很好

00:29:37.519 --> 00:29:42.200
有一个非常有限的用例，所以对他们来说这不是一个真正的问题

00:29:42.200 --> 00:29:45.499
实际上与微软在大多数情况下所做的工作非常相似

00:29:45.499 --> 00:29:52.089
客户只是蜂拥而至直接连接到他们，所以没什么大不了的

00:29:52.710 --> 00:29:56.310
但是他们想要他们想要它实际上想要您成长并变得更多

00:29:56.310 --> 00:30:01.730
分散的方式，他们不需要像拐杖一样

00:30:02.550 --> 00:30:10.210
是的，绝对，我有点在星期一与码头打过电话

00:30:10.210 --> 00:30:20.440
围绕浏览器上下文的变化，它们可能会推动

00:30:20.440 --> 00:30:27.100
鲁鲁特·鲁内特（鲁鲁特·鲁内特）在某个时候访问过的项目边界

00:30:27.100 --> 00:30:33.970
感觉像多个标签或多个中的多个实例的问题

00:30:33.970 --> 00:30:40.390
回购回购对起源您如何共享回购或像我给的整个Jase一样

00:30:40.390 --> 00:30:46.810
使用相同的类库的不同网站上的实例，或者您如何

00:30:46.810 --> 00:30:52.480
引导网站，就像在某处具有CID的静态页面一样

00:30:52.480 --> 00:30:59.320
还有一个很小的图书馆，令人兴奋的仍然是网络的局限性

00:30:59.320 --> 00:31:08.130
浏览器上下文WebSockets Web RTC在服务工作者中不起作用

00:31:08.130 --> 00:31:16.210
这样的问题，所以我们一定会继续与他们交谈，因为他们

00:31:16.210 --> 00:31:23.890
仍在尝试找出可能的方法，这也将反馈给

00:31:23.890 --> 00:31:32.020
他们做出的决定，我们至少要作为指导，

00:31:32.020 --> 00:31:38.470
 DHD了解到，短期内将有可能在IFS网站上进行短期长期

00:31:38.470 --> 00:31:46.180
如果每个其他都是tcp这样的东西，它将有多大用处

00:31:46.180 --> 00:31:50.320
是否存在问题，我们是否已发布WebRTC服务

00:31:50.320 --> 00:31:54.700
我们正在以所有合作伙伴项目都可以跟踪工作人员的方式跟踪工作人员的请求

00:31:54.700 --> 00:32:00.220
发生并理想地满足他们的需求，是的，我相信哇

00:32:00.220 --> 00:32:04.630
关于WebRTC的至少两个问题一个是关于最新技术的问题

00:32:04.630 --> 00:32:09.730
就像所有问题一样，不仅一个问题与另一个问题有关

00:32:09.730 --> 00:32:13.220
像WebRTC的下一代

00:32:13.220 --> 00:32:18.259
其他快速的事情，像那样的事情，所以爸爸喜欢两个问题

00:32:18.259 --> 00:32:21.830
我只是想知道，我想知道您是否知道我们听到了三个关于此事的演讲

00:32:21.830 --> 00:32:25.429
所以就像我们跳到下一个问题一样，所以肯定会带走

00:32:25.429 --> 00:32:27.440
在我们坚决放弃指标之前

00:32:27.440 --> 00:32:30.830
请查看这些指标，并添加有关数据源的所有注释

00:32:30.830 --> 00:32:34.639
他们，然后我们可以继续进行工作，但要从

00:32:34.639 --> 00:32:37.460
从你知道我在终端和三个盒子周围添加了一个问题

00:32:37.460 --> 00:32:41.149
因为他们在谈论这些同样的问题他们在谈论事物

00:32:41.149 --> 00:32:44.029
当您获得一堆标签时，就像在单个浏览器中的多个节点一样

00:32:44.029 --> 00:32:48.529
打开他们正在谈论连接限制之类的东西，例如Web RTC和

00:32:48.529 --> 00:32:53.269
服务人员参加了与他们的对话，因此请确保我们

00:32:53.269 --> 00:32:57.919
可以使用类似的地方，例如我们是否以多方聚会的方式分布

00:32:57.919 --> 00:33:01.639
举起他们的手说我需要这个，然后我们可以指出标准

00:33:01.639 --> 00:33:06.979
小组，当我们去和那些小组交谈时，我想

00:33:06.979 --> 00:33:11.899
甚至甚至在预见到我都觉得我们有一个新生的机会

00:33:11.899 --> 00:33:16.849
设想通过WebRTC进行连接的人们的非DHT方式

00:33:16.849 --> 00:33:20.899
元掩码的作用方式就是网络撕裂正在为多种方法采取措施

00:33:20.899 --> 00:33:24.830
真正通过WebRTC建立大型客户Alene网络，

00:33:24.830 --> 00:33:28.909
并没有真正利用，而且我没有足够的可视性

00:33:28.909 --> 00:33:33.139
为什么会这样，或者这仅仅是缺乏资源或实验，还是我们

00:33:33.139 --> 00:33:37.070
已经评估了这些，我们说这些将不能作为替代P

00:33:37.070 --> 00:33:42.259
将通过WebRTC运行的传输（不是HD传输），而人们的

00:33:42.259 --> 00:33:45.639
关于这一点的想法将非常有趣

00:33:47.160 --> 00:33:55.820
我只记得谁在进行DNS实验以及我们进行的讨论

00:33:55.820 --> 00:34:03.110
像在DNS记录上关闭DHT

00:34:03.830 --> 00:34:12.780
是啊，是的，让我们睡在那一个上我怎么带出你说的一切

00:34:12.780 --> 00:34:28.320
我们需要睡觉，因为这个女孩只是一个，我们的话题是另一个，我只是

00:34:28.320 --> 00:34:31.740
不断提出一些小问题，例如请重新发明或扔掉或烧掉DHT

00:34:31.740 --> 00:34:46.169
下来就是享受吸烟的乐趣，所以我联系了PL事件问题

00:34:46.169 --> 00:34:51.450
在那里，您知道研究团队引起了共鸣，我们都撤退了

00:34:51.450 --> 00:34:56.399
从IT或4到7可能会关闭，但我们确实希望拥有更多

00:34:56.399 --> 00:35:00.300
在108左右齐心协力的存在，我们在谈论诸如

00:35:00.300 --> 00:35:03.660
像人们对这种东西感兴趣的方式进行社交或聚会

00:35:03.660 --> 00:35:08.220
有点像羽毛的鸟，它们组成了108只，但是

00:35:08.220 --> 00:35:12.270
我们可能会因为特别有这个群体

00:35:12.270 --> 00:35:16.830
如果您像107个时间表一样痴迷于您，那么您的存在就只是

00:35:16.830 --> 00:35:21.360
太多与我们相关的会议，所以我绝对可以标记为这段时期

00:35:21.360 --> 00:35:25.650
记下您的日历并保留以防万一，因为我们可能会想要

00:35:25.650 --> 00:35:31.230
将浏览器连接性黑客周与全部或部分内容结合起来

00:35:31.230 --> 00:35:36.800
见面聚会希望旅行限制到那时会减少

00:35:36.800 --> 00:35:43.340
对于很多人来说，这是一段相当近距离的旅行，不是太疯狂

00:35:43.340 --> 00:35:48.840
雅各布和我还有更长的空间可以不去那边

00:35:48.840 --> 00:36:06.720
我在德国哦，是的，我在错误的一面

00:36:06.720 --> 00:36:19.980
起源凯文（Kevin），这个网站凉爽得多，下一个来看看我们吧

00:36:19.980 --> 00:36:27.330
你们的下一个共同主办共同主持不要让梦想消亡我看到了这一点

00:36:27.330 --> 00:36:32.730
来自Reddit上数据ho积者的话题，讨论抑制覆盖19

00:36:32.730 --> 00:36:37.530
在中国的新闻之一，您知道我们所拥有的东西，也许我们甚至谈论过

00:36:37.530 --> 00:36:40.800
重要的新闻是谈论我们如何支持他们会很有趣，但是

00:36:40.800 --> 00:36:44.160
共同主持似乎我们仍会继续提出这些案例

00:36:44.160 --> 00:36:47.790
共同主持似乎是有趣的实验，以及我们如何

00:36:47.790 --> 00:36:51.240
使用浏览器可以使人们更容易地从

00:36:51.240 --> 00:36:56.280
每次发生这种情况时，都会从旧网络快速发布到IP

00:36:56.280 --> 00:36:59.940
即使在美国也开始出现大规模的数据抑制

00:36:59.940 --> 00:37:03.120
一点点，这真的是我们有机会说的机会

00:37:03.120 --> 00:37:06.480
看看我们通过共同托管构建的这些工具的强大功能

00:37:06.480 --> 00:37:10.740
去年秋天的一些实验看到FS之上我们该如何建立

00:37:10.740 --> 00:37:14.580
FS之上的所有事物，因此它们需要协议级别的更改，这些更改需要API

00:37:14.580 --> 00:37:18.390
级别或记录级别的更改，但我真的很想让用户满意

00:37:18.390 --> 00:37:23.370
能够使用我的PFS重新发布Web内容的入门和流程

00:37:23.370 --> 00:37:29.160
然后阅读并收集回去，这样我就觉得我们已经设置好了

00:37:29.160 --> 00:37:34.050
明确地将其搁置一旁，但是此类功能的用例

00:37:34.050 --> 00:37:37.830
继续继续增加，尤其是像汽车这样的想法

00:37:37.830 --> 00:37:42.450
在您浏览人们选择的地方时，在这里和那里共同托管小部分

00:37:42.450 --> 00:37:49.380
在特定的用例中，也许这是我们写为补助金的内容

00:37:49.380 --> 00:37:52.740
这是一个有趣的主意，但可能还有一些工作要做

00:37:52.740 --> 00:37:56.400
周围的人都知道要进行测试，并确保方案确实像

00:37:56.400 --> 00:38:00.560
首先使基本流程起作用

00:38:01.410 --> 00:38:08.559
以防万一有人看着这个，以为我可以

00:38:08.559 --> 00:38:15.520
黑客在这里有ipfs船厂共同托管cr子，就像

00:38:15.520 --> 00:38:21.670
实验说明为什么我们要进行实验？

00:38:21.670 --> 00:38:27.150
共同托管基本操作的规范（添加删除列表）

00:38:27.150 --> 00:38:32.079
一切都更像是修道院惯例，而不是配置，所以

00:38:32.079 --> 00:38:39.220
这就像一组约定，用于放置快照以及如何放置快照

00:38:39.220 --> 00:38:45.309
告诉哪个快照是最新的快照。如何删除该快照

00:38:45.309 --> 00:38:52.869
就像有关规范和总体概述的元存储库，但是

00:38:52.869 --> 00:38:57.280
有一个名为ipfs cohost的单独存储库，它是一个命令行工具

00:38:57.280 --> 00:39:02.440
可以实现此实验规范，您可以将其用于共同托管

00:39:02.440 --> 00:39:07.990
特定网站，所以现在适用于整个网站，但它支持惰性

00:39:07.990 --> 00:39:14.680
您可以使用的模式，或者您实际访问过的子页面，或者

00:39:14.680 --> 00:39:25.920
您实际上在乎，有人可以尝试破解或贡献什么呢？

00:39:25.920 --> 00:39:31.450
提交似乎给了我们同伴，因为这个项目不仅是

00:39:31.450 --> 00:39:37.180
通用线工具，它也应充当J的库，因此实际上您不需要

00:39:37.180 --> 00:39:41.920
需要执行规范，即使库或多或少都已完成

00:39:41.920 --> 00:39:46.869
因为它是命令行工具使用的，所以有人可以尝试使用相同的工具

00:39:46.869 --> 00:39:53.440
库，只需将用户界面添加到Kieffer的同伴中即可添加

00:39:53.440 --> 00:40:01.319
并在维权伴侣中删除网站或我们的浏览器操作，

00:40:01.319 --> 00:40:09.579
只是固定的一个很大的开关，所以您只需要固定整个Wikipedia数百个

00:40:09.579 --> 00:40:13.480
千兆字节不是最好的主意

00:40:13.480 --> 00:40:21.040
嗯，一个人能做的就是尝试替换该接口

00:40:21.040 --> 00:40:29.820
固定在此库之上构建更智能的内容

00:40:29.820 --> 00:40:39.340
那些真的很酷，但是

00:40:39.340 --> 00:40:45.790
有优先级，是的，如果我们能获得基础件的话

00:40:45.790 --> 00:40:50.670
比其他人更满意的地方，例如事件响应

00:40:50.670 --> 00:40:56.500
像Wikimedia这样的特定事物，我们做的事情就像人们可以使用它

00:40:56.500 --> 00:41:00.400
如果我们将这些基本零件准备就绪，那么也许我会做一些类似的事情

00:41:00.400 --> 00:41:07.750
我将为ipfs dev Grants hack day做一个日历活动，所以我们就像set

00:41:07.750 --> 00:41:12.010
预留半个星期五的时间或类似时间写赠款

00:41:12.010 --> 00:41:17.470
对于这样的事情，是的，我们不是想要在一个

00:41:17.470 --> 00:41:23.890
布里克林，但我们真的没有时间。是的，获得医疗补助的权利需要时间，

00:41:23.890 --> 00:41:29.849
知道因为我写了一个，而我正在正确的过程中哦，我实际上写了两个

00:41:29.849 --> 00:41:36.790
有排行榜吗？有奖品吗？我应该活着，所以我就是

00:41:36.790 --> 00:41:46.359
问潜在的问题，绝对应该没事，所以我

00:41:46.359 --> 00:41:51.000
也添加了此下一个项目，这也是该组的请求

00:41:51.000 --> 00:41:54.550
你知道在布鲁克林，我们聚在一起谈论了一些关于

00:41:54.550 --> 00:41:59.470
我们已经采取的具体措施我们知道一些类似的事情

00:41:59.470 --> 00:42:04.119
不愿成为明星，改善活动选择，我们有一些东西

00:42:04.119 --> 00:42:06.849
在同伴周围，我们说有支持我们的浏览器谋杀的事情

00:42:06.849 --> 00:42:11.200
合作伙伴，但是我真正喜欢看到这种计划的东西

00:42:11.200 --> 00:42:16.119
因为第二季还好，所以在不到一个月的时间里就对他保持利用，所以

00:42:16.119 --> 00:42:19.390
人们应该已经开始思考下一组目标

00:42:19.390 --> 00:42:22.810
但是，我实际上想做的就是将它翻转给我，甚至只有一半

00:42:22.810 --> 00:42:25.599
喜欢，我想在布鲁克林做这个，我们真的没有那个

00:42:25.599 --> 00:42:28.750
计时器焦点有很多事情要做，但我很希望能够拥有

00:42:28.750 --> 00:42:33.250
您想到的年底情况如何

00:42:33.250 --> 00:42:36.579
就像在浏览器中连接我们对我们来说是个好地方

00:42:36.579 --> 00:42:40.390
从今年年底的角度来看，像这样的总清单是多少？

00:42:40.390 --> 00:42:44.950
你会喜欢的事情是十二月，我感觉很好，因为我们得到了所有这些

00:42:44.950 --> 00:42:48.430
这些是我们今年要做的事情，我很想成为

00:42:48.430 --> 00:42:52.630
能够拥有该列表，所以我想现在我们还有13分钟可以

00:42:52.630 --> 00:42:56.560
您在我公司的这个项目中写下了一些这样的东西

00:42:56.560 --> 00:42:59.440
会在那个列表中看起来会是什么样子

00:42:59.440 --> 00:43:04.089
从我们的浏览器的连接性角度来看，好年份看起来像

00:43:04.089 --> 00:43:09.579
集成的观点，这样当我们进行诸如q2计划之类的事情时，我们可以

00:43:09.579 --> 00:43:13.630
请返回此列表，并说要做我们列为我们的所有这些事情

00:43:13.630 --> 00:43:17.680
每季度好吗，我们是他们使我们更加接近这一目标，甚至

00:43:17.680 --> 00:43:22.270
最好是说拿这件事清单然后往后走说什么

00:43:22.270 --> 00:43:25.780
是我们真正需要做的事情

00:43:25.780 --> 00:43:28.290
可能，但是有这些事情，我们可以向后走

00:43:28.290 --> 00:43:31.950
然后给您的是什么，给您带来了一份宽松的草稿，好吧，我们的清单

00:43:31.950 --> 00:43:35.640
接下来的几个季度会在今年年底

00:43:35.640 --> 00:43:40.560
真的以为您知道我们一样的想法我觉得我们正在从一个

00:43:40.560 --> 00:43:44.910
现在有些大火的地方他们不像大火一样

00:43:44.910 --> 00:43:49.380
到了现在，我们正处在释放期待的地步，

00:43:49.380 --> 00:43:53.610
贬低之前的明星，这件事非常接近，就像我们很快就要

00:43:53.610 --> 00:43:58.560
您是否知道会出现新的新连接选项？

00:43:58.560 --> 00:44:03.240
过去，我们实际上可以开始期待，而不是仅仅像在

00:44:03.240 --> 00:44:05.670
我们喜欢的地方，哦，我们需要我们知道，我们知道所有这些东西都需要

00:44:05.670 --> 00:44:08.310
改变，我们最终还没有做到

00:44:08.310 --> 00:44:10.950
我们将离开这个位置，我想开始转移我们的思维

00:44:10.950 --> 00:44:15.990
拍摄远一点，我们就在现在的位置，并期待着

00:44:15.990 --> 00:44:19.820
我们将如何做到这一点

00:44:19.820 --> 00:44:25.260
有意和有组织的方式，所以很多时候我们开始进行qtu计划或下一个

00:44:25.260 --> 00:44:29.940
季度好吧，我们的计划就好了，那是什么呢？

00:44:29.940 --> 00:44:32.880
但相反，我已经有了类似这些的清单

00:44:32.880 --> 00:44:35.400
放置我们知道今年需要做的事情，在这里我们要做的那些步骤

00:44:35.400 --> 00:44:39.990
需要到达那里，所以我们已经有了q2 q3和q4 Oki已经很漂亮了

00:44:39.990 --> 00:44:42.990
如果我们对自己想去的地方有一个了解，将会为我们预先写很多篇文章

00:44:42.990 --> 00:44:48.350
今年年底听起来听起来像疯了吗

00:44:49.280 --> 00:44:57.740
打字机哦，等等，这是我要登录的Eliska，我应该

00:44:57.740 --> 00:45:10.460
将您限制为每人15件物品，嘿，这些看起来不错，我会说过

00:45:10.460 --> 00:45:20.270
也可以随意伸展我的意思是喜欢停下来伸展，也可以增加伸展

00:45:20.270 --> 00:45:28.760
目标是我们，只是您知道打呵欠，安德鲁为时过早

00:45:28.760 --> 00:45:44.450
我了解得越多，浏览器注释就不会携带很大的加密包

00:45:44.450 --> 00:45:53.710
关于这种情况，可以两倍甚至三倍加密彩虹

00:45:53.710 --> 00:46:03.730
这是一种完全不同的感觉，它具有额外的安全性，不必担心

00:46:36.880 --> 00:46:46.340
他们给的场景是什么，真的发生了什么？

00:46:46.340 --> 00:46:51.800
专案权利，或者是某些特定于浏览器的东西，我认为这是正确的

00:46:51.800 --> 00:46:56.960
可能更多的是开发人员的经验，好吧，我们有一个

00:46:56.960 --> 00:47:08.119
那些人在这里先生。 dias Senor Diaz所以提早讨论了这个问题

00:47:08.119 --> 00:47:14.560
围绕API版本控制进行编程的API版本控制，以作为开发人员的经验

00:47:14.560 --> 00:47:21.590
问题，因为这不是特定于浏览器的事情，而是关于稳定性的问题

00:47:21.590 --> 00:47:27.740
跨所有不同部署环境的程序化API，但在

00:47:27.740 --> 00:47:32.540
您想要对编程API进行版本控制的方式，我们很难

00:47:32.540 --> 00:47:38.630
谈论它，我们正在考虑，好吧，我很乐意听到

00:47:38.630 --> 00:47:47.720
您的想法，例如核心接口界面仓库，就是我们如何

00:47:47.720 --> 00:47:54.500
例如公开已经存在的软件包的版本并使其有用

00:47:54.500 --> 00:47:59.990
对于那些不想通过程序界面破坏任何东西的人

00:47:59.990 --> 00:48:11.930
更改，您可以从版本命令中公开该版本，是的，就像我们

00:48:11.930 --> 00:48:16.280
已经有协议版本和守护程序版本，我们可以像

00:48:16.280 --> 00:48:26.720
首先是Jas生态系统，是的

00:48:26.720 --> 00:48:30.980
在您将其拉下并通过协议旋转的老虎机上

00:48:30.980 --> 00:48:44.599
版本恶魔版本SPI版本您可以看到您登陆的地方我们有很多

00:48:44.599 --> 00:48:54.230
我们有很多配置和元配置

00:48:54.230 --> 00:49:00.380
与其他合作伙伴的对话以及不清楚的地方

00:49:00.380 --> 00:49:05.150
从我们所有的配置中，什么是做什么的，什么是

00:49:05.150 --> 00:49:10.480
默认值，开箱即用

00:49:14.140 --> 00:49:23.359
将所有版本号散列在一起，就是在多个版本中添加多个

00:49:23.359 --> 00:49:29.060
进行不同会议的任何事情的前面我很确定这是一个问题

00:49:29.060 --> 00:49:46.150
关于多版本，只是称为元版本，它需要多好

00:49:46.150 --> 00:49:53.960
这怎么样，让我感兴趣吗？

00:49:53.960 --> 00:50:04.750
拥有必要的东西，然后分别将其中的几个像伸展运动一样

00:50:04.750 --> 00:50:09.800
疯狂了一年，而不是喜欢哦，是的，我已经期望得到

00:50:09.800 --> 00:50:19.970
我们应该使用随机表情符号对随机表情符号进行投票吗？

00:50:19.970 --> 00:50:28.010
不知道这本书是什么，取决于您对什么重要的解释

00:50:28.010 --> 00:50:37.730
发展感觉就像是一种诠释性的舞蹈，有时我喜欢这样

00:50:37.730 --> 00:50:51.770
p零拉伸是的，我想我们可以决定DHT中的DHT内容

00:50:51.770 --> 00:50:54.070
浏览器无论哪种方式都会发生

00:50:54.070 --> 00:51:00.950
实际上，那是KS中的DHT，不一定是浏览器，是的，所以我

00:51:00.950 --> 00:51:07.160
认为像J屁股中的DHT可能会发生，我敢打赌

00:51:07.160 --> 00:51:13.010
Ichi可能会在网络浏览器中运行

00:51:13.010 --> 00:51:20.450
也许没有那么多，但是如果我们可以合理地保持拨号次数

00:51:20.450 --> 00:51:27.770
DHT查询所需的信息，在以下位置运行DHT客户端变得更加可行

00:51:27.770 --> 00:51:34.910
浏览器，所以我认为，如果我们可以像这样定位，那合理看的是什么

00:51:34.910 --> 00:51:38.810
查询时间，例如回溯，这是合理的查询时间

00:51:38.810 --> 00:51:42.290
回想一下，我认为最大的拨号次数是多少

00:51:42.290 --> 00:51:46.760
我们可以将其保持在该阈值以下，然后查看是否甚至可行

00:51:46.760 --> 00:51:52.190
我们可以在该连接阈值以下获取DHT查询，尽管我只是

00:51:52.190 --> 00:51:55.609
像是放了20个拨盘，但这只是我大脑中的一个随机数

00:51:55.609 --> 00:52:00.700
互联网将基于实数

00:52:04.320 --> 00:52:08.430
我们确实已经知道这听起来像您已经知道

00:52:08.430 --> 00:52:11.190
一口大小的片段，我们需要投票的问题

00:52:11.190 --> 00:52:14.630
一个答案，看看这是否可行

00:52:15.560 --> 00:52:20.250
在他身上的人有BHT笔记，实际上可以从

00:52:20.250 --> 00:52:31.310
浏览器是另一个棘手的问题，我们将其添加到您要访问的列表中

00:52:43.460 --> 00:52:47.970
太好了，这是一个很棒的开始，谢谢大家，我非常感谢您的光临

00:52:47.970 --> 00:52:53.760
对此进行思考，然后在进入第2季度时将其作为参考

00:52:53.760 --> 00:52:57.240
计划即将开始，因此请开始考虑什么是什么

00:52:57.240 --> 00:53:02.130
接下来，思考一下将导致我们走向这些的哪些因素

00:53:02.130 --> 00:53:06.450
到今年年底，n个州的情况，而我们要做的就是开始时

00:53:06.450 --> 00:53:11.460
进行第2季度规划的目的是看人们拥有什么样的OPRS

00:53:11.460 --> 00:53:15.960
起草，他们正在提议，然后甚至就像将它们链接到此一样

00:53:15.960 --> 00:53:20.130
列出并从一种浏览器和连接组织中选择Lydell

00:53:20.130 --> 00:53:23.040
立场也许是值得为每个问题提出问题，如果有的话

00:53:23.040 --> 00:53:27.330
还没有，然后可能有，然后再然后

00:53:27.330 --> 00:53:30.660
确保我们正在跟踪每张旧卡中的那些问题

00:53:30.660 --> 00:53:35.240
该工作将支持的其中一项清单

00:53:35.950 --> 00:53:48.290
最终，我们将在我的头上得到“雅各布·杰克”风格的地狱

00:53:48.290 --> 00:53:52.849
食物清单（如果在Web浏览器中有更新的自述文件）

00:53:52.849 --> 00:54:03.050
是的，这最终会发生的，我们应该启动项目，也许

00:54:03.050 --> 00:54:09.890
一旦我从地下被抓住，我就要去做一个孩子

00:54:09.890 --> 00:54:13.460
让我更容易喜欢我说的，这是我的目标，因为您知道我们有

00:54:13.460 --> 00:54:17.630
这些特殊兴趣群体会在本季度出现，但在下一季度

00:54:17.630 --> 00:54:20.569
我们正在进入这个季度，这些团体已经开始了

00:54:20.569 --> 00:54:24.740
运行，所以我希望能够有队列成为真正的排队

00:54:24.740 --> 00:54:28.640
我们开始使用与您所使用的相同方法的沙子

00:54:28.640 --> 00:54:31.550
抗议场地和内容写作之类的东西，还有一些

00:54:31.550 --> 00:54:35.150
整个团队的统一性和一致性，以及我们如何跟踪这一点

00:54:35.150 --> 00:54:41.650
我们是否认为工作类型像单独发送无关紧要

00:54:41.650 --> 00:54:46.460
特别是兴趣小组或超级小组，真的是因为

00:54:46.460 --> 00:54:50.270
更有意义的是，我不认为整个生态系统会

00:54:50.270 --> 00:54:54.020
只是在高层次上，在愚蠢的这些流中，每个流

00:54:54.020 --> 00:54:57.140
小组在这些工作中非常独立，即使有时他们

00:54:57.140 --> 00:55:01.730
认为他们可以独立运作，我认为团队需要全面的视野

00:55:01.730 --> 00:55:08.510
只是他们的东西，然后也许他们会有一个生态系统，

00:55:08.510 --> 00:55:11.990
所有这些都可以在查看器中处理meta问题或类似问题

00:55:11.990 --> 00:55:21.470
是的，在我们回到过去的时候，我遇到了类似的问题

00:55:21.470 --> 00:55:29.810
正在使用华夫饼而不是某些面板来进行类似Web的高级视图

00:55:29.810 --> 00:55:35.540
当您包含Jess ipfs和Jess时，浏览器中的内容就给我一个安全的提示

00:55:35.540 --> 00:55:43.780
在诸如meta repost之类的城市客户之上，它立即变得过于嘈杂，因此

00:55:43.930 --> 00:55:48.740
特殊的利益水平听起来应该是正确的

00:55:48.740 --> 00:56:03.579
我们的时间是，下周我那一周的最佳时间是几点

