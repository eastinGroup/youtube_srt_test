WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.920 --> 00:00:10.110
欢迎使用GUI，并在Web浏览器中单击所有2020年1月29日，

00:00:10.110 --> 00:00:16.640
这个星期有很多行动议程，人们在我们的电话中停放了画廊视图

00:00:16.640 --> 00:00:27.960
因此，如果有人在本周要讨论任何问题或话题，亚当

00:00:27.960 --> 00:00:37.579
议程，以使其更快，我将从我添加的第一个开始

00:00:37.579 --> 00:00:46.350
因此，它更像是天气社区的PSA，其中很多事情都与

00:00:46.350 --> 00:00:54.110
在我们这个时代，我们的因素最终将像开发商一样面对，并且

00:00:54.110 --> 00:00:59.210
用户库，即Jess ipfs和Jess p2p

00:00:59.210 --> 00:01:10.500
因此，我们很快就注意到API发生了变化，并且这些API的详细信息

00:01:10.500 --> 00:01:21.689
每个人都花费时间的各自宗教的发行说明中有更改

00:01:21.689 --> 00:01:29.490
记录下来，这样我就不会花更长的时间了

00:01:29.490 --> 00:01:38.299
艾伦（Allen）撰写的指南还为想要与用户见面的GSA PFS用户提供了指南

00:01:38.299 --> 00:01:45.119
谁愿意迁移到这个新的API的用户开发人员

00:01:45.119 --> 00:01:55.500
一些最佳实践和一些命令的具体提示如何执行此操作以及最终

00:01:55.500 --> 00:02:02.820
我想以本节结尾的是我们的库很小

00:02:02.820 --> 00:02:09.349
在区域因素之后，例如不尊重TFS HTTP客户端，并且

00:02:09.349 --> 00:02:13.860
因素获得后的预发行版本

00:02:13.860 --> 00:02:21.990
在删除所有新内容之后，它很小，因此其中一些版本

00:02:21.990 --> 00:02:29.310
已经登陆的一些内容将很快发布，适用于类似浏览器的下一步

00:02:29.310 --> 00:02:36.690
和GUI人员将通过IP FS Web UI伴侣和桌面进行切换

00:02:36.690 --> 00:02:46.590
他们到一些已经有PRS的地方，但是如果有人

00:02:46.590 --> 00:02:52.740
与移民有关的任何问题可能是一个好地方

00:02:52.740 --> 00:03:00.750
现在就发布问题发表评论，我们在IRC频道上的提问到此结束

00:03:00.750 --> 00:03:07.680
关于PSA的问题，我认为我希望这不会太久，但我认为

00:03:07.680 --> 00:03:16.500
到处都提及它并不会影响您，因为您知道向后兼容性，因此您

00:03:16.500 --> 00:03:20.010
知道我以为这是一个漂亮的东西，这是消费者的重大变化

00:03:20.010 --> 00:03:23.519
API的观点，因此要升级到这些较新版本的人们需要

00:03:23.519 --> 00:03:30.330
重写他们有资格使用的所有内容，是的，所以要非常具体

00:03:30.330 --> 00:03:37.350
突破性变化的是程序中的程序编程接口

00:03:37.350 --> 00:03:45.239
JavaScript，我们不会更改HTTP API，我们不会更改，就像核心IP处于高潮

00:03:45.239 --> 00:03:49.650
像抽象层这样的层，我们只是改变了那些核心IP眼睛的方式

00:03:49.650 --> 00:03:56.720
用J表示，因此我们使用的不是使用旧的Promise和回调

00:03:56.720 --> 00:04:02.610
现代只需等待构建，这也是做一些事情的机会

00:04:02.610 --> 00:04:08.780
清理工作，以便简化一些工作，希望对人们会更好

00:04:08.780 --> 00:04:16.500
越容易，您知道我们离这项工作有多远

00:04:16.500 --> 00:04:24.900
在此处列出的其他位中完成，因此PPE，Web UI和

00:04:24.900 --> 00:04:30.860
台式机是循环EDP的工作正在进行很长时间，但是我们真的有吗？

00:04:30.860 --> 00:04:37.130
开始并迁移或其他项目到这些kpi，就像我在哪里停止我

00:04:37.130 --> 00:04:43.430
认为无论是Web UI还是台式机都有一个码头，就像ipfs上面的东西一样

00:04:43.430 --> 00:04:48.710
Web UI和桌面仅需要切换到新的HTTP客户端ipfs

00:04:48.710 --> 00:04:53.330
同伴需要切换到既知道HTTP客户端又要使用简单的

00:04:53.330 --> 00:05:00.860
JSA PFS以勇气和铬制成，因此需要花费更多的精力

00:05:00.860 --> 00:05:04.910
希望这些是相同的更改，例如随播广告的实现方式

00:05:04.910 --> 00:05:10.250
并不在乎是使用客户端还是完整注释，是否相同

00:05:10.250 --> 00:05:16.460
程序化界面，这只是我们处理程序化方式的一种变化

00:05:16.460 --> 00:05:31.439
界面，我们应该很好q1 OPRS也许我已经完成了

00:05:31.439 --> 00:05:38.459
这是一个奇怪的季度，我们即将开会，将团队成员集中在一个地方

00:05:38.459 --> 00:05:45.209
但直到那时，才知道这些特定领域的目标是

00:05:45.209 --> 00:05:48.300
对于第一季度，这将非常重要，尤其是考虑到

00:05:48.300 --> 00:05:54.889
围绕团队和优先事项进行移动，但具体而言是围绕

00:05:54.889 --> 00:06:03.829
桌面和网络用户界面，确保我们可以接受Jared，我猜

00:06:03.829 --> 00:06:06.989
确保我们拥有与之前相同的方法

00:06:06.989 --> 00:06:12.019
这些特定区域的最后两个季度确保没有

00:06:12.019 --> 00:06:17.939
随着新版本Co ipfs的发布，系统出现了损坏

00:06:17.939 --> 00:06:21.869
Co的重要版本，当我们拥有已发布的新点时，我会自称

00:06:21.869 --> 00:06:29.129
这周，但随后准备0.5，并确保这些网络用户界面

00:06:29.129 --> 00:06:35.819
和台式机正常工作时，将有0.5优先级，因此我们

00:06:35.819 --> 00:06:40.469
应该让他们好吧是专门为此

00:06:40.469 --> 00:06:45.049
季度，但我认为Anton Anton测试

00:06:45.049 --> 00:06:52.749
一定程度的降落可能满足那里寻找确定的要求

00:06:52.749 --> 00:06:58.669
就像切换到接收器一样，这些较新的api将成为

00:06:58.669 --> 00:07:09.669
维护工作和托德（Todd），也喜欢测试，我认为有些雨果（Hugo）有联系

00:07:09.669 --> 00:07:17.049
我认为另一个项目可以使我们在Firefox和Safari上进行测试

00:07:17.049 --> 00:07:22.129
因此我们希望将其捆绑，尽管所有这些工作都需要进行维护

00:07:22.129 --> 00:07:35.509
okiya接下来听起来不错，是因为某种原因，我无法找到

00:07:35.509 --> 00:07:43.969
浏览器集成的正确路线指导原则我应该这样做

00:07:43.969 --> 00:07:49.939
一个或他们想确定是的，所以我的意思是我会给你一个快速的背景，然后

00:07:49.939 --> 00:07:55.759
然后您可以添加更多详细信息我们做了什么，我们在

00:07:55.759 --> 00:08:00.799
我认为11月的时间范围是关于我们如何处理重定向的

00:08:00.799 --> 00:08:07.219
伙伴，当我们遇到一个DNS链接站点时，这带来了一些

00:08:07.219 --> 00:08:11.149
有关我们如何做的问题URL通常是持续的安全模型

00:08:11.149 --> 00:08:16.429
关于基于路径的安全模型，基于路径的网关和

00:08:16.429 --> 00:08:20.539
迁移到CID和子域，以确保源隔离，因此

00:08:20.539 --> 00:08:25.119
如果您有两个同时通过网关加载的网站和

00:08:25.119 --> 00:08:30.259
然后看到ID在它们具有相同来源的路径中，这意味着它们可以读取

00:08:30.259 --> 00:08:35.059
对方的本地存储设备，他们说它们是作为rin Web浏览器的cookie会话

00:08:35.059 --> 00:08:39.439
世界不是一个非常重要的问题，所以这里的短期解决方案

00:08:39.439 --> 00:08:43.309
就是要查看ID和子域，这意味着每个cid都有自己的

00:08:43.309 --> 00:08:48.559
起源保证了实际应用程序的隔离性和安全性

00:08:48.559 --> 00:08:53.930
在这些网址中运行而不是静态内容，但是

00:08:53.930 --> 00:08:57.589
讨论了对体系结构锁定意味着什么

00:08:57.589 --> 00:09:01.520
像是什么样的建筑决策或已经做出的决定

00:09:01.520 --> 00:09:04.910
作为转移到这种模型的副作用，它如何影响我们

00:09:04.910 --> 00:09:09.230
长期与网络更好地集成的能力

00:09:09.230 --> 00:09:16.580
从威胁的角度来看，从ipfs的应用程序模型的意思是

00:09:16.580 --> 00:09:21.709
使用ipfs作为本机协议，它是否具有cookie和本地内容

00:09:21.709 --> 00:09:26.120
储存这些概念甚至可以转化为我们所处的世界

00:09:26.120 --> 00:09:30.709
考虑本机ipfs是什么意思还是仅仅是静态内容

00:09:30.709 --> 00:09:35.089
传送协议，对于在哪里我们真的没有很多答案

00:09:35.089 --> 00:09:38.360
希望成为一个人，但我认为我们很多人对应用程序都非常感兴趣

00:09:38.360 --> 00:09:43.730
模型权PFS可能是，但是直到那时我们已经有了这个现有的Web应用程序

00:09:43.730 --> 00:09:48.620
模型及其所伴随的整个世界，包括这个起源

00:09:48.620 --> 00:09:54.500
基于安全性的模型，所以这是此提示所围绕的话题

00:09:54.500 --> 00:09:59.930
我们如何改变同伴的工作方式我们如何围绕如何做出决定

00:09:59.930 --> 00:10:05.029
加载ipfs内容时，浏览器集成通常在HTTP网站中正常工作

00:10:05.029 --> 00:10:11.029
所以我告诉也许您对我们有一些想法，

00:10:11.029 --> 00:10:15.080
开始谈论这件事，但是我们如何实际表达

00:10:15.080 --> 00:10:17.680
当我们在决定类似事情的方式时，

00:10:17.680 --> 00:10:25.580
伙伴应该工作，是的，我想很长时间以来，我们一直在关注

00:10:25.580 --> 00:10:33.050
很多人称其为升级路径可能不是最好的方法

00:10:33.050 --> 00:10:39.790
措辞，我的意思是，从技术上讲，我们想升级网络并迁移

00:10:39.790 --> 00:10:45.470
将网络移至可解决其他问题的内容上，但这不是

00:10:45.470 --> 00:10:51.140
现实地看，如果回头看新技术是如何发展的，事情将如何进行？

00:10:51.140 --> 00:10:56.420
采用的旧技术仍然存在，所有类似的升级

00:10:56.420 --> 00:11:02.630
路径，所有中间步骤都已经存在或已经存在

00:11:02.630 --> 00:11:07.699
很久很久了，事情是现在，当我们

00:11:07.699 --> 00:11:14.109
我们决定如何解决一些问题或如何解决一些问题

00:11:14.109 --> 00:11:22.369
升级路径，我们需要意识到这些决定将是

00:11:22.369 --> 00:11:27.489
周围我们不希望我们可以复制它们，但人们会继续

00:11:27.489 --> 00:11:37.239
使用它们以及这些新闻升级阶段的实际类似共存

00:11:38.379 --> 00:11:45.790
是否像该子域这样的流程威胁了项目的采用

00:11:45.790 --> 00:11:53.720
从历史上的讨论来看，ipfs解决的情况非常清楚

00:11:53.720 --> 00:12:00.709
遵循泄漏的Unix约定，所以我们基本上有了一个根目录和所有地址

00:12:00.709 --> 00:12:06.350
被安装在同一条路由上，就像ipfs IP NS一样，

00:12:06.350 --> 00:12:12.970
关于斜杠HTTP的讨论以及解决问题的方法

00:12:12.970 --> 00:12:20.239
然后我们引入了HTTP网关，因此只需简单地

00:12:20.239 --> 00:12:29.179
UNIX，我们将其粘贴到URL的路径部分中，这非常优雅

00:12:29.179 --> 00:12:35.029
但与此同时，由于我们忽略了这一事实，带来了很多问题

00:12:35.029 --> 00:12:40.279
原始选择，现在当我们重新引入原始信息时，我们就是

00:12:40.279 --> 00:12:43.879
有点像打破了这种抽象，有人可以简单地

00:12:43.879 --> 00:12:50.539
例如突出显示并复制具有很大可用性的路径

00:12:50.539 --> 00:12:58.069
就像人们可以简单地更改域名一样的值，或者像复制和

00:12:58.069 --> 00:13:03.919
将该路径粘贴到其他类似的域中，或覆盖该路径或添加一个

00:13:03.919 --> 00:13:08.539
当我们进行排序时，不同的网关和内容现在仍会加载

00:13:08.539 --> 00:13:14.269
就像拿了CID并将其粘贴在该域的左侧一样，就像两件事一样

00:13:14.269 --> 00:13:21.140
复制它不是如果您复制路径不是完整路径，因为这条路

00:13:21.140 --> 00:13:29.779
在域上，这可能是一个漫长的过程，但我认为这是一个很好的例子

00:13:29.779 --> 00:13:38.240
其中的SKS可以帮助我们定义这些问题，我们该怎么办？

00:13:38.240 --> 00:13:43.930
当我们做出这些决定时，我们会问自己一个问题吗？

00:13:43.930 --> 00:13:50.600
像沃尔夫（Worf）一样喜欢安全收益，谁比这更重要

00:13:50.600 --> 00:13:58.790
可用性可能来自于一种看似事物的一般理智的方式

00:13:58.790 --> 00:14:05.480
但与此同时，我们在UX部分迷失了方向，那我们该怎么办？

00:14:05.480 --> 00:14:11.120
减轻这种负担，或者至少减轻我们如何合理地接受那些

00:14:11.120 --> 00:14:16.279
像每个好的种子一样在一个方面背对背，您可以改善

00:14:16.279 --> 00:14:21.500
另一个方面，但其他方面则更好

00:14:21.500 --> 00:14:27.260
本机集成或类似的事情，我们可以复制一个不同的URL

00:14:27.260 --> 00:14:32.660
与向用户提供的解决方案相比，有类似的解决方案，但第一个

00:14:32.660 --> 00:14:43.490
步骤是考虑一下我们介绍的诸如实际架构登录之类的内容

00:14:43.490 --> 00:14:50.480
通过不确定这些更改，不确定您是否全力以赴，但

00:14:50.480 --> 00:14:56.890
我想说明为什么此子域网关情况是

00:14:56.890 --> 00:15:06.829
有问题并提出这些问题，我认为我们应该定义一些定义

00:15:06.829 --> 00:15:12.170
一些指导原则可能像在Web浏览器中的ipfs上发布它们一样

00:15:12.170 --> 00:15:19.490
将会获得回购自述文件或类似内容的帮助，只是为了获得它

00:15:19.490 --> 00:15:26.170
当我们将来不得不在某个时候做出类似的决定时

00:15:26.170 --> 00:15:32.020
认为那是我的想法我对什么有一些想法

00:15:32.020 --> 00:15:37.990
这些指导原则应该是我们对诸如

00:15:37.990 --> 00:15:43.720
解决回归路径，但我们从未写过，所以大概写了10

00:15:43.720 --> 00:15:46.680
磅一个好主意

00:15:48.910 --> 00:15:54.129
我认为这对于讨论具体示例的帮助非常大。

00:15:54.129 --> 00:15:59.329
用户体验与其他目标以及至少这些目标有何冲突

00:15:59.329 --> 00:16:02.509
原则使我们意识到正在做出的取舍而不是

00:16:02.509 --> 00:16:06.769
进行更改以能够及时修复问题，而我

00:16:06.769 --> 00:16:08.389
认为这将非常重要，这将对您有所帮助

00:16:08.389 --> 00:16:16.490
好吧，也许我们应该把这个放在即将到来的团队的议程上

00:16:16.490 --> 00:16:21.889
团队见面会30分钟到一个小时或

00:16:21.889 --> 00:16:24.290
在那一周里像这样的事情来敲定什么

00:16:24.290 --> 00:16:34.759
这些原则可能是行动项目，与此同时还有另一个议程项目

00:16:34.759 --> 00:16:40.579
您已经添加了我也可以讨论该项目，但是如果您可以介绍的话

00:16:40.579 --> 00:16:43.870
这将是有帮助的

00:16:45.590 --> 00:16:55.430
最后一个是，是的，所以如您所知，我们有一种拓扑

00:16:55.430 --> 00:17:01.130
现在用于我们的BFS和Web浏览器

00:17:01.130 --> 00:17:06.140
我们的同伴IP的组合，它为我们提供了桌面，您可以运行ipfs

00:17:06.140 --> 00:17:09.590
伴随那些方法来检测和ipfs URL，然后拦截该请求

00:17:09.590 --> 00:17:12.980
将其路由到IP快速桌面或您正在运行的任何本地恶魔

00:17:12.980 --> 00:17:17.210
得到该响应，然后在浏览器中将其回放给用户

00:17:17.210 --> 00:17:23.570
拓扑首先要考虑的几件事是URL

00:17:23.570 --> 00:17:29.240
该人员输入的是Doc完成的ipfs dot IO还是IP总线网关

00:17:29.240 --> 00:17:36.770
URL被重定向到本地主机URL，因此从可用性纽约重定向到

00:17:36.770 --> 00:17:40.160
立场已经有点时髦的普通人看到

00:17:40.160 --> 00:17:43.610
本地主机，它不是真正想要进入的状态

00:17:43.610 --> 00:17:48.530
从长远来看，这绝对是一个中间阶段

00:17:48.530 --> 00:17:52.430
角度来看，但这也意味着有很多怪癖，以及

00:17:52.430 --> 00:17:58.760
主机在浏览器中处理有关安全模型的重定向

00:17:58.760 --> 00:18:05.270
您知道的能力检测既不新颖又不标准

00:18:05.270 --> 00:18:10.010
跨浏览器存在一些差异，但甚至没有实现

00:18:10.010 --> 00:18:19.000
现有的规范标准，因此您既具有互操作性又具有通用性

00:18:19.270 --> 00:18:25.970
规范合规性问题开始出现，因此我们一直在努力

00:18:25.970 --> 00:18:29.120
知道那些东西在什么地方阻止了我们，以及我们需要在哪里

00:18:29.120 --> 00:18:32.930
能够戳浏览器供应商，以便能够修复其中的某些问题

00:18:32.930 --> 00:18:35.720
那和壁虎那边有一些错误，他们实际上

00:18:35.720 --> 00:18:43.550
最近有点进步，我想Lydell戳了

00:18:43.550 --> 00:18:50.630
有些很好，但对我来说，这就像我很乐意

00:18:50.630 --> 00:18:57.080
能够退后一步，然后像过于努力地融入本地主义者一样

00:18:57.080 --> 00:19:02.389
区域至少具有像点或更多点的凝聚力

00:19:02.389 --> 00:19:06.350
关于我们如何使用localhost编写的一些文档的功能和

00:19:06.350 --> 00:19:09.950
我们可以期望或需要的功能，以便我们可以呈现一个统一的

00:19:09.950 --> 00:19:14.120
查看有关我们需要的行为或行为的详细记录

00:19:14.120 --> 00:19:18.690
我们期望的以及如何在拓扑中使用localhost

00:19:18.690 --> 00:19:23.100
我想到了最后一部分，那就是升级是什么

00:19:23.100 --> 00:19:28.049
路径看起来像我们实际上要在哪里，如果有的话

00:19:28.049 --> 00:19:31.889
那么浏览器的世界就是我们希望最终在ipfs冒号的地方

00:19:31.889 --> 00:19:38.130
斜杠斜杠cid，然后再然后，然后路径是什么，那是什么

00:19:38.130 --> 00:19:42.149
看起来就像通过交流，我们又回到了缺乏的想法

00:19:42.149 --> 00:19:46.409
真正针对威胁模型的安全模型或应用程序模型

00:19:46.409 --> 00:19:49.350
对于既没有协议处理又看起来是什么样的东西，我们现在

00:19:49.350 --> 00:19:52.679
不能使用本地房屋本地主机作为代理来了解这是什么

00:19:52.679 --> 00:19:57.870
至少将成为中途集成点，但是我认为

00:19:57.870 --> 00:20:02.370
我可能想了解最少记录的X文档

00:20:02.370 --> 00:20:07.490
我们目前的期望是什么，以及浏览器的局限性是什么

00:20:08.350 --> 00:20:14.690
谢谢你，这就像超级超级有用，对问题的介绍

00:20:14.690 --> 00:20:22.040
空间，我唯一要添加的是那些将这些链接联系起来的细微差别

00:20:22.040 --> 00:20:26.240
我链接到特定于Firefox的问题的细微差别

00:20:26.240 --> 00:20:33.320
主要是因为像Firefox仍是难题的一部分，所以

00:20:33.320 --> 00:20:42.080
现在解决本地节点本地网关的问题

00:20:42.080 --> 00:20:51.320
将HTTP网关暴露给localhost上的ipfs，我们用过的是

00:20:51.320 --> 00:20:58.910
基本上是本地主机IP和端口8080的问题是它是单个

00:20:58.910 --> 00:21:08.810
因此，当子域将登陆时，我们希望在localhost上具有子域，因此

00:21:08.810 --> 00:21:13.190
但是先在本地主机上解决这个想法的CID这个想法

00:21:13.190 --> 00:21:22.210
有一个与安全上下文相关的独立问题空间，因此安全上下文是

00:21:22.210 --> 00:21:32.900
安全上下文是Web浏览器中的另一种安全抽象，其作用是

00:21:32.900 --> 00:21:41.360
一些更高级的api和一些类似操作的网守

00:21:41.360 --> 00:21:46.430
从页面本身，您可以通过JavaScript执行的操作

00:21:46.430 --> 00:21:50.450
您可以访问cookie的本地请求类型

00:21:50.450 --> 00:21:59.870
您的安全上下文总体上有一个非常正式的定义，但简短

00:21:59.870 --> 00:22:06.220
一个简短的实用版本是它是从

00:22:06.220 --> 00:22:16.840
安全传输，因此使用有效证书或本地主机的HTTP，并且有一个

00:22:16.840 --> 00:22:25.260
在本地主机周围的一个小星号处塌陷意味着在初始html5中

00:22:25.260 --> 00:22:33.960
规范它只是说，当地的一切都说，安全

00:22:33.960 --> 00:22:43.290
上下文是从HTTP加载的页面还是从localhost加载的页面，但随后是人

00:22:43.290 --> 00:22:51.060
意识到本地房屋本身只是一个主机名，该主机名将被传递给

00:22:51.060 --> 00:22:56.820
操作系统解析器，并从理论上从中获取本地主机IP

00:22:56.820 --> 00:23:04.410
诸如恶意软件之类的东西，或者有人可以设置操作系统或提供

00:23:04.410 --> 00:23:09.980
可能返回不同IP的恶意DHT服务器，您将不再

00:23:09.980 --> 00:23:15.300
您认为您正在通过回溯地址与本地计算机通信，但是您

00:23:15.300 --> 00:23:21.900
正在与任意okey交谈，然后将其插入插头

00:23:21.900 --> 00:23:30.840
安全漏洞更改了规格，并明确指出只有120 7.00 1

00:23:30.840 --> 00:23:37.230
和Colin Colin 1，所以ipv4和ipv6用于本地主机IP

00:23:37.230 --> 00:23:43.070
这些在规范中是硬编码的，而在浏览器中是硬编码的

00:23:43.070 --> 00:23:50.250
在浏览器引擎中，因此只有IPS是安全的上下文，并且

00:23:50.250 --> 00:23:56.520
长期以来，本地主机的主机名都不存在，这就是为什么我们要重新访问

00:23:56.520 --> 00:24:04.470
子域网关，因为Chrome和

00:24:04.470 --> 00:24:12.390
Firefox切换到这样的想法，即不应将localhost传递给like

00:24:12.390 --> 00:24:17.340
本地操作系统解析器，我们已经知道它应该是本地的

00:24:17.340 --> 00:24:21.770
回头看，所以浏览器本身应该像

00:24:21.770 --> 00:24:29.880
无缝转换为本地主机IP，以及何时实施该更改

00:24:29.880 --> 00:24:39.820
然后浏览器确定这是真正的环回设备，然后他们就可以翻转

00:24:39.820 --> 00:24:45.610
切换并再次将localhost设置为安全上下文，即使主机名是

00:24:45.610 --> 00:24:53.200
用来告诉主机和IP的解释不是很长，这是一个很长的路要走

00:24:53.200 --> 00:24:59.230
网络浏览器，但我觉得了解所有这些信息很有用是很有用的

00:24:59.230 --> 00:25:05.200
过去，为什么，为什么现在是我们在做出这种改变而不是几年

00:25:05.200 --> 00:25:11.230
在本地主机不受保护的上下文之前返回，因此

00:25:11.230 --> 00:25:17.230
令人困惑的是，localhost是在Firefox和

00:25:17.230 --> 00:25:23.260
铬，但仅在本地主机的铬子域中进行解释

00:25:23.260 --> 00:25:30.790
作为安全的上下文，因此Firefox就像在实现这些方面落后

00:25:30.790 --> 00:25:36.280
进行更改以确保本地主机是本地主机，而不是其他主机

00:25:36.280 --> 00:25:42.580
然后填充这种祝福，认为这是其安全的上下文

00:25:42.580 --> 00:25:51.550
子域，这就是我链接的问题的上下文，例如安全上下文

00:25:51.550 --> 00:25:59.980
如果人们想要加载不喜欢的更高级的Web应用程序，则非常重要

00:25:59.980 --> 00:26:08.500
静态页面，但类似于使用Web加密IP眼睛或访问权限的Web应用程序

00:26:08.500 --> 00:26:15.640
更高级的API是访问摄像头或类似的东西（如果您

00:26:15.640 --> 00:26:20.200
要连接到网络套接字，是否要连接到安全网络

00:26:20.200 --> 00:26:27.640
套接字，您需要是不安全的上下文，只有在安全的环境中运行的JavaScript

00:26:27.640 --> 00:26:32.800
上下文可以连接到安全的Web Web套接字，这意味着您无法

00:26:32.800 --> 00:26:39.490
如果您未在运行J的TFS中运行，则连接到p2p的引导节点

00:26:39.490 --> 00:26:44.410
和果冻p2p在安全的上下文中，所以这是很重要的上下文

00:26:44.410 --> 00:26:48.700
即使我们想停下来，还有多少个像动的东西

00:26:48.700 --> 00:26:53.590
在讨论子域时，有一个关于神圣上下文的主题，我们想要

00:26:53.590 --> 00:26:58.660
人们能够像请求内容一样重定向内容

00:26:58.660 --> 00:27:03.580
Web到本地网关，我们不希望人们看到该网站

00:27:03.580 --> 00:27:09.010
因为无法访问某些API而中断，所以人们不会在乎这一事实

00:27:09.010 --> 00:27:15.250
就像不再不再是神圣的人，我们不应该破坏东西

00:27:15.250 --> 00:27:20.590
人们穿上ipfs，我们可能应该尽一切力量来

00:27:20.590 --> 00:27:25.900
确保我们是否重定向到本地网关，以确保他们喜欢

00:27:25.900 --> 00:27:29.680
页面和用户体验并没有被阻止，我们不会像

00:27:29.680 --> 00:27:36.810
人们在常规网络上的安全隔离，我想就是这样

00:27:36.810 --> 00:27:40.140
希望它有用

00:27:40.350 --> 00:27:44.710
谢谢你的内心深处，我真的对我来说，这真是乞求这个问题

00:27:44.710 --> 00:27:48.790
我们还没有真正完全回答，这就像是什么

00:27:48.790 --> 00:27:53.080
对应用程序模型的期望以及应用程序的功能

00:27:53.080 --> 00:27:57.100
FS资源的Web模型和Web应用程序模型的兼容性

00:27:57.100 --> 00:28:01.450
如果您居住的时间大约是几分钟，那么ipfs的使用量就超出了

00:28:01.450 --> 00:28:04.060
网络环境中实际上没有任何期望

00:28:04.060 --> 00:28:07.950
就像它不在我的用户可见网页的上下文中呈现一样

00:28:07.950 --> 00:28:15.160
但是在这里，当您通过HTTP URL加载和ipfs资源时，

00:28:15.160 --> 00:28:21.010
期望将加载诸如后期javascript文件之类的内容，并且这

00:28:21.010 --> 00:28:26.410
执行的代码或诸如液态CSS文件之类的东西将通过以下方式加载和应用

00:28:26.410 --> 00:28:30.700
渲染引擎，因此您可以将所有关于世界的所有假设都纳入其中

00:28:30.700 --> 00:28:36.220
一个真正的时候，您只是想从世界B加载ipfs

00:28:36.220 --> 00:28:40.390
我们实际上对任何类型的处理都没有明确的要求

00:28:40.390 --> 00:28:43.750
从哑剧类型的角度看，期望是什么，内容是什么

00:28:43.750 --> 00:28:49.660
更不用说我们将如何在特定的渲染上下文中对其进行处理

00:28:49.660 --> 00:28:53.170
在那一点上我们都不过是一根烟斗

00:28:53.170 --> 00:29:03.530
先生。内斯比特（Nesbitt）想象一下会是什么有用的练习

00:29:03.530 --> 00:29:12.650
如果制作ipfs网络浏览器时没有考虑

00:29:12.650 --> 00:29:21.440
传统和集成选择，就像升级一样

00:29:21.440 --> 00:29:26.120
路径最终到达您想要的位置，但您理想情况下想要的位置

00:29:26.120 --> 00:29:30.500
与您可能在哪里喜欢显然可以关上一些门

00:29:30.500 --> 00:29:36.590
就像哦，很难再次打开，但也许那可能仅仅是

00:29:36.590 --> 00:29:41.960
一个有用的头脑风暴技巧，就像在理想世界中一样，我们会在这里

00:29:41.960 --> 00:29:45.890
如果您尝试通过网页加载网页，则放置网页是理想的世界

00:29:45.890 --> 00:29:53.630
引用其他类似jQuery的Google CDN之类的网关，我们甚至

00:29:53.630 --> 00:29:57.620
想要像您需要选择加载该内容，而不是

00:29:57.620 --> 00:30:02.900
默认值，例如，如果您质疑自己的网络方式，那么

00:30:02.900 --> 00:30:08.750
也许那是一种有趣的运动，是的，有一个非常好的

00:30:08.750 --> 00:30:12.110
这就是为什么很多时候我试图在

00:30:12.110 --> 00:30:17.930
IP节冒号斜杠斜线应导致的上下文，因为

00:30:17.930 --> 00:30:23.180
在这一点上，我们可以重新定义那些期望，我们就是我们

00:30:23.180 --> 00:30:27.680
不必接受旧模型，我们真的应该从中学到的东西中学到什么

00:30:27.680 --> 00:30:32.180
没有用，我们对网络和50年的愿景应该是

00:30:32.180 --> 00:30:36.950
什么将提供内容的寿命和特性？

00:30:36.950 --> 00:30:46.290
更安全的世界更安全，更具弹性的方式我们再次提交，这是一个漫长的过程

00:30:46.290 --> 00:30:50.520
问题，我们不会在这次会议上回答，而是本地主持人

00:30:50.520 --> 00:30:53.820
以及如何处理浏览器在不同浏览器中的呈现方式，这确实是一个很好的选择

00:30:53.820 --> 00:30:57.030
我们真正开始触及这些障碍的例子，以及我们

00:30:57.030 --> 00:31:03.000
我没有一个定义明确的应用程序模型，我们开始ping我们

00:31:03.000 --> 00:31:07.100
开始打击，我们开始真正感觉到差距

00:31:07.100 --> 00:31:18.870
在我们的计划中，我也很喜欢安德鲁（Andrew）有很好的想法

00:31:18.870 --> 00:31:26.400
如果我们忘了喜欢，我们将如何创造这种浏览体验

00:31:26.400 --> 00:31:34.260
现有的遗留情况和事实之间的重叠非常好

00:31:34.260 --> 00:31:40.530
思路和您正在使用浏览器完成技巧的工作

00:31:40.530 --> 00:31:48.060
设计准则，即我们已经确定的东西，例如

00:31:48.060 --> 00:31:54.270
在旧的网络上，您得到了诸如运输保证不变的保证

00:31:54.270 --> 00:32:00.510
但您实际上并没有在ipfs中获得任何完整性保证

00:32:00.510 --> 00:32:05.910
将不得不想出一些方式来传达有

00:32:05.910 --> 00:32:11.250
完整性保证和运输保证，但是您有不同的看法

00:32:11.250 --> 00:32:17.820
隐私保证比以前的旧模式还可以成为一个讲习班

00:32:17.820 --> 00:32:22.770
只是14周，是的，这真的很有趣，这是其他事情之一

00:32:22.770 --> 00:32:27.000
您知道，根据浏览器设计指南，我们确实可以

00:32:27.000 --> 00:32:29.370
设定水平，我们喜欢今天的世界，让我们非常清楚

00:32:29.370 --> 00:32:34.110
正式的我没有发现期望的假设是什么

00:32:34.110 --> 00:32:39.270
可变的，而不是浏览器URL栏的概念和存在的空白之一

00:32:39.270 --> 00:32:42.860
是否真的出现差距，但其中一个非常重要的部分之一

00:32:42.860 --> 00:32:52.700
这是对Web新增的完整性保证，也是

00:32:52.700 --> 00:32:57.020
完全推迟信任模型，以便我们是否同意DNS信任

00:32:57.020 --> 00:33:00.380
您向某人支付了某人实际获得的证书的模型

00:33:00.380 --> 00:33:05.300
检查域名所有者实际上是否具有以下地址：

00:33:05.300 --> 00:33:08.450
业务以及我们都知道的所有东西都不是真的，

00:33:08.450 --> 00:33:15.530
让我们加密，使它变得不那么真实，那就是您知道信任的任何人

00:33:15.530 --> 00:33:19.850
必然是从验证的观点出发，即某人是实际的

00:33:19.850 --> 00:33:22.700
真实的业务，有人对此进行了检查，这就是那个的价值

00:33:22.700 --> 00:33:28.220
证书，以使存在的问题不存在于现有世界中，都可以证明您的信任

00:33:28.220 --> 00:33:32.840
模型存在，并且IP节日我们采用了这种信任模型，那么您什么时候

00:33:32.840 --> 00:33:37.430
放下您的信任，我们将其带出现实，这是现在看不到的，

00:33:37.430 --> 00:33:41.990
对用户的信任使我能够从哪里获得C ID

00:33:41.990 --> 00:33:47.420
相信那个人是现在取决于我，而不是至少拥有

00:33:47.420 --> 00:33:53.240
像一些框架一样，围绕着一些导致我们失望的商业动机

00:33:53.240 --> 00:33:59.360
是的，我只是确定一个障碍的地方

00:33:59.360 --> 00:34:01.910
为我们采用，我们在设计解决方案时需要意识到

00:34:01.910 --> 00:34:09.080
为此，如果您愿意，我们的工作就是说服安全团队和联合国

00:34:09.080 --> 00:34:15.800
Google的设计团队要实施ipfs，我需要能够

00:34:15.800 --> 00:34:21.740
解释关于以下方面的用户体验更改的本质是什么

00:34:21.740 --> 00:34:26.890
他们如何做出决定，我是否应该信任此URL

00:34:26.890 --> 00:34:31.000
现在，即使我们有一个可以信任的信任系统

00:34:31.000 --> 00:34:36.850
已知问题，至少有一个系统，但是使用ipfs，我们已经说过了

00:34:36.850 --> 00:34:42.780
那不是我的工作

00:34:42.960 --> 00:34:48.599
因此，直到我们对如何信任用户的位置有了更好的答案为止

00:34:48.599 --> 00:34:51.929
应该围绕是否是否应该相信自己从中获得的收益做出决策

00:34:51.929 --> 00:34:56.579
是否需要CID，我们至少需要对其进行设计，以使其看起来像这样，否则可能并非如此

00:34:56.579 --> 00:35:01.400
安全，我们不能说任何一种方式，

00:35:01.400 --> 00:35:06.020
从设计和安全设计的角度来看，我们需要设计一个用户

00:35:06.020 --> 00:35:09.350
的经验，这是非常清楚的

00:35:09.350 --> 00:35:13.990
为了保护用户，我们不知道多少呢？

00:35:13.990 --> 00:35:18.800
感觉就像是在某个时候，我真的不知道历史，我会

00:35:18.800 --> 00:35:25.460
有兴趣找出是否有人在某个时候知道IP NS就像

00:35:25.460 --> 00:35:31.660
哦，这是所有与DNS相关联的快速解决方案，就像

00:35:31.660 --> 00:35:39.350
部分完成，然后就像从未真正完成一样

00:35:39.350 --> 00:35:47.360
实际上对至少来自类似事物的事物有用

00:35:47.360 --> 00:35:51.020
去年我第一次开始看整件事时，尤其是

00:35:51.020 --> 00:35:55.580
想着这跟谈论事情有什么联系

00:35:55.580 --> 00:36:02.870
互联网软件包管理，也适用于网站，就像将事物命名为

00:36:02.870 --> 00:36:08.510
与人类的联系就像是一个重要的意义，然后这个名字

00:36:08.510 --> 00:36:17.660
就像对这个名字的信任一样值得信赖，就像一个人

00:36:17.660 --> 00:36:27.170
别人的问题或至少像是可以约束现实世界的感觉

00:36:27.170 --> 00:36:30.610
他从来没有真正被跟进过，但我怀疑那是因为我们已经

00:36:30.610 --> 00:36:36.210
卡在其他所有东西上，还没有回来

00:36:36.210 --> 00:36:49.290
我认为这是一个有趣的观察，我们每次都在谈论

00:36:49.290 --> 00:36:57.630
就像网络浏览器中存在ipfs，然后信任某人

00:36:57.630 --> 00:37:04.050
给我一个带有CID的链接，让我喜欢我的抽象方式

00:37:04.050 --> 00:37:09.720
与技术水平较低的人交谈的是，就像现在一样，

00:37:09.720 --> 00:37:18.030
不要将带有原始IPS的URL粘贴到您可能想要粘贴或非常想粘贴的人

00:37:18.030 --> 00:37:23.609
除非您想要特定的快照，否则很少粘贴带有Rossy ID的链接

00:37:23.609 --> 00:37:31.589
网站的内容，因此有关人类可读名称的讨论永无止境

00:37:31.589 --> 00:37:38.550
我们可能需要弄清楚，就像今天我们喜欢IP NS并不是

00:37:38.550 --> 00:37:45.180
对这个问题的答案就像不是答案，不是对一个问题的完整答案

00:37:45.180 --> 00:37:52.950
易读的名称问题，这只是拥有静态地址的一种方式，

00:37:52.950 --> 00:37:57.869
指向可能更改的内容，这只是调用add时的静态指针

00:37:57.869 --> 00:38:02.700
一些内容，然后最重要的是，我们有DNS链接，基本上是

00:38:02.700 --> 00:38:09.150
DNS和IP FS之间的桥梁，您可以指向Guinness或ipfs

00:38:09.150 --> 00:38:17.819
脉冲，我们当然有区块链解决方案，这就是伊恩（Ian）

00:38:17.819 --> 00:38:24.630
需要资助轻型客户，这是不可行的，就像现在，我们还没有

00:38:24.630 --> 00:38:30.390
将Tyrian客户端与多维数据集同伴捆绑在一起，因此基本上DNS链接就是

00:38:30.390 --> 00:38:36.210
唯一可读的名称解决方案，它弥合了与旧名称之间的差距

00:38:36.210 --> 00:38:43.260
网络对新手的问题是，在最薄弱的环节上感觉就足够了

00:38:43.260 --> 00:38:48.600
在整个浏览器集成中

00:38:48.600 --> 00:38:56.940
也许是因为我们没有采用DNS SEC也许是因为我认为这是一个原因

00:38:56.940 --> 00:39:05.130
另一个主题，需要您进行更长的讨论，如果您愿意的话，我们应该暂停一下

00:39:05.130 --> 00:39:11.000
想要适应这个，我们还需要提前五分钟完成

00:39:11.000 --> 00:39:22.050
今天，我在这里的谈话中加一个点，让我们转到

00:39:22.050 --> 00:39:26.310
下一篇感谢您将操作添加到注释中，以更全面地讨论此问题

00:39:26.310 --> 00:39:30.380
在我们的下一个人

00:39:34.850 --> 00:39:41.420
好吧，你确实想谈谈我给的青铜器吗

00:39:44.320 --> 00:39:49.570
是的，实际上也是注释的URL

00:39:49.570 --> 00:39:54.220
我们正在对浏览器范围内的FSF Grants计划进行Beta测试

00:39:54.220 --> 00:39:58.080
连接性Web UI和桌面，我们已经说过许多项目

00:39:58.080 --> 00:40:03.220
我们希望能够做X但我们没有时间，而且我们一直没有

00:40:03.220 --> 00:40:07.990
如果您对小额资助的项目有想法，可以做X

00:40:07.990 --> 00:40:13.300
状态，如果您对项目有想法，可以在$ 1,000美元以下完成

00:40:13.300 --> 00:40:17.200
他们更大一点，您可能会被认为是更大的赠款，

00:40:17.200 --> 00:40:19.990
值得投资，或者您认为看到其他人

00:40:19.990 --> 00:40:24.120
我认为上诉的一部分可能是在投资，或者如果您只是

00:40:24.120 --> 00:40:29.980
要求，那么您希望人们将给定的提案带到表中

00:40:29.980 --> 00:40:34.360
技术问题，是否有人在外面可能会真正看到生意

00:40:34.360 --> 00:40:38.200
实际上将真实资金投资于其后的文档1看不到解决了的问题

00:40:38.200 --> 00:40:42.880
ipfs差异回购现已开始营业，目前处于测试阶段

00:40:42.880 --> 00:40:48.130
但是有用于诸如赏金之类的文档的东西

00:40:48.130 --> 00:40:50.950
被用来做一些我们希望能够做的工作

00:40:50.950 --> 00:40:55.480
看看发生在我们的简短整合以及许多其他事情中

00:40:55.480 --> 00:41:00.790
正在提议rust ipfs实施，因为他们声称已获得拨款

00:41:00.790 --> 00:41:05.440
同样，在工作过程中，如果有某些项目是项目

00:41:05.440 --> 00:41:09.730
大小，您认为他们值得投资，但我们没有时间

00:41:09.730 --> 00:41:12.460
现在就建立您的位置，因为它的优先级可能比我们现有的优先级低

00:41:12.460 --> 00:41:17.130
对于下一个季度，或考虑将其写成不同的IP巨星

00:41:17.130 --> 00:41:23.080
可能会有人走过的地方，并有相关经验，对此感兴趣

00:41:23.080 --> 00:41:26.770
时间，我们很乐意付钱给他们以完成这项工作

00:41:26.770 --> 00:41:31.690
并将价值和成功带回项目，帮助我们转移了其中一些

00:41:31.690 --> 00:41:35.740
我们长期以来一直在做的一些事情帮助我们前进

00:41:35.740 --> 00:41:39.160
即使他们的实验，他们也会前进我会鼓励你想像你

00:41:39.160 --> 00:41:42.280
知道我想做的一件事，所以有一天，我们只会有一堆

00:41:42.280 --> 00:41:46.690
浏览器都在运行所有连接了它们的HTTP页面时，您会看到ipfs超过80

00:41:46.690 --> 00:41:51.820
 hg此处的TC援助对于给定用例可能很好，但可能并非如此

00:41:51.820 --> 00:41:55.270
对于用例a来说很好，但是对于用例B来说可能是完美的，尤其是当a

00:41:55.270 --> 00:41:58.210
一群人在同一时间同时装载一堆东西

00:41:58.210 --> 00:42:01.329
可能效果很好，我很想节省一些实验，因此

00:42:01.329 --> 00:42:06.099
如果您有这些类型的想法，它甚至不是一个完整的想法，但我会

00:42:06.099 --> 00:42:10.390
喜欢看某事在那个领域做一个实验，尽可能地写下来

00:42:10.390 --> 00:42:15.400
不同，可以说我们或其他人想要完美匹配

00:42:15.400 --> 00:42:22.690
与一个感兴趣的团体和基金一起试验我只想要的大证据概念

00:42:22.690 --> 00:42:31.539
补充说，这不仅像我们作为项目负责人一样，向偷窥者提供早期P

00:42:31.539 --> 00:42:37.119
您可以提出一些我们希望看到的工作，但是人们可以提出他们的建议

00:42:37.119 --> 00:42:43.210
自己的项目，重要的是不仅要像成熟的

00:42:43.210 --> 00:42:49.049
项目，但如果您有一个可以

00:42:49.049 --> 00:42:56.529
添加了ipfs集成，您希望赞助该工作，这是一个

00:42:56.529 --> 00:43:04.089
特殊类型的赠款，也可以提出，但不能提供

00:43:04.089 --> 00:43:09.160
就像有一个问题，例如下一个云就是一个很好的例子

00:43:09.160 --> 00:43:13.470
云用户只是他们的子集，就像我只是想搞砸了，不是那样

00:43:13.470 --> 00:43:18.400
我一直想从IP fest mini project repo移植它，我们已经

00:43:18.400 --> 00:43:21.460
刚刚将这个问题转移到聋人补助金中，因为我认为这可能是

00:43:21.460 --> 00:43:24.579
该社区中的人们会真正感兴趣的东西

00:43:24.579 --> 00:43:28.869
做那个工作，以便您可以实现，我喜欢集成的想法，因为

00:43:28.869 --> 00:43:31.319
民主党人

00:43:33.840 --> 00:43:40.360
kukuku我可能很快会觉得很漂亮

00:43:40.360 --> 00:43:44.500
令人兴奋的我想我认为这是下一个议程项目，也是我这件事

00:43:44.500 --> 00:43:50.230
那更像是波浪形的手，所以我经常会见微软，他们在滚动

00:43:50.230 --> 00:43:56.380
提出了一种使用称为“边树”的技术的身份平台解决方案，

00:43:56.380 --> 00:43:59.710
他们实施它，我认为它将被称为离子他们宣布了它

00:43:59.710 --> 00:44:07.060
去年，基本上是身份交易汇总到

00:44:07.060 --> 00:44:11.230
比特币区块链和这些交易的所有日志实际上是

00:44:11.230 --> 00:44:16.570
从ipfs节点托管，当前Microsoft正在运行其JSI PFS

00:44:16.570 --> 00:44:22.420
作为他们用来托管这些See ID的服务器端守护程序

00:44:22.420 --> 00:44:26.950
基本上是想立即将ID写入比特币区块链

00:44:26.950 --> 00:44:30.550
他们最初的推出，但我想他们说您可以在任何地方写它

00:44:30.550 --> 00:44:35.860
有趣的是，他们正在使用JSON ipfs，因为这是工具链，

00:44:35.860 --> 00:44:39.970
他们整个团队和整个领域都可以使用的平台和语言

00:44:39.970 --> 00:44:42.970
他们都是上下打字稿，所以他们对我们的打字稿感兴趣

00:44:42.970 --> 00:44:47.500
支持种族灭绝光束的原型，但我们也

00:44:47.500 --> 00:44:51.730
这种拓扑有点奇怪，就像没有很多人正在部署JCAP

00:44:51.730 --> 00:44:55.270
在生产环境中运行它的服务器上大惊小怪，因为J Psyche fest不会

00:44:55.270 --> 00:45:01.150
有两个HT支持，因此如果客户端将其实际上无法连接到实际的DHD

00:45:01.150 --> 00:45:05.680
此实现引导到Microsoft的节点，这很棒

00:45:05.680 --> 00:45:09.490
连接到Microsoft站点DFS节点，他们请求这些节点的CID

00:45:09.490 --> 00:45:13.690
显然已经解决了CID繁荣问题，但是他们需要能够

00:45:13.690 --> 00:45:18.370
进一步扩展此网络，因此他们对我们非常感兴趣

00:45:18.370 --> 00:45:23.650
在gpfs中实现更多功能奇偶校验，而Jason p2p显然是一个

00:45:23.650 --> 00:45:27.370
连接性观点的很大一部分，一些DHD也可以工作，但是

00:45:27.370 --> 00:45:33.280
在这种用例中，这种拓扑甚至最终导致混乱的通信

00:45:33.280 --> 00:45:38.800
尽管我宣称的Jace没有直接连接到DHT，您仍然可以

00:45:38.800 --> 00:45:42.520
来自Microsoft的比特币区块链中的C ID请求

00:45:42.520 --> 00:45:44.540
通过那里写，我做了一个很好的框架

00:45:44.540 --> 00:45:50.240
您可以形成一个网关URL，并向我们的公共网关询问该CID，例如

00:45:50.240 --> 00:45:56.450
可能是由于这些节点在连接到其他节点时

00:45:56.450 --> 00:45:59.900
进行初步发现并开始阻止和收集所有这些对等项

00:45:59.900 --> 00:46:03.920
在这700个同龄人中，有一个是

00:46:03.920 --> 00:46:07.010
如果我声明已连接到DHD，该怎么办，因此这

00:46:07.010 --> 00:46:12.319
从说比特币区块链路由获得CID询问公众我可以围墙

00:46:12.319 --> 00:46:15.440
该CID的网关实际上可能最终会连接，这将需要一个

00:46:15.440 --> 00:46:19.970
一会儿，但可能通过最终连接到其中一个解决

00:46:19.970 --> 00:46:23.839
连接到多余网络或他们的伙伴也正在写的节点

00:46:23.839 --> 00:46:28.280
注意，因为这是一个开放的开放系统，不仅Microsoft服务器是

00:46:28.280 --> 00:46:33.230
将会在那里，所以我们有了这个拓扑，它们实际上并没有连接到

00:46:33.230 --> 00:46:37.010
DHT，但实际上系统无法正常工作

00:46:37.010 --> 00:46:42.230
可能并非一直都有效，但与此功能进行了沟通

00:46:42.230 --> 00:46:46.700
平价的事情有点像，我们真的没有很好的理解

00:46:46.700 --> 00:46:51.260
这些连接类型到底在哪里崩溃，而我们只是我

00:46:51.260 --> 00:46:54.559
自称不，这不是可互换的效果IP第一节点我认为我们的一些

00:46:54.559 --> 00:46:58.069
用户不知道他们真正的区别以及这些区别意味着什么

00:46:58.069 --> 00:47:01.490
他们可以说停留在某种东西上，就像在看它一样

00:47:01.490 --> 00:47:05.000
我写了一个客户端编辑的工作将其引导到

00:47:05.000 --> 00:47:10.400
我的服务器和该系统正常工作，但如果未连接以连接DHT，

00:47:10.400 --> 00:47:15.170
连接独立的断开连接，您会在该网关在线某个位置看到它

00:47:15.170 --> 00:47:18.740
场景，或者他们实际上从网关请求相同的CA ID可能不起作用

00:47:18.740 --> 00:47:24.109
以及实现部署中的这些细微差别

00:47:24.109 --> 00:47:28.040
针对您的任何需求提供专业的解决方案，在这种情况下，它们位于全球

00:47:28.040 --> 00:47:33.440
实施者和构建者不清楚的分散式身份系统

00:47:33.440 --> 00:47:38.210
如果有人有一些资源想法或您已经完成的工作，它会很喜欢的，或者

00:47:38.210 --> 00:47:42.200
您了解的有关这些类型的可视化的工作

00:47:42.200 --> 00:47:46.280
这些连接限制是我真正希望能够做到的

00:47:46.280 --> 00:47:51.470
能够指向图表交互式可视化，也许这是一个想法

00:47:51.470 --> 00:47:56.510
聋哑的人甚至连这些连接的实际运作方式有时都如此

00:47:56.510 --> 00:47:59.960
就像在给定方案中，您有一个GSI PFS节点在

00:47:59.960 --> 00:48:04.329
使用我们的默认连接配置连接的服务器

00:48:04.329 --> 00:48:09.799
有几百个对等连接，然后您获得一个CID，

00:48:09.799 --> 00:48:13.430
它正在托管一个新的公众，您可以通过网关提出要求，这是怎么回事

00:48:13.430 --> 00:48:17.479
路由实际上是如何工作的，如何从网关全部中找到自己的方式-所有

00:48:17.479 --> 00:48:20.779
到该节点的方式，甚至可能是发布的一个嫉妒的IP节节点

00:48:20.779 --> 00:48:27.739
通过HTTP HTTP API从网页内部访问它的可能方法有哪些

00:48:27.739 --> 00:48:30.799
该请求可以路由到整个系统并最终执行

00:48:30.799 --> 00:48:35.900
除了顾虑之外，实际上可以联系并解决您知道的该内容

00:48:35.900 --> 00:48:39.289
想想我们中很多人正在运行IP地址的默认假设

00:48:39.289 --> 00:48:44.599
大批量，高产量的场景是，您只需要运行它就可以了

00:48:44.599 --> 00:48:47.479
必须运行它，我想就是这样，但这是它起作用的唯一方法，但是

00:48:47.479 --> 00:48:51.920
并非总是如此，并非总是如此，在这里，我们

00:48:51.920 --> 00:48:56.119
有一种情况，我们有人用ipfs构建了一些东西，但是他们

00:48:56.119 --> 00:49:00.499
就像我们仅使用JSF S＆R一样，它适用于我们的用例，但并非如此

00:49:00.499 --> 00:49:05.180
它不在那儿，谈话会说有线团队很好

00:49:05.180 --> 00:49:09.200
他们只是使用go ipfs的一种疯狂方式，这有很多原因

00:49:09.200 --> 00:49:13.940
例如，当您构建了整个生态系统时，人们就会选择GSI PFS

00:49:13.940 --> 00:49:16.999
 JavaScript和您的所有招聘信息以及您的招聘渠道都已放入JavaScript和

00:49:16.999 --> 00:49:20.329
您所有的工具都是围绕JavaScript进行的，

00:49:20.329 --> 00:49:25.309
 JavaScript是一个生态系统，不仅是从编程角度而言

00:49:25.309 --> 00:49:30.410
在这方面，Python是两个最大的生态系统，因此

00:49:30.410 --> 00:49:32.719
真正有力的支持对我们从采用中起着重要的作用

00:49:32.719 --> 00:49:36.950
立场，那么这也有点像网络可视化和

00:49:36.950 --> 00:49:40.700
和部署拓扑可视化的东西，所以有几个

00:49:40.700 --> 00:49:43.819
东西包裹在这里，但我想我主要不是像我这样

00:49:43.819 --> 00:49:46.579
没有能够传达这些部署信息的好工具

00:49:46.579 --> 00:49:50.569
抱歉，该路由实际上是如何工作的，因此，如果您有想法

00:49:50.569 --> 00:49:56.719
如果您擅长于草稿，可以分享一些很好的例子的资源

00:49:56.719 --> 00:50:01.130
并想用简笔画画一些最可悲的东西

00:50:01.130 --> 00:50:06.249
设计师如何使自己更漂亮，但这里的任何帮助都不是那么好

00:50:06.249 --> 00:50:10.819
是的，我想您可以在这里谈论很多事情，例如

00:50:10.819 --> 00:50:15.030
一个就像实际的网络可视化，那就是

00:50:15.030 --> 00:50:22.500
循环EDP层目前正在开发的东西是

00:50:22.500 --> 00:50:27.150
正在完成鞭打技巧的完成工作，因为我们需要这个

00:50:27.150 --> 00:50:34.320
测试地面，然后也将其合并到可视化器中

00:50:34.320 --> 00:50:39.960
我们已经有了设计方案，但是我们没有仪器

00:50:39.960 --> 00:50:45.780
提供给将帮助我们建立可视化效果的团队

00:50:45.780 --> 00:50:51.930
所以我们最终应该在不久的将来我不记得时间表了，但是

00:50:51.930 --> 00:50:56.340
在接下来的六个月内完成检测，以便我们处理

00:50:56.340 --> 00:50:59.760
关闭，以便他们可以将其插入并实际构建网络可视化器

00:50:59.760 --> 00:51:05.369
为此，然后我认为其中的第二部分就像嘿，如果

00:51:05.369 --> 00:51:09.930
您想要获得内容，但最终却获得了内容，但是您没有运行

00:51:09.930 --> 00:51:13.770
DHT这是怎么发生的，并喜欢发生了什么，因为可能

00:51:13.770 --> 00:51:17.310
也许是一些交换魔术，或者是委托路由，或者发生了什么

00:51:17.310 --> 00:51:21.839
在这里，一些类似的事情正在为您带来满足感

00:51:21.839 --> 00:51:32.420
这通常是多种因素的结合，尤其是在JSI PFS ipfs中，就像

00:51:32.420 --> 00:51:41.369
是的，这是我们在果冻p2p中拥有的所有东西，但我们也得到了一些东西

00:51:41.369 --> 00:51:49.050
称为预加载，因此事实是您可以要求一些远程节点提取

00:51:49.050 --> 00:51:57.420
内容从您那里缓存到您的缓存中，然后您真的不喜欢宣布任何内容

00:51:57.420 --> 00:52:02.250
到高清，但实际上是因为该笔记获取了该内容，

00:52:02.250 --> 00:52:08.040
将其存储在本地仓库中，便笺开始将这些内容发布给DHT，因此

00:52:08.040 --> 00:52:14.210
就是这样，但基本上就像委托集中工作一样，不，我认为

00:52:14.210 --> 00:52:20.670
结合预载节点，所以有两个

00:52:20.670 --> 00:52:26.519
困惑的是，就像我被动地要求一个内容，

00:52:26.519 --> 00:52:33.899
那是来自p2p的委托模块，然后在J的ipfs站点上，当您

00:52:33.899 --> 00:52:39.419
将东西添加到本地节点，您可以有一个枕形节点列表，其中

00:52:39.419 --> 00:52:46.199
自动会从您的笔记中预取内容，因此此图表明

00:52:46.199 --> 00:52:51.479
描述甚至更复杂，我们将有更多的箭头和方框

00:52:51.479 --> 00:52:56.130
在这里，我们不仅要像在EFS上谈论许多旅馆一样，还要加上这个

00:52:56.130 --> 00:53:04.169
在ipfs中覆盖类似数据，它可能是交互式的，如切换即可

00:53:04.169 --> 00:53:14.279
像显示或隐藏图层一样，我可能正在为一些勇敢的博客制作视觉效果

00:53:14.279 --> 00:53:21.449
帖子，其中包含一些内容，例如填写注释，委托的路由模块

00:53:21.449 --> 00:53:28.139
对于任何p2p，所以可能就像尝试挤压的第一次迭代一样

00:53:28.139 --> 00:53:33.899
许多盒子变成一张图片，我们可能会对其进行迭代并制作它

00:53:33.899 --> 00:53:39.299
像是更多的概括，可能会在某个时候发表

00:53:39.299 --> 00:53:46.199
对我们的狗，是的，雅各布，您可以在此处添加到注释的链接吗？

00:53:46.199 --> 00:53:50.249
跟着这项工作，P2P网络官员哦，总有工作

00:53:50.249 --> 00:53:59.569
是的，我认为其中很多尚未公开，但我会

00:53:59.569 --> 00:54:04.949
我告诉一些链接，我们有一些很棒的东西，是的，

00:54:04.949 --> 00:54:10.319
不幸的是，目前很多东西都是魔术，但是它和诸如此类的东西

00:54:10.319 --> 00:54:15.539
魔术是个虫子，是的，就像是，不是，不是很多

00:54:15.539 --> 00:54:19.739
魔术，我认为这就像是非常不清楚那些故事是正确的

00:54:19.739 --> 00:54:23.909
例如当我向网络添加内容时，该内容的故事是什么

00:54:23.909 --> 00:54:28.079
进入网络，然后又有什么故事回来，因为

00:54:28.079 --> 00:54:33.359
我们添加到ipfs中的次数越多，它就会越复杂，因为

00:54:33.359 --> 00:54:37.290
你有一些像位交换这样的东西，就像它一样

00:54:37.290 --> 00:54:42.170
无法在本地或在他的同伴中找到它，它将去询问p2p

00:54:42.170 --> 00:54:46.860
内容路由找到这个东西，Lippi成为内容路由可能是一个

00:54:46.860 --> 00:54:50.070
DHT可能会被委托路由，将来可能会发生其他情况

00:54:50.070 --> 00:54:53.700
可能是任何系列，所以就像将所有这些都插入

00:54:53.700 --> 00:54:57.450
并说像这样是JSI PFS要做的，而这些

00:54:57.450 --> 00:55:09.990
是使您感到满足的两个故事，使您感到高兴的是某人正在做一些

00:55:09.990 --> 00:55:12.720
那个，我们离我越来越近了，我想我们会到达那里

00:55:12.720 --> 00:55:23.160
最终的好处是，我们有两分半钟的时间

00:55:23.160 --> 00:55:30.960
定时人员感谢您的到来，希望下周再见

00:55:30.960 --> 00:55:38.330
同时看到一切都很好

