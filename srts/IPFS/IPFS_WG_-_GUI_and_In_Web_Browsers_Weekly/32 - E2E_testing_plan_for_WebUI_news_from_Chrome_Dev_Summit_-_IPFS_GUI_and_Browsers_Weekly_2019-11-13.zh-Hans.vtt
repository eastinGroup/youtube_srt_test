WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.370 --> 00:00:09.840
您好，欢迎使用GUI，并在Web浏览器中单击其所有2019年11月13日

00:00:09.840 --> 00:00:19.109
我本周将与Dietrich和Huck一起加入，我们将直接跳到我们的

00:00:19.109 --> 00:00:28.830
今天的议程议程，我们将讨论Web UI测试套件

00:00:28.830 --> 00:00:35.430
浏览器设计研讨会将在本周举行，这两个会议将

00:00:35.430 --> 00:00:40.649
在chrome开发者峰会上分享一些更新，我们将讨论下周发生的情况

00:00:40.649 --> 00:00:53.600
在实验周期间，可以在哪里进行测试，我已经添加了它，所以这是我的错

00:00:53.600 --> 00:01:03.809
好吧，长话短说，有一个目标

00:01:03.809 --> 00:01:13.260
本季度将通过澄清何时来改善Web UI的测试服

00:01:13.260 --> 00:01:19.500
端到端测试中有些问题，我们有点想要这样，这是我写的

00:01:19.500 --> 00:01:26.640
我希望看到的这张完美的表在一个完美的世界中进行了测试

00:01:26.640 --> 00:01:37.950
当我们成为主意时，我们想测试一下我喜欢在哪里说

00:01:37.950 --> 00:01:44.840
我们想要的基本测试用例是将文件和目录添加到ipfs

00:01:44.840 --> 00:01:50.610
使用Web UI界面，我们希望确保核心功能确实

00:01:50.610 --> 00:01:54.930
不会破坏列表中的Firefox和电子铬，因为

00:01:54.930 --> 00:02:00.140
ipfs桌面基于电子，我们使用电子渲染网络

00:02:00.140 --> 00:02:09.369
IP桌面首先运行IP桌面，现在呈现器进程

00:02:09.369 --> 00:02:17.030
像人一样的屁股可能会在伴侣或他们的伴侣中对go或Jase ipfs运行webui

00:02:17.030 --> 00:02:22.190
如果您安装了Jase ipfs，并且在成组模式下启动，它将显示指向的链接

00:02:22.190 --> 00:02:31.250
网络用户界面，因此我们有效地使用了此测试矩阵，最后我终于了解到了

00:02:31.250 --> 00:02:37.519
当我喜欢调查我们目前的测试情况时，

00:02:37.519 --> 00:02:46.790
以及我们现在所处的位置与这个完美世界之间的关系，

00:02:46.790 --> 00:02:54.920
有这个测试矩阵，我最初的想法是哦，是的，我们只会添加edger

00:02:54.920 --> 00:03:00.950
边缘它具有针对这些运行时运行的内置支持，因此

00:03:00.950 --> 00:03:07.489
与Firefox铬合金和电子渲染器相对应，我们是黄金

00:03:07.489 --> 00:03:13.459
所以问题就好像我认为陪审团不是节点模块的问题

00:03:13.459 --> 00:03:19.819
已经是一个千兆字节，然后如果添加一个陪审员，就好像是二十八个

00:03:19.819 --> 00:03:25.370
再增加200兆字节，就像过去一样，我相信其中的区别

00:03:25.370 --> 00:03:31.160
标记更大了，我记得我们一直在谈论的讨论

00:03:31.160 --> 00:03:35.769
添加edger哦，这会使节点模块太大，但现在它是

00:03:35.769 --> 00:03:41.690
相对于当前节点模块的停留大小，这不是一个大问题

00:03:41.690 --> 00:03:51.349
问题在于，磨边机本身完全专注于改善我们的

00:03:51.349 --> 00:03:58.459
围绕开发库的速度，这意味着它非常自以为是

00:03:58.459 --> 00:04:06.079
它期望测试将以摩卡编写，我们使用业力运行这些测试

00:04:06.079 --> 00:04:12.620
在不同的环境中，所以我们可以在节点中运行，但随后我们使用业力来

00:04:12.620 --> 00:04:21.260
在Firefox浏览器和电子设备中运行我们也使用它在工作网络工作者中运行

00:04:21.260 --> 00:04:28.060
环境，所以我们对库进行了单独的测试

00:04:28.060 --> 00:04:32.540
当有一个窗口对象时，库如何在常规网页中工作？

00:04:32.540 --> 00:04:37.970
然后在服务工作人员那里，就像这样的自我东西，

00:04:37.970 --> 00:04:46.010
问题是在web UI中，我们不使用仅用于测试的edger

00:04:46.010 --> 00:04:53.060
而且我们有运行puppeteer进行端到端测试的概念证明

00:04:53.060 --> 00:05:02.270
与puppeteer，这是相同的半手工过程，所以这是

00:05:02.270 --> 00:05:06.110
第一个问题Edger不支持我们所使用的库

00:05:06.110 --> 00:05:11.660
在网络用户界面中使用，因此它不是嵌入式替代品，所以II

00:05:11.660 --> 00:05:18.740
从头开始尝试一些问题如果我们重构测试会是什么样子

00:05:18.740 --> 00:05:24.650
从摩卡咖啡开始，然后发现大多数人朝相反的方向移动

00:05:24.650 --> 00:05:32.300
从Wacha到Jess，所以我们不仅没有任何社区可以链接，

00:05:32.300 --> 00:05:37.400
帮助我们进行代码转换或映射，就像

00:05:37.400 --> 00:05:44.810
重构可能会很大，即使我们像业力那样转换

00:05:44.810 --> 00:05:50.690
本身不能解决我们需要的水平的端到端测试，因此我们进行排序

00:05:50.690 --> 00:05:56.060
需要伪造者这种绿色现实的原因就像业力本身一样，它只是在运行

00:05:56.060 --> 00:06:02.479
那些像在Web浏览器上下文中进行单元测试一样，但是我们想要我们需要的

00:06:02.479 --> 00:06:08.389
操纵者喜欢编排浏览器以转到特定的URL实际单击

00:06:08.389 --> 00:06:13.550
在特定的物体上，像过去那样有硒的日子，但我

00:06:13.550 --> 00:06:20.210
可以肯定的是，我们不想走那条路，在那些日子里可能会伪造

00:06:20.210 --> 00:06:24.860
成为唯一可行的选择，看来我将使用的大多数高级库

00:06:24.860 --> 00:06:31.159
也像这里提到的赛普拉斯（Cypress）和其他库一样，都是在顶部构建的

00:06:31.159 --> 00:06:36.330
就像历史上一样，伪造者都是在硒的基础上建造的

00:06:36.330 --> 00:06:43.710
所以大概是20倍左右，我觉得我们可能不是，我们不是很

00:06:43.710 --> 00:06:49.319
通过添加木偶作为什么的硬性要求而引起争议

00:06:49.319 --> 00:06:57.810
对于这个项目，我们需要这么长的话

00:06:57.810 --> 00:07:03.300
我们可以选择像摩卡咖啡和业力，但问题是

00:07:03.300 --> 00:07:08.819
不能解决我们仍然需要像puppeteer这样的支持的问题，所以我们

00:07:08.819 --> 00:07:14.669
将需要以某种方式从业力或在特定地点运行木偶

00:07:14.669 --> 00:07:19.669
跑步者或其他基本上听起来像是在延伸的东西

00:07:19.669 --> 00:07:24.569
之所以敏捷，是因为我们不想在其中添加额外的层

00:07:24.569 --> 00:07:30.599
感觉更接近边磨边器，所以我们可以说好边磨边器

00:07:30.599 --> 00:07:36.449
实际上并不能帮助我们进行测试，让我们坚持公正，也许我们应该

00:07:36.449 --> 00:07:42.569
只需改进我们的puppeteer设置，现在就可以运行puppeteer，这样

00:07:42.569 --> 00:07:47.759
意味着我们只是针对铬铬进行了测试，这就像半手工操作，但是

00:07:47.759 --> 00:07:54.719
有类似的工具既可以改善编排，又可以给我们带来改善

00:07:54.719 --> 00:08:01.620
就像DSL一样，可以针对p操纵者编写测试，而无需使用那些

00:08:01.620 --> 00:08:06.740
低级的API，所以直接，所以就像我发现的puppeteer项目

00:08:06.740 --> 00:08:13.199
什么样的桥梁弥合了我们已经使用过的和

00:08:13.199 --> 00:08:19.889
我们可以编写和计划测试的样式相同，因此我开始在此方面做文章

00:08:19.889 --> 00:08:26.219
本地分支机构，但随后会发生此呼叫，因此可能是我会选择的人

00:08:26.219 --> 00:08:33.360
也许恩里克（Enrique）会感兴趣，比如看看这是一条路要走，但

00:08:33.360 --> 00:08:40.680
基本上，如果我们朝这个方向走，我们就不需要接触现有的测试

00:08:40.680 --> 00:08:46.589
就像单元测试一样，这将是我们唯一需要改进的地方

00:08:46.589 --> 00:08:49.920
这个已经存在但没有结束的端到端设置

00:08:49.920 --> 00:08:58.170
基本形式，我们只是将其扩展，而在第一个迭代II中，我们只想

00:08:58.170 --> 00:09:06.389
使Papa能够以一种使我们针对go公开的HTTP API运行它的方式进行工作

00:09:06.389 --> 00:09:13.309
或Jas，我相信像J的人偶之类的工具或类似的工具

00:09:13.309 --> 00:09:21.119
如果您想与go对抗，我们应该能够喜欢pass，是的，也许

00:09:21.119 --> 00:09:26.759
可能就像IP fsd控件或我们已经拥有的其他库一样

00:09:26.759 --> 00:09:35.269
的Edger也许我们可以扩展edger并仅添加对木偶戏的支持

00:09:35.359 --> 00:09:40.109
就像实际上第一次迭代可能只是将其写在Web UI中本地一样

00:09:40.109 --> 00:09:48.299
但实际上我真的很想考虑我们是否可以向上游反向移植

00:09:48.299 --> 00:09:55.019
敏捷，因为这个操纵up的设置我可能希望

00:09:55.019 --> 00:10:00.269
重用它来测试Google Web应用程序（例如网站或Web应用程序和GUI）

00:10:00.269 --> 00:10:06.360
到目前为止，Edger的应用程序都集中在库上，这就是我们最终得到的原因

00:10:06.360 --> 00:10:10.769
摩卡咖啡和业力非常适合开发图书馆，但是当您

00:10:10.769 --> 00:10:15.529
需要测试一些内部交互，那么我们需要这个木偶和

00:10:15.529 --> 00:10:22.679
功能，因此有可能我们将仅贡献补丁

00:10:22.679 --> 00:10:31.230
到磨边机，并且有一个运行材料的选项，这就是为什么这四个

00:10:31.230 --> 00:10:35.610
最初的版本，我想我们应该只喜欢看看我们能用伪装者做什么

00:10:35.610 --> 00:10:42.299
会测试这个家伙的铬，但它占了80％的市场，所以相当不错

00:10:42.299 --> 00:10:50.720
例如POC，然后我们可以看到我们可以使用puppeteer Firefox和

00:10:50.720 --> 00:10:59.189
有木偶电子我不确定像Firefox这样的人有多可行

00:10:59.189 --> 00:11:08.040
一个已经实现了80个，所以我们可能需要跳过一些测试，直到

00:11:08.040 --> 00:11:14.220
对Firefox中特定API的支持，但是我觉得这很不错

00:11:14.220 --> 00:11:22.140
可行的，因此该版本也与此场景B相同

00:11:22.140 --> 00:11:28.280
我觉得不需要我们花很多时间来替代其他东西

00:11:28.280 --> 00:11:33.270
因为如果我们去这里，我们需要像没有任何东西一样喜欢重构测试

00:11:33.270 --> 00:11:38.520
保证成功，否则很难估计是否值得

00:11:38.520 --> 00:11:42.180
像摩卡测试一样，我们实际上只能有效地对端到端进行测试

00:11:42.180 --> 00:11:50.250
正确，在C语言中就像他们很高一样，我们以后总是可以决定哦

00:11:50.250 --> 00:11:56.880
实际上，我们要为B写的很多东西已经由

00:11:56.880 --> 00:12:02.610
其他一些项目，但我觉得在这个阶段我们可能应该选择B

00:12:02.610 --> 00:12:08.040
那将是我的建议，并尝试从根本上改善木偶

00:12:08.040 --> 00:12:15.450
设置，然后也许移植回敏捷，我也想评估一下这里的优势

00:12:15.450 --> 00:12:24.810
从简化外部贡献者的角度出发

00:12:24.810 --> 00:12:30.990
既熟悉又检查我们的代码规则，因此不仅可以使用

00:12:30.990 --> 00:12:34.710
用于运行测试，但也有用于检查包的内置工具

00:12:34.710 --> 00:12:43.590
大小报告代码覆盖范围到外部服务，还附带了lint adjure

00:12:43.590 --> 00:12:55.500
使用基于默认标准的规则集，与

00:12:55.500 --> 00:13:01.770
默认值，因此我通过使用来针对类似Web UI代码的测试

00:13:01.770 --> 00:13:07.980
边缘规则，我们得到60左右，大约50个错误，所以规则是

00:13:07.980 --> 00:13:12.210
更严格的是它最像外观更改，但它保留了代码库

00:13:12.210 --> 00:13:22.190
更像有人开始一样-在ipfs之间，他们基本上是

00:13:22.190 --> 00:13:27.170
需要遵循研讨会的代码惯例，有点像

00:13:27.170 --> 00:13:30.680
装饰性的东西，我们现在可能不应该讨论，但我刚才提到

00:13:30.680 --> 00:13:44.200
那是唯一值得保留的项目

00:13:44.200 --> 00:13:50.390
如果我们决定保留它，我们可以为此重复使用它，然后如果我们决定

00:13:50.390 --> 00:13:57.470
后端口，例如将up设置为边缘器，那么保持边缘器是有意义的

00:13:57.470 --> 00:14:04.430
但是现在我们可能可以不依赖于B之类的东西

00:14:04.430 --> 00:14:14.330
自然，然后我还研究了如何从JSI运行Web UI

00:14:14.330 --> 00:14:21.710
如果运行CI，TFS测试应该看起来像这样

00:14:21.710 --> 00:14:31.580
对象API FS有一个特殊的类型，有一个特殊类型的测试，我们运行

00:14:31.580 --> 00:14:39.650
只是我们是针对新版本Jace IVF的外部项目，

00:14:39.650 --> 00:14:45.140
非常有趣，因为您能够测试您的项目是否破坏了某些项目

00:14:45.140 --> 00:14:51.920
重要部分应用程序，因此在此例如我们检查是否运行了qfs伴侣

00:14:51.920 --> 00:15:02.390
针对类似Jace ipfs版本的测试，我相信您可以看到我们可以指定任何

00:15:02.390 --> 00:15:06.860
在这里发表评论，这样就不像这个测试外部评论来自专业，而是

00:15:06.860 --> 00:15:11.420
好像我们不需要使用它，我们可以拥有自己的命令，所以它不是

00:15:11.420 --> 00:15:17.930
就像切换到edger或像使用edger这样不难评论

00:15:17.930 --> 00:15:24.680
实际上，该命令由J的ipfs中的edger使用，并且仅运行测试

00:15:24.680 --> 00:15:30.770
在特定报告中命令，因此不需要更改，我们将不得不做

00:15:30.770 --> 00:15:37.940
是为了确保您是否在CI环境中运行，不仅要运行测试，还要运行

00:15:37.940 --> 00:15:43.399
也是端到端的，这将在您运行测试时有效

00:15:43.399 --> 00:15:46.910
正确地出来，那将有效地赋予我们这种能力

00:15:46.910 --> 00:15:55.459
假设Jess对Web UI回购有所了解，我希望我做到了

00:15:55.459 --> 00:16:00.709
不要过多看一眼，也不要担心太多

00:16:00.709 --> 00:16:05.230
孩子后的问题或想法

00:16:06.820 --> 00:16:15.279
感谢您详细介绍这些选项以及它们所处的场景

00:16:15.279 --> 00:16:22.730
押注伪造者的声音听起来是明智的目标，而Firefox meldman团队将

00:16:22.730 --> 00:16:28.760
完全支持它并进行测试以进行很多测试，因此

00:16:28.760 --> 00:16:36.470
一个安全的选择，是的，这似乎是工作的重点

00:16:36.470 --> 00:16:42.440
他们昨天一直在做我基于chrome dev峰会的人偶

00:16:42.440 --> 00:16:47.899
几次，这是他们的标准，那么附带的好处就是

00:16:47.899 --> 00:16:52.700
说，不仅我们得到了chrome支持，这当然是您所知道的

00:16:52.700 --> 00:16:59.120
市场在那里很重，但任何基于铬的浏览器也将具有

00:16:59.120 --> 00:17:07.459
内置了操纵up的支持，所以我们在那里获得了双重好处我有一个问题

00:17:07.459 --> 00:17:11.420
关于多少您知道您所谈论的计划是关于

00:17:11.420 --> 00:17:18.890
针对HTTP API测试嵌入式节点测试方案如何

00:17:18.890 --> 00:17:31.330
看起来在这种情况下，背景有点是现在的Web UI

00:17:32.170 --> 00:17:40.280
历史上，Web UI可以与ipfs节点通信的唯一方法是通过HTTP api

00:17:40.280 --> 00:17:44.360
我们看到我们对窗口IDF ice对象的支持由

00:17:44.360 --> 00:17:52.460
如果他的同伴，但我们喜欢删除它，因为它给人的感觉是Sun box by

00:17:52.460 --> 00:17:59.080
默认值/来源，以及在哪里可以预见到Sun Box版本，因此更容易实现

00:17:59.080 --> 00:18:06.710
在过程中做一些技巧以简单地通过HTTP运行，然后像这样

00:18:06.710 --> 00:18:14.149
发布消息代理Rube Goldberg机器实现类似结果这么长的故事

00:18:14.149 --> 00:18:24.409
简短的Web UI需要HTTP API，而当我们勇敢地运行J的ipfs时，

00:18:24.409 --> 00:18:33.380
节点正在公开HTTP API，因此Web UI只是在谈论我该说什么，是的

00:18:33.380 --> 00:18:37.940
现在所有的一切都回到了我，是的，Web UI与嵌入式节点进行了对话

00:18:37.940 --> 00:18:44.720
HTTP可能不是最好的方法，但它意味着进一步

00:18:44.720 --> 00:18:47.659
回答我的问题的目的意味着什么都不会改变

00:18:47.659 --> 00:18:56.200
如果我们针对J的IPR测试Web UI，它仍然会使用H这么长的话

00:18:56.200 --> 00:19:07.159
我们有效地测试了嵌入式J的ipfs，因为它是一样的，是的，所以

00:19:07.159 --> 00:19:13.669
我唯一遇到的另一个问题是，如果在亚洲，您是否可以提出问题？

00:19:13.669 --> 00:19:17.899
人偶的支持，所以无论您是否走那条路，您的求爱

00:19:17.899 --> 00:19:22.399
已经开始，这个想法在这个社区中浮现了，是的，所以我们

00:19:22.399 --> 00:19:28.490
提前进行可能需要的预检，这是我会做的

00:19:28.490 --> 00:19:36.500
想挑雨果的大脑，因为我不确定他是否在附近

00:19:36.500 --> 00:19:41.600
当喜欢在摩卡咖啡和业力方面表现出自以为是的决定时

00:19:41.600 --> 00:19:46.970
这些决定之所以发生，对于我们所有的图书馆都是完全合理的

00:19:46.970 --> 00:19:53.690
可以生产它节省了所有人的时间，包括我在内，问题是

00:19:53.690 --> 00:19:57.920
像GUI应用程序一样，Web应用程序是

00:19:57.920 --> 00:20:03.770
不在图片中，我觉得我们也应该将狗工作组纳入

00:20:03.770 --> 00:20:10.580
在某些时候进行讨论，因为他们将具有一些互动元素

00:20:10.580 --> 00:20:18.740
在ipfs io上狗的圣地IP上，甚至当我们喜欢开始时甚至可以在原始学校学习

00:20:18.740 --> 00:20:24.110
端到端测试，而不仅仅是小块的单元测试和

00:20:24.110 --> 00:20:31.700
组件，然后我们可能可以利用存在同行的事实

00:20:31.700 --> 00:20:42.830
在芯片中提供支持，我将完全从讨论中获得行动项目，您可以看到我

00:20:42.830 --> 00:20:50.060
切换Todd时，仍在超高速笔记本电脑上，而我

00:20:50.060 --> 00:21:00.980
通过海洋中的笔记本电脑将其列入实验周的议程中

00:21:00.980 --> 00:21:07.040
我们可以像在沙滩上的葬礼上的太阳下山一样做

00:21:07.040 --> 00:21:14.680
仪式像维京人的葬礼，有船时，有人把

00:21:14.680 --> 00:21:20.990
会燃烧的箭头，是的，我们将看到可以安排的内容，是的

00:21:20.990 --> 00:21:30.800
那还是，所以或多或少是我的想法，我们已经见过你了

00:21:30.800 --> 00:21:40.780
想得到一个更新，我不想像拉请求一样的东西

00:21:40.780 --> 00:21:45.310
切换到Jays木偶和其他所有东西而没有喜欢

00:21:45.310 --> 00:21:56.570
首先进行同步，这是您觉得有意义的事情，还是我当时

00:21:56.570 --> 00:22:01.820
我不相信当操纵up的人发生时的讨论

00:22:01.820 --> 00:22:06.460
他在附近，你还记得我当时的历史背景吗？

00:22:06.460 --> 00:22:14.980
不记得我知道这是奥利，我认为他是那个做的人

00:22:14.980 --> 00:22:22.330
我第一个考验是好的易卜拉欣死亡好吧，所以可能奥利是另一个

00:22:22.330 --> 00:22:27.820
我们应该签入的人，只是为了确保我们不喜欢错过任何未知的人

00:22:27.820 --> 00:22:34.240
设置周围的未知数，但我想根据我所看到的

00:22:34.240 --> 00:22:40.390
木偶戏是我们现在拥有的一种走法，就像超级

00:22:40.390 --> 00:22:47.860
lin-manuel我们可能需要添加一些内容，例如使其更通用，但更多

00:22:47.860 --> 00:22:58.150
或更少，我们可能会进一步扩展它

00:22:58.150 --> 00:23:08.200
我认为经过测试的我对方向声音听起来很满意

00:23:08.200 --> 00:23:14.200
几乎是一个方向，是的，我们还没有确定，但是对

00:23:14.200 --> 00:23:18.460
查看我们拥有的选项，听起来好像我们大概

00:23:18.460 --> 00:23:24.850
有一个方向，这是非常令人兴奋的，一旦我们拥有这个东西，就赢了一次

00:23:24.850 --> 00:23:29.289
到了晚上，我们会睡得更好，使转盘时间更加有趣

00:23:29.289 --> 00:23:35.020
是的，如果我们喜欢添加puppeteer作为我，我将超级开心超级免费

00:23:35.020 --> 00:23:43.860
第三件事可能只是向操纵者加木偶，因为那样会

00:23:43.860 --> 00:23:50.650
助手，我认为它在我们喜欢的网站和小型网站中可能具有高度可重用性

00:23:50.650 --> 00:23:56.520
诸如工具之类的工具，并且您知道最终将要使用的所有GUI应用程序

00:23:56.520 --> 00:24:02.720
是的，所有浏览器设计工作坊是的，

00:24:02.720 --> 00:24:07.150
关于今天早上我为你们两个人发出的邀请的简要说明

00:24:07.150 --> 00:24:14.000
设计师Jimkösem与我们合作，将ipfs浏览器编译为sign

00:24:14.000 --> 00:24:19.280
 CAD行，明天早上我将花费大约45分钟来运行

00:24:19.280 --> 00:24:24.500
他为我们准备的快速小运动，以确保他理解

00:24:24.500 --> 00:24:29.240
作为IP fest GUI产品开发人员的观点，以及

00:24:29.240 --> 00:24:36.140
有助于他开展研究工作的项目

00:24:36.140 --> 00:24:39.919
在接下来的两个月里，所以他在本周初开始工作，我们希望

00:24:39.919 --> 00:24:44.000
希望在假期之前完成它，其中一些可能需要

00:24:44.000 --> 00:24:48.130
一点点推迟了通过，但目标是在12月20日之前完成

00:24:48.130 --> 00:24:57.230
所以下一个应该是一个简短的东西，昨天我也去了铬

00:24:57.230 --> 00:25:02.210
我申请的开发者峰会第二天在星期一六点被拒绝

00:25:02.210 --> 00:25:05.960
晚上他们就像嘿，你今天想来，好吧，我想我会去的

00:25:05.960 --> 00:25:11.960
你知道对我来说很短的火车车程，但是很幸运，我去了UM我

00:25:11.960 --> 00:25:14.620
实际看到

00:25:18.500 --> 00:25:23.920
所以我看到了一些有趣的事情

00:25:25.440 --> 00:25:33.039
第二天，如果您看屏幕，我将在

00:25:33.039 --> 00:25:36.820
早上是我真正想去的那个，这是克里斯·威尔逊（Chris Wilson）

00:25:36.820 --> 00:25:42.250
一位长期从事Web标准工作的人曾在Microsoft工作了很多年

00:25:42.250 --> 00:25:48.130
Google在过去的几年里与他和Yob Weiss担任YW cg主席

00:25:48.130 --> 00:25:56.740
而且它们是您所拥有的，基本上就像api的网守

00:25:56.740 --> 00:26:01.059
网络API一瞬间就实现了，因此这是一种深入探讨

00:26:01.059 --> 00:26:06.640
作为渲染引擎闪烁的过程可以用来测试

00:26:06.640 --> 00:26:09.789
出新的网络api可以弄清楚他们将对

00:26:09.789 --> 00:26:14.860
他们实施和发布的网络平台的版本，以及所有

00:26:14.860 --> 00:26:17.559
了解对话发生在不同地方的方式

00:26:17.559 --> 00:26:23.590
特色是对未来的建议进行了评估，因此惠特尼的所有意图

00:26:23.590 --> 00:26:27.580
可以通过电子邮件发送邮件，因此能够进行广泛的合作是一件很高兴的事情

00:26:27.580 --> 00:26:32.320
像是从一开始就如何评估的观点

00:26:32.320 --> 00:26:36.130
结束这一点对于我们最终需要做的工作非常重要

00:26:36.130 --> 00:26:39.760
我承认实现了本机支持和铬，这会

00:26:39.760 --> 00:26:43.539
在我们可以的地方做些什么，但是能够开启或关闭是什么意思

00:26:43.539 --> 00:26:47.890
默认情况下，这是否意味着要尝试拥有和拥有什么意思

00:26:47.890 --> 00:26:52.080
实施或以他们最近称呼的原型

00:26:52.080 --> 00:26:55.960
这样就可以了解他们对功能的想法

00:26:55.960 --> 00:27:00.130
评估对于我们能够将正确的杠杆转向

00:27:00.130 --> 00:27:04.600
将我们的技术带到您从那里知道的地方

00:27:04.600 --> 00:27:07.780
网络堆栈具有安全性和隐私范式，我们仍然相距甚远

00:27:07.780 --> 00:27:13.720
从当今网络的安全模型中获取信息，但对

00:27:13.720 --> 00:27:17.679
做出决定，在哪里可以帮助我们移动自己的能力

00:27:17.679 --> 00:27:24.850
向前迈进的目标，我认为最重要的是要吸引更多人参与

00:27:24.850 --> 00:27:29.860
至少从w3c和ITF的可见性角度来看，

00:27:29.860 --> 00:27:34.149
到2020年，我们作为组织SPL所拥有的目标甚至更多

00:27:34.149 --> 00:27:38.800
更重要的是，因为我们要像我们一样需要能够创建一个

00:27:38.800 --> 00:27:42.700
我们可以就签证案件进行对话的环境

00:27:42.700 --> 00:27:46.000
浏览器设计指南也将有助于支持创建具有以下特征的环境：

00:27:46.000 --> 00:27:51.040
 2020年的对话可以使我们知道2020年后的可能性

00:27:51.040 --> 00:27:55.060
人们可能真正开始使用的本机实现，这是有一天在

00:27:55.060 --> 00:28:01.270
更大的浏览器，所以这真的很酷，剩下的很多是

00:28:01.270 --> 00:28:07.990
更多的Web开发人员将重点放在会话中完成的HTML上，这确实非常好，并且

00:28:07.990 --> 00:28:10.840
这些都是录制的，所以您可以观看它们，我不知道这些视频

00:28:10.840 --> 00:28:16.300
已经起来了，但是如果您不熟悉它能持续多久，那就很好了

00:28:16.300 --> 00:28:22.300
让他们在庆祝事情的网络平台中发生变化

00:28:22.300 --> 00:28:29.170
例如表单控件的样式，这很好，因为其中一些更改是

00:28:29.170 --> 00:28:32.260
很难制作，重要的是我们要庆祝它们作为网络平台

00:28:32.260 --> 00:28:36.460
对于设计师和开发人员来说变得更好，但同时这确实是一个很好的选择

00:28:36.460 --> 00:28:41.680
事情发生需要多长时间的图示，例如CSS网格

00:28:41.680 --> 00:28:44.950
全部降落一次，这是一些协调的例子

00:28:44.950 --> 00:28:48.190
在浏览器供应商之间，并确保一项重要的技术

00:28:48.190 --> 00:28:51.730
有影响力的人能够相对迅速地吸引开发人员和设计师

00:28:51.730 --> 00:28:55.060
但是，如果您看一下这项技术的历史，整个过程大约花费了八年的时间

00:28:55.060 --> 00:29:01.660
总的来说，我们甚至还没有真正处于演示阶段

00:29:01.660 --> 00:29:08.920
IP FS之类的东西，但是考虑到我们要采取的战略方法

00:29:08.920 --> 00:29:13.690
希望我们可以压缩它而不是这样，所以我们不是在谈论一些本地的ipfs。

00:29:13.690 --> 00:29:18.040
浏览器本机Imbros在2030年会更糟，但相反，我们就像20 22

00:29:18.040 --> 00:29:22.390
那样的话，但是这样的演讲对于同时获得这两个演讲都是很棒的

00:29:22.390 --> 00:29:26.200
我认为那天最好的地方还没有看过

00:29:26.200 --> 00:29:30.460
祈祷日早些时候，但要了解挑战的种类

00:29:30.460 --> 00:29:33.880
我们将要面对的环境以及我们将要在其中运行的环境

00:29:33.880 --> 00:29:40.780
获得大量浏览器支持与镀铬线索的问答可能也值得

00:29:40.780 --> 00:29:45.460
看着是否只是为了了解Chrome是否已淘汰铬

00:29:45.460 --> 00:29:48.190
大约一千或更多的组织

00:29:48.190 --> 00:29:53.720
与和在那儿也许还有一些

00:29:53.720 --> 00:29:57.620
他们是一群以相同方式共同努力或不共同努力的人

00:29:57.620 --> 00:30:00.980
任何组织，一群人，所以认为事情有点辣

00:30:00.980 --> 00:30:05.780
质量检查中的内容，因此从该角度来看值得一看

00:30:05.780 --> 00:30:11.780
与我们相关的还有这个话题，在世界范围内，Chrome扩展程序

00:30:11.780 --> 00:30:13.790
明天这是一些呈现他们的地方

00:30:13.790 --> 00:30:19.730
在清单v3上工作，并且从所有方面来看，几乎没有

00:30:19.730 --> 00:30:24.590
承认任何事情都是有争议的，相反

00:30:24.590 --> 00:30:31.310
被呈现为具有更好性能和用户的美好新未来

00:30:31.310 --> 00:30:36.590
集中的态度，所以能得到这样的澄清是很好的

00:30:36.590 --> 00:30:40.910
不，他们不支持v3，是的，他们会努力学习，而您

00:30:40.910 --> 00:30:47.770
他们是对的，我们都是错的，用户实际上并不想添加褶皱

00:30:48.520 --> 00:30:54.800
对不起，钢包，我没想到会从那届会议上得到好消息

00:30:54.800 --> 00:31:04.670
爸爸不仅我想哭泣，而且我也忘了自己

00:31:04.670 --> 00:31:08.990
所以他们有一个浏览器，其他的浏览器都是类似Samsung和Edge的产品

00:31:08.990 --> 00:31:17.990
和Firefox，我确实与这些边缘人员进行了交谈，我猜他们

00:31:17.990 --> 00:31:21.440
我真正获得的最重要的信息是因为

00:31:21.440 --> 00:31:25.010
比起贝弗利（Beverly）似乎更像是不是网络上的东西

00:31:25.010 --> 00:31:28.160
标准决策者那里没有产品经理或诸如此类的人

00:31:28.160 --> 00:31:31.850
嗯，如果您使用的是Mac，

00:31:31.850 --> 00:31:36.560
 Mac的测试边缘，所有功能都可以准确地进行设计

00:31:36.560 --> 00:31:41.510
与Windows上的相同，因此从一个朋友的角度来看，并且您知道

00:31:41.510 --> 00:31:46.190
了解功能和类似功能在功能上

00:31:46.190 --> 00:31:50.480
同样，这是很高兴能够说的，是的，我可以在没有Mac的情况下测试Edge

00:31:50.480 --> 00:31:54.740
 Windows何时需要您，这也意味着从浏览器设计

00:31:54.740 --> 00:31:59.360
我们正在做的准则工作，我们可以轻松地查看该URL栏

00:31:59.360 --> 00:32:04.389
代表一些窗口信息的实现

00:32:04.389 --> 00:32:12.350
让我们简单地简化一下，不仅是同伴，还有我们所有的人

00:32:12.350 --> 00:32:21.649
是的，这也是我的最后一个项目，那是闲暇的一周，我可以得到一个

00:32:21.649 --> 00:32:29.509
与Chrome浏览器网络天相关的标志哦，天哪，这是约翰·萨普特·耶普一世的名字

00:32:29.509 --> 00:32:35.860
很快就有点像背I式的，我不确定是哪一天，但是

00:32:35.860 --> 00:32:41.289
我们一直在跟踪签名斜杠捆绑的HTTP交换和湿Web程序包

00:32:41.289 --> 00:32:47.360
开发，如果有人感兴趣的话，网络浏览器中的维权人士就会遇到问题

00:32:47.360 --> 00:32:50.809
在细节上，我有点像更新

00:32:50.809 --> 00:32:57.529
在2018年，我们签署了HTTP交换协议，就像一个HTTP请求一样

00:32:57.529 --> 00:33:05.210
打包签名，然后您可以加载它，看起来它来自某些

00:33:05.210 --> 00:33:14.720
起源，但这是一个谎言，然后本季度捆绑的HTTP交换更名

00:33:14.720 --> 00:33:24.279
作为一个非常不错的名称的网络捆绑包，因此这是一组资源

00:33:24.279 --> 00:33:30.679
捆绑在一起，您可以从具有以下内容的文件中像加载整个网站一样加载：

00:33:30.679 --> 00:33:35.120
例如chrome中的特定扩展名和MIME类型，现在它需要传递

00:33:35.120 --> 00:33:44.720
青蛙有更多详细信息的链接，Kenji的博客文章是

00:33:44.720 --> 00:33:51.830
卡特（Carter），所以如果有人对档案用例最感兴趣或喜欢

00:33:51.830 --> 00:33:57.590
当您想通过beautif或其他人共享类似网站的离线用例时，

00:33:57.590 --> 00:34:06.139
当HTML J和CSS中的游戏结束时，会有一个非常酷的演示

00:34:06.139 --> 00:34:12.290
例如两部手机之间的蓝牙或Wi-Fi Direct或我相信的东西

00:34:12.290 --> 00:34:16.369
像是那些有趣的用例，因为您可以说有一个

00:34:16.369 --> 00:34:19.419
像分发平台一样供PFS使用

00:34:19.419 --> 00:34:22.700
与集中式服务脱钩

00:34:22.700 --> 00:34:28.159
CBN和其他内容，以及更多的思想和讨论以及概念证明

00:34:28.159 --> 00:34:32.690
这个很长的旧问题中的基因，因为我们从那以后就一直在回溯它

00:34:32.690 --> 00:34:39.220
1818年2月19日，现在终于像网络捆绑一样

00:34:39.220 --> 00:34:44.540
感觉已经足够抛光，可以开始思考了

00:34:44.540 --> 00:34:51.500
捆绑网站，以及何时该技术登陆，它将正确登陆

00:34:51.500 --> 00:34:54.710
现在就像原产地审判或在旗后，因为它像

00:34:54.710 --> 00:35:00.590
实验性的，但会在六个月之内或将在

00:35:00.590 --> 00:35:05.150
就像稳定的铬一样，这就是市场的虚无率，所以人们

00:35:05.150 --> 00:35:09.140
将开始使用此功能，很酷的一点是，它也可以在移动设备上使用

00:35:09.140 --> 00:35:17.180
就像手机是故事中非常重要的一部分，所以这是我想要的

00:35:17.180 --> 00:35:25.580
提到发生这种情况，是的，我认为捆绑包是

00:35:25.580 --> 00:35:30.560
至少在铬中的不可避免性是

00:35:30.560 --> 00:35:33.140
有些东西，我不知道我是否认为他们宣布并提出了

00:35:33.140 --> 00:35:38.870
第一天，但​​第二天又出现了几次，有趣的是

00:35:38.870 --> 00:35:44.000
是不是真的像apk那样的打包应用程序，而是您

00:35:44.000 --> 00:35:48.980
说这真的像HTTP事务的记录和重播，我认为

00:35:48.980 --> 00:35:52.490
从开发人员的人机工程学角度来看，他们将面临的挑战是

00:35:52.490 --> 00:35:58.640
看起来很尴尬，这是我认为的挑战之一

00:35:58.640 --> 00:36:04.370
他们到目前为止已经在使用它，以便能够适应

00:36:04.370 --> 00:36:09.610
与该浏览器的最远边缘节点无缝连接

00:36:09.610 --> 00:36:14.080
安全模型的可操作性，例如我们无需更改任何内容

00:36:14.080 --> 00:36:21.140
而且浏览器仍然是请求响应，它只是假的，

00:36:21.140 --> 00:36:26.000
诸如网络捆绑签名之类的捆绑中有争议的聚会内容是

00:36:26.000 --> 00:36:31.390
可选的，围绕签名，有点像打破

00:36:31.390 --> 00:36:38.320
在Lex HDL周围只有两个方面，现在您有了第三面

00:36:38.320 --> 00:36:44.920
分发服务器，就像过去一样，他们确实给了我们这些离线服务

00:36:44.920 --> 00:36:52.780
上面带有网络捆绑软件的asaurus，因为它们当然是您应该的

00:36:52.780 --> 00:36:58.060
信任来自陌生人的USB密钥，该陌生人是最大的监视操作，

00:36:58.060 --> 00:37:07.270
人类曾经知道，并且在国家安全局之外也许仍然在偷X我仍然

00:37:07.270 --> 00:37:11.970
诸如签名之类的激动人心的原因是可选的，因此即使您不满意

00:37:11.970 --> 00:37:19.900
出于欺骗目的而像欺骗TLS一样进行破坏，这是值得思考的

00:37:19.900 --> 00:37:25.090
关于是的，或者说维基百科，您想要

00:37:25.090 --> 00:37:31.870
您想要编辑的所有引文将它们附加到页面上，以便我们对其进行编辑，以便

00:37:31.870 --> 00:37:36.450
他们不会消失那样的东西

00:37:36.810 --> 00:37:38.870
你

00:37:39.450 --> 00:37:43.859
好吧，她搬到了最后一个项目，是的

00:37:43.859 --> 00:37:52.279
我们不告诉实验室星期发生的时间，也不告诉南极洲我很抱歉像每年一样

00:37:52.279 --> 00:37:58.410
会很冷，是的，他们也太可惜了

00:37:58.410 --> 00:38:01.950
像我们所有人一样在两个单独的营地中分开，所以我们什至不去

00:38:01.950 --> 00:38:06.240
亲自见面，我们都在南极洲的不同海岸

00:38:06.240 --> 00:38:13.140
我们都有对讲机，这会很好，很快就会出现，但是没有

00:38:13.140 --> 00:38:22.349
相机只是洛里斯（Loris）的大衣，而我们都在这些冰冻的荒原上分开了

00:38:22.349 --> 00:38:28.740
事件Arctica和一个人扎营，难过的是，我们有没有想要实现的特定目标？

00:38:28.740 --> 00:38:33.960
在那一周完成任何我们想做的特定项目

00:38:33.960 --> 00:38:37.619
在几个不同的时间谈论了这个，我们想出来说一个

00:38:37.619 --> 00:38:42.089
关于测试框架方法的明确决定可能是

00:38:42.089 --> 00:38:50.299
很好，因为我们将在同一个普通人中拥有更轻松的人和其他人

00:38:50.299 --> 00:38:58.440
好吧，我要说的是，地球的一半是同一半球，哦，我

00:38:58.440 --> 00:39:10.380
看到II有两个建议，一个是让GUI团队获得GUI浏览器

00:39:10.380 --> 00:39:18.210
edgier团队也喜欢狗，它们负责类似的网站并制作

00:39:18.210 --> 00:39:26.490
它也是原型学校，因为它也是一个网站，看看我们如何

00:39:26.490 --> 00:39:32.779
对那些网站进行端到端测试，我想会有一些操纵up的人

00:39:32.779 --> 00:39:39.089
有点麻烦，但收集更多用例可能不大有用

00:39:39.089 --> 00:39:46.970
比起我为什么，因为你是超级特定的，

00:39:47.269 --> 00:39:51.229
鼓励人们为这项工作做出贡献

00:39:51.229 --> 00:39:58.219
另一件事可能是与测试无关，我知道，但这是对的

00:39:58.219 --> 00:40:04.069
在您继续之前，然后与测试如此相关，我想我会更多

00:40:04.069 --> 00:40:08.390
担心那时候我们开始煮海了，因为厨师太多了

00:40:08.390 --> 00:40:14.419
一起煮沸海洋只是为了使它边缘化，是的，或者喜欢这样的事实：

00:40:14.419 --> 00:40:19.579
因为webui有特殊需要，所以它不是常规网站，所以我猜II

00:40:19.579 --> 00:40:23.329
只想扔在那里，试图将它们捆绑在一起

00:40:23.329 --> 00:40:30.019
因为如果我们碰壁，它们是非常不同的，我们要非常注意

00:40:30.019 --> 00:40:34.039
并确保我们的主要目标是确保了解

00:40:34.039 --> 00:40:39.289
j / s，我认为更改会破坏Web用户界面，反之亦然，同伴和反之亦然

00:40:39.289 --> 00:40:44.359
反之亦然，这是我们的主要目标，也许会有p操纵者的副作用，

00:40:44.359 --> 00:40:47.769
更轻松，有助于为开发网站的人进行常规网站测试

00:40:47.769 --> 00:40:52.339
常规的HTTP网站（如果您知道，但它们似乎足够不同的话）

00:40:52.339 --> 00:41:01.329
想要确保一个不会像第二件事那样阻止另一个

00:41:01.329 --> 00:41:10.279
有点像捡起由M乔布斯（M job）制作的固定QX的研究

00:41:10.279 --> 00:41:17.269
它的项目移至社区，但总体上她有很多资料

00:41:17.269 --> 00:41:24.439
与我赫克托（Hector）和其他人合作创建的

00:41:24.439 --> 00:41:31.969
很好地通过了我们的所有GUI应用程序的钉扎状态

00:41:31.969 --> 00:41:37.669
不仅像ipfs这样的项目，而且像钉扎一样的集群cuz项目

00:41:37.669 --> 00:41:41.569
在集群中具有特定的语言和含义，并且与众不同

00:41:41.569 --> 00:41:48.049
在香草EFS中的含义，然后我们得到了粘糊糊，点总是

00:41:48.049 --> 00:41:56.919
跟随较低的低水平所做的事情，这可能会更有趣

00:41:56.919 --> 00:42:01.660
齐心协力制定一个计划

00:42:01.660 --> 00:42:07.860
如何消除那些像沉重的东西的差异

00:42:07.860 --> 00:42:12.480
有时因为这些确实是该项目新手的沉重阻碍

00:42:12.480 --> 00:42:18.130
当人们从公用行向ipfs添加内容时，他们看不到它们

00:42:18.130 --> 00:42:26.230
webui或他们使用奇数和文件从公共行添加相同的文件

00:42:26.230 --> 00:42:32.680
他们获得了不同的C ID，这些ID也与文件建议有关

00:42:32.680 --> 00:42:40.630
v2，但前提是该提案附带了一些非常好的

00:42:40.630 --> 00:42:48.010
命名约定和我们甚至可以重用的新语言

00:42:48.010 --> 00:42:53.770
采用该标准，但可以说将UI从如将钉住移除为

00:42:53.770 --> 00:42:59.710
眼中的单词，就像您没有上传到ipfs一样，只是导入

00:42:59.710 --> 00:43:04.780
东西到你的节点，这很重要，切分原因上传建议

00:43:04.780 --> 00:43:09.640
就像将其推到某个第三方服务器上一样，导入它不是正确的

00:43:09.640 --> 00:43:13.600
到您的本地节点，除非有人向您请求该数据，否则只有

00:43:13.600 --> 00:43:18.490
你的本地节点之类的东西不确定我是否很连贯

00:43:18.490 --> 00:43:24.910
传达我的意思，但通常从此固定中提取下一步

00:43:24.910 --> 00:43:32.320
研究，我觉得这些步骤非常简单，但我们需要

00:43:32.320 --> 00:43:40.330
跨两个命令行协调ipfs JS ipfs作为GUI和在Web中

00:43:40.330 --> 00:43:47.800
浏览器只是简单地更改语言或更新狗之类的东西

00:43:47.800 --> 00:43:53.170
柯琳（Colleen）为可爱的他的同伴贡献了一个TR，而不是像

00:43:53.170 --> 00:44:00.280
添加和固定到ipfs就像将文件导入到MF的查看器并显示一样

00:44:00.280 --> 00:44:04.020
它在网络用户界面中，这消除了很多认知上的开销

00:44:04.020 --> 00:44:09.660
所以一般来说，这可能更像是露营地的讨论，而不是实际的讨论。

00:44:09.660 --> 00:44:16.190
设计会议，但有助于使它具有

00:44:16.190 --> 00:44:22.609
讨论中的问题就像不舒服的设置，也许孩子肯尼二世同意我会

00:44:22.609 --> 00:44:25.640
渴望能够拥有足够的人，并且我们可能会拥有足够多的人

00:44:25.640 --> 00:44:29.539
在彼此相距遥远的不同地方建立兴趣，以建立一个伟大的

00:44:29.539 --> 00:44:34.430
关于该会话的对话，如果存在，您可以链接到任何这些资产吗？

00:44:34.430 --> 00:44:40.220
像公众一样工作哦，是的，我们能在记事本中加入这些内容，真是太好了，

00:44:40.220 --> 00:44:46.630
人们可以参考它，似乎是我们可能想分享的东西

00:44:49.809 --> 00:44:54.710
以下是有关直接从Web UI添加文件的Colin水果问题

00:44:54.710 --> 00:45:01.900
对于NFS，您知道您以为设计已有很长的历史了

00:45:01.900 --> 00:45:07.099
这是我们公开功能的各个地方，

00:45:07.099 --> 00:45:15.019
使用了多年的语言，值得进行多年的设计思考，这对

00:45:15.019 --> 00:45:22.730
能够得出一些结论，是的，这主要是因为

00:45:22.730 --> 00:45:30.230
更重要的事情和时间过去了，现在这实际上是我们面临的一个问题

00:45:30.230 --> 00:45:35.450
围绕某些基本概念（例如保持

00:45:35.450 --> 00:45:41.240
我们周围的东西都有固定的隐式固定

00:45:41.240 --> 00:45:52.839
艾玛（Emma）首先找到了其他资源，我将其放入笔记中，其中有一个

00:45:52.839 --> 00:45:58.809
整个问题都由兆赫兹完成，但我相信就像最后一条评论一样

00:45:58.809 --> 00:46:08.630
有点像摘要链接到摘要文档的链接，其中包含所有内容的PDF

00:46:08.630 --> 00:46:14.329
她所做的工作，所以我相信，也许，如果有的话，我也将直接链接PDF

00:46:14.329 --> 00:46:23.830
有人不耐烦，是的，所以我们只说了这两件事

00:46:23.830 --> 00:46:30.900
为爱而伟大，我们将确保其他事情能够具体联系

00:46:30.900 --> 00:46:38.050
亲自测试歌剧会很有趣，尤其是在本地网络中

00:46:38.050 --> 00:46:45.250
也许对本地网关在一起应该很有趣，但我补充说

00:46:45.250 --> 00:46:48.280
我知道我们还快用完了两件事

00:46:48.280 --> 00:46:54.220
将会是很短的一个，我总是应该关闭

00:46:54.220 --> 00:46:58.390
感谢您为时间盒添加感谢，也是我的PFS策略问题

00:46:58.390 --> 00:47:03.370
应该看看并关闭它并添加PR，这样我就可以进入列表

00:47:03.370 --> 00:47:08.920
看一看，然后我们有什么要重点添加要发布的内容吗？

00:47:08.920 --> 00:47:17.350
下周我们想与团队分享的任何东西都有一个同伴

00:47:17.350 --> 00:47:26.080
发布添加到优秀，并会是的，可能会有

00:47:26.080 --> 00:47:33.640
周五的明天很稳定哦，我不会把它降到本周或

00:47:33.640 --> 00:47:43.360
下周的夜晚和一周，您是否知道我们是否可以使用该版本发布新的Web UI

00:47:43.360 --> 00:47:50.710
修复多人发布它推公关公司哦，太棒了

00:47:50.710 --> 00:47:57.640
是的，所以我可能会的，我会让另一个更好，然后再推动

00:47:57.640 --> 00:48:02.290
稳定的频道，因为背景是我无法切换到

00:48:02.290 --> 00:48:10.390
新的Web UI导致​​Pierce页面未显示具有WebSocket star multi的对等体

00:48:10.390 --> 00:48:19.330
其他原因是因为实际上没有人必须向这些对等方加载Web UI，因为

00:48:19.330 --> 00:48:24.550
永远不会因为您无法使用嵌入式J的ipfs加载Web UI

00:48:24.550 --> 00:48:31.920
网络浏览器，直到我们勇敢地做到这一点，这才是非常有趣的

00:48:33.570 --> 00:48:38.790
是的，这些错误是固定的，我可能会发布新的同伴

00:48:38.790 --> 00:48:51.260
bref用户将拥有的新版本，我想就是这样

00:48:51.260 --> 00:49:00.600
军事上的7哦，好吧，我还有2分钟的时间来快速更新

00:49:00.600 --> 00:49:10.560
维基百科项目噢，天哪，我来吧，也许下周是

00:49:10.560 --> 00:49:18.810
更好的主意，下周将不会有任何关注

00:49:18.810 --> 00:49:24.240
嘿，一周又一周，又一周又一周，因为下周

00:49:24.240 --> 00:49:28.110
下个礼拜不算是这周的其中一个，因为我们当中有几个人会缺席

00:49:28.110 --> 00:49:35.940
上周办公室的办公室里有一个恋爱周，然后我和我一起走了

00:49:35.940 --> 00:49:43.320
维基百科的预告片是，我们将切换快照

00:49:43.320 --> 00:49:51.090
从我们的基于rust的自定义代码生成到

00:49:51.090 --> 00:49:59.810
项目敬请期待12月见

