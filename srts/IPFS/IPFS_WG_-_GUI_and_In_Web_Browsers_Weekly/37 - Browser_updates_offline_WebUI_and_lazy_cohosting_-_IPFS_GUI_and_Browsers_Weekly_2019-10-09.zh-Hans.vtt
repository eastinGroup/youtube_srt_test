WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.490 --> 00:00:12.030
欢迎使用GUI，并在Web浏览器中单击所有四个按钮2019年10月9日

00:00:12.030 --> 00:00:20.460
我将主持此电话，如果有人在电话中，我们将有一个议程

00:00:20.460 --> 00:00:27.119
得到了旅行，我们得到了Henrique，如果有人想在下周免费参加三场比赛，

00:00:27.119 --> 00:00:32.130
加入我们回来了，所以我们有一个议程，我会

00:00:32.130 --> 00:00:43.770
共享议程列表中的第一项是预缓存资产，使Web UI

00:00:43.770 --> 00:00:53.390
在离线模式下工作，以便成为我的一个，因此我将对此进行快速更新

00:00:53.390 --> 00:01:03.300
所以这个想法是当用户安装时-ipfs伴侣他们想做的第一件事

00:01:03.300 --> 00:01:08.430
尤其是在下一发行版中，所有设置都将有一个按钮

00:01:08.430 --> 00:01:15.090
将会有一个打开Web UI的按钮，所以这是新用户的第一件事

00:01:15.090 --> 00:01:21.750
在打开Web UI时出现的问题是，如果是第一次使用Web的用户

00:01:21.750 --> 00:01:27.720
正在打开Web UI Web UI不在本地存储库中，已获取Web UI

00:01:27.720 --> 00:01:33.090
从ipfs中下载，需要从网络本身加载，这非常好

00:01:33.090 --> 00:01:37.650
像狗食和其他东西，但是对于用户体验而言却不是那么好

00:01:37.650 --> 00:01:44.720
也不适合离线使用案例，例如，如果有人去

00:01:44.720 --> 00:01:51.450
到咖啡馆或-如果是网吧或有Wi-Fi的朋友，他们

00:01:51.450 --> 00:01:58.229
安装ipfs同伴并像Kieffer的桌面一样，他们关闭了

00:01:58.229 --> 00:02:03.060
笔记本电脑掉下来，然后再去没有网络的地方，他们想

00:02:03.060 --> 00:02:09.629
玩ipfs时，他们尝试打开W​​eb UI，但没有任何反应，因为该注释是

00:02:09.629 --> 00:02:15.400
找不到这些块，因此它也没有连接到网络，并且

00:02:15.400 --> 00:02:20.770
它无法打开Web UI，因此对于脱机使用案例和

00:02:20.770 --> 00:02:30.730
我想减轻这种情况的方法是基本上以某种方式预缓存Web UI

00:02:30.730 --> 00:02:39.670
这是ipfs的固有功能，因此其想法是基本上将存档与网络捆绑在一起

00:02:39.670 --> 00:02:46.800
带有浏览器扩展本身的UI资产，然后在首次使用时

00:02:46.800 --> 00:02:55.030
用户正在启动，我自称为同伴，我们检查本地是否存在Web UI

00:02:55.030 --> 00:03:02.050
如果本地存储库中不存在该存储库，我们将检查塔归档文件是否存在

00:03:02.050 --> 00:03:08.800
存在于捆绑包中，因为不是我们可能不想将其捆绑在每个捆绑包中

00:03:08.800 --> 00:03:14.470
平台，我们需要弄清楚是否可以将其捆绑到Firefox和其他

00:03:14.470 --> 00:03:23.530
东西，但是如果Web UI不在本地存储库中，我们将其作为文件本地存储

00:03:23.530 --> 00:03:31.239
我们只是将文件导入到第一条船上的本地注释中，这很漂亮

00:03:31.239 --> 00:03:38.680
就像未压缩的Web UI一样快，大约22兆字节，但是已压缩

00:03:38.680 --> 00:03:46.450
随播广告本身是11兆字节，因此如果有，随播广告本身就是4兆字节

00:03:46.450 --> 00:03:56.019
我们添加了11压缩的Web UI，这很酷，很酷的事情

00:03:56.019 --> 00:04:01.959
是我们包含在捆绑包中的是在我们的存档中，该存档是

00:04:01.959 --> 00:04:07.269
不压缩自身和同伴，以及我是否共享很多资产

00:04:07.269 --> 00:04:16.060
例如电话，还有一些图片和其他资产，这些是

00:04:16.060 --> 00:04:20.530
基本上是重复的，这就是为什么我们得到了很好的压缩效果，我觉得

00:04:20.530 --> 00:04:27.040
像是11兆字节的铬扩展区，还不错，不是那么好

00:04:27.040 --> 00:04:34.090
要么，但您会获得这种离线的首次体验，因此已实施，我们

00:04:34.090 --> 00:04:39.400
将来会在某个时候着陆，因为它不是

00:04:39.400 --> 00:04:46.060
特定于DUI的方式，我们可以做到，甚至可以将其提取出来

00:04:46.060 --> 00:04:50.650
并创建一个库以在其他应用程序中执行此操作

00:04:50.650 --> 00:04:59.650
我知道在ifs桌面上，我们有点将Web UI本地发送，因为

00:04:59.650 --> 00:05:03.600
有不同的限制，但对于浏览器扩展和其他

00:05:03.600 --> 00:05:08.140
想要发送一些需要可用数据的应用程序

00:05:08.140 --> 00:05:14.320
立即从网络上获取它，这可能是有用的，并且在ipfs中

00:05:14.320 --> 00:05:22.390
随播广告，这意味着当您打开网络用户界面时，它将立即可用，因此

00:05:22.390 --> 00:05:29.620
现在第一次加载不需要很长时间，甚至可能需要几秒钟的时间

00:05:29.620 --> 00:05:34.540
一分钟，如果您的网络速度很慢，并且您不走运，那

00:05:34.540 --> 00:05:42.760
预缓存资产，下一项是试验协作网站

00:05:42.760 --> 00:05:53.440
托管我可能会在更新Web浏览器中的所有ipf之后将其移动，因此

00:05:53.440 --> 00:06:04.620
你想确保这一招吗，非常感谢

00:06:04.620 --> 00:06:13.840
Lytle帮助处理ipfs和Web浏览器博客文章，我将分享

00:06:13.840 --> 00:06:23.080
暂时我确实有很多浏览器窗口，所以如果这是

00:06:23.080 --> 00:06:31.090
对吧，嘿，这个供认的顾问更新了，所以我们把一个

00:06:31.090 --> 00:06:36.760
关于我们与浏览器集成的去向以及所需去向的摘要

00:06:36.760 --> 00:06:40.810
进入，但更像是暗示，我们可以进行大部分的交谈

00:06:40.810 --> 00:06:48.100
我们今天在哪里与勇敢和每个人都曾经从事的工作相融合

00:06:48.100 --> 00:06:54.010
现在进行Lydell驾驶，将近一年过去了

00:06:54.010 --> 00:06:59.140
所以真的是很多工作和很多帮助的结果

00:06:59.140 --> 00:07:04.570
Gravesend也很高兴拥有一个如此愿意使用的浏览器

00:07:04.570 --> 00:07:09.070
我们，进行实验并展示其能力并弄清楚是什么

00:07:09.070 --> 00:07:12.520
确实需要碰巧能够完全在内部建立分布式网络

00:07:12.520 --> 00:07:16.900
浏览器，然后是我们工作的首次公开公告

00:07:16.900 --> 00:07:23.140
完整的歌剧和歌剧计划在运输ipfs支持上

00:07:23.140 --> 00:07:29.950
在今年年底之前解决Opera for Android规范中的问题

00:07:29.950 --> 00:07:35.919
应该会很有趣，今天早上我和奥利（Ollie）进行了交谈

00:07:35.919 --> 00:07:42.850
关于启动引导服务器并为此做好准备的一点点

00:07:42.850 --> 00:07:46.810
如果我们从这两种情况中都看到了流量的增加，

00:07:46.810 --> 00:07:52.110
并更好地了解他们

00:07:52.110 --> 00:07:57.100
诸如我们希望最终到达的阶段，但那里还有一些

00:07:57.100 --> 00:08:02.350
背景历史记录以及为何难以更改浏览器的原因

00:08:02.350 --> 00:08:06.060
能够从

00:08:06.060 --> 00:08:09.990
人们在各种IP Festivus上谈论这种事情

00:08:09.990 --> 00:08:16.139
所有这些都可以追溯到去年夏天，那时我们有了偶像和凯尔

00:08:16.139 --> 00:08:20.310
绝对像我认为实际上只是在那之上可能承认一个

00:08:20.310 --> 00:08:26.970
在林迪·韦伯（Lindy Webb）最全面宣布后的一个月左右

00:08:26.970 --> 00:08:30.720
回顾历史，并暗示我们要去的地方，其中之一

00:08:30.720 --> 00:08:33.029
我们在这篇文章中没有真正谈论的事情，然后我觉得我会

00:08:33.029 --> 00:08:37.320
我热爱能够在进入2020年计划后谈论更多内容

00:08:37.320 --> 00:08:42.419
就像共同主持真的很重要共同主持确实可以说是一种

00:08:42.419 --> 00:08:45.779
我们在讨论IP fess为何很好以及为什么时讨论的核心用例

00:08:45.779 --> 00:08:49.320
为什么我们首先要这样做，这是我们的第一次

00:08:49.320 --> 00:08:53.490
首先要认真弄清楚那些用户流是什么，因为我是

00:08:53.490 --> 00:08:56.190
普通人，我希望能够分享，我想看看是否

00:08:56.190 --> 00:09:00.029
我也想分享的东西这意味着我该怎么做，所以我

00:09:00.029 --> 00:09:02.760
真的，我觉得通过浏览器集成，我们正在将事情推向

00:09:02.760 --> 00:09:06.209
普通人可以开始访问分布式网络的地方

00:09:06.209 --> 00:09:11.040
不必安装额外的东西，但下一步甚至

00:09:11.040 --> 00:09:13.920
更重要的是，这真的可以解决扭结和那些类型的

00:09:13.920 --> 00:09:18.029
如果我查看Wikipedia，如何确定我的邻居也可以

00:09:18.029 --> 00:09:22.920
维基百科，如果我们所有的互联网都正确无误，那么那些我

00:09:22.920 --> 00:09:27.930
想一想关于下一个观点的讨论

00:09:27.930 --> 00:09:31.350
我们拥有网络功能，下一步将如何进行平滑处理

00:09:31.350 --> 00:09:35.459
那些真正常见的用例碰到了如何共享如何发布如何

00:09:35.459 --> 00:09:41.670
阅读我所保存的内容以及我所拥有的东西的许多复杂之处

00:09:41.670 --> 00:09:46.020
多个存储库，多个设备以及Web浏览器扩展和Web内容，以及

00:09:46.020 --> 00:09:51.660
关于您的手机知道，就像我认为的其他本地Pest节点一样

00:09:51.660 --> 00:09:55.440
有很多工作可以解决，但这是一个很大的进步

00:09:55.440 --> 00:10:04.200
到目前为止，在Twitter上的反应还不错，我得到了

00:10:04.200 --> 00:10:10.020
由ipfs bot转推，所以这意味着它是官方的，让我合法，我

00:10:10.020 --> 00:10:13.320
真的得到了很多积极的反馈，人们对此非常兴奋，

00:10:13.320 --> 00:10:16.529
有趣的是，一堆关于Mdns的项目，就像我认为的那样

00:10:16.529 --> 00:10:18.959
如果您在太空中工作很长时间，那会是它吗

00:10:18.959 --> 00:10:21.839
足以让您了解本地连接就像

00:10:21.839 --> 00:10:26.040
就像圣杯，两个设备的基石能够

00:10:26.040 --> 00:10:30.149
彼此交谈并发现彼此并能够互动

00:10:30.149 --> 00:10:33.600
是IP节或其他任何分布式网络，尤其是在

00:10:33.600 --> 00:10:37.980
离线场景，使喜欢的人很兴奋，能够看到

00:10:37.980 --> 00:10:42.139
我们正在研究它，我想一​​旦我们有了一些非常好的演示，

00:10:42.139 --> 00:10:47.550
 API之类的开发场景，浏览器之间的距离很近

00:10:47.550 --> 00:10:51.180
沟通，我认为我们将对看到的东西产生更多的兴趣

00:10:51.180 --> 00:10:53.819
现在，所以我们现在看到的兴趣是人们拥有

00:10:53.819 --> 00:10:58.170
效率更高，但是一旦您创建本地网络加压浏览器

00:10:58.170 --> 00:11:03.720
在简单的发布中我们的开发工作要容易一些

00:11:03.720 --> 00:11:06.959
我真的没有很多能力

00:11:06.959 --> 00:11:13.079
人们，这几乎是一件又厚又重的事情，可以帮助他们

00:11:13.079 --> 00:11:19.050
就像你是历史的字体一样，你拥有所有这些伟大的链接

00:11:19.050 --> 00:11:24.360
这些视频和资源以及所有问题，是的，谢谢您的创作

00:11:24.360 --> 00:11:29.819
这个总结是一个很好的概述，我真的很喜欢

00:11:29.819 --> 00:11:38.069
以平衡的方式填充它，例如总体路线图以及我们所处的位置

00:11:38.069 --> 00:11:44.189
今天，无需太深入了解非常有用的技术细节

00:11:44.189 --> 00:11:49.410
因为否则如果技术水平太高，人们就会关门大吉，

00:11:49.410 --> 00:11:54.029
我很高兴与II谢谢

00:11:54.029 --> 00:11:57.899
我们会到达那里哦，我还有更多，我实际上有一些饮食，例如

00:11:57.899 --> 00:12:01.019
我对这种模型所做的可视化展示了不同的排列方式

00:12:01.019 --> 00:12:04.350
内在勇气的配置是我没有实际张贴

00:12:04.350 --> 00:12:08.639
直到它忘记了我们可以为将来保存的东西为止，这是一项详细的技术

00:12:08.639 --> 00:12:14.069
发表关于您在勇敢和疯狂疯狂的高潮中所做的事情，就像没有

00:12:14.069 --> 00:12:25.949
我们在下一个下一个Web扩展中编写一个Web服务器

00:12:25.949 --> 00:12:32.190
是q400 quieres是的，所以我是那种，但那个博客

00:12:32.190 --> 00:12:37.020
帖子实际上是我们想要做的很多事情，例如，p0代表

00:12:37.020 --> 00:12:44.730
无论如何，歌剧的4q网页浏览器组将发布，我们将

00:12:44.730 --> 00:12:47.220
尽我们所能提供帮助，我们将能够传达这些信息

00:12:47.220 --> 00:12:53.310
我们谈到的勇敢的事物，例如浏览器周刊上勇敢的1v1的样子

00:12:53.310 --> 00:12:59.010
上周下周，当我们或我们更喜欢上一个时，我将讨论下一个

00:12:59.010 --> 00:13:04.170
在马耳他，但嗯，我们实际上确实缩小了一组案件的范围，

00:13:04.170 --> 00:13:07.740
领英我，这就是我们注意到v1的外观

00:13:07.740 --> 00:13:11.820
我认为，但最终还是喜欢这样一个事实，即它以可用的方式可用

00:13:11.820 --> 00:13:15.120
特别是现在插座在释放速率中列为白色，我

00:13:15.120 --> 00:13:20.130
没意识到这太棒了，我站在坚实的基础上

00:13:20.130 --> 00:13:23.250
能够拥有勇敢的人不是很好，我认为勇敢是不存在的

00:13:23.250 --> 00:13:29.400
而且人们今天可以使用，我真的很喜欢这种方式

00:13:29.400 --> 00:13:35.070
通过人们可以看到的网关发布实验性嵌入式便笺

00:13:35.070 --> 00:13:42.000
时间如何改善性能和其他方面，以及v1的情况（如果我曾经

00:13:42.000 --> 00:13:48.570
最终用户对我来说v1是当我们像ipfs冒号斜杠斜杠

00:13:48.570 --> 00:13:55.620
指示条，这可能微不足道，但就像这颗樱桃

00:13:55.620 --> 00:14:04.410
当您喜欢说顶部时，哦，它可能做对了，但直到我们得到为止

00:14:04.410 --> 00:14:12.750
协议处理程序API或类似地址栏的这种更好的ux，我们将在

00:14:12.750 --> 00:14:19.440
我很高兴的方法说明的性能是什么

00:14:19.440 --> 00:14:24.630
我们可以做些什么来帮助开发协议

00:14:24.630 --> 00:14:28.230
处理程序新的协议处理程序，勇敢的是正在发生的事情

00:14:28.230 --> 00:14:32.460
处于勇敢的水平还是需要在那里进行潜在的铬变化，并且

00:14:32.460 --> 00:14:39.000
对于我们可能进行更直接的浏览器开发的论点是，

00:14:39.000 --> 00:14:42.750
将需要与将要

00:14:42.750 --> 00:14:49.620
但是有两种方法，一种是视觉效果，另一种是视觉效果

00:14:49.620 --> 00:14:57.000
可视方面，因此基本上可以通过HTTP连接到HTTP网关上的

00:14:57.000 --> 00:15:01.470
后端，但是在用户界面上只需更改您的地址栏，

00:15:01.470 --> 00:15:04.830
像一个较小的补丁那样无法轻易完成的事情

00:15:04.830 --> 00:15:10.680
但是就像引入与本机协议处理程序同等的东西

00:15:10.680 --> 00:15:15.900
浏览器扩展，当您实际上没有类似的HTTP连接时，您只需注入

00:15:15.900 --> 00:15:23.430
来自JavaScript的字节，更接近铬，而且我们

00:15:23.430 --> 00:15:27.660
希望它更接近铬，而不是那样

00:15:27.660 --> 00:15:34.200
在其他地方重复使用，并且在类似之间具有相同的Web扩展API

00:15:34.200 --> 00:15:41.180
 Firefox和Chrome应该是梦想，对，就像在Oprah上一样

00:15:41.180 --> 00:15:52.380
就像是segue，我正在努力解决一些相关的错误

00:15:52.380 --> 00:16:00.050
使用嵌入式工具从Web UI勇敢地添加文件

00:16:00.050 --> 00:16:07.110
Jacek TFS对不起，这有点技术性，但长话短说，就是我们有一个

00:16:07.110 --> 00:16:13.920
我发现的错误，但我们没有进行测试，因此非常幸运的是，

00:16:13.920 --> 00:16:22.650
与您进行测试是我们的关键之一，因此下一次segue谢谢

00:16:22.650 --> 00:16:28.170
你们非常等待，所以我们有两英亩土地确实与

00:16:28.170 --> 00:16:33.590
这组是q4，第一个是歌剧勇敢者，第二个是

00:16:33.590 --> 00:16:37.440
改善意图测试方案，我们在最后讨论了一些

00:16:37.440 --> 00:16:41.730
季度，我知道您是从那里开始一些测试工作的

00:16:41.730 --> 00:16:47.100
然后Lydell退出了这个Web UI测试矩阵，这是我要做的事情之一

00:16:47.100 --> 00:16:50.730
实际上认为优先级可能像浏览器一样在这里翻转

00:16:50.730 --> 00:16:56.190
东西是q4的p0，测试是pp1，我认为

00:16:56.190 --> 00:17:01.889
但我实际上认为测试应该是我们的p0事实，

00:17:01.889 --> 00:17:05.490
 go有一段时间会以某种方式发布javascript已经准备好了

00:17:05.490 --> 00:17:09.539
常规版本，但这些核心实现都没有终结

00:17:09.539 --> 00:17:15.150
全面设置并运行最终测试使我们变得更加重要

00:17:15.150 --> 00:17:21.000
有我们自己的测试系统，所以在您看来，这些核心

00:17:21.000 --> 00:17:24.079
实现正在发生重大变化，我们需要能够立即知道

00:17:24.079 --> 00:17:29.730
当Web UI伴侣或台式机由于发生更改而全部中断时

00:17:29.730 --> 00:17:33.570
从集成的核心实现或某些模块依赖性开始

00:17:33.570 --> 00:17:40.049
我们所依赖的模块的无限树，这就是为什么我认为像我这样

00:17:40.049 --> 00:17:44.490
从一个而不是你知道，我们不想带你知道向前迈出的一步，

00:17:44.490 --> 00:17:49.980
退回两步即可设置此测试套件，即使您的最小需求

00:17:49.980 --> 00:17:56.010
知道矩阵，您在这里放置的Lytle实际上可能是最重要的

00:17:56.010 --> 00:18:00.150
我们需要在本季度完成的事情，所以我很想知道

00:18:00.150 --> 00:18:05.309
我该怎么办才能为您提供所需的帮助

00:18:05.309 --> 00:18:09.090
从基础架构的角度来看，它只需要完成多少工作

00:18:09.090 --> 00:18:13.590
放在一起放在CI中，我们想拥有我们需要的东西

00:18:13.590 --> 00:18:18.330
我们需要一些日常操作来执行这些操作的每个提交操作

00:18:18.330 --> 00:18:22.080
测试其中有多少被阻止，并说基础架构和测试

00:18:22.080 --> 00:18:27.809
像他所做的那样的性能改进这是一个很好的过程，这是一个很好的过程

00:18:27.809 --> 00:18:31.340
小桌子，但我觉得里面堆满了很多东西

00:18:31.340 --> 00:18:39.659
是的，所以总体来说就像我说的那样，我认为这有不同的维度

00:18:39.659 --> 00:18:47.580
我认为我们有点同意的出发点是Web UI应该是一个家

00:18:47.580 --> 00:18:53.280
就像网络用户界面存储库应该是这些测试的源头，因此基本上您是否

00:18:53.280 --> 00:19:00.360
我会针对铬铬Firefox和电子进行自我测试，然后进行测试

00:19:00.360 --> 00:19:09.110
本身反对像通过HTTP api进行ipfs JS像通过HTTP api进行ipfs，然后像

00:19:09.110 --> 00:19:15.020
像勇敢的嵌入式JS ipfs这样的东西，我可以在上面添加

00:19:15.020 --> 00:19:20.900
但是我们需要像较低级别的基础设施这样的功能来进行这些测试

00:19:20.900 --> 00:19:29.030
矩阵，如果我们有此测试矩阵，则应在ipfs Web UI中设置此测试

00:19:29.030 --> 00:19:35.090
这就是为什么很重要很重要的原因，例如最近J的ipfs

00:19:35.090 --> 00:19:42.650
拥有早期采用者计划及其工作方式，从而可以实施其他项目

00:19:42.650 --> 00:19:51.980
也许我或者它被命名为其他早期测试者Iridessa

00:19:51.980 --> 00:20:01.160
哦，是的，我看到有些人提交了PRS以能够添加，所以如果有人

00:20:01.160 --> 00:20:06.440
有兴趣加入Guiseppe中的三点文档

00:20:06.440 --> 00:20:16.340
程序，基本上的想法是你可以加入，你可以加入，而你的

00:20:16.340 --> 00:20:25.030
作为CI的一部分，该项目将针对J的ipfs的新版本进行测试

00:20:25.030 --> 00:20:31.850
基础架构，这就是为什么如果我们有一个具有

00:20:31.850 --> 00:20:38.530
为此，我们需要进行自包含的测试，然后我们可以提交给该程序，

00:20:38.530 --> 00:20:45.470
不仅像Web UI一样进行自我测试，还可以判断Jarius ipfs是否可以

00:20:45.470 --> 00:20:53.090
更改它将针对新版本的跟踪ipfs运行Web UI测试，并且

00:20:53.090 --> 00:20:55.640
就像煤矿里的金丝雀

00:20:55.640 --> 00:21:01.280
总之，如果出了问题并且类似，我相信相同的过程

00:21:01.280 --> 00:21:07.370
然后可以用于go ipfs cuz，这是一个非常漂亮的解决方案

00:21:07.370 --> 00:21:12.200
当您选择了自己的项目进行测试时，您便有了其他

00:21:12.200 --> 00:21:17.980
通过修改自己的版本来对该项目进行测试

00:21:17.980 --> 00:21:23.779
所以这就是我的想法

00:21:23.779 --> 00:21:31.009
测试，我很乐意帮助您进行设置，例如

00:21:31.009 --> 00:21:37.129
铬Firefox，我需要它作为含水层的同伴，例如电子和

00:21:37.129 --> 00:21:43.730
Ricans认为，对于含水层台式机来说，它将如此，但像整个框架一样，这是常见的

00:21:43.730 --> 00:21:50.539
适用于所有情况，因此，一旦完成此错误，我就在研究四个

00:21:50.539 --> 00:22:02.649
勇敢的人可能会跳入这个过程，并对此和测试的想法有所帮助

00:22:02.649 --> 00:22:10.759
因为我很远，我非常喜欢激光，只专注于进行最低限度的测试

00:22:10.759 --> 00:22:17.749
就像添加文件，我想像一个目录，然后我们可以像是

00:22:17.749 --> 00:22:21.980
认为这是正确的方法，我们可以覆盖所有环境，

00:22:21.980 --> 00:22:27.440
 CIA运行时，我要以正确的节奏为CIS出门，然后在那之后

00:22:27.440 --> 00:22:31.549
我们可以增加更多的覆盖范围，例如使框架得以启动和运行

00:22:31.549 --> 00:22:43.009
我认为最大的一件事很酷，我想我正在测试，还是我们转向了

00:22:43.009 --> 00:22:47.570
您有什么大事？您最大的担心是什么？

00:22:47.570 --> 00:22:50.720
这将是最困难的部分，因为您已经设置了一堆

00:22:50.720 --> 00:22:56.749
进行桌面测试和其他工作之前，我想做更多

00:22:56.749 --> 00:23:01.970
仪器测试，但是我不能，因为测试菜单基本上就是我要的

00:23:01.970 --> 00:23:09.769
获得SOP，所以我认为主要问题可能是上传文件

00:23:09.769 --> 00:23:14.840
我不确定在模拟我们的双胞胎测试中是否真的很容易

00:23:14.840 --> 00:23:20.059
通过跟踪拖放甚至点击来上传内容

00:23:20.059 --> 00:23:26.960
单击按键比较容易，但是我想我

00:23:26.960 --> 00:23:32.809
搜索一下，这并不是一件容易的事，但是我

00:23:32.809 --> 00:23:40.250
可以看看这是不是真的，即使您只是

00:23:40.250 --> 00:23:46.399
像II会说的那样正确地模拟它，花费更少的时间来尝试获取UI

00:23:46.399 --> 00:23:51.380
一点点完成，然后完成整个流程，即使您实际上就像

00:23:51.380 --> 00:23:55.580
将一半的JavaScript注入到Web UI页面中，嘿，我处于测试模式

00:23:55.580 --> 00:24:00.860
上传这个文件，让我们制作文件，然后我们可以找出事件

00:24:00.860 --> 00:24:07.010
模拟和类似的东西，就像历史上的其他上下文一样

00:24:07.010 --> 00:24:13.330
我记得当收藏中的东西破裂时，通常不是

00:24:13.330 --> 00:24:18.250
与用户界面交互有关，主要是类似哦的东西

00:24:18.250 --> 00:24:25.039
URL对象与libera浏览器有所不同，或者fetch事件不是

00:24:25.039 --> 00:24:30.500
确实与节点中的相同，也与网络浏览器中的所有复杂性一样

00:24:30.500 --> 00:24:36.320
是特定于代码的，而不是特定于UI的，所以这可能也是一个很好的观点

00:24:36.320 --> 00:24:44.480
如果我们在目录上测试在elecrum上的Web UI，就会发生一些事情

00:24:44.480 --> 00:24:47.840
不会在一行上工作，仅当我们键入桌面时，它才能工作，因为我们有一个

00:24:47.840 --> 00:24:52.940
定制函数调用打开打开目录的电子函数

00:24:52.940 --> 00:25:03.799
对话框，如果我们仅对一行电子版本进行测试，它将无法正常工作，是的，

00:25:03.799 --> 00:25:14.059
可能像本地问题一样，如何雕刻那些测试，因为就像我知道的那样

00:25:14.059 --> 00:25:20.840
如果我们真的很想像端到端那样测试它，包括用户界面

00:25:20.840 --> 00:25:27.770
像UNIX，当有x11窗口之类的时候，您基本上可以像

00:25:27.770 --> 00:25:33.049
以编程方式产生键盘和鼠标事件，但这基本上是

00:25:33.049 --> 00:25:38.720
使用定制的测试框架编写您的眼睛，我有点想

00:25:38.720 --> 00:25:43.550
相信类似的东西存在或可以适应我们的需求

00:25:43.550 --> 00:25:49.150
但是，是的，这是我们本季度要研究的内容

00:25:51.930 --> 00:25:57.639
是的，我认为将其纳入CI的最小案例

00:25:57.639 --> 00:26:02.679
然后我们可以找出其余的皱纹，因为就像我想

00:26:02.679 --> 00:26:04.779
你是对的，就像我们要去保持我们已经经历过的

00:26:04.779 --> 00:26:10.979
这个问题与电子和很多头的野兽不一样

00:26:15.929 --> 00:26:26.179
好吧，在Deitrick的哪个工作周，您召集我们来参加

00:26:26.179 --> 00:26:34.520
一周，所以也许你说是的，所以我想让我看看是否可以找到我们

00:26:34.520 --> 00:26:41.710
我可以找到正确的标签，我知道如何浏览

00:26:42.610 --> 00:26:44.670
你

00:26:45.280 --> 00:26:53.310
嘿，是的，我们花了几天时间做一些计划

00:26:53.310 --> 00:27:00.120
为2020年做计划，然后我们把它拿给他来破解

00:27:00.120 --> 00:27:05.760
并试图找出完整的答案，规划的关键基本上是我们

00:27:05.760 --> 00:27:09.120
已经谈论过不能与卡拉的第四季度是其中的一些

00:27:09.120 --> 00:27:13.350
实际上喜欢减少设定值，而不是尝试在1/4处变大

00:27:13.350 --> 00:27:17.910
我们有一个实验周季度，有假期，还有2020年

00:27:17.910 --> 00:27:21.900
计划进行中，让我们缩小范围，看看我们如何帮助

00:27:21.900 --> 00:27:25.680
项目的其他部分也包括帮助

00:27:25.680 --> 00:27:30.450
如果有时间，则进行异步重构，然后进行优先级排序

00:27:30.450 --> 00:27:37.920
测试工作以及下一个重要部分实际上是识别

00:27:37.920 --> 00:27:43.230
他们是什么意思我的意思是我们有很多东西要测试

00:27:43.230 --> 00:27:48.330
在这里列出下一个大件，有点像我们的工作重点

00:27:48.330 --> 00:27:53.520
2020年在浏览器中特别了解开发人员

00:27:53.520 --> 00:27:58.320
经验应该是那些使用ipfs开发的人不需要的

00:27:58.320 --> 00:28:01.050
浏览器实现看起来像这样，我们就像我们有一个相当不错的

00:28:01.050 --> 00:28:04.910
现在感觉当同伴在浏览器中运行时的外观

00:28:04.910 --> 00:28:09.090
功能的约束是什么，我们需要成为什么样的功能

00:28:09.090 --> 00:28:12.960
能够，我们需要能够用完完整的笔记，但是使用本机浏览器

00:28:12.960 --> 00:28:16.650
邀请看起来完全不同，本机浏览器应用程序可能不是

00:28:16.650 --> 00:28:20.880
将成为同伴包本机实现可能要

00:28:20.880 --> 00:28:26.850
在C ++或铁锈中，在铬中看起来像是TBD

00:28:26.850 --> 00:28:32.730
在Firefox中，他们已经在运送大量锈蚀并更换了碎屑

00:28:32.730 --> 00:28:36.390
的浏览器，但我不熟悉这种外观

00:28:36.390 --> 00:28:41.700
像铬一样，我们可能确实会为

00:28:41.700 --> 00:28:46.650
浏览器工程师，在这一点上，我认为我们真正想要的是

00:28:46.650 --> 00:28:50.820
将获得许多Daria最多的浏览器覆盖率

00:28:50.820 --> 00:28:54.600
经验丰富的chrome开发人员加入了团队，我发出了这个呼吁

00:28:54.600 --> 00:28:59.130
在浏览器博客文章中也是如此，最后用户体验是

00:28:59.130 --> 00:29:02.730
因此，如果我们希望能够运行本机浏览器，可能会错过

00:29:02.730 --> 00:29:05.670
集成后，我们需要能够传达威胁模型是什么

00:29:05.670 --> 00:29:08.380
URL栏的设计需要是什么，以及

00:29:08.380 --> 00:29:13.690
为什么当内容很好时需要传达什么

00:29:13.690 --> 00:29:17.679
可以通过密码验证，但也可以来自任何地方，并且具有

00:29:17.679 --> 00:29:21.429
权力和隐私领域之外的后果

00:29:21.429 --> 00:29:26.700
消费CPA利用率以及随后进行权衡的其他事项

00:29:26.700 --> 00:29:35.350
所以要弄清楚那里是这张表是2020年项目的优先列表

00:29:35.350 --> 00:29:38.559
我们经历过的每件事我们都知道哪里存在未解决的问题

00:29:38.559 --> 00:29:42.370
我们需要能够在浏览器中进行修复，以便获得完整的版本，

00:29:42.370 --> 00:29:49.029
现在运行IPS节点，此列表中尚不清楚的一件事是，

00:29:49.029 --> 00:29:53.350
当我们有好伴侣时，它看起来像我们之间

00:29:53.350 --> 00:29:57.789
让JSOC ufs运行并包含Web内容，然后是第三点，当我们

00:29:57.789 --> 00:30:02.470
运行实际的本机ipfs，就像一些连接一样

00:30:02.470 --> 00:30:06.460
对于使用IP的用例来说，这里的问题较少

00:30:06.460 --> 00:30:12.309
MS本身，但在Web内容中运行的Web应用程序中使用ipfs时

00:30:12.309 --> 00:30:17.559
而且您有本机ipfs节点，我们真的不太喜欢了解

00:30:17.559 --> 00:30:20.950
拓扑看起来像交互的样子以及该应用程序的运行方式

00:30:20.950 --> 00:30:24.340
与本地节点通话不会通过h通话成为本地节点

00:30:24.340 --> 00:30:27.639
谈论尝试获得到您刚才的本地节点的本机连接

00:30:27.639 --> 00:30:31.600
使用网络RTC说话来吃内置食物，就像我们还没有真正想到的那样

00:30:31.600 --> 00:30:36.549
这些位出来，所以这是一种堆叠式的东西列表，我们

00:30:36.549 --> 00:30:40.389
从先前的优先次序确定了我们需要的观点

00:30:40.389 --> 00:30:45.039
修复以解决ipfs抑制器的问题，因为这就是我们的世界

00:30:45.039 --> 00:30:49.000
是今天，所以假设没有本机实现，这就是说

00:30:49.000 --> 00:30:55.029
关于今天通过HTTP加载在网页中运行的JSI PFS的哪些Web内容

00:30:55.029 --> 00:31:00.460
网页需要能够连接并准备好cid v1

00:31:00.460 --> 00:31:04.960
工作是最高优先级，因为这会影响回购的内容

00:31:04.960 --> 00:31:09.190
会影响使用cid非基本的今天添加东西的每个人

00:31:09.190 --> 00:31:13.509
他们应有的兼容性认为他们需要迁移，否则我们会像吹牛一样

00:31:13.509 --> 00:31:17.590
我们删除了每个帖子，但今天满足了我们在这里必须要解决的另一个问题

00:31:17.590 --> 00:31:20.590
找出某个时候，但这变成

00:31:20.590 --> 00:31:25.179
基于r2的cid v1数据存储方式的本质是

00:31:25.179 --> 00:31:29.830
为2020年建立我们的下一个平台，您知道您知道大约五年的时间

00:31:29.830 --> 00:31:35.640
ipfs的工作而不必担心寻址格式

00:31:35.640 --> 00:31:40.360
产品在下一阶段的地址兼容性

00:31:40.360 --> 00:31:44.520
有趣，所以我们实际上并没有进行以下类别的分组

00:31:44.520 --> 00:31:49.809
兼容性连接UX是有意的，但实际上我们是

00:31:49.809 --> 00:31:55.289
谈论项目本身，最终得到分组

00:31:55.289 --> 00:31:59.289
主题的聚类和自身的打顶，这很吸引人

00:31:59.289 --> 00:32:04.899
我们有点像直到后来我才添加类别的东西，所以我们

00:32:04.899 --> 00:32:08.080
其实只是看项目清单，而我，雨果和莱昂内尔

00:32:08.080 --> 00:32:12.220
像几个小时都在激烈地谈论其中的每一个，然后慢慢地做到这一点

00:32:12.220 --> 00:32:16.659
根据每个人背后的技术位进行排序，然后我去了

00:32:16.659 --> 00:32:20.860
通过他去的小组，我去了，我们有活着的紧急情况

00:32:20.860 --> 00:32:23.649
群集连接非常重要，

00:32:23.649 --> 00:32:26.049
连接将是我们心中最大的事情，因为一切

00:32:26.049 --> 00:32:30.130
否则我们可以在后面之后再修复，这就是那种

00:32:30.130 --> 00:32:36.640
从中得出的结论是，我们仍然需要与该清单进行协调的下一步

00:32:36.640 --> 00:32:40.240
就像我觉得它可能最终会像我们攻击这些东西一样

00:32:40.240 --> 00:32:45.130
因为HTTP世界将在下一个永久的和解中继续存在

00:32:45.130 --> 00:32:48.010
这与本机蕴涵的情况相反，这两个相互作用如何

00:32:48.010 --> 00:32:51.039
当您拥有这些混合的混合环境时，这将

00:32:51.039 --> 00:32:55.570
可能永远存在，所以我们将有一个很好的故事，说明它如何工作

00:32:55.570 --> 00:32:58.840
开发人员工作流程是针对您在使用什么连接选项时发生的

00:32:58.840 --> 00:33:02.559
在HTTP网页中运行JSF PFS节点，但是您也有82张床

00:33:02.559 --> 00:33:06.220
阅读相同的浏览器，我们不想做诸如说捆绑之类的事情

00:33:06.220 --> 00:33:12.789
很高兴那是对现在有利的事，但那不是在2020年底，

00:33:12.789 --> 00:33:15.610
希望能够为我们如何处理这个问题提供一个更好的故事

00:33:15.610 --> 00:33:19.149
情况类型，但运行Web服务器的想法

00:33:19.149 --> 00:33:23.500
在网络浏览器中可能是非常强大的功能，并且会

00:33:23.500 --> 00:33:30.789
飞行员热，所以如果我们有一个更好的故事，然后是一个疯狂的模块

00:33:30.789 --> 00:33:34.330
并非为环境而设计的堆栈

00:33:34.330 --> 00:33:40.690
怀孕说整个d网空间本身，因为我怀疑这将

00:33:40.690 --> 00:33:44.769
就像这个最简单的p2p路易斯维尔本地网络一样，可以浏览

00:33:44.769 --> 00:33:48.370
互相交谈，您可以考虑短语，而我的PFS却不是

00:33:48.370 --> 00:33:51.279
在架构和复杂性方面确实比这更高

00:33:51.279 --> 00:33:57.000
功能集，但作为测试用例，它具有mdns和类似的网络服务器

00:33:57.000 --> 00:34:01.059
您此时已直接与浏览器建立了浏览器连接，因此我们证明了

00:34:01.059 --> 00:34:05.169
那会漂浮所有的船，我们可能需要那个

00:34:05.169 --> 00:34:09.669
长期以某种形式存在，所以这就是我们在

00:34:09.669 --> 00:34:15.700
您知道2020年计划的条款就像松散地看着时间表

00:34:15.700 --> 00:34:23.980
可能看起来真的像是蓝天把它放在那里

00:34:23.980 --> 00:34:28.780
然后花一些时间来研究这些更深层次的问题

00:34:28.780 --> 00:34:32.800
就像我们花了很多时间谈论我可能很勇敢的浪潮

00:34:32.800 --> 00:34:38.349
真的，现在实施该计划的工作几乎完成了，然后一些

00:34:38.349 --> 00:34:43.030
像您这样的其他长期兄弟知道我们拥有多少个ipfs节点

00:34:43.030 --> 00:34:48.909
我们可以在一台机器上理想地写一台机器吗？

00:34:48.909 --> 00:34:53.440
最后也要讲回HTTP模型，所以如果我们真的只想要

00:34:53.440 --> 00:34:58.990
我选了我们，让我们在任何给定的时间内在任何机器上都下雪了

00:34:58.990 --> 00:35:02.800
将会上升，我们将不得不向该节点说HTTP

00:35:02.800 --> 00:35:07.750
完美的碟鱼世界，所以有很多讨论

00:35:07.750 --> 00:35:12.880
所有注释都与此相关，我可以认为其中一个有趣的部分是

00:35:12.880 --> 00:35:16.780
接下来的几天，我们实际上陷入了技术问题，所以我们说

00:35:16.780 --> 00:35:20.710
好的，我们应该说花了两天时间对网络RTC连接进行黑客攻击

00:35:20.710 --> 00:35:24.430
我们花了两天的时间来研究其他路由优化

00:35:24.430 --> 00:35:28.450
像这样的事情我们应该花两天时间来改善性能，而同时

00:35:28.450 --> 00:35:35.380
做Interop测试转换为异步雨果发现NGS ipfs的IP

00:35:35.380 --> 00:35:39.760
测试基本广告，有时病理上缓慢，他发现这是

00:35:39.760 --> 00:35:43.330
有时花一分钟就可以不添加

00:35:43.330 --> 00:35:47.110
真的不需要花一分钟的时间，所以我们说好吧

00:35:47.110 --> 00:35:50.470
花费那两天时间，并深入研究我们可以解决它的两种方式，而我

00:35:50.470 --> 00:35:53.350
找不到缓慢的时间从哪里来，看起来像是IO

00:35:53.350 --> 00:35:57.970
就像有两个主要问题，他有两个问题

00:35:57.970 --> 00:36:02.770
就像他只是用内存来实现数据存储区API一样进行调查

00:36:02.770 --> 00:36:06.820
数据库，查看是否有改进，因为我们使用

00:36:06.820 --> 00:36:11.350
一个运行网页的包装程序的级别，该网页与实际上在其中的索引数据库进行对话

00:36:11.350 --> 00:36:17.800
Chrome在后端也处于2b级，因此我们在那里具有DB级接收能力

00:36:17.800 --> 00:36:22.030
firefox有点类似，但后端的是SQLite就是IDB

00:36:22.030 --> 00:36:25.180
实际上，他们此时可能在后端具有不同的数据存储

00:36:25.180 --> 00:36:28.660
但是无论哪种方式，您都需要一个存储包装器与一个存储包装器进行通信

00:36:28.660 --> 00:36:32.320
说话只是存储包装程序说话的是存储说话的磁盘是什么

00:36:32.320 --> 00:36:36.130
当我们移除其中一些包装而不是它们的早期或结果时发生

00:36:36.130 --> 00:36:41.080
表现出巨大的进步，但是当他与他交谈时

00:36:41.080 --> 00:36:46.270
IDB本身没有看到相同的结果，但我们确实注意到了一件事

00:36:46.270 --> 00:36:51.100
是当我在添加文件时选择测试广告时，将其全部分割成块，

00:36:51.100 --> 00:36:54.250
将所有这些权利赋予未包装的数据存储个人权利

00:36:54.250 --> 00:36:59.410
交易中，所以您是在

00:36:59.410 --> 00:37:06.430
IDB级别作为单个事务，IDB提供事务语义

00:37:06.430 --> 00:37:12.160
以便将所有这些正确的拆分起来，然后使文件系统

00:37:12.160 --> 00:37:16.030
文件IO发生了，并且一个大事务本应被视为一个整体

00:37:16.030 --> 00:37:19.390
一堆不同的独立原子权，这是我们学到的一课

00:37:19.390 --> 00:37:23.650
在浏览器领域中，并且确实在这里也播放了该课程

00:37:23.650 --> 00:37:27.850
在两者的性能提高约50％之前添加交易

00:37:27.850 --> 00:37:33.970
广告，而且我认为确实有帮助，但我不记得确切但

00:37:33.970 --> 00:37:38.470
可以肯定的是，我们拥有大量发起人的权利有所增加，因此

00:37:38.470 --> 00:37:44.320
据我所知，它已经降落了，我们仍在等待自我将它们合并

00:37:44.320 --> 00:37:48.490
变化，但这将是一个重大的进步，我自称和网页

00:37:48.490 --> 00:37:53.890
您好，是否也注意到我们得到了批量改进的结果，是的

00:37:53.890 --> 00:37:59.120
你知道，但个人都沉没了，我真的很为勇敢而兴奋

00:37:59.120 --> 00:38:06.200
因为勇敢的一切都在单页上下文中，所以任何性能

00:38:06.200 --> 00:38:12.740
您可以改进一下它，因为它更快，因此可能超级酷，

00:38:12.740 --> 00:38:19.310
那就是我们分开走的那件事，这是一个有趣的一周，谢谢

00:38:19.310 --> 00:38:23.840
你让它成为现实是的，是的，这是有点紧张的时候

00:38:23.840 --> 00:38:28.250
你会知道这实际上是一小群人可能会更加激烈

00:38:28.250 --> 00:38:35.180
有时比大集团更重要，因为您可以参加，下一次我认为我们需要

00:38:35.180 --> 00:38:42.650
使ipfs Web UI更加井井有条，并为浏览器提供便利

00:38:42.650 --> 00:38:50.300
桌面和网络用户界面周将其推高到了五个人六个人，我觉得

00:38:50.300 --> 00:38:56.030
当我们在里斯本有14个人时，一次过增加两个人，三个人

00:38:56.030 --> 00:39:03.440
人们对六个人非常紧张，那就是我们让你五个

00:39:03.440 --> 00:39:08.330
我们只需要弄清楚Hawks在学校的测试时间表是什么，

00:39:08.330 --> 00:39:14.360
确保我们安排好行程，以便您可以特别喜欢我们

00:39:14.360 --> 00:39:21.200
诸如Web之类的同伴之类的一些大的总体UX事物，以及

00:39:21.200 --> 00:39:31.550
桌面会很有趣很酷，谢谢您检查桌面上的最后一项

00:39:31.550 --> 00:39:38.680
协作网站中托管懒惰与预取的日程实验

00:39:38.680 --> 00:39:46.250
共同主持，我可能想写更多，但我不认为会更多

00:39:46.250 --> 00:39:54.050
好像现在会更清楚了，我很抱歉，我不确定该写些什么，但这是

00:39:54.050 --> 00:40:04.400
基本上，我们一直在低调地尝试这些共同托管规范

00:40:04.400 --> 00:40:08.230
围绕通行费进行探索，

00:40:08.230 --> 00:40:16.030
使用hem FS共同托管网站的约定，所以我们想看看

00:40:16.030 --> 00:40:21.360
使用现有的IP眼睛（即amethyst.i）可以实现

00:40:21.360 --> 00:40:28.060
而不喜欢在IP第一核心IP眼睛中添加任何新内容，这样点就可以了

00:40:28.060 --> 00:40:35.740
规格和规格本周规格的第一稿非常

00:40:35.740 --> 00:40:44.650
很简单，它只是添加删除和更新从

00:40:44.650 --> 00:40:50.590
实施对其进行了修改，他创建了一个简单的条形脚本，因此，如果您

00:40:50.590 --> 00:40:57.400
想看看这个共同托管如何工作，有一个shell脚本可以

00:40:57.400 --> 00:41:03.370
下载，它已经成为添加删除和同步的注释

00:41:03.370 --> 00:41:15.700
基本上，从那个黑客那里注意到，如果他也许我会去规范

00:41:15.700 --> 00:41:27.910
可能更容易显示，所以当您将内容复制到NFS时，这里

00:41:27.910 --> 00:41:36.130
您可以看到我们正在从ipfs命名空间复制ipfs资源，然后右转第一个

00:41:36.130 --> 00:41:42.910
在共同托管目录下，因此此操作很有趣，因为我们

00:41:42.910 --> 00:41:54.910
基本上只是在MF中创建一个指向该ipfs路径的指针，事实就是

00:41:54.910 --> 00:42:00.540
指针在那里，此操作不涉及数据存储

00:42:00.540 --> 00:42:10.150
因此，如果这个苛刻代表了整个Wikipedia，那么您将拥有整个Wikipedia

00:42:10.150 --> 00:42:17.470
您的MF，但是它不在您的MF上，而是不在您的机器上

00:42:17.470 --> 00:42:22.870
转到Web UI您转到Web UI中的文件或使用命令

00:42:22.870 --> 00:42:31.240
行以遍历em FS下的此目录，并且每个文件都具有相同的级别

00:42:31.240 --> 00:42:35.950
您打开那里，它将从网络上动态加载，因为它不是

00:42:35.950 --> 00:42:43.030
实际上是在您的计算机上，所以最初是一个错误，所以这个想法是

00:42:43.030 --> 00:42:50.800
好的，我们需要在此处添加此步骤，以确保内容位于本地存储库中，因此

00:42:50.800 --> 00:42:59.170
有这个命令列出了整个码头的子块或有一个侧面的子块

00:42:59.170 --> 00:43:06.400
将所有内容预取到本地存储库的效果，这就是为什么

00:43:06.400 --> 00:43:12.910
我们会在复制之前执行此操作，以确保MF中的所有内容

00:43:12.910 --> 00:43:18.310
物理上在您的机器上很抱歉为您介绍了这么长的时间，但我认为这是

00:43:18.310 --> 00:43:25.560
有必要了解这里发生的事情，所以懒惰地共同主持是

00:43:25.560 --> 00:43:30.220
它实际上不是错误，它是一项功能，而且非常酷

00:43:30.220 --> 00:43:35.800
功能，因为我不知道，您可能只有一个小磁盘，无法存储

00:43:35.800 --> 00:43:41.290
整个Wikipedia，但是由于MF的这个特性

00:43:41.290 --> 00:43:50.620
像预先获取内容一样，可以主动存储指向您所要内容的指针

00:43:50.620 --> 00:43:56.820
尚不完整，但是如果我去，您可能拥有一部分维基百科

00:43:56.820 --> 00:44:03.070
Wikipedia现在开始浏览我访问过的页面

00:44:03.070 --> 00:44:10.660
缓存在我本地存储库中的本地网络中，我没有完整的

00:44:10.660 --> 00:44:16.210
Wikipedia我有一小部分Wikipedia以及LASIK或

00:44:16.210 --> 00:44:21.310
托管实际上是一项功能，因此某些人可能不想

00:44:21.310 --> 00:44:28.450
存储反Wikipedia某些人只想确保所有Wikipedia资源

00:44:28.450 --> 00:44:34.450
他们拜访的人受到保护，被垃圾收集固定或

00:44:34.450 --> 00:44:41.230
基本上是共同托管的，所以这很酷，我能够主持很多

00:44:41.230 --> 00:44:48.460
网站和我基本上只是共享内容并仅向他人提供内容

00:44:48.460 --> 00:44:54.250
我实际访问过的内容现在就可以像这样工作，因此唯一的功能

00:44:54.250 --> 00:45:00.040
在ipfs现在如何工作的基础上，当您

00:45:00.040 --> 00:45:05.710
转到页面，该页面已保存并在本地存储库中兑现，但是在任何情况下

00:45:05.710 --> 00:45:10.680
如果将其添加到MF中，则时间垃圾收集可能会将其删除，除非将其固定

00:45:10.680 --> 00:45:18.910
即使整个网站的指针就是您如何将其作为指针

00:45:18.910 --> 00:45:24.100
在本地存储库中有该资源的任何子资源，垃圾回收是

00:45:24.100 --> 00:45:28.930
发生的事情将保护他们免受垃圾收集，这就是

00:45:28.930 --> 00:45:34.680
懒惰共同主持我链接的第二个问题的背景是

00:45:34.680 --> 00:45:41.590
用简短的术语进行了解释，因为我认为它适合我的屏幕，但是我感觉到了

00:45:41.590 --> 00:45:47.860
解释是必要的，以了解您能够做到这一点

00:45:47.860 --> 00:45:54.010
就像将整个Wikipedia用作指针一样，您可以遍历它，并且从

00:45:54.010 --> 00:46:01.530
在Web浏览器中或从Web UI界面中访问一个Web网站，您

00:46:01.530 --> 00:46:08.770
逐渐获取内容，因此这个懒惰的联合托管想法是-是

00:46:08.770 --> 00:46:15.610
建议喜欢扩展或更改或调整此共同主持实验

00:46:15.610 --> 00:46:24.730
像这样利用这种强大的原语并进行一些探索的方式

00:46:24.730 --> 00:46:28.960
用户界面看起来像这样，所以挑战在于我们如何沟通

00:46:28.960 --> 00:46:35.730
完全快照完全联合托管与我只在这个懒惰之间的区别

00:46:35.730 --> 00:46:42.550
分享我自己实际加载的内容，然后在用户想要去时分享

00:46:42.550 --> 00:46:48.250
到Wikipedia页面，并希望像主持人Wikipedia一样做什么

00:46:48.250 --> 00:46:53.410
意思是因为Wikipedia的图像大小约为40 GB或16 GB

00:46:53.410 --> 00:46:59.020
我不确定这是否很荒谬，如果您想点击一下，请捏捏一下

00:46:59.020 --> 00:47:03.520
是的，我想共同举办这个活动，如果您开始预取整个内容，则应该

00:47:03.520 --> 00:47:07.090
那是阻碍合作或后台行动，那么我们就不会

00:47:07.090 --> 00:47:13.980
有API可以跟踪此补丁的进度，因此这是一个非常开放的问题，

00:47:13.980 --> 00:47:20.920
挑战如何与用户交流以及如何建立这些界面

00:47:20.920 --> 00:47:31.120
基本上在这里写了一些笔记，或者我有点倾向于靠在哪里

00:47:31.120 --> 00:47:37.330
默认情况下，我们仅在用户明确表示“是”的情况下才进行懒惰的联合托管

00:47:37.330 --> 00:47:41.580
不会整个维基百科，或者我想要整个网站

00:47:41.580 --> 00:47:48.850
实际上在我的桌子上，所以那就是我现在所在的位置，但它需要一个

00:47:48.850 --> 00:47:54.880
还有很多工作，我真的很高兴，谢谢您的拥抱，例如疯狂的低级脚本和

00:47:54.880 --> 00:47:59.560
制定规范，并帮助我们进一步推动此托管实验

00:47:59.560 --> 00:48:04.720
因为这就是为什么我开始这个实验来喜欢发现那些隐藏的原因

00:48:04.720 --> 00:48:11.290
API中的gems以及我们可以围绕它们构建什么样的用户体验

00:48:11.290 --> 00:48:18.400
因为作为指针的m FS属性始终是激光指示器

00:48:18.400 --> 00:48:25.180
我们只是没有以某种方式思考如何生产该产品或如何将该产品暴露给

00:48:25.180 --> 00:48:29.830
用户，我真的想从ipfs伴侣中删除旋转界面

00:48:29.830 --> 00:48:35.700
使它更像是无缝的，我觉得如果编译会像懒惰一样做到这一点

00:48:35.700 --> 00:48:41.500
固定像可选的开关下降会更好

00:48:41.500 --> 00:48:46.210
甚至对于同伴也有经验，但可能会更多，因此

00:48:46.210 --> 00:48:52.620
讨论不完，我现在闭嘴对不起

00:48:54.300 --> 00:48:58.619
太棒了，嘿，我们有

00:48:58.619 --> 00:49:03.660
在ipfs Carlos si的后期，您说PRG已经合并，什么是

00:49:03.660 --> 00:49:06.839
您执行的脚本之间的区别

00:49:06.839 --> 00:49:14.700
我的PFS共同主持人会更加美丽，你知道吗，你知道

00:49:14.700 --> 00:49:22.910
仅在使用pin API之前做过，但我似乎更改了使其符合规范

00:49:22.910 --> 00:49:29.160
您也有一个很好的主意，即将它变成一个像

00:49:29.160 --> 00:49:33.599
如果人们可以嵌入他们的应用程序，并且基本上可以在

00:49:33.599 --> 00:49:38.460
维权同伴，在ipfs桌面中，我们将只使用该库

00:49:38.460 --> 00:49:45.809
所以这也是shell脚本只是一个非常简单的shell脚本

00:49:45.809 --> 00:49:50.940
快速使用它或将其添加到cron作业中，因此您可以将其放在自己的计算机上

00:49:50.940 --> 00:49:56.430
服务器并运行它，但老实说，如果您有注释，可以运行该IP

00:49:56.430 --> 00:50:04.470
壁画主持人，也很容易迭代为什么我们可能会结束

00:50:04.470 --> 00:50:11.400
在五个小时前通过此评论发表您的评论，但是关于获得

00:50:11.400 --> 00:50:19.799
每隔X次（例如十二个小时）创建一次新快照，如果这是一个懒惰的共同主持人的事情

00:50:19.799 --> 00:50:25.980
会发生那是我一直在想的方式中的一个开放性问题之一

00:50:25.980 --> 00:50:32.279
很懒惰，我仍然想知道什么时候像网站这样的路线

00:50:32.279 --> 00:50:38.910
更新，并且我的MF中的指针仍将更新，因此如果我想转到

00:50:38.910 --> 00:50:44.579
安娜·费斯特（Anna Fest）我会看到那些快照，所以我们仍然可以偷懒

00:50:44.579 --> 00:50:53.269
只是一个开放的问题是我们如何区分区分是的，所以你

00:50:53.269 --> 00:50:57.089
这种预取将如何工作，您只是

00:50:57.089 --> 00:51:02.670
我希望最好获取我共同托管的每个网站，可能不是

00:51:02.670 --> 00:51:07.920
但是我想预取除Wikipedia之外的所有内容，或者我想添加

00:51:07.920 --> 00:51:12.420
维基百科是一个懒惰的人，但是我想添加这个其他较小的网站

00:51:12.420 --> 00:51:17.599
作为完整快照，因为这是我的网站，我想完全托管它，因此

00:51:17.599 --> 00:51:22.920
这是一个很好的问题，我们如何在MF级别上对其进行区分

00:51:22.920 --> 00:51:29.339
可能将后缀添加到目录名称或我不确定它是

00:51:29.339 --> 00:51:35.549
在较低的水平上都公开问题，如何表示这种差异

00:51:35.549 --> 00:51:44.819
介于懒惰和落在MF的网站上，特别是和UX中的一样，所以如果

00:51:44.819 --> 00:51:50.519
任何人都有一个主意和一个非常简单的主意，而不是后缀或前缀，或者

00:51:50.519 --> 00:51:56.789
像是国王的主要名字里面的一个简单文件，如果它是懒惰的

00:51:56.789 --> 00:52:04.140
或完整或默认情况下只有一个，然后以其他方式表示，否则我们可以

00:52:04.140 --> 00:52:12.599
有一个单独的单独的子目录，例如yeah，可能是

00:52:12.599 --> 00:52:19.230
较难回答的是如何在类似伴侣的用户界面中表示这种选择

00:52:19.230 --> 00:52:26.430
当你想决定什么时候决定是懒惰还是饱满的时候

00:52:26.430 --> 00:52:32.640
将此UI提供给可能不具备所有技术背景的用户

00:52:32.640 --> 00:52:39.960
大概我们应该告诉哦，维基百科的大小大约是60 GB

00:52:39.960 --> 00:52:45.750
真的想要你真的想要做那样的事情，是的，就像

00:52:45.750 --> 00:52:50.220
我们在这个词汇室里所处的位置，它正处于讨论阶段

00:52:50.220 --> 00:52:56.640
现在，它非常强大25您和我与Michelle进行了讨论

00:52:56.640 --> 00:53:03.690
Hartsville上周在Kinning上一般如何固定ipfs生态系统

00:53:03.690 --> 00:53:08.099
可以，我提到了这个em FS实验，所以我大概

00:53:08.099 --> 00:53:17.359
希望我们也能和她一起跳出一些想法，看看我们如何改进这个用户体验

00:53:17.359 --> 00:53:21.259
是的，这很有趣

00:53:22.369 --> 00:53:28.880
我感到非常兴奋，因为我认为其中包含更高级别的工作流程

00:53:28.880 --> 00:53:33.539
重新发布共享，保存存档和重新发布，共享将通过以下方式解锁

00:53:33.539 --> 00:53:38.489
最初的低水平工作和实验真的很令人兴奋

00:53:38.489 --> 00:53:45.509
是的，我们也开始看到存在问题或缺少KPI

00:53:45.509 --> 00:53:53.189
对于什么时候该块或本地存储库中的此CID是否完整

00:53:53.189 --> 00:53:59.369
在此本地存储库中或仅其一部分，或占此东西的百分之几

00:53:59.369 --> 00:54:05.099
是本地的，我们要么没有api，要么您需要链接多个

00:54:05.099 --> 00:54:11.130
api通过获取点，因此也就像超级强大的强制功能

00:54:11.130 --> 00:54:18.869
喜欢思考那些需求以及那些东西可以释放什么，所以期望更多

00:54:18.869 --> 00:54:27.689
关于未来的共同主持，我想大家会越来越久，除非有任何事情

00:54:27.689 --> 00:54:36.569
还有更多补充，我很高兴我们能通过这次电话回到正轨，再见

00:54:36.569 --> 00:54:39.769
下周再见

