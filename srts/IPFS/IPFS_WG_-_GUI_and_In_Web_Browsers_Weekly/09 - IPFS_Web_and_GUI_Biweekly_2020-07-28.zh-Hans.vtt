WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.240 --> 00:00:06.960
而且我们活着……真的欢迎您

00:00:06.960 --> 00:00:13.200
没办法不要对我那样，我们正在录音，我没有停止

00:00:13.200 --> 00:00:16.880
随时随地致电googie欢迎使用googie

00:00:16.880 --> 00:00:23.760
我认为，我每周的电话直接是7月28日

00:00:23.760 --> 00:00:33.600
2020年。不错，请尝试杰西卡。抱歉，您按下了取消按钮

00:00:33.600 --> 00:00:39.200
否，如果您要输入密码，那么安全性有时会启动，并且需要输入密钥

00:00:39.200 --> 00:00:46.719
然后走上眼睛取消是的，不幸的是，这种情况经常发生

00:00:46.719 --> 00:00:51.199
好吧，让我们看看我是否能够做一些高级的事情，例如分享我的

00:00:51.199 --> 00:00:55.440
屏幕并告诉人们有关um的信息

00:00:55.440 --> 00:01:02.399
清洁服务为什么不行，这就像快速更新一样

00:01:02.399 --> 00:01:08.799
我们得到了一些刷新和更新，嗯api规范

00:01:08.799 --> 00:01:13.200
人们正在积极地提供一些固定服务

00:01:13.200 --> 00:01:16.960
像积极开始实施此api一样开始

00:01:16.960 --> 00:01:23.280
嗯，所以规格在我张贴在笔记中的链接上。

00:01:23.280 --> 00:01:26.799
有关引脚生命周期的更多信息

00:01:26.799 --> 00:01:32.240
总体而言，我们展示api的方式可能比以前好得多

00:01:32.240 --> 00:01:36.320
在您现在能够遍历遍历数据结构之前

00:01:36.320 --> 00:01:40.079
例如，如果您查询多个结果，例如此处

00:01:40.079 --> 00:01:44.560
您会看到结果数组类似，每个对象都是pin

00:01:44.560 --> 00:01:50.479
状态对象，然后您在这里获得了一个pin对象，其pcid为

00:01:50.479 --> 00:01:55.280
实际固定，因此应该更容易

00:01:55.280 --> 00:02:03.280
通过探索来学习，而只是快速记录一下

00:02:03.280 --> 00:02:06.960
嗯，我们开始收集来自

00:02:06.960 --> 00:02:10.239
固定将要实现的服务

00:02:10.239 --> 00:02:16.879
并且有两个打开的请求请求um来更改api

00:02:16.879 --> 00:02:24.319
一种是在当下添加时间戳

00:02:24.319 --> 00:02:28.400
固定要求进入固定服务

00:02:28.400 --> 00:02:32.239
这很重要，原因有很多

00:02:32.239 --> 00:02:39.440
便于用户查找最新的图钉和

00:02:39.440 --> 00:02:46.560
更重要的是，它使分页现在更具确定性

00:02:46.560 --> 00:02:53.440
结果按创建日期排序，越容易

00:02:53.440 --> 00:03:00.080
遍历具有数千个引脚的巨大引脚集，而无需跳过任何内容

00:03:00.400 --> 00:03:07.200
我们也删除了原处的手动偏移参数

00:03:07.200 --> 00:03:12.800
基于时间的参数，因此如果有人对此更改感兴趣

00:03:12.800 --> 00:03:17.280
请提供有关PR的反馈，我们可能会将其合并

00:03:17.280 --> 00:03:21.120
除非在周三，除非有一些需要关注的问题

00:03:21.120 --> 00:03:25.120
已解决，第二个未解决的问题正在简化

00:03:25.120 --> 00:03:31.360
到目前为止，访问令牌规范我们同时支持http标头和

00:03:31.360 --> 00:03:34.640
查询参数，此拉取请求简化了

00:03:34.640 --> 00:03:42.319
那，我们将只有HTTP标头，所以这是两个待处理的更改。

00:03:42.319 --> 00:03:48.159
他们并没有真正改变api的工作原理，但是

00:03:48.720 --> 00:03:52.799
直接解决我们迄今为止尚未从实施者那里获得的反馈

00:03:52.799 --> 00:04:01.200
嗯，是的，在api规范网站上，

00:04:01.200 --> 00:04:04.640
 go ipfs网站为此实现客户端

00:04:04.640 --> 00:04:07.920
开始我们处于计划阶段，我们可能会

00:04:07.920 --> 00:04:14.560
下次我提到这个时有一些更新

00:04:14.959 --> 00:04:17.920
我认为就是这样

00:04:19.600 --> 00:04:23.440
有关清洁服务的任何问题

00:04:27.040 --> 00:04:32.080
我不认为很好，我保持屏幕共享，因为

00:04:32.080 --> 00:04:37.520
嗯，有一个赏金，这很酷，我想

00:04:37.520 --> 00:04:41.520
提到这些改进即将到来

00:04:41.520 --> 00:04:45.600
嗯，所以我们对uh目录做出了贡献

00:04:45.600 --> 00:04:52.320
页面目录列表页面的改进和长话短说

00:04:52.320 --> 00:04:57.840
呃改进是

00:05:04.160 --> 00:05:11.199
不好意思我会把它们粘贴在里面，所以有重点

00:05:11.199 --> 00:05:15.199
是的，是的，所以面包屑现在

00:05:15.199 --> 00:05:23.280
可点击的，您可以跳到路径的任意级别

00:05:23.280 --> 00:05:30.320
而且这里有一个带有c id的列呃，我相信那也是我想要的

00:05:30.320 --> 00:05:35.759
文件大小在标头中，是的，是的，是，是，目录文件大小在

00:05:35.759 --> 00:05:40.160
标头如此，后面进行了很多改进

00:05:40.160 --> 00:05:44.720
杰西卡（Jessica）的场景让痛苦减轻了很多

00:05:44.720 --> 00:05:48.800
维护该模块，该模块负责

00:05:48.800 --> 00:05:53.600
呈现uh目录清单ii进行了查看，我们也许能够

00:05:53.600 --> 00:05:56.160
进一步改善它，但我不想

00:05:56.160 --> 00:05:59.919
完全像是赏金一样

00:05:59.919 --> 00:06:03.680
是的，可能是赏金合并之后

00:06:03.680 --> 00:06:08.960
我们可能会离开git子模块，就像现在

00:06:08.960 --> 00:06:13.360
go ipfs repo中的子模块，它不再需要，就像

00:06:13.360 --> 00:06:17.120
由于类似的遗留原因而有必要，但现在我们

00:06:17.120 --> 00:06:20.160
可以使它成为常规的go模块

00:06:20.160 --> 00:06:23.120
应该让每个人都更容易

00:06:23.120 --> 00:06:25.680
这可能要压缩到

00:06:25.680 --> 00:06:32.479
希望在ipfs 0.7中继续吧你们两个先来和iphone的伙伴们

00:06:32.479 --> 00:06:36.319
桌面在某些时候还包括呃，例如收藏夹图标

00:06:36.319 --> 00:06:39.680
还有没有纳入ipfs的内容，因此您

00:06:39.680 --> 00:06:42.960
如果我们能得到的话，实际上得到了上一代的改变

00:06:42.960 --> 00:06:46.800
是的，是的，问题是

00:06:46.800 --> 00:06:50.960
子模块有问题，除非有人u碰子

00:06:50.960 --> 00:06:56.479
模块并提交，并在重新生成后提交，就像

00:06:56.479 --> 00:06:59.120
目录的二进制数据列出了

00:06:59.120 --> 00:07:04.080
变化不会被填充，所以非常痛苦且容易

00:07:04.080 --> 00:07:07.199
我已经取得了公关资格，但又像做

00:07:07.199 --> 00:07:10.479
我们真的想为此发布go ipfs的全新版本

00:07:10.479 --> 00:07:14.240
也是如此

00:07:14.639 --> 00:07:20.160
充满乐趣的美好时光有望在某个时候降临

00:07:20.319 --> 00:07:23.840
嗯，你想直接谈谈吗

00:07:23.840 --> 00:07:31.360
嗯ipf的一双改进，是的，所以alex找到了一个补丁来修复

00:07:31.360 --> 00:07:35.440
js ipfs中发生的一个缓冲问题

00:07:35.440 --> 00:07:39.520
嗯，现在在那里您可以更新内容

00:07:39.520 --> 00:07:42.800
在网络ui上可以利用它，但是

00:07:42.800 --> 00:07:45.919
它最终是一连串需要发生的事情

00:07:45.919 --> 00:07:53.520
嗯，所以现在我有一个请求请求，以删除redux捆绑包ips redux

00:07:53.520 --> 00:07:56.720
带有自己的ipvs的捆绑包

00:07:56.720 --> 00:08:00.560
也老了，说实话并没有真正做很多事情

00:08:00.560 --> 00:08:06.240
此拉取请求将其删除，并开始使用ipfs提供程序

00:08:06.240 --> 00:08:09.759
但是我在测试中遇到了一些问题，但我没有

00:08:09.759 --> 00:08:15.280
完全确定那里发生了什么，但我会一次，希望我能弄清楚

00:08:15.280 --> 00:08:19.120
我们可以降落一旦它在呃然后我实际上

00:08:19.120 --> 00:08:22.800
升级ipfs到新的，但是有一点

00:08:22.800 --> 00:08:26.560
我认为这是在较老的方面要做的工作

00:08:26.560 --> 00:08:31.440
版本具有不同的ipfs api，因此我们使用ips的每个地方都需要

00:08:31.440 --> 00:08:35.919
更新它会被更新为使用新的api

00:08:35.919 --> 00:08:38.560
也做得好

00:08:39.440 --> 00:08:42.959
然后我可以更新我最初写给的拉取请求

00:08:42.959 --> 00:08:48.240
进行Web ui修补程序以进行上传，因为也正在发生缓冲

00:08:48.240 --> 00:08:50.560
在网络用户界面中，因此我们也必须将其删除

00:08:50.560 --> 00:08:55.200
现在，一旦完成，我们将转到新的ipfs um

00:08:55.200 --> 00:08:59.519
我会为http客户端写一个补丁

00:08:59.519 --> 00:09:03.200
因为现在它使用的提取API不会

00:09:03.200 --> 00:09:07.279
完全提供任何进度升级更新

00:09:07.279 --> 00:09:12.240
所以我将其切换到确实有进度的xml http请求

00:09:12.240 --> 00:09:16.240
事件，所以一旦完成，我们就可以

00:09:16.240 --> 00:09:21.839
更新Web ui以集成源事件，以便我们可以在

00:09:21.839 --> 00:09:25.120
文件上传的原因是这些是单独的任务，因此

00:09:25.120 --> 00:09:29.200
我们希望可以并行化其中的一些

00:09:30.080 --> 00:09:35.120
您提到测试的问题是与该库ky有关的问题

00:09:35.120 --> 00:09:38.240
还是其他，所以我不确定哦

00:09:38.240 --> 00:09:41.839
我什至不知道它是从哪里来的，就像上下文是那样

00:09:41.839 --> 00:09:45.360
我们在http客户端的某个位置使用了ky

00:09:45.360 --> 00:09:51.760
 ngsipfs，但事实证明那就像两个流血的边缘

00:09:51.760 --> 00:09:55.920
而且，我认为我们不再使用它，但是Web ui

00:09:55.920 --> 00:09:59.680
可能正在使用较旧版本的库，但仍会受到以下影响

00:09:59.680 --> 00:10:03.600
这个问题，嗯，是的，我想避免

00:10:03.600 --> 00:10:08.720
在不更改api的情况下更新ipfs也许我

00:10:08.720 --> 00:10:13.440
可以将这两个补丁组合成一个，是的，我想就像他们不花钱一样

00:10:13.440 --> 00:10:16.480
时间在任何与ky相关的事情上，因为它就像

00:10:16.480 --> 00:10:20.560
删除并修复了最新版本的呃http客户端

00:10:20.560 --> 00:10:23.600
或核心api，所以是吧，也许其中之一

00:10:23.600 --> 00:10:26.320
您可以查看呃的拉取请求

00:10:26.320 --> 00:10:30.320
链接在注释中，如果没有它，您就可以降落ii

00:10:30.320 --> 00:10:33.680
我也可以在上面再做一个补丁吗

00:10:33.680 --> 00:10:38.800
升级ipfs，因此至少希望可以通过它进行测试

00:10:40.000 --> 00:10:43.360
我们没有在Web ui中运行ci测试，因为

00:10:43.360 --> 00:10:48.079
从来没有，或者我们应该像每个人一样进行端到端测试

00:10:48.079 --> 00:10:52.560
屏幕上，我注意到我的拉取请求没有

00:10:52.560 --> 00:10:56.399
运行任何东西，所以也许我们应该启用它

00:10:56.399 --> 00:10:59.440
某个地方可以吧，也许还有其他原因

00:10:59.440 --> 00:11:03.279
但我不确定发生了什么事，还可以看看

00:11:03.279 --> 00:11:05.600
嗯

00:11:06.720 --> 00:11:14.079
是的，这完全取决于我，是的，这是我努力升级到

00:11:14.079 --> 00:11:18.800
最新的js api，例如程序化js api，

00:11:18.800 --> 00:11:22.320
您实际上将在网络用户界面中执行的操作

00:11:22.320 --> 00:11:26.839
我在使用旧的同伴时遇到了类似的问题

00:11:26.839 --> 00:11:32.320
呃议程上还有另一个问题是sekaio弃用

00:11:32.320 --> 00:11:36.160
呃，我相信就像go ipfs 0.7一样

00:11:36.160 --> 00:11:43.200
默认情况下已删除或禁用um，问题是我们使用

00:11:43.200 --> 00:11:50.560
嗯，就像勇敢一样，您可以选择嵌入js ipfs，并且该js ipfs具有

00:11:50.560 --> 00:11:56.399
访问TCP套接字，由于这个事实，它

00:11:56.399 --> 00:12:02.160
实际上可以连接到在dht上宣布自己的出现，所以我们

00:12:02.160 --> 00:12:06.880
启用委派的对等和内容路由模块

00:12:06.880 --> 00:12:12.320
从p2p嗯好吧，长话短说抱歉，如此勇敢

00:12:12.320 --> 00:12:15.920
笔记可以是委派的笔记，是您所说的不

00:12:15.920 --> 00:12:21.440
不，这就像勇敢的家伙正在使用，是的，勇敢的家伙正在使用我们的呃

00:12:21.440 --> 00:12:24.800
公开委托的注释，它们也是预加载节点

00:12:24.800 --> 00:12:31.279
嗯，就像委派的dht一样有效，问题在于

00:12:31.279 --> 00:12:34.880
在连接到委托节点的浏览器节点上

00:12:34.880 --> 00:12:41.120
它执行该调用的那一刻，现在这些连接是

00:12:41.120 --> 00:12:45.360
处理过secaio，我相信还可以，所以可能

00:12:45.360 --> 00:12:49.440
当um以及何时出现问题

00:12:49.440 --> 00:12:54.639
它尝试连接到似乎是ipfs的远程对等设备

00:12:54.639 --> 00:13:01.600
所以当go ipfs 0.7发布时，这意味着较旧的js ipfs节点

00:13:01.600 --> 00:13:06.000
就像勇敢的那个人将无法连接到ipfs呃

00:13:06.000 --> 00:13:10.639
所以这只是我提到的原因，因为该计划是为了

00:13:10.639 --> 00:13:15.200
像八月底一样，去ipfs 0.7 uh

00:13:15.200 --> 00:13:19.600
恩，希望我们能完成这次迁移

00:13:19.600 --> 00:13:27.519
嗯在那之前发生嗯为了避免抱歉我的意思是说哪个迁移

00:13:27.519 --> 00:13:33.920
只是勇敢地对um嵌入式js ipfs进行一般迁移，这是

00:13:33.920 --> 00:13:37.839
同伴，就像开放式公关，我只提到它

00:13:37.839 --> 00:13:42.399
万一某人正在运行像从中去ipfs

00:13:42.399 --> 00:13:46.959
掌握或使用候选发布者，他们

00:13:46.959 --> 00:13:51.279
遇到问题，而与之建立联系的工作

00:13:51.279 --> 00:13:54.320
这就是为什么因为坂井不再是一回事

00:13:54.320 --> 00:14:00.880
嗯，像整个jsr系统js p2p一样的js ip转换为噪声，我相信

00:14:00.880 --> 00:14:04.959
并且有一个关于像呃的讨论

00:14:04.959 --> 00:14:11.440
在旧版本中启用鼻噪声，但阈值

00:14:11.440 --> 00:14:16.000
我们切换到这个新版本的那一刻，所有版本都可以实现

00:14:16.000 --> 00:14:22.320
api，所以您需要在需要询问的地方使用这个新的api

00:14:22.320 --> 00:14:27.519
到目前为止，迭代器和东西可以利用噪声

00:14:27.519 --> 00:14:32.959
没有计划将其升级到较旧的版本

00:14:32.959 --> 00:14:36.240
所以这有点像是一种刺激

00:14:36.240 --> 00:14:40.000
我会说升级，但这就像是一个巨大的变化

00:14:40.000 --> 00:14:46.079
如果有人使用js ipfs并依赖与go节点的某些连接

00:14:46.079 --> 00:14:49.839
所以嗯，只是要确保我完全理解这句话

00:14:49.839 --> 00:14:54.160
但是在网络用户界面上，我们不需要做任何事情

00:14:54.160 --> 00:14:57.440
我相信没有遇到这个问题

00:14:57.440 --> 00:15:01.600
是的，我相信这只与同伴有关，特别是与

00:15:01.600 --> 00:15:06.560
在勇敢的同伴中，我看上去像其他人一样

00:15:06.560 --> 00:15:10.160
放置在我们的gui应用程序中，并且卡住了，我们不喜欢它

00:15:10.160 --> 00:15:14.160
我们没有受到影响，这是唯一与此问题重叠的地方

00:15:14.160 --> 00:15:20.399
知道了，谢谢，下一个很酷

00:15:20.399 --> 00:15:24.480
听起来好像有人要演示导航栏

00:15:24.839 --> 00:15:28.480
返工，这听起来如何，我没有，我没有

00:15:28.480 --> 00:15:31.279
它在我本地，你想给我一点时间，我带

00:15:31.279 --> 00:15:36.079
它看着它，但是我现在没有它在运行

00:15:36.079 --> 00:15:40.800
我可以带您浏览PS4上的屏幕截图，这很好

00:15:40.800 --> 00:15:43.920
我会那样做的哦，是的，看起来总是一样的

00:15:43.920 --> 00:15:51.759
屏幕没错，所以14次点击

00:15:52.160 --> 00:15:58.320
好吧，你能看到吗，是的，很酷，嗯，基本上这是什么

00:15:58.320 --> 00:16:02.240
这样做是从头开始的吗

00:16:02.240 --> 00:16:06.320
需要给我们一个地方来启动欢迎屏幕，然后

00:16:06.320 --> 00:16:09.839
谈话后，我相信与拉斐尔不久前，我们谈过

00:16:09.839 --> 00:16:12.399
关于展开折叠功能以及

00:16:12.399 --> 00:16:15.920
导航就像真的毫无意义

00:16:15.920 --> 00:16:19.759
所以这个公关所做的实际上是简化了导航栏

00:16:19.759 --> 00:16:23.839
在两个宽度上也给我们提供了一些可以单击的东西

00:16:23.839 --> 00:16:26.079
上启动欢迎屏幕内容

00:16:26.079 --> 00:16:31.120
我们想要在1463年解决的问题，这将有助于新的入门

00:16:31.120 --> 00:16:34.399
用户，这就是台式机的外观

00:16:34.399 --> 00:16:37.440
基本上将文字带到下方

00:16:37.440 --> 00:16:42.079
恩给了一点点垂直空间，但不是全部

00:16:42.079 --> 00:16:45.360
嗯，整体上收紧了整个事情

00:16:45.360 --> 00:16:48.399
此多维数据集不再可单击以展开

00:16:48.399 --> 00:16:54.079
折叠导航栏的um，但这确实将您带到了欢迎屏幕，

00:16:54.079 --> 00:16:58.160
现在，除了首次启动，您再也看不到

00:16:58.160 --> 00:17:02.079
嗯，这就是它在移动设备上的外观关于移动设备的好处

00:17:02.079 --> 00:17:06.319
这实际上使我们更少的并排滚动和更窄的宽度

00:17:06.319 --> 00:17:12.400
在那个拉斐尔菜单中，我认为你对莱尔没事

00:17:12.400 --> 00:17:17.600
我认为您看得很快，但最后的审核不胜感激

00:17:17.600 --> 00:17:20.880
在你让我成为现实之前为你

00:17:22.959 --> 00:17:26.559
嗯，我在装置上测试了它，这很有用，因为我

00:17:26.559 --> 00:17:34.559
具有非标准的手机设置，是的，看起来还不错

00:17:34.559 --> 00:17:41.120
所以那很好，嗯，唯一的细微差别就是那个

00:17:41.120 --> 00:17:46.160
我不确定我是否在评论中发表了评论或打算发表评论，但是

00:17:46.160 --> 00:17:49.760
您提到的欢迎屏幕是的，我意识到您可以

00:17:49.760 --> 00:17:53.360
我想您可以通过单击进入该屏幕

00:17:53.360 --> 00:17:56.880
右上角有这样的连接，是的

00:17:56.880 --> 00:18:02.720
是的，是的，是的，但我认为很好，甚至更好

00:18:02.720 --> 00:18:06.720
因为当您点击

00:18:06.720 --> 00:18:13.440
您想要排序的多维数据集可能会切换到不同的多维数据集项目

00:18:13.440 --> 00:18:15.440
这也与我们在做什么

00:18:15.440 --> 00:18:20.480
伙伴，嗯，我只想，我想从欢迎中入手

00:18:20.480 --> 00:18:24.640
屏幕，因为我不太确定那里需要什么

00:18:24.640 --> 00:18:28.240
在这一点上，然后我们还要进行一些更改

00:18:28.240 --> 00:18:31.120
内容出现在其他位置，例如

00:18:31.120 --> 00:18:34.160
当您没有任何文件时，在文件页面上显示

00:18:34.160 --> 00:18:38.799
所以那可能要花比我想的更长的时间

00:18:38.799 --> 00:18:42.559
所以是这样的

00:18:42.559 --> 00:18:46.480
迄今为止，该屏幕的主要用途是

00:18:46.480 --> 00:18:50.880
呃，当你处于离线状态时会发生什么

00:18:50.880 --> 00:18:57.360
或当您的节点突然脱机时，该屏幕上的欢迎页面

00:18:57.360 --> 00:19:03.840
是的，连接问题页面是的，保持这一点很重要

00:19:03.840 --> 00:19:06.080
这有点奇怪，因为您最终会遇到这种情况

00:19:06.080 --> 00:19:10.640
您想知道的地方您当然会要求吗

00:19:10.640 --> 00:19:14.559
启用，然后在右侧，就像什么是ipfs等等

00:19:14.559 --> 00:19:16.799
有点混合消息，所以我想

00:19:16.799 --> 00:19:19.600
拉开所有这些在哪里，我相信有那些

00:19:19.600 --> 00:19:22.960
是某种程度的组成，以同意一个学位，我想看看所有

00:19:22.960 --> 00:19:27.919
这些位会出现在应用程序的其他位置，是的，

00:19:27.919 --> 00:19:32.160
哦，关于组件，只是piggy带回到

00:19:32.160 --> 00:19:37.440
嗯，直接提到需要将Web ui的一部分重构为新的

00:19:37.440 --> 00:19:41.760
api uh ipv ipld Explorer是一个单独的

00:19:41.760 --> 00:19:48.320
组件，它是一个单独的npm依赖项呃，我相信它使用的是旧版api

00:19:48.320 --> 00:19:54.160
我不确定狗的api是否真的改变了

00:19:54.160 --> 00:19:57.440
是的，就像是另一层工作，

00:19:57.440 --> 00:20:01.360
呃我们可以分开讨论

00:20:01.360 --> 00:20:07.200
哦，那意味着我也必须在那做东西

00:20:08.159 --> 00:20:12.480
我觉得探险家是一个嵌套娃娃，是的，这就是为什么没人要触摸的原因

00:20:12.480 --> 00:20:16.159
这是因为这就像永无休止的故事

00:20:16.159 --> 00:20:20.320
好吧，我不想碰沙漠，我只想拍一集

00:20:20.320 --> 00:20:25.280
不像我们最近成功发布了新的ipld Explorer，所以我

00:20:25.280 --> 00:20:29.760
能够喜欢帮助

00:20:29.760 --> 00:20:33.280
是否有理由需要将其分开

00:20:33.280 --> 00:20:36.720
像存储库之类的东西，每次我们都要这样做时

00:20:36.720 --> 00:20:39.760
穿过软件包，它变成了呃

00:20:39.760 --> 00:20:43.200
比实际需要更大的宇宙这个想法是人们

00:20:43.200 --> 00:20:48.240
可能将其嵌入到其他贡献者或第三方项目中

00:20:48.240 --> 00:20:51.440
我不知道实际用途是什么，所以就像

00:20:51.440 --> 00:20:55.440
最初的想法，但后来我们意识到了问题所在

00:20:55.440 --> 00:21:01.600
您刚才提到过吗，呃，我们在ipld Explorer中停了下来，所以我觉得这个Explorer

00:21:01.600 --> 00:21:05.120
本身就很有用，就像探索IPL

00:21:05.120 --> 00:21:09.039
网站，并且使用相同的组件，因此相同的组件是

00:21:09.039 --> 00:21:12.080
在该网站和Web ui内部使用

00:21:12.080 --> 00:21:16.000
但这是我们实际上提取到单独的唯一成分

00:21:16.000 --> 00:21:22.000
打包，主要是因为我们意识到哦，这实际上引入了很多

00:21:22.000 --> 00:21:26.159
开销，所以我们也许像js ips一样

00:21:26.159 --> 00:21:29.760
在一个仓库中包含多个软件包可能至少会有所帮助，至少您可以编写一个

00:21:29.760 --> 00:21:33.120
拉取请求，它会更改所有请求，而您不必喜欢协调

00:21:33.120 --> 00:21:38.080
多件作品，我认为这是造成协调问题的原因，因为

00:21:38.080 --> 00:21:41.600
首先，需要先将其插入，然后再将其拉入此处，然后再像

00:21:41.600 --> 00:21:45.280
您最终将东西堆叠起来，但是如果它放在一个地方，那么您可以将它们发送

00:21:45.280 --> 00:21:48.640
即使它们被发布，也有单独的软件包

00:21:48.640 --> 00:21:54.559
是的，老实说，考虑一下这可能是有意义的

00:21:54.559 --> 00:22:01.120
长期，因为我们喜欢是一回事，我们也得到了这个CID呃

00:22:01.120 --> 00:22:04.640
那个ipfs io网站是独立的，我们得到了

00:22:04.640 --> 00:22:08.559
像是dag或文件，但广告不多

00:22:08.559 --> 00:22:13.120
但是这些东西可能是网络用户界面的一部分

00:22:13.120 --> 00:22:18.000
像一个大型仓库一样，它们也可以是单独的网站，但有一些东西

00:22:18.000 --> 00:22:22.799
就像是js ipfs一样，比起更好的体验要容易得多，

00:22:22.799 --> 00:22:25.679
现在，呃，我们有这个问题

00:22:25.679 --> 00:22:30.000
现在，尤其是那些需要

00:22:30.000 --> 00:22:34.159
对较低级别的原始对象（如cid或多哈希）进行操作

00:22:34.159 --> 00:22:38.880
或当我们添加新的东西时的多抄本

00:22:38.880 --> 00:22:45.600
它需要花费大量时间才能使网站或该组件达到最终产品

00:22:45.600 --> 00:22:50.400
嗯，薪水很长，您需要确保它起泡到

00:22:50.400 --> 00:22:53.520
所有这些，所以如果我们有一个中心地方

00:22:53.520 --> 00:22:57.360
它将消除摩擦哦，是的，因为您可能会结结两个

00:22:57.360 --> 00:23:01.200
我猜是不同的版本，是的，我们，这是非常

00:23:01.200 --> 00:23:05.520
在呃ipld Explorer的情况下有问题，因为您可能有

00:23:05.520 --> 00:23:09.840
在网站上，它正在捣毁自己的Embedded.js ipfs

00:23:09.840 --> 00:23:13.360
这可能是与api不同的版本

00:23:13.360 --> 00:23:23.840
在Web ui中，您拥有http客户端，是要考虑的事情

00:23:24.320 --> 00:23:30.960
很酷，所以我们将回顾一下导航栏的承诺，我能问一下您的电话号码吗

00:23:30.960 --> 00:23:35.679
是它应该在移动中滚动吗

00:23:35.679 --> 00:23:40.480
是上一个还是是，这是一个向左向右滚动，没有

00:23:40.480 --> 00:23:44.720
一种更优雅的方式做到这一点，而不会完全淘汰

00:23:44.720 --> 00:23:48.080
是我的较长期议程，但嗯，至少有

00:23:48.080 --> 00:23:51.840
并排滚动比以前少得多

00:23:51.840 --> 00:23:57.039
ii在Android的firefox上玩它，它看起来比以前更好

00:23:57.039 --> 00:24:00.320
是的，另一个问题是您实际上如何使用

00:24:00.320 --> 00:24:05.520
嗯，webbian移动版是个好问题

00:24:05.520 --> 00:24:09.360
你不，你不能连接任何东西，你，你可以

00:24:09.360 --> 00:24:13.279
连接到你的抱歉

00:24:14.000 --> 00:24:18.720
继续拉斐尔不，我的意思是我认为电气已经完成了一次

00:24:18.720 --> 00:24:23.360
所以他只是在浏览器上打开了Web ui并连接到他的

00:24:23.360 --> 00:24:28.080
此计算机上此节点上的内部ip

00:24:28.080 --> 00:24:31.520
因此，由于您位于同一路由器中，因此您可以询问

00:24:31.520 --> 00:24:38.559
访问，如果您允许原点进入，但不会像那样阻止

00:24:38.559 --> 00:24:42.320
您从https到http，因此应该是混合内容

00:24:42.320 --> 00:24:49.279
堵住我不知道的汽油，如果你装的话

00:24:49.279 --> 00:24:53.760
来自那个遥远的呃起源

00:24:53.760 --> 00:24:58.640
哦，从那个网关好吧，好吧，但是，老实说，那里有

00:24:58.640 --> 00:25:04.000
对于android有ipfs的uh分布，我认为它是

00:25:04.000 --> 00:25:07.919
叫做套件ipfs另一个是ipfs droid

00:25:07.919 --> 00:25:13.600
并且您正在手机上有效运行go ipfs，然后您就在

00:25:13.600 --> 00:25:17.279
本地主机，因此您只需打开该本地主机页面即可

00:25:17.279 --> 00:25:22.559
那就是我一直在用的东西

00:25:22.559 --> 00:25:27.279
Firefox正在运行的本地节点

00:25:27.279 --> 00:25:30.799
普通分机和同伴正在连接到

00:25:30.799 --> 00:25:34.480
嗯，我手机上的纸条就可以了

00:25:34.480 --> 00:25:39.120
嗯Raphael是的，关于汉堡菜单或其他类似的要点

00:25:39.120 --> 00:25:41.520
嗯，这有点像趋势

00:25:41.520 --> 00:25:45.919
行，因为我们有很多概念草图

00:25:45.919 --> 00:25:49.520
总体而言，台式机和Web ui大约已有一年的历史了，

00:25:49.520 --> 00:25:53.039
来自eric ronnie um，

00:25:53.039 --> 00:25:57.520
需要像很多东西一样，从那以后改变了，我们的理解

00:25:57.520 --> 00:25:59.600
我们试图解决的问题已经改变

00:25:59.600 --> 00:26:02.720
从那时起，那里有很多非常好的真理内核

00:26:02.720 --> 00:26:07.520
至少在我的长期议程上可以尝试

00:26:07.520 --> 00:26:13.200
要将其中的一些统一为一个更完整的设计，则拆解更多

00:26:13.200 --> 00:26:17.200
使事情进入良好的，真正可用的状态

00:26:17.200 --> 00:26:23.120
在固定服务之前，但在理想的世界中，我会喜欢的

00:26:23.120 --> 00:26:27.440
将第4季花费在这个ui中进行完整的拆解

00:26:27.440 --> 00:26:31.039
会看到未来的前景

00:26:34.240 --> 00:26:40.880
酷um固定设置页面几乎完成

00:26:40.880 --> 00:26:47.919
我被告知是的，所以我已经将所有内容合并成史诗

00:26:47.919 --> 00:26:54.080
斜线固定集成，我们已经拥有所有模型

00:26:54.080 --> 00:26:57.200
添加新的集成和自定义集成，并显示

00:26:57.200 --> 00:27:01.919
集成现在我们需要做的是在屏幕上

00:27:01.919 --> 00:27:05.120
用于编辑该集成，以及

00:27:05.120 --> 00:27:10.240
用于删除集成的弹出窗口，我不确定我们是否有

00:27:10.240 --> 00:27:15.679
编辑集成屏幕我们杰西卡吗

00:27:15.679 --> 00:27:19.679
我认为我们可以，但是编辑集成屏幕只会带回该模式

00:27:19.679 --> 00:27:23.760
因为那是同一件事，因为只有那三个

00:27:23.760 --> 00:27:28.720
您正在更改的三个参数哦，是的，这是真的II忘记了我

00:27:28.720 --> 00:27:32.480
想问些什么，所以我们说我们不存储

00:27:32.480 --> 00:27:36.720
秘密api密钥对，为什么我们不启动任何API密钥

00:27:36.720 --> 00:27:41.679
是的，所以哦，这很有趣

00:27:41.679 --> 00:27:47.840
所以有办法从goipfs取回api还是我们应该问一下

00:27:47.840 --> 00:27:53.440
用户只要想编辑就可以再次添加它，或者

00:27:53.440 --> 00:27:57.600
他部分地做了像名字或

00:27:57.600 --> 00:28:04.240
是的，这就是当前的安全模型的含义

00:28:04.240 --> 00:28:07.919
转到go ipfs配置中的秘密

00:28:07.919 --> 00:28:11.840
并通过http api访问该文件，您可以

00:28:11.840 --> 00:28:17.760
发送您可以设置的值，您可以覆盖现有的值，但是

00:28:17.760 --> 00:28:20.799
一旦设置，就不可能重新读取

00:28:20.799 --> 00:28:25.200
http api，这意味着您可以喜欢显示那些

00:28:25.200 --> 00:28:29.440
像星号和

00:28:29.440 --> 00:28:32.640
如果您提交的更改与姓名一样

00:28:32.640 --> 00:28:37.600
嗯或不会更改api密钥的端点，但是在您更改api的那一刻

00:28:37.600 --> 00:28:43.520
将覆盖它的密钥um用户无论如何都不会看到api密钥

00:28:43.520 --> 00:28:47.919
因为它应该像呃

00:28:48.720 --> 00:28:53.679
所以我们可以做些我不知道价值可能是

00:28:53.679 --> 00:28:57.200
哦，天哪，这个私钥没有存储在这里，所以

00:28:57.200 --> 00:29:00.720
像这样的东西就在星号上

00:29:00.720 --> 00:29:06.880
如果用户对其进行了编辑，我们也会更新私钥，您也知道我

00:29:06.880 --> 00:29:10.240
意味着那将是最无缝的方式

00:29:10.240 --> 00:29:14.640
是为用户做的，只要用户不触摸私有api

00:29:14.640 --> 00:29:17.520
关键如果他想要无论如何都不会影响他

00:29:17.520 --> 00:29:20.960
更新私人apa密钥，他也应该能够做到

00:29:20.960 --> 00:29:27.360
是的，我是说那是相同的，也是我们相同的心理模式

00:29:27.360 --> 00:29:31.039
每次体验，我们都会进入配置页面以获取服务

00:29:31.039 --> 00:29:34.559
实际上不记得我们的密码，因此我们甚至都不会运行

00:29:34.559 --> 00:29:38.640
我们将鼠标移到密码盒上并带有小点的地方，所以我想我认为

00:29:38.640 --> 00:29:44.480
是完全可以接受的，就像用户开始编辑

00:29:44.480 --> 00:29:49.679
密码就像是空块一样，是的，是的

00:29:49.679 --> 00:29:52.960
是的，所以这就像一个低水平的关注

00:29:52.960 --> 00:29:56.880
嗯，我仍然不了解

00:29:56.880 --> 00:30:04.720
精确的映射看起来像是um，但是嗯，希望下次我们

00:30:04.720 --> 00:30:11.520
会看到一些好的东西，谢谢，然后删除集成

00:30:11.520 --> 00:30:15.279
没有做任何分析的事情，但是一切都搞砸了，但是

00:30:15.279 --> 00:30:19.760
这就是它，仅此而已

00:30:21.039 --> 00:30:27.919
希望我们能像本周或下周一样得到一些信息

00:30:27.919 --> 00:30:32.159
我们何时拥有实际的api

00:30:32.159 --> 00:30:38.559
嗯，我们会做决定的。像创建一个模型一样值得吗？

00:30:38.559 --> 00:30:42.480
服务或降落之前

00:30:42.480 --> 00:30:46.000
因为我们不想被这个事实所阻碍，我们需要一些东西来

00:30:46.000 --> 00:30:53.279
与go ipfs和jsfpfs进行交互并进行测试

00:30:53.279 --> 00:30:58.640
所以这可能是我们下周要解决的问题

00:31:01.760 --> 00:31:04.799
嗯，我有一个我忘了问的问题了

00:31:04.799 --> 00:31:08.159
我应该担心Web ui的测试水平如何

00:31:08.159 --> 00:31:12.399
就我何时更新新的ipfs api而言，我应该去尝试

00:31:12.399 --> 00:31:16.559
打破它或被测试可能会抓住那个

00:31:16.559 --> 00:31:22.480
我很确定测试是每个测试都像金丝雀测试

00:31:22.480 --> 00:31:26.720
屏幕等等状态屏幕

00:31:26.720 --> 00:31:31.120
我们希望对等ID在那里，这意味着您能够

00:31:31.120 --> 00:31:37.840
通过api获取与文件相同的id信息，我们尝试添加文件并

00:31:37.840 --> 00:31:42.480
然后确认它已被添加到列表（类似于对等屏幕），并

00:31:42.480 --> 00:31:46.720
设置，因此每个屏幕都有一个金丝雀测试

00:31:46.720 --> 00:31:52.640
该测试在实际的浏览器中运行，我们使用puppeteering和Chrome

00:31:52.640 --> 00:31:55.679
所以只要端到端测试通过，我就不会担心

00:31:55.679 --> 00:32:03.519
如果某些测试失败，那可能是因为类似的结构发生了变化，并且测试

00:32:03.519 --> 00:32:09.840
期待别的东西，但是如果他们通过了那应该没事

00:32:09.919 --> 00:32:13.440
是的，如果您对端到端ping我有任何问题，因为

00:32:13.440 --> 00:32:20.880
我最近修复了它们，所以我现在有了新鲜的嗯，

00:32:20.880 --> 00:32:24.320
这个键w或无论那是什么

00:32:24.320 --> 00:32:31.039
只出现在我们之前提到的端到端测试中

00:32:31.039 --> 00:32:37.200
ky斜线哦，是的，很可能，我们可能会使用

00:32:37.200 --> 00:32:44.640
内部也用于编排笔记的http客户端

00:32:44.640 --> 00:32:52.640
嗯，有一个名为ipfsd control uh的工具，它是由hugo和

00:32:52.640 --> 00:32:56.880
所有版本都依赖的较旧版本

00:32:56.880 --> 00:33:04.320
使用ky uh的http客户端，所以这就是为什么你看到的

00:33:04.320 --> 00:33:08.559
也许那就是如果我们升级到最新的ipfs control d

00:33:08.559 --> 00:33:14.799
嗯，这个问题会消失的吗？

00:33:14.799 --> 00:33:17.840
就像我问我不想的原因

00:33:17.840 --> 00:33:20.960
在一处进行两项更改，所以我想以某种方式将其拆分

00:33:20.960 --> 00:33:24.000
说实话，因为这是一个已知问题

00:33:24.000 --> 00:33:28.080
是的，老实说，我不记得了，但是如果你问

00:33:28.080 --> 00:33:32.159
雨果，他可能会记得，因为他就像在上游修理

00:33:32.159 --> 00:33:34.399
好的

00:33:35.440 --> 00:33:40.000
或者您是否可以启用ci test，并且至少在某些计算机上通过了

00:33:40.000 --> 00:33:43.440
我也认为还可以，但现在还不行

00:33:43.440 --> 00:33:47.279
在我的机器上工作，我不知道在ci上会发生什么，所以

00:33:47.279 --> 00:33:49.760
有点

00:33:50.840 --> 00:33:53.840
令人担忧的

00:33:54.000 --> 00:33:57.360
是的，我想我绝对可以看看

00:33:57.360 --> 00:34:04.720
在是公关与呃删除redux捆绑权

00:34:04.799 --> 00:34:07.840
是的，我不知道为什么它不运行测试，但是如果您可以运行它，我会

00:34:07.840 --> 00:34:12.800
看一下，如果没有，我会认为雨果或某人是的

00:34:14.320 --> 00:34:22.560
酷um总是yeah um Highlights嗯，我想我们在

00:34:22.560 --> 00:34:27.280
议程结束，所以我们这个星期效率很高

00:34:27.280 --> 00:34:31.919
重点是ipfs伴侣战舰，我将

00:34:31.919 --> 00:34:36.639
屏幕我的屏幕现在共享我的屏幕

00:34:39.040 --> 00:34:46.639
如此长的版本号，意味着新的Beta版本

00:34:46.639 --> 00:34:54.320
这个更好的新版本改进了协议处理的错误页面

00:34:54.320 --> 00:35:00.480
在firefox中，它也是第一个打开版本的版本

00:35:00.480 --> 00:35:07.040
关于更新的注释，因此用户现在可以看到更改了

00:35:07.040 --> 00:35:12.160
感谢jessica改进了那些协议处理程序屏幕

00:35:12.160 --> 00:35:19.359
这里的主要问题是当用户输入cidv 0时

00:35:19.359 --> 00:35:22.960
敏感所有以这些开头的标识符

00:35:22.960 --> 00:35:29.280
在位置栏中输入时的qm

00:35:29.280 --> 00:35:34.560
并按Enter键进入浏览器供应商，以降低速度

00:35:34.560 --> 00:35:38.480
这是一个问题，因为标识符以qm开头

00:35:38.480 --> 00:35:45.200
区分大小写，它是基于58的，因此现在用户可以理解此文字了

00:35:45.200 --> 00:35:50.560
错误页面，使他们可以使用cid检查器转换cid或

00:35:50.560 --> 00:35:54.960
命令行并修复它，现在当我们

00:35:54.960 --> 00:35:59.839
显示升级到新版本的发行说明

00:36:00.000 --> 00:36:04.400
告诉用户最新动态

00:36:04.960 --> 00:36:11.040
就是在ipv的同伴上哦，不，我们被chrome网站商店拒绝了

00:36:11.040 --> 00:36:16.160
我忘了那个呃，而当您加载时，我会注意到

00:36:16.160 --> 00:36:20.960
发行说明是首选，因此如果您不想被发行所困扰

00:36:20.960 --> 00:36:24.000
每次您可以在印刷机中将其关闭时记笔记

00:36:24.000 --> 00:36:27.920
哦，是的，我想我完全在这里了

00:36:27.920 --> 00:36:32.320
是的，所以在这里，您会收到有关更新的切换显示发行说明

00:36:32.320 --> 00:36:35.599
如果您不希望他们禁用它们，就是这样

00:36:35.599 --> 00:36:40.000
嗯，话虽如此，你可以发布，但

00:36:40.000 --> 00:36:44.400
如果Google不接受，没人会看到该版本，因此

00:36:44.400 --> 00:36:52.560
就像一个星期前，我们被模糊的自动回复拒绝了

00:36:52.560 --> 00:36:56.079
我怀疑是因为这个空白所以以前

00:36:56.079 --> 00:36:59.200
老实说，我们从未更改过它，我们有多个版本

00:36:59.200 --> 00:37:06.400
因此，结果就像是内部的

00:37:06.400 --> 00:37:12.480
Google部分um上的错误，这有点令人担忧，因为我们已经

00:37:12.480 --> 00:37:16.960
有一个浏览器扩展，由于某种原因，它突然被删除了

00:37:16.960 --> 00:37:20.560
好处是，我们有一个更好的渠道，这是一个单独的扩展

00:37:20.560 --> 00:37:26.480
这是一个单独的目的地ID，所以我该怎么做才能更好地发布

00:37:26.480 --> 00:37:29.599
是否有任何重大变化

00:37:29.599 --> 00:37:34.079
我们可以在Beta频道上测试审核过程，即使它获得了

00:37:34.079 --> 00:37:38.079
拆除了我们稳定的通道，所以仍然存在

00:37:38.079 --> 00:37:44.960
如果您希望生活在不断发展的边缘，这就是我们的处理方式

00:37:44.960 --> 00:37:52.240
安装我们的测试版频道很有趣，我相信我们有

00:37:52.240 --> 00:38:00.079
天哪，这是哪里，我相信拉斐尔有这个动画

00:38:00.079 --> 00:38:07.440
演示是的，您要我筛选吗

00:38:07.440 --> 00:38:12.480
确保这就像一个新的进度条

00:38:13.599 --> 00:38:19.359
我在Macbook上安装了此软件，现在我切换到了台式机

00:38:19.359 --> 00:38:26.240
所以我需要再次打开它，对此我感到抱歉

00:38:26.240 --> 00:38:30.839
尝试打开它就可以了下载开始

00:38:30.839 --> 00:38:38.720
好吧，嗯，这里的背景是我们有多个地方，我们会

00:38:38.720 --> 00:38:42.240
喜欢有点像进度指示器

00:38:42.240 --> 00:38:46.720
我个人找到了一种类似伴侣的方式

00:38:46.720 --> 00:38:50.800
这会暂时显示类似于启动屏幕的页面

00:38:50.800 --> 00:38:54.320
当人们尝试加载不是不是不是的内容时

00:38:54.320 --> 00:38:58.000
在他们当地的音符上，需要像在dht上抬头一样

00:38:58.000 --> 00:39:01.760
这可能需要几秒钟，有时甚至是几分钟

00:39:01.760 --> 00:39:05.599
嗯，所以我们可以介绍一下加载页面

00:39:05.599 --> 00:39:11.599
嗯，所以这个动画对于类似这样的东西非常有用

00:39:11.599 --> 00:39:15.200
是的，所以这里是人们不喜欢带有文字的那个

00:39:15.200 --> 00:39:18.720
我更喜欢我发短信但没问题的那个

00:39:18.720 --> 00:39:24.000
所以基本上这是它也可以有一个小版本和一个大版本

00:39:24.000 --> 00:39:28.079
因此它适合任何屏幕，我们可以将其作为

00:39:28.079 --> 00:39:32.960
一个小的加载屏幕，它应该可以工作

00:39:32.960 --> 00:39:36.240
这样，或者我们可以将其整页显示

00:39:36.240 --> 00:39:44.160
糟糕，它也应该作为整页加载工作，所以

00:39:48.480 --> 00:39:52.480
我期待分享的动画

00:39:52.480 --> 00:39:59.760
互联网抱歉，您得到了另一个吗

00:40:00.000 --> 00:40:04.370
是的，在twitters上，那不是我

00:40:04.370 --> 00:40:10.319
[笑声]那是一个模因

00:40:10.319 --> 00:40:17.760
实际上是你，是的，我打电话给我，只是添加了我的

00:40:17.760 --> 00:40:20.560
图片，你永远不知道会在

00:40:20.560 --> 00:40:25.839
最终版本

00:40:26.319 --> 00:40:29.760
你可以随意面对我们其中一个

00:40:29.760 --> 00:40:33.839
因为我是实现它的人，所以您永远不会

00:40:33.839 --> 00:40:38.880
像ipfs贡献者的大头像一样

00:40:38.880 --> 00:40:43.599
显示随机的人，我认为这次会议结束了

00:40:44.400 --> 00:40:48.880
所以我得到了你所有的同龄人身份证，当我找到他们的时候

00:40:48.880 --> 00:40:53.920
在网络用户界面上，我将在加载动画中启动您自己的头像，因此只有您可以

00:40:53.920 --> 00:40:57.280
看到它或其他人的脸像聊天

00:40:57.280 --> 00:41:01.359
轮盘赌好吧，我认为这是我们的结尾

00:41:01.359 --> 00:41:05.440
突出显示，我看不到任何其他议程项目，所以我

00:41:05.440 --> 00:41:10.240
现在将停止录制，谢谢您的收看

00:41:10.240 --> 00:41:16.480
正在看这个或在听这个呃，两周后你会听到你的声音

00:41:16.480 --> 00:41:21.839
再见

