WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.689 --> 00:00:10.860
欢迎使用GUI，并在网络浏览器中会回想起与那些相关的内容

00:00:10.860 --> 00:00:20.160
今天是ipfs周围的事情和其他事情，我认为是9月4日

00:00:20.160 --> 00:00:28.949
如果任何人在最后一刻都失去话题，就让我们快速进入议程

00:00:28.949 --> 00:00:37.590
他们将其提上议事日程，而我刚开始的费用就像第一个项目是我的一样，因此

00:00:37.590 --> 00:00:45.539
平稳的过渡我想快速给出有关工作进展的报告

00:00:45.539 --> 00:00:55.260
简要地嵌入了J的ipfs，所以有一长串的东西，其中之一

00:00:55.260 --> 00:01:02.640
事情是本地发现以及UDP和TCP传输，您可以看到这些不是

00:01:02.640 --> 00:01:11.880
在这里检查了一下，但是我应该能够进行快速演示，看看我们在哪里

00:01:11.880 --> 00:01:21.119
今天就这样，所以我每晚都做对，并且我已经建立了IP首先编译

00:01:21.119 --> 00:01:28.320
来自本地的开发人员分支，以便更快地进行演示，但是它将

00:01:28.320 --> 00:01:35.610
很快以PR身份提交，因此我启动了ipfs伴侣，您可以看到它处于离线状态

00:01:35.610 --> 00:01:40.590
因为我没有本地运行的IP，只是浏览器扩展和

00:01:40.590 --> 00:01:53.759
就像在离线模式下一样，这很让人伤心，但是总可以喜欢看一下

00:01:53.759 --> 00:01:59.290
浏览器扩展程序的控制台，它处于脱机状态

00:01:59.290 --> 00:02:06.790
[音乐]，但现在我们应该可以了-很好

00:02:06.790 --> 00:02:12.730
让我将其移到正确的位置，我们应该能够转到设置并切换到

00:02:12.730 --> 00:02:19.390
嵌入式节点，在勇敢的嵌入式节点中，可以访问Chrome套接字API

00:02:19.390 --> 00:02:24.910
现在，当我们切换到该功能时，右侧会发生各种变化

00:02:24.910 --> 00:02:36.940
屏幕，所以我将在此处向上滚动，您可以看到我们已经有11个同行，我应该

00:02:36.940 --> 00:02:44.620
能够在我第一次打开时打开Web UI可能很慢，因为它不是

00:02:44.620 --> 00:02:51.130
本地缓存，它是从我的PFS网络中获取的，但最终所有资产

00:02:51.130 --> 00:03:02.380
将会加载，但是在右侧您可以看到

00:03:02.380 --> 00:03:06.970
每晚嵌入的便笺将它们组合在勇敢的内部，所以在左侧

00:03:06.970 --> 00:03:13.570
我喜欢在哪边，您可以看到它简单的ipfs，让我们转到

00:03:13.570 --> 00:03:23.250
纯屏幕，我们可以看到有11个对等方，这些对等方与

00:03:23.250 --> 00:03:34.630
TCP是怎么发生的以及为什么这两个为什么像未知的那样

00:03:34.630 --> 00:03:40.480
有趣的是，在右侧我们可以看到一个成员，其笔记开始但

00:03:40.480 --> 00:03:46.739
这里有一个有趣的花絮，有一个本地DNS发现已启用

00:03:46.739 --> 00:04:02.260
如果我们滚动或也许我们将其过滤掉，您会看到mdns local em

00:04:02.260 --> 00:04:12.489
我每10秒钟就会进行一次dns查找，并且我的co ipfs实例将在

00:04:12.489 --> 00:04:18.989
JS ipfs Embedded刚刚发现了同一网络上的另一台计算机

00:04:18.989 --> 00:04:28.900
勇敢的内部，这很酷，这是两个TCP的演示

00:04:28.900 --> 00:04:34.180
传输导致所有这些引导节点在这里，如果我去设置它

00:04:34.180 --> 00:04:45.509
会更加明显，让我喜欢，所以引导区在这里有点大

00:04:45.509 --> 00:04:52.990
但是它很大是有原因的，因为我已经放置了所有引导地址

00:04:52.990 --> 00:05:00.510
来自节点设置，仅是TCP地址

00:05:00.510 --> 00:05:10.979
还有WebSocket地址，并且预载节点被列为两个

00:05:10.979 --> 00:05:17.259
WebSocket和TCP地址，所以有趣的是顺序很重要

00:05:17.259 --> 00:05:24.180
如果第一个地址是TCP，而不是WebSocket，它将被使用。

00:05:24.180 --> 00:05:29.979
现在，嵌入式节点可以同时运行WebSocket和TCP传输，这意味着

00:05:29.979 --> 00:05:38.620
它可以连接到侦听WebSocket传输的两个节点，但也可以像

00:05:38.620 --> 00:05:45.550
没有这个的常规ETF，但是我们想优先考虑TCP

00:05:45.550 --> 00:05:53.020
由于性能原因而导致的性能问题目前，我主要是

00:05:53.020 --> 00:05:57.849
尝试使用引导程序，并且看起来工作正常，它可以

00:05:57.849 --> 00:06:05.020
TCP和我确认连接已列出已建立的连接

00:06:05.020 --> 00:06:12.430
由J的ipfs排名最勇敢的人是TCP，即使我们在

00:06:12.430 --> 00:06:18.070
引导节点，这很有意思，接下来是什么

00:06:18.070 --> 00:06:23.409
我停止分享了，所以我可以看到你，看到有问题，但是这是什么

00:06:23.409 --> 00:06:30.020
接下来，这也是肯定的，就像我们可以发现其他

00:06:30.020 --> 00:06:35.289
请注意，下一步是确保其他节点可以发现我们的嵌入式节点，并且

00:06:35.289 --> 00:06:41.810
那么我们将不得不破坏能够立即发现彼此的浏览器

00:06:41.810 --> 00:06:46.370
中断浏览器能够发现您的本地go aqui快速记录，但无法

00:06:46.370 --> 00:06:50.930
像宣布自己一样，另外一个话题是我们还没有高清

00:06:50.930 --> 00:06:58.039
尝试启用高清，但它并没有像使用所有CPU一样，所以在那里

00:06:58.039 --> 00:07:03.650
某些性能问题，我们可以使用委派生根来

00:07:03.650 --> 00:07:10.240
直到DHT准备好为止，但是这带来了很多问题

00:07:10.240 --> 00:07:19.460
预载节点和委托道路注释的性能，所以这就是汽车

00:07:19.460 --> 00:07:23.419
他们是否喜欢它只是我们所处的对象，所以下一步是弄清楚

00:07:23.419 --> 00:07:30.289
如何使用本地进行本地DNS发现的网络公告

00:07:30.289 --> 00:07:36.320
工作，然后可能会花费一些时间使DHT达到我们所需要的水平

00:07:36.320 --> 00:07:44.870
不需要任何第三方，并记下任何问题，对我进行的最新更新感到抱歉

00:07:44.870 --> 00:07:53.169
认为艾伦先是然后放弃了这是非常酷的事，我感到非常兴奋

00:07:53.169 --> 00:07:59.479
太好了，我有一个关于发现和运输的问题

00:07:59.479 --> 00:08:05.840
像它们是如何构建的，它们是一个单独的模块，还是您只是

00:08:05.840 --> 00:08:10.580
使用不同的东西，就像它是现有的拥有不同东西的人的叉子一样吗？

00:08:10.580 --> 00:08:15.710
需要或喜欢它是如何工作的，您是否可以链接到他们，以便我

00:08:15.710 --> 00:08:20.030
可以看看我真的很感兴趣，所以这就是它的来源

00:08:20.030 --> 00:08:29.810
有趣的是，因为这些是JCPS在节点中使用的相同模块，所以

00:08:29.810 --> 00:08:39.199
这也是，所以魔术只是一个polyfill和polyphen的东西，所以我们有

00:08:39.199 --> 00:08:42.890
填充各种鞋带并修复较小或较大的错误

00:08:42.890 --> 00:08:50.990
当我们想在同一时间快乐地打开时打开库

00:08:50.990 --> 00:08:56.240
上下文，因为这就像打开CP传输本身的TCP端口一样

00:08:56.240 --> 00:09:03.710
相似，它在fournette模块上使用了相同的polyfill，这很好，因为

00:09:03.710 --> 00:09:08.090
相同的代码有效，我们无需维护单独的模块即可解决问题

00:09:08.090 --> 00:09:17.480
我不确定是否需要查看是否可以使其本身被发现，因为

00:09:17.480 --> 00:09:22.190
现在传输主要是在客户端模式下，我喜欢连接到

00:09:22.190 --> 00:09:28.940
多其他TCP多其他，但我不确定我是否能够

00:09:28.940 --> 00:09:35.960
连接到我，我需要看看TCP传输本身是如何连接的

00:09:35.960 --> 00:09:40.520
在杰西卡（Jessica）电影节中，因此它会更新喜欢的广告

00:09:40.520 --> 00:09:47.330
它将自己的TCP地址添加到其列表，现在将其添加为自己的地址列表，如下

00:09:47.330 --> 00:09:54.920
据我所见，我勇敢地看到了J的ipfs并没有添加任何ipv4地址，因此

00:09:54.920 --> 00:09:59.050
我认为这就像在其他地方添加

00:10:00.910 --> 00:10:05.870
所以我们要么在用户群中弄清楚

00:10:05.870 --> 00:10:12.680
或者我们只是编写自定义模块，就像编写自定义模块始终

00:10:12.680 --> 00:10:15.950
一个选项就像我最想使用的最坏情况

00:10:15.950 --> 00:10:23.960
相同的代码库不太好，是的，您可以共享您正在使用的polyfill还是

00:10:23.960 --> 00:10:29.030
我们就像哦，是的，就像我指向放置在意大利面中的面食一样

00:10:29.030 --> 00:10:34.640
确定发生位置的代码，就像我可以链接您打开的PR，但我可以链接

00:10:34.640 --> 00:10:39.380
您到我有的分支机构，所以您现在不必这样做，但是就像您想要的那样

00:10:39.380 --> 00:10:44.690
放入文档之类的东西哦，是的，是的，所以我们使用相同的

00:10:44.690 --> 00:10:51.530
polyfills只是一个配置问题，我们可能会支持

00:10:51.530 --> 00:10:53.980
像

00:10:54.030 --> 00:11:00.990
websocket明星侦听WebSockets很多种，我们需要创建一个自定义

00:11:00.990 --> 00:11:05.970
脂质成为捆扎机的功能，因为现在我就像通过

00:11:05.970 --> 00:11:14.270
配置，但要进行更高级的设置，我们需要创建一个自定义的捆绑软件deitrick

00:11:14.270 --> 00:11:20.790
你有问题，我和艾伦有类似的问题，我想将会是

00:11:20.790 --> 00:11:25.050
共享总体架构方法以减轻负担真的很有用

00:11:25.050 --> 00:11:29.130
是否有一些有关您如何进行该过程的文档

00:11:29.130 --> 00:11:33.630
在您所居住的地方建造塑料填充物的过程，就像您知道自己的

00:11:33.630 --> 00:11:38.460
多边形填充节点API是存在于特定对象的Web扩展上下文中的

00:11:38.460 --> 00:11:44.070
我承认代码是普通天才的浏览器，是否可以认为它位于

00:11:44.070 --> 00:11:47.460
友好的环境可以运动所有需要的东西，但实际上只是

00:11:47.460 --> 00:11:51.480
您知道自己创建的伪造品，您在这样的环境中将其映射

00:11:51.480 --> 00:11:53.670
甚至知道它已经可以在浏览器中使用了，而且不必在意

00:11:53.670 --> 00:11:58.230
这很酷，所以如果您能写一个描述它会很棒

00:11:58.230 --> 00:12:02.930
也许这是一篇简短的博客文章或一些文档或类似的内容

00:12:02.930 --> 00:12:09.060
描述了我们生活的整体拓扑，因此我认为广播

00:12:09.060 --> 00:12:11.880
起来也将真正帮助其他浏览器供应商，无论他们如何思考

00:12:11.880 --> 00:12:15.630
之所以会喜欢，是因为我认为您知道大多数浏览器都在浏览

00:12:15.630 --> 00:12:19.410
他们看到了，我给了SS这个非常大的独立项目，

00:12:19.410 --> 00:12:23.100
堆栈，我必须将其购买到所有这些东西，但是您在此处显示的是

00:12:23.100 --> 00:12:28.590
其实，您实际上只需要其中一些核心网络原语

00:12:28.590 --> 00:12:33.630
api和一个运行环境，看起来像node并称其为good

00:12:33.630 --> 00:12:37.440
一切都可以正常工作，所以我很乐意为您建立这个为您

00:12:37.440 --> 00:12:43.380
共享此方法的简单性，以便其他人可以了解这些要点

00:12:43.380 --> 00:12:48.210
是如何发生的，是的，我们去年做了类似的事情

00:12:48.210 --> 00:12:54.390
对于Lipke网站，就像PD网站的概述一样苍白

00:12:54.390 --> 00:12:59.520
在同伴中进行实验，我认为我们可以从添加类似以下内容开始

00:12:59.520 --> 00:13:05.360
docs目录，最终它可能会发展成为我不喜欢的博客文章

00:13:05.360 --> 00:13:08.730
提交者pyaare但因为我想弄清楚

00:13:08.730 --> 00:13:15.089
就像服务器模式一样，基本上可以接受来自

00:13:15.089 --> 00:13:19.680
在我真正喜欢让PR准备好进行审查之前，其他其他人，因为它是

00:13:19.680 --> 00:13:23.759
最终我们可能不得不创建自定义模块之类的东西，而我

00:13:23.759 --> 00:13:30.779
我只是想避免一些事情，但是就像超级超级兴奋，所以我就是

00:13:30.779 --> 00:13:36.060
想要展示它，是的，令人惊讶的是，我也会说，当我们

00:13:36.060 --> 00:13:41.339
编写Lib D网站是我们发现的其中一件事情

00:13:41.339 --> 00:13:44.910
充当客户端而不是充当服务器来对路径进行编码

00:13:44.910 --> 00:13:51.720
是非常不同的，并且该代码的性能特征

00:13:51.720 --> 00:13:55.759
真的很有挑战性，所以我们一开始在网络上收听

00:13:55.759 --> 00:14:00.000
广播说我们可以从Mdns作为一个网络访问资源，但是

00:14:00.000 --> 00:14:08.970
巨型HTTP客户端中的TCP服务器代码也认为我们发现了一些问题

00:14:08.970 --> 00:14:15.180
我们发现的地方我们发现了挑战，所以可能是因为可能是因为

00:14:15.180 --> 00:14:18.509
真的不一样，这是第一次，也许是很好

00:14:18.509 --> 00:14:26.130
不是那个突破被用于那些Chrome套接字api，所以这些是并且可能

00:14:26.130 --> 00:14:30.089
桥中未经过良好测试的代码路径，即使它们可能适用于Chrome OS

00:14:30.089 --> 00:14:37.170
我相信那些破坏了这些API简单AF的其他使用者的API是

00:14:37.170 --> 00:14:43.740
在这一点上扫了洪流，它可能正在使用相同的多边形

00:14:43.740 --> 00:14:47.910
但我真的很想知道我没有意识到他们正在使用

00:14:47.910 --> 00:14:54.809
他们使用相同的基础设施的原因是，它将有四个

00:14:54.809 --> 00:15:04.110
如果我们有一些模块或polyfill可以

00:15:04.110 --> 00:15:13.079
使chrome API看起来像Lib D web，因为那时我们已经可以使用

00:15:13.079 --> 00:15:23.579
像在Firefox中一样，我们可以使用实时d网站，并且我们实际上使用的是TCP或D

00:15:23.579 --> 00:15:32.910
 Web传输和发现，我们可以在chrome中使用相同的

00:15:32.910 --> 00:15:39.470
浏览器，如果X bar只是一个Web API

00:15:40.130 --> 00:15:48.630
但这是另一种方式，所以这样做的问题是

00:15:48.630 --> 00:15:55.350
我们从2018年开始的集成基于协议处理程序API，因此我们没有

00:15:55.350 --> 00:16:01.709
就像垃圾邮件本地HTTP网关一样，我们就像将有效负载注入处理程序中，

00:16:01.709 --> 00:16:06.180
我们无法为您提供帮助，但是我们围绕

00:16:06.180 --> 00:16:13.050
开发类似于我们生命中最勇敢的网络项目

00:16:13.050 --> 00:16:19.160
chrome插座，我们为网络图模块准备了polyfills，我相信我们有

00:16:19.160 --> 00:16:25.910
在Liberty网站上绘制polyfill的图我认为我们没有净图

00:16:25.910 --> 00:16:31.740
当我们开始收集它们时，github上就有了一个飞跃的D网站或组织。

00:16:31.740 --> 00:16:39.329
 libfill的polyfills网络是的，我相信我们最终将获得净收入

00:16:39.329 --> 00:16:46.500
和D Graham也许也可以在Lib Web上使用DNS，我们可以

00:16:46.500 --> 00:16:51.329
在那里做与我们在这里所做的相同的事情，只是为了勇敢

00:16:51.329 --> 00:16:57.870
就像协议处理程序一样，它会更改位置栏中的动态

00:16:57.870 --> 00:17:03.449
以及浏览器如何处理内容，因此不再是常规HTTP，就像

00:17:03.449 --> 00:17:10.890
我进行了一些简短的讨论，像那样勇敢地在我心中升起

00:17:10.890 --> 00:17:17.220
如果他们在将来的某个时间计划，则在网络上以及内部都有此API

00:17:17.220 --> 00:17:22.620
向他们添加更多的低层集成，这将是一个模板，因此我们不

00:17:22.620 --> 00:17:28.160
发明这多个想法只是重复使用有效的东西和已证明的东西

00:17:28.160 --> 00:17:34.799
但是的，令人兴奋的是，我也鼓励更多的节点

00:17:34.799 --> 00:17:39.960
专注的方法，即实时D Web API非常特定于我们所拥有的

00:17:39.960 --> 00:17:48.090
在Firefox中，并没有针对任何特定实现进行真正的优化

00:17:48.090 --> 00:17:50.750
那

00:17:51.020 --> 00:17:55.370
我们不断回到的一件事是也许我们应该也许

00:17:55.370 --> 00:17:59.809
应该只为所有节点网络堆栈和文件系统编写polyfill

00:17:59.809 --> 00:18:04.940
然后公正地让协议处理程序协议和发布站起来

00:18:04.940 --> 00:18:11.420
例如特定于浏览器的API，它确实知道节点中的推论，并且一旦您

00:18:11.420 --> 00:18:17.360
通过polyfills各种其他节点具有某种程度的节点兼容性

00:18:17.360 --> 00:18:22.370
东西只是一种作品，然后您就可以升级整个生态系统，

00:18:22.370 --> 00:18:28.280
您还拥有一个适用于已经拥有开发人员的工作流程

00:18:28.280 --> 00:18:32.420
工具联盟和一切，而使Lib D web更好的投资

00:18:32.420 --> 00:18:38.990
仅缩小，因为获取Lib D Web的路径存在于其他路径中

00:18:38.990 --> 00:18:45.140
我认为Firefox以外的地方还不够强大，

00:18:45.140 --> 00:18:50.600
描述那里的挑战，而我对D Web的理解更亲切

00:18:50.600 --> 00:18:57.740
小麦被创造出来是一种我们可以暴露的东西，并且

00:18:57.740 --> 00:19:07.490
那样，所以我要说的是，如果我们只是说我们

00:19:07.490 --> 00:19:11.929
需要像AP的眼睛一样的节点，它全有或全无，没有

00:19:11.929 --> 00:19:17.390
就像你知道的那样，你可以拥有克，所以你需要

00:19:17.390 --> 00:19:21.679
可以让人们食用它，所以就没有我们只能拥有的东西了

00:19:21.679 --> 00:19:26.600
其中一半是因为它不适合安全性，我想

00:19:26.600 --> 00:19:30.710
D Web就是那种最好的地方，我们可以很好地揭露它

00:19:30.710 --> 00:19:37.070
这些点和Celestia的原因是我建议我同意那是

00:19:37.070 --> 00:19:39.590
就像我们当时所说的那样，什么是完全正确的

00:19:39.590 --> 00:19:43.309
我们可能会公开的最小功能，这将为您提供

00:19:43.309 --> 00:19:46.730
这-是的，让它，让SSB和我给她的

00:19:46.730 --> 00:19:50.900
我同意，如果没有像这样的节点星，

00:19:50.900 --> 00:19:53.940
太神奇了，会把邻居的东西放进去，但这是

00:19:53.940 --> 00:20:02.040
我猜一点儿都没有，但是是的，很好，是的，绝对是他们

00:20:02.040 --> 00:20:07.350
我们给的占用是他们消失的地方，然后是时间

00:20:07.350 --> 00:20:13.820
使节点兼容的polyfill确实有很多工作

00:20:18.630 --> 00:20:29.950
诸如此类的事情，我们也许可以抽象

00:20:29.950 --> 00:20:34.930
听起来像是与chrome插座相关的低级内容，但它们也离开了网络

00:20:34.930 --> 00:20:43.210
通过创建像通用的高级API一样只是隐藏这两个API，

00:20:43.210 --> 00:20:52.710
这样就添加了一个新的API，而不是像我们在同一时间重用节点一样

00:20:52.710 --> 00:20:58.600
可能不需要像所有API一样，我认为我们实际上不喜欢

00:20:58.600 --> 00:21:03.930
我们现在使用的抛光我不知道它是否实现了整个网络

00:21:03.930 --> 00:21:10.270
包，它仅实现了足以使HTTP服务器正常运行的功能

00:21:10.270 --> 00:21:17.650
通过我们的运输工具打开插座，无需更改任何代码

00:21:17.650 --> 00:21:23.800
只是需要一些警告就足够了，或者就像显示方法错误一样

00:21:23.800 --> 00:21:28.270
是这个运行时不支持的，是的，我想你只需要

00:21:28.270 --> 00:21:34.420
明确指出哪一部分是你的好狗，或者如果我不愿意的话

00:21:34.420 --> 00:21:39.670
鼓励或艾伦（Alan）仅使用lib T web作为我们的API的想法

00:21:39.670 --> 00:21:47.560
与第三点相对应的功能性polyfill哦，是的

00:21:47.560 --> 00:21:53.140
泡沫包装纸，是的，我想就是这样，即使我们认为

00:21:53.140 --> 00:21:58.710
我们应该厚嘴巴的网，而不是镀铬插座

00:22:01.160 --> 00:22:06.910
好吧，我想下一个是

00:22:06.910 --> 00:22:12.030
也许我会分享屏幕

00:22:12.720 --> 00:22:21.280
删除配置以覆盖HP网关上的联系人类型之类的东西，让我们开始吧

00:22:21.280 --> 00:22:35.860
它不是绿色的快乐主题，所以我们有HTTP网关，有些人喜欢

00:22:35.860 --> 00:22:41.710
想要使用ipfs托管网站，并且有一些极端情况

00:22:41.710 --> 00:22:48.760
HCP凯特（Kate）方法返回文件时，内容类型与内容类型相关

00:22:48.760 --> 00:22:59.350
无效的内容类型，有时会破坏某些图像，例如SVG图像

00:22:59.350 --> 00:23:07.270
被解释为XML或纯文本，然后浏览器甚至拒绝呈现它

00:23:07.270 --> 00:23:14.440
尽管它很好，但还是有一些不太受欢迎的内容文件类型

00:23:14.440 --> 00:23:22.570
应用程序和应用程序使用的文件需要此特定文件

00:23:22.570 --> 00:23:27.700
由HTTP服务器返回的具有特定内容类型的类型，没有该类型的内容

00:23:27.700 --> 00:23:32.740
不起作用，因此在多种用例中，由...返回的内容类型

00:23:32.740 --> 00:23:39.520
HTTP网关会给人们带来问题或使事情变得更加艰难，我们一直在努力

00:23:39.520 --> 00:23:47.800
讨论如何解决此问题的潜在解决方案

00:23:47.800 --> 00:23:54.580
人们来指定或覆盖内容类型，因为现在当您请求时

00:23:54.580 --> 00:24:00.340
来自Gateway的文件在幕后发生的事情是80 FS或jessep

00:24:00.340 --> 00:24:05.530
您的文件基本上是在嗅探它看起来的标题

00:24:05.530 --> 00:24:12.670
在文件标题的几个字节处，并基于一些不可思议的字节码

00:24:12.670 --> 00:24:16.460
它识别出哦，这总是这种类型的图像

00:24:16.460 --> 00:24:24.320
那些自行车，所以这可能是JPEG之类的东西，所以这是一个问题

00:24:24.320 --> 00:24:32.450
因为它是原始的，所以它依赖第三方库来始终执行内容

00:24:32.450 --> 00:24:38.900
以确定性的方式嗅探，这些库得到更新，我们也期待

00:24:38.900 --> 00:24:44.330
在文件扩展名处，但是新的文件扩展名可能会更改，也可能不会更改

00:24:44.330 --> 00:24:50.540
总是存在，所以这里有一些我链接的问题的例子

00:24:50.540 --> 00:24:58.610
然而，我们首先讨论的潜在解决方案是嵌入

00:24:58.610 --> 00:25:04.340
内容类型与数据本身，因此当您将文件添加到ipfs时，

00:25:04.340 --> 00:25:10.130
传递一个标志并指定这是一个XML文件或这是一个zip文件，并且

00:25:10.130 --> 00:25:14.720
内容类型将被添加到元数据中，并将随数据本身一起传播

00:25:14.720 --> 00:25:19.370
问题是，需要对低级管道进行类似的更改，并且

00:25:19.370 --> 00:25:24.650
它改变了挖坑本身的原因，当你死去的时候，给它增加了一些东西。

00:25:24.650 --> 00:25:30.830
如果您将某些内容添加到元数据中，它将更改最终的CID，因此，如果您

00:25:30.830 --> 00:25:35.390
ipfs上已经有东西了，您想用这种方式向它添加内容类型

00:25:35.390 --> 00:25:42.170
CID会发生变化，因此第二个想法是我们与史蒂芬（Steven）讨论的

00:25:42.170 --> 00:25:50.990
星期一和艾瑞克（eric）也提到了同样的理由，

00:25:50.990 --> 00:25:56.120
有关唯一服务v1元数据的相关讨论，因此基本上是

00:25:56.120 --> 00:26:03.770
而不是将内容类型嵌入到dag本身或的块中

00:26:03.770 --> 00:26:10.790
我们将提供一些特殊目录或特殊配置的数据

00:26:10.790 --> 00:26:18.410
文件，人们可能会掉落，而无需低水平的管道

00:26:18.410 --> 00:26:25.430
ipfs的员工，所以这个想法可能是一个很好的抽象，是我们在历史上

00:26:25.430 --> 00:26:30.760
拥有htaccess文件，或者也许这不是一个很好的例子

00:26:30.760 --> 00:26:37.900
一个更好的例子是如何将git属性文件称为git属性

00:26:37.900 --> 00:26:44.049
放在项目的任何目录中，您可以定义自己可以覆盖

00:26:44.049 --> 00:26:48.400
您可以定义此文件为二进制文件的文件类型，应为

00:26:48.400 --> 00:26:55.000
不喜欢带下划线的字符翻译之类的东西，我们可以

00:26:55.000 --> 00:26:57.549
提出类似的内容类型

00:26:57.549 --> 00:27:04.690
因此，您只需将文件放在目录中就可以说此文件是此内容类型

00:27:04.690 --> 00:27:10.780
然后当有人从HTTP网关加载胖数据时，HTTP网关

00:27:10.780 --> 00:27:14.710
本身将检查该文件是否存在以及是否存在，然后

00:27:14.710 --> 00:27:21.010
会禁用内容嗅探功能，并且只会将内容类型设置为

00:27:21.010 --> 00:27:27.070
文件中的一个，对于人们来说，覆盖是很容易的约定

00:27:27.070 --> 00:27:33.010
网关的行为最初可能只是内容类型，但

00:27:33.010 --> 00:27:41.470
我们也可以以这种方式自定义错误页面，因此就像一个单独的想法

00:27:41.470 --> 00:27:49.450
从将内容类型嵌入到单位的FS元数据中，这很可能是

00:27:49.450 --> 00:27:53.410
我们应该与Gateway团队讨论的事情，但我认为这也是

00:27:53.410 --> 00:27:58.540
与网络浏览器相关，因此如果有人有任何想法，请想动您的大脑

00:27:58.540 --> 00:28:07.799
问题或是的，所以来自Alain的问题是谁将创建此文件，因此

00:28:07.799 --> 00:28:17.230
我看到的方式是那些配置文件将由网站所有者创建

00:28:17.230 --> 00:28:23.500
因此，如果您要在ipfs上发布网站，则只需将此文件添加到

00:28:23.500 --> 00:28:28.929
您在网站上创建的目录，这就是为什么我们需要非常

00:28:28.929 --> 00:28:39.640
具体来说，这仅是为了覆盖您通过特定链接访问的内容类型

00:28:39.640 --> 00:28:45.610
现在，我会那样做的一个工具，如果您喜欢

00:28:45.610 --> 00:28:50.380
当您将材料添加到ITS时，它就会自动获得IP

00:28:50.380 --> 00:28:56.380
没有创建任何III认为应该是网关本身的可选功能

00:28:56.380 --> 00:29:03.730
它应该仅在网关范围内，以便网关准备响应时

00:29:03.730 --> 00:29:10.600
对于请求，它会检查该文件是否存在（如果该文件存在），然后它

00:29:10.600 --> 00:29:15.490
会覆盖内容类型，是的，我在阅读的末尾得到了它，但是我

00:29:15.490 --> 00:29:21.340
更像是第一次写的时候，哦，就像我写的那样

00:29:21.340 --> 00:29:26.289
将内容添加到BFS中，然后ipfs会为我创建该文件，以便当

00:29:26.289 --> 00:29:30.400
网关读取它是否可以像这样存在于其中

00:29:30.400 --> 00:29:36.669
同步问题，但也要在第一时间创建它，是的，我有问题

00:29:36.669 --> 00:29:41.260
是的，只是问号是一个更好的主意，是的，所以我认为这是个好方法

00:29:41.260 --> 00:29:49.179
考虑一下这是一个替代，因此默认情况下没有任何更改

00:29:49.179 --> 00:29:54.419
如果将来我们拥有此功能，Gateway将继续进行内容嗅探

00:29:54.419 --> 00:30:02.020
UNIX FS中的元数据，那么它将使用它，但是会更简单

00:30:02.020 --> 00:30:06.730
覆盖不需要在UNIX FS或Windows Server 2003中更改的内容类型的方法

00:30:06.730 --> 00:30:13.390
它只需要在HTTP网关代码中添加一个检查就可以了

00:30:13.390 --> 00:30:18.309
检查此文件是否有ipfs内容类型或是否存在某种内容

00:30:18.309 --> 00:30:23.320
如果存在，它将使用该内容中的内容类型

00:30:23.320 --> 00:30:28.570
具体来说将被覆盖，因此它将禁用嗅探它的内容类型

00:30:28.570 --> 00:30:32.799
会从文件中设置内容类型，可能应该

00:30:32.799 --> 00:30:40.419
还要将此X内容类型选项标头（不带任何嗅探参数）添加到

00:30:40.419 --> 00:30:46.150
在客户端上禁用嗅探，这样它将告诉浏览器不要进行任何嗅探

00:30:46.150 --> 00:30:54.640
使用这种内容类型好吧，它基本上必须手动提供

00:30:54.640 --> 00:30:59.050
想要覆盖内容类型的人

00:30:59.050 --> 00:31:04.960
人们不会一直在做这件事，只会为那些难得的人做

00:31:04.960 --> 00:31:14.890
有人需要从HTTP网关获取数据但需要有一个

00:31:14.890 --> 00:31:18.910
特定的内容类型，并且该人希望拥有相同的内容

00:31:18.910 --> 00:31:23.260
键入无论从哪个网关获取，这就是为什么

00:31:23.260 --> 00:31:28.360
配置将随数据本身一起传播，类似于获取

00:31:28.360 --> 00:31:35.380
属性配置文件，而不是像Hugo在Android X中链接的文件

00:31:35.380 --> 00:31:39.970
覆盖内容类型，但这类似于特定于服务器的内容，这就是

00:31:39.970 --> 00:31:47.260
就像如果我们仅在网关上更改其他网关那样的问题

00:31:47.260 --> 00:31:51.820
继续拥有相同的东西，所以这就是为什么让它随身携带的原因

00:31:51.820 --> 00:31:59.400
数据本身，并且只限于HTTP网关

00:31:59.400 --> 00:32:09.730
诀窍是实验室内容类型不使用的人

00:32:09.730 --> 00:32:14.980
网关也有感觉，我想这有点像

00:32:14.980 --> 00:32:18.610
出于同样的担忧，艾伦说要保持同步，谁会

00:32:18.610 --> 00:32:26.920
创作似乎很复杂，而且对于

00:32:26.920 --> 00:32:35.020
潜在的问题似乎也将出现在完整节点中，

00:32:35.020 --> 00:32:38.860
需要知道内容类型才能知道在

00:32:38.860 --> 00:32:45.220
客户端就像浏览器一样，因此如果您在相同的情况下用rave换出网关

00:32:45.220 --> 00:32:51.520
运行嵌入式完整节点并且有人加载我声称冒号斜杠斜杠CID

00:32:51.520 --> 00:33:00.850
你仍然有同样的问题，所以不正确，是的，所以这是不会的

00:33:00.850 --> 00:33:07.240
当您使用其CID请求数据时解决此问题

00:33:07.240 --> 00:33:16.629
使人们更容易在ipfs上托管网站，因此可以指定内容

00:33:16.629 --> 00:33:22.539
当您将网站发布到ipfs时键入，您不仅只有一个文本文件

00:33:22.539 --> 00:33:26.559
有一个目录，在该目录中有index.html，有一些目录

00:33:26.559 --> 00:33:31.600
资产，您可能有一些目录，以及如何

00:33:31.600 --> 00:33:36.370
在这种情况下覆盖内容类型是您只需添加该点

00:33:36.370 --> 00:33:44.769
ipfs子目录以及其他元数据是，但是我想我问的是

00:33:44.769 --> 00:33:47.919
就像网关是通向我们不需要网关的世界的过渡点

00:33:47.919 --> 00:33:53.769
就像现在所知道的，现在开了五个或更少的地方

00:33:53.769 --> 00:33:58.750
在这些实现中甚至没有20.5，所以如果有时间

00:33:58.750 --> 00:34:03.250
考虑在协议设计方面遇到什么障碍

00:34:03.250 --> 00:34:09.700
我在用例中，这就像时间用完了，如果你想得到

00:34:09.700 --> 00:34:13.510
在某个时候指出一点，所以我想是我想问的是

00:34:13.510 --> 00:34:18.579
更大的问题是，我们以后再打吗？

00:34:18.579 --> 00:34:22.480
只是这会推动罐子往下踢，直到我承认了这一点

00:34:22.480 --> 00:34:25.060
到处都是，我们就像男人，我希望我们有内容类型

00:34:25.060 --> 00:34:31.450
内置在元数据内置的协议中，我觉得没有

00:34:31.450 --> 00:34:35.139
永远不会有更好的时间问这个问题，然后我们将永远不会

00:34:35.139 --> 00:34:40.240
更好的时间进行向后不兼容的更改，所以我想

00:34:40.240 --> 00:34:43.569
我觉得通过做出这些类型的决策，我们可以

00:34:43.569 --> 00:34:48.609
几乎可以工作到特定于网关和网站的内容中

00:34:48.609 --> 00:34:55.629
具体的，但是如果该协议围绕此有更广泛的问题，我会

00:34:55.629 --> 00:35:01.510
喜欢在走解决方案之路之前回答这个问题

00:35:01.510 --> 00:35:08.140
完全一样，我有点像将想法上的链接链接到资源管理器上

00:35:08.140 --> 00:35:17.740
链接有在协议级别解决此问题的链接，所以我想成为

00:35:17.740 --> 00:35:24.110
非常具体，此讨论仅与HTTP HTTP Gate上的内容类型有关

00:35:24.110 --> 00:35:31.500
有什么我们可以尽快做的事情，以使人们更容易地发布

00:35:31.500 --> 00:35:37.980
网站并在ipfs上托管网站，因此如果存在

00:35:37.980 --> 00:35:43.860
提议在UNIX FSB中进行更改，以支持将内容类型嵌入到

00:35:43.860 --> 00:35:49.050
数据本身，这就是您提到的所有解决方案

00:35:49.050 --> 00:35:53.610
在协议级别的问题，因为一旦您添加此

00:35:53.610 --> 00:36:00.060
当您将数据添加到ipfs中时，元数据将始终存在于网关中

00:36:00.060 --> 00:36:05.850
当您从ipfs请求数据时，网关将看到该数据

00:36:05.850 --> 00:36:10.410
已经具有内容类型，它将不知道要做什么，只会使用

00:36:10.410 --> 00:36:12.540
数据本身附带的内容类型

00:36:12.540 --> 00:36:19.980
问题有点像现在到那时之间会发生的事情

00:36:19.980 --> 00:36:26.250
就像人们继续使用ipfs来发布网站一样，我认为这

00:36:26.250 --> 00:36:32.820
某种覆盖可能会使该操作更容易，因为我们已经

00:36:32.820 --> 00:36:40.440
多年来一直在谈论UNIX fSV，我认为它仍然存在，但有可能

00:36:40.440 --> 00:36:46.560
产生了，也许我们可以使人们早晚变得更容易，并且

00:36:46.560 --> 00:36:51.210
有一个单独的讨论，有时可能有人想

00:36:51.210 --> 00:36:58.520
提取具有嵌入的内容类型的现有数据，并且仍将其覆盖

00:36:58.520 --> 00:37:06.210
他们可能想使用一些特定的格式，例如

00:37:06.210 --> 00:37:09.780
内容类型，他们想人工修改版本或

00:37:09.780 --> 00:37:17.790
可能是解决方案的东西，所以可能不是，而是，我们可以

00:37:17.790 --> 00:37:22.830
放这两个东西可以生活在一起，这将是

00:37:22.830 --> 00:37:27.270
特定于http网关，仅用于在IP优先协议之间进行转换

00:37:27.270 --> 00:37:35.040
和HTTP语义对人们来说更容易抱歉，我想我的担心来自

00:37:35.040 --> 00:37:37.660
所以我完全同意你，即使你有旋律

00:37:37.660 --> 00:37:41.230
由于该协议，您可能还需要有时可以完全覆盖

00:37:41.230 --> 00:37:45.190
我们可以做的事情，但是当我们到达桥梁时我们可以越过那座桥，我们了解

00:37:45.190 --> 00:37:47.799
更好的是，他们做不到的任何缺点都将使这种方法更好

00:37:47.799 --> 00:37:51.970
是，我想我的担心来自诸如周围的话题

00:37:51.970 --> 00:37:57.970
WebSocket明星，而我们有很多地方，就像有库存缺口的历史一样

00:37:57.970 --> 00:38:04.690
我们投入了数年的时间，然后您说出类似的话，但您知道

00:38:04.690 --> 00:38:08.619
必须是两年三，但我想我现在就好像我们

00:38:08.619 --> 00:38:11.440
我真的很想达到1.0并想巩固该协议可以做什么

00:38:11.440 --> 00:38:17.260
会鼓励找出停止的差距，做出有意识的瘦身决定

00:38:17.260 --> 00:38:21.520
更努力地思考我们认为最终解决方案必须是什么，并集中精力

00:38:21.520 --> 00:38:26.260
运送资源的有限资源和工程方面的努力

00:38:26.260 --> 00:38:31.089
我们希望它不是在那个中间投入更多的时间

00:38:31.089 --> 00:38:35.380
学期，因为我真的没事，就像我希望对什么有一个全面的了解

00:38:35.380 --> 00:38:42.250
ipfs上的网站需要关注的重点，即使这意味着我们需要

00:38:42.250 --> 00:38:45.849
做出艰难的决定说是，我们不是，我们不会，我们不会

00:38:45.849 --> 00:38:49.660
再次准备好直到2020年底或类似的时间

00:38:49.660 --> 00:38:54.250
将更多时间投入基础架构，那么最终人们将不再需要

00:38:54.250 --> 00:38:59.289
是的，在这种情况下，听起来好像

00:38:59.289 --> 00:39:04.839
可能仍然有用，是的，是的，我完全同意，并且我有种感觉

00:39:04.839 --> 00:39:10.750
这是一个只要有HTTP网关的站，我很确定

00:39:10.750 --> 00:39:17.980
不会很快消失，因此需要重写内容类型，并且

00:39:17.980 --> 00:39:24.279
这不像是阻止将内容类型添加到唯一表面本身，而是

00:39:24.279 --> 00:39:29.619
就像网关本身的独立功能一样，我们就像

00:39:29.619 --> 00:39:35.740
提到过多次，所以我就像记录了这个想法一样，就在那里

00:39:35.740 --> 00:39:41.380
也许我们会在某个时候与Gateway团队联系，我会知道他们

00:39:41.380 --> 00:39:47.859
正计划支持自定义错误页面，因此如果您愿意，请放弃4

00:39:47.859 --> 00:39:53.980
 HTML会覆盖默认的Eero页面，因此我觉得它有点像

00:39:53.980 --> 00:39:58.300
如果类似约定，则最好使用类似点ipfs斜杠的方式，然后再进行类似操作

00:39:58.300 --> 00:40:04.180
您就像404 HTML一样，内容类型覆盖将只是另一个配置

00:40:04.180 --> 00:40:10.030
文件，你放在那里，是的，它可能更容易推理到

00:40:10.030 --> 00:40:12.880
如果我们列出了最大的问题是什么，最大的内容是什么

00:40:12.880 --> 00:40:19.030
如果这是设计的，那么人们输入yep的问题就是这个

00:40:19.030 --> 00:40:22.450
围绕一个非常特定的特定用例（特定700种类型）

00:40:22.450 --> 00:40:34.270
一直都在发生，是的，是的，但是艾伦也是如此

00:40:34.270 --> 00:40:40.000
提到如果您直接使用它来请求数据，则覆盖将不起作用

00:40:40.000 --> 00:40:44.380
我完全同意的想法，但是具体的用例是

00:40:44.380 --> 00:40:50.079
托管网站或托管具有特定内容类型的数据集，以便您

00:40:50.079 --> 00:40:56.670
总是将它们包装在某个目录中，我们不能做太多事情

00:40:56.670 --> 00:41:04.450
直接请求直接像文件一样，有一个文件名参数，

00:41:04.450 --> 00:41:11.410
您可以传递，这将覆盖URL的结尾方式，并且还会添加

00:41:11.410 --> 00:41:17.530
内容处理标头，以便网关返回并建议

00:41:17.530 --> 00:41:24.790
文件名在内容处置标头中，但是是的，我认为这已经超出了

00:41:24.790 --> 00:41:29.560
范围，我们通常就像个人一样，我只是想让它更容易

00:41:29.560 --> 00:41:34.089
人们现在将有关IP犯罪的ipfs房屋网站上的房屋

00:41:34.089 --> 00:41:38.849
这意味着某种网关访问

00:41:41.310 --> 00:41:48.460
好吧，我想我们已经把这个淘汰了

00:41:48.460 --> 00:41:53.830
任何人都有任何Cap'n Young的名字，请在is上对此问题进行评论

00:41:53.830 --> 00:41:58.360
现在有一个问题，如果我们有未来的讨论，我们可以链接，因为它

00:41:58.360 --> 00:42:06.160
一遍又一遍地回来，下一个是相关的通行证，是的，这是

00:42:06.160 --> 00:42:12.010
我在IP节日夏威夷上提出的问题到目前为止，感谢您的关注

00:42:12.010 --> 00:42:18.010
感觉我不太了解II曾经尝试过两个相对的点斜线

00:42:18.010 --> 00:42:22.480
路径或无/相对路径，似乎两者都是等效的

00:42:22.480 --> 00:42:26.490
应该起作用的相对路径

00:42:28.110 --> 00:42:32.860
就像Hawk Hawks的测试和我的测试基本相同

00:42:32.860 --> 00:42:39.730
我想只是做了一个页面，上面有选择时间的相对路径，是的

00:42:39.730 --> 00:42:46.080
所以III并没有查看关于该问题的最新消息，但是我知道我们已经

00:42:46.080 --> 00:42:51.760
各种静态网站生成器的问题以及存在的问题

00:42:51.760 --> 00:43:01.150
就像您在模板中编写的代码中所使用的代码一样，

00:43:01.150 --> 00:43:08.230
相对路径，但是生成静态网站的引擎采用了这些相对路径

00:43:08.230 --> 00:43:17.200
路径，并通过默认设置为root或root破坏了它们

00:43:17.200 --> 00:43:21.720
用绝对路径替换它们，但通常在stop中断时是

00:43:21.720 --> 00:43:28.450
静态网站生成器用与

00:43:28.450 --> 00:43:34.690
根并使它们从根开始我知道我们遇到了那些问题

00:43:34.690 --> 00:43:43.030
当雨果，但现在有一个选项来调整它，我不确定你

00:43:43.030 --> 00:43:46.900
使用任何特定的网站生成器，还是像手工，这是一个

00:43:46.900 --> 00:43:52.540
手工制作的HTML文件以及手工制作的CSS和JavaScript文件，但我知道

00:43:52.540 --> 00:43:55.640
正是我发布和上传的内容，并且尝试了

00:43:55.640 --> 00:43:59.620
先生。玩和间接通过我也让她难过

00:43:59.620 --> 00:44:06.200
好吧，那真的意味着它看起来像是网关

00:44:06.200 --> 00:44:09.340
配置不同

00:44:10.030 --> 00:44:15.260
您是否想在本地Cover Gateway上遇到相同的问题

00:44:15.260 --> 00:44:20.150
网关另一个网关，所以本地网关似乎正常工作，我无法得到它

00:44:20.150 --> 00:44:27.650
昨天我们这里的公众流血，是的，这使得测试变得更加困难，是的，我们

00:44:27.650 --> 00:44:31.880
我们希望与至少一个其他第三方网关进行交叉检查，以便

00:44:31.880 --> 00:44:37.970
确保它不像我们网关的配置障碍

00:44:37.970 --> 00:44:45.440
一些不相​​关的东西，我可能应该看看这个我

00:44:45.440 --> 00:44:52.300
思考，因为除非有人对此代码有任何想法，否则我不确定是否可以

00:44:52.300 --> 00:45:00.560
可能出问题的地方看起来真的可能有所不同，例如

00:45:00.560 --> 00:45:06.020
在次声处理时文件也可以正常工作，在我添加时它们不能工作

00:45:06.020 --> 00:45:11.870
病人在里面玩，让这一点在Fira经历，所以也许我只是

00:45:11.870 --> 00:45:16.580
做一个测试，将其推送到许多不同的网关，杰克逊（Jackson）看到了什么

00:45:16.580 --> 00:45:22.100
一百年的回报是对的，这是一个非常好的一点，就是我们

00:45:22.100 --> 00:45:26.630
假设从nice到网关的响应仅仅是一个响应

00:45:26.630 --> 00:45:32.240
您从哪个网关请求它，我们已经看到不同的网关具有

00:45:32.240 --> 00:45:36.470
不仅行为不同有些网关博客视频一些网关

00:45:36.470 --> 00:45:46.810
禁用的内容类型嗅探是的，我们之前讨论过有关网关的问题

00:45:46.810 --> 00:45:54.370
可能会中断测试，是的，是的，这是很多网关的东西，是的

00:45:54.370 --> 00:45:58.100
无论如何，我们不需要在这里解决此问题，我只是想如果有人

00:45:58.100 --> 00:46:03.140
关于那个问题的想法可能是我的头的另一侧有点

00:46:03.140 --> 00:46:08.859
关于像这样的问题，我们会像开发人员的经验一样落在哪里？如果我

00:46:08.859 --> 00:46:12.640
基本的Web开发人员正在做的事，我将给我们添加文件，并且我需要一些问题

00:46:12.640 --> 00:46:16.059
在他们的工作流程中，我们是否有一个地方可以收集开发人员

00:46:16.059 --> 00:46:27.069
经验和开发人员工作流程方面的问题，我的意思是像实施一样

00:46:27.069 --> 00:46:33.930
不可知回购也许诺克斯我们有狗

00:46:34.380 --> 00:46:39.910
也许就像创建您的仓库一样，是的，是的，也许这是一个

00:46:39.910 --> 00:46:42.309
文档部分，我的意思是我们仍然需要跟踪问题

00:46:42.309 --> 00:46:46.180
某个地方，如果存在开发人员工作流程问题，那么我们需要

00:46:46.180 --> 00:46:50.109
为了能够记录下来，也许我们将其归档，然后在文档存储库中

00:46:50.109 --> 00:46:53.140
今天在这里与Ducks组一起工作的代表

00:46:53.140 --> 00:46:57.249
和我们先生警告您有什么建议吗？

00:46:57.249 --> 00:47:00.819
吸纳12个左右的增长或经历问题以及如何跟踪它们

00:47:00.819 --> 00:47:04.529
以及放在哪里

00:47:06.010 --> 00:47:10.510
所以我想我要么是你分手了，要么是我的电话太糟糕了，我的先生。苏梅

00:47:10.510 --> 00:47:19.119
现在的问题是，您被静音了，可能分手了，一直都在发生。

00:47:19.119 --> 00:47:22.480
重复我会很高兴回答的是鸭子和

00:47:22.480 --> 00:47:25.930
开发人员经验小组跟踪这些类型的问题，您有计划吗

00:47:25.930 --> 00:47:29.500
在哪里放置开发人员经验和开发人员工作流程，她应该

00:47:29.500 --> 00:47:33.160
只需解决所有这些问题，提交的大型回购计划听起来就很好，谢谢，是的。

00:47:33.160 --> 00:47:37.930
本质上没有一个主要的地方，因为事情已经来了

00:47:37.930 --> 00:47:42.760
我们有一个更大的存储桶，我们开始组织事情，所以我想说

00:47:42.760 --> 00:47:45.670
您已经有一个收集或克莱顿这些东西的系统，然后

00:47:45.670 --> 00:47:51.420
在此之前，我会继续说那是一个好家，但我们一直

00:47:51.420 --> 00:47:59.200
只是在码头仓库上打开问题，跟踪很多东西，是的，

00:47:59.200 --> 00:48:01.210
尝试让Deb让我们兴奋的事情

00:48:01.210 --> 00:48:04.330
还没有深入到兔子洞里，是的，更多的是

00:48:04.330 --> 00:48:10.030
目前的内容景观是的，我可能应该增加一个部分去

00:48:10.030 --> 00:48:17.920
深绿色，我有点像一个问题，直到我们更好地了解

00:48:17.920 --> 00:48:24.130
来解决这个问题，就像在狗狗回购中贴上专门的标签一样

00:48:24.130 --> 00:48:29.470
或以某种方式我们希望将所有这些问题移至单独的仓库中

00:48:29.470 --> 00:48:35.890
我们发现我们只需要一个单独的地方，是的，因为我认为这会使

00:48:35.890 --> 00:48:38.859
对于这些事情中的每一个都有单独的问题更有意义，因为它们是

00:48:38.859 --> 00:48:42.220
会很快开始井喷，而不是遇到一个主要问题

00:48:42.220 --> 00:48:48.150
只是有噪音的威胁，所以贴上标签可能是一种非常聪明的方式

00:48:48.150 --> 00:48:52.480
好的，也许埃里克（Eric）可以建议一种我们可以消费的方式

00:48:52.480 --> 00:48:59.350
在两个小时的索引中，我是董事会成员，所以我们在

00:48:59.350 --> 00:49:03.580
根据设计内容，这些内容基本上进入了我们的冰盒，而我们

00:49:03.580 --> 00:49:07.920
可以更轻松地完成我们的卡片分类

00:49:07.920 --> 00:49:17.119
我想他几乎在你说他的名字魔术总是发生的第二秒就掉线了

00:49:17.119 --> 00:49:24.420
必须要进门了，好吧，让我们整理一下，让我们从标签开始

00:49:24.420 --> 00:49:27.779
在这里可以解决问题，然后我们可以迁移到更明智的地方

00:49:27.779 --> 00:49:30.170
那更好

00:49:31.130 --> 00:49:33.660
听起来很棒，我认为可能在

00:49:33.660 --> 00:49:38.039
至少是那种东西的自然而然的开始，直到我们有一个像

00:49:38.039 --> 00:49:43.500
一个专职Deverell的人，他正在管理这种事情，并且是唯一

00:49:43.500 --> 00:49:48.210
你还有另一件事是雨果和小便，我要见面

00:49:48.210 --> 00:49:54.480
如果您愿意，可以在月底的某天进行一些网络浏览器读取映射计划

00:49:54.480 --> 00:50:02.609
您有任何特殊要求的主题思想请我们和让我们知道尝试

00:50:02.609 --> 00:50:10.920
弄清楚今天我的连接太差了，尝试尝试找出什么

00:50:10.920 --> 00:50:18.049
浏览器景观将看起来像2020年的浏览器

00:50:19.710 --> 00:50:21.770
你

00:50:22.610 --> 00:50:29.470
如果您有任何类似的问题，我只希望每个人都可以

00:50:29.470 --> 00:50:38.950
围绕Web浏览器的问题只是为了在ipfs斜杠中打开一个问题

00:50:38.950 --> 00:50:46.450
在网络浏览器中，我将添加指向议程注释的链接，以便我们喜欢

00:50:46.450 --> 00:50:51.270
在进行计划时要考虑到这一点

00:50:56.010 --> 00:51:08.440
是我们决定建立坡道rasma的会议，不，这是公众场合

00:51:08.440 --> 00:51:10.470
会议

00:51:11.650 --> 00:51:18.880
我确实有一个我有一个我正在使用Mozilla参考Android的项目

00:51:18.880 --> 00:51:22.989
浏览器，然后执行Macbeth的操作，然后玩些什么

00:51:22.989 --> 00:51:27.640
捆绑在一起会是什么样子我选择了他的同伴作为网络

00:51:27.640 --> 00:51:37.660
Lib D网站的扩展，但实验是

00:51:37.660 --> 00:51:44.349
与那里的完整浏览器相去甚远，但与所有浏览器一样

00:51:44.349 --> 00:51:51.099
在移动设备上，这是一个非常有趣的主张，因为我总是

00:51:51.099 --> 00:51:57.670
就像我使用Firefox for Android一样

00:51:57.670 --> 00:52:03.160
接收器是否有扩展程序工作，您只需单击一下即可在

00:52:03.160 --> 00:52:10.450
像移动和桌面渲染模式一样，不确定是否所有人都知道

00:52:10.450 --> 00:52:17.979
真的很好，并且可以在嵌入式节点上进行编译，就像在工作时一样

00:52:17.979 --> 00:52:24.309
用于将文件上传到ipfs上的寄存器，这就是其中之一

00:52:24.309 --> 00:52:29.680
在我觉得我们没有的地方，这是一个简单的工具，我喜欢

00:52:29.680 --> 00:52:32.079
如果要执行类似的操作，我们就不会构建浏览器

00:52:32.079 --> 00:52:39.279
有趣的是，将其作为移动实用工具作为工具发布，并为此提供了便利。

00:52:39.279 --> 00:52:42.819
就其基本功能而言，这是相当低的，原因是

00:52:42.819 --> 00:52:48.759
参考浏览器工作已经完成并且伴随程序工作的事实

00:52:48.759 --> 00:52:54.579
已经完成，liddy web为我们提供了一种将它们融合在一起的方法，这确实给我们带来了挑战

00:52:54.579 --> 00:52:58.479
对于嵌入式节点，该API适用于mdns和侦听

00:52:58.479 --> 00:53:09.309
套接字TCP服务器套接字在移动设备上甚至比在移动设备中更容易躲闪

00:53:09.309 --> 00:53:14.309
我们这次第一次有龙

00:53:17.320 --> 00:53:23.410
实用性方面就像不发明太多，而就像获得

00:53:23.410 --> 00:53:27.190
我们已经拥有什么并将其打包在一起不确定如何

00:53:27.190 --> 00:53:31.150
它在iOS上的iPhone上看起来像，但是在Android上，您得到了所有这些

00:53:31.150 --> 00:53:37.540
激烈的计划，因此您可以与其他应用和此应用共享内容

00:53:37.540 --> 00:53:42.190
可能就像接收文本，数据或图片一样，只会照顾

00:53:42.190 --> 00:53:45.450
将其添加到IP犯罪中，这可能就是

00:53:45.450 --> 00:53:49.870
是第一个用例，是的，我想做的实验之一是

00:53:49.870 --> 00:53:54.400
开始浏览网络共享API的是chrome为

00:53:54.400 --> 00:53:59.740
在Android上使用pwace，因此实际上您可能只需要将ipfs上传到I

00:53:59.740 --> 00:54:07.540
 PFF在“共享”菜单中说，知道甚至不需要

00:54:07.540 --> 00:54:13.060
折叠起来，有一些有趣的实验可以让你知道我想

00:54:13.060 --> 00:54:16.690
即使这些即使进行书面练习也无法成为功能性的原型

00:54:16.690 --> 00:54:21.310
有点像这就是我们可以拥有的，并激发出

00:54:21.310 --> 00:54:33.550
想象力，是的，我们可以做更多的事情，我很高兴参加

00:54:33.550 --> 00:54:39.310
也许在本次会议的这几个星期中，您是埃里克（Eric）可以带领我们完成

00:54:39.310 --> 00:54:48.420
这些东西之一的纸制原型我是大屁股

00:54:55.210 --> 00:55:09.790
我们得到了四十秒，所以如果有任何最新的话题或问题

00:55:09.790 --> 00:55:15.410
演讲者，我很想看看克里斯会不会有人，我认为是克里斯

00:55:15.410 --> 00:55:22.010
说他如何完成句子也许埃里克你能知道我的电池没电了吗

00:55:22.010 --> 00:55:36.710
第二次，但我们可以跟进，没关系，我认为就是这样

00:55:36.710 --> 00:55:43.900
总结一下，非常感谢您加入我们的电话，下周见

