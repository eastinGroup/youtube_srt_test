WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.760 --> 00:00:08.080
欢迎来到盖亚尼网络浏览器的第22周双周电话会议

00:00:08.080 --> 00:00:14.559
2020年9月，我们终于发布了

00:00:14.559 --> 00:00:20.160
ipfs web ui，所以这是一个快速展示和讲述的内容

00:00:20.160 --> 00:00:23.920
新版本中有什么新内容，我们必须发布

00:00:23.920 --> 00:00:27.599
这就像是具有功能的领域，然后是

00:00:27.599 --> 00:00:32.160
随后的快速错误修复版本

00:00:32.160 --> 00:00:38.399
在那之后不久，这个网络ui将进入我们的演出之前，并且

00:00:38.399 --> 00:00:41.600
告诉此网络ui将进入go ipfs 0.7，

00:00:41.600 --> 00:00:47.120
下一个版本的iphone桌面，我们获得了ipfs桌面和ipvs

00:00:47.120 --> 00:00:50.559
预定不久后发布的随播版本

00:00:50.559 --> 00:00:54.399
下次在这个通话中，我们将讨论这些

00:00:54.399 --> 00:00:58.239
呃，杰西卡（Jessica），你想不想喜欢

00:00:58.239 --> 00:01:02.239
嗯，用户界面的变化，我可以稍后再演示

00:01:02.239 --> 00:01:07.840
远程api嗯，因为我要打电话给setup六月，目前有一个Web ui，但是

00:01:07.840 --> 00:01:11.840
如果您在这一点上给我一点时间，我什至不

00:01:11.840 --> 00:01:18.400
记住你问的最重要的是什么

00:01:18.400 --> 00:01:24.799
嗨，这是我们之前所做的，是的，所以像更改列表一样

00:01:24.799 --> 00:01:31.680
我认为我们想重点强调的是

00:01:31.680 --> 00:01:37.920
cli教师模式，可能是超级周围的变化

00:01:37.920 --> 00:01:42.960
品牌面包屑面包屑和欢迎页面

00:01:42.960 --> 00:01:46.960
连续性，我可以用演示远程API

00:01:46.960 --> 00:01:51.759
基本身份验证，因为我得到了，因为您有一个好用的东西

00:01:51.759 --> 00:01:56.560
我可以分享我的屏幕吗

00:01:59.360 --> 00:02:02.399
好的，所以我们在这里拥有一个美丽的网络用户界面

00:02:02.399 --> 00:02:10.160
精简的侧边栏菜单在那里，包括这个人在内，所以我们

00:02:10.160 --> 00:02:15.680
意识到我们感谢贡献者

00:02:15.680 --> 00:02:20.959
安德鲁（Andrew）的撰稿人说，欢迎消息有些隐蔽

00:02:20.959 --> 00:02:23.360
因为除了您之外，我们没有真正展示过

00:02:23.360 --> 00:02:26.080
屏幕空白，您还没有任何文件

00:02:26.080 --> 00:02:29.760
嗯，所以我们有一个不错的状态菜单

00:02:29.760 --> 00:02:35.519
如果您放弃连接，它也会在其中反映出来

00:02:35.519 --> 00:02:37.920
状态屏幕，并为您提供一些信息

00:02:37.920 --> 00:02:42.000
您可以立即执行操作，因为您可能没有核心

00:02:42.000 --> 00:02:45.120
弄清楚或者您的api在错误的端口上，或者

00:02:45.120 --> 00:02:47.840
那样的事情，或者您只是喜欢我，而您已经停止了

00:02:47.840 --> 00:02:51.599
守护程序一秒钟，但是这样您就可以成功地重新连接并得到

00:02:51.599 --> 00:02:55.200
这是很棒的um设置，这是

00:02:55.200 --> 00:02:59.840
太酷了，这来自哦，我们还在这里重新整理了一些东西

00:02:59.840 --> 00:03:02.879
以便更容易更改api地址

00:03:02.879 --> 00:03:06.720
您希望在那里重新配置您的api地址，但是

00:03:06.720 --> 00:03:09.920
这是真的很酷的零件浏览器模式

00:03:09.920 --> 00:03:14.800
ink，打开它，您会注意到在ips config fps config下方

00:03:14.800 --> 00:03:18.080
得到这个小图标，小图标遍布整个

00:03:18.080 --> 00:03:22.400
这样说的地方就对了

00:03:22.400 --> 00:03:25.599
他们都在这里，所以您可以固定删除任何东西

00:03:25.599 --> 00:03:30.159
或者您可以调用此客户端模式，然后在此处显示将其粘贴到您的计算机中

00:03:30.159 --> 00:03:33.920
终端在命令行中执行此操作，因此如果您只是

00:03:33.920 --> 00:03:36.879
下载的桌面，或者您只是在使用网络用户界面

00:03:36.879 --> 00:03:39.680
因为它更容易，是入门的好方法

00:03:39.680 --> 00:03:44.319
终端命令我们也有新的，令人兴奋的和闪闪发光的

00:03:44.319 --> 00:03:48.959
超级面包屑，很好，我的确有一些东西

00:03:48.959 --> 00:03:52.239
嵌套文件以演示所有权利，可以说我们拥有

00:03:52.239 --> 00:03:57.439
这些像猫，更多的猫，甚至更多的猫，我可以像这样

00:03:57.439 --> 00:04:01.120
那个坐在三位导演中的家伙深深地藏着更多的猫，我可以

00:04:01.120 --> 00:04:05.280
这样做，现在不见了

00:04:05.280 --> 00:04:12.159
但是立方体猫现在在这里超级闪亮，还有许多其他小改进，但是

00:04:12.159 --> 00:04:14.799
这些是我想要的主要

00:04:14.799 --> 00:04:21.759
lytle演示远程api authy的东西，是的

00:04:21.759 --> 00:04:28.240
让我快速分享我的屏幕，是的，所以就像默认视图一样

00:04:28.240 --> 00:04:34.240
当您连接到ipfs节点时，您可以单击“高级”以查看呃

00:04:34.240 --> 00:04:38.479
像更多详细信息一样，这里的api具有此编辑按钮

00:04:38.479 --> 00:04:42.400
当您单击它时，您将移至该屏幕，这是很随意的

00:04:42.400 --> 00:04:46.080
在此之前，有趣的是，我们

00:04:46.080 --> 00:04:50.000
在此输入字段中，您当然可以输入其他

00:04:50.000 --> 00:04:57.680
你可以让我快速复制

00:04:57.680 --> 00:05:06.000
您也可以将其作为常规网址输入

00:05:06.000 --> 00:05:10.160
检查它将使用您传递的网址

00:05:10.160 --> 00:05:13.919
但是，它们可能更有用的是什么

00:05:13.919 --> 00:05:21.440
现在是，如果您有一个由守护的远程api

00:05:21.440 --> 00:05:26.000
基本的auf或一些自定义标记或任何其他

00:05:26.000 --> 00:05:28.960
基于http

00:05:30.000 --> 00:05:37.520
授权机制，使人们能够

00:05:37.520 --> 00:05:41.680
指定自定义标题并直接连接到它

00:05:41.680 --> 00:05:46.000
嗯，最简单的方法当然是使用基本auf，而在基本Alph中是

00:05:46.000 --> 00:05:50.400
非常容易，因为您可以喜欢内联用户名和密码

00:05:50.400 --> 00:05:53.440
作为网址的一部分，如果您连接到该网址

00:05:53.440 --> 00:05:57.840
我有一个代理，它添加了一个基本的Alph，但它有效地连接到

00:05:57.840 --> 00:06:01.759
您可以在同一节点上看到一个不同的端口，因此

00:06:01.759 --> 00:06:07.280
如果我现在将其连接到该地址，我将不再在此处看到地址，因为该地址

00:06:07.280 --> 00:06:11.199
本身包含敏感凭证，我们

00:06:11.199 --> 00:06:15.600
不想用类似状态的屏幕快照将它们链接起来

00:06:15.600 --> 00:06:20.000
人们可能会使用它进行调试，所以你有这个

00:06:20.000 --> 00:06:23.199
消息，它是一个自定义json配置，为什么它说它是

00:06:23.199 --> 00:06:27.280
自定义json配置，因此当您进入uh设置页面时，您可以

00:06:27.280 --> 00:06:31.440
看到那个内联的嗯嗯基础的信用

00:06:31.440 --> 00:06:38.400
这些内联基本输出凭证已转换为json呃

00:06:38.400 --> 00:06:44.960
HDB客户端接受了这一点，并且非常方便，因为

00:06:44.960 --> 00:06:49.520
它不仅支持基本健康，所以基本的功能是

00:06:49.520 --> 00:06:53.919
在这里您可以看到，Web ui发出的每个请求都会有这个额外的

00:06:53.919 --> 00:06:58.479
授权标头，它只是一个用户，

00:06:58.479 --> 00:07:03.039
密码是基于散列的uh编码

00:07:03.039 --> 00:07:11.039
没有散​​列，但是您可能会有一些错误令牌或api令牌

00:07:11.039 --> 00:07:17.680
或您的api保护的任何类型的自定义标头，您都可以

00:07:17.680 --> 00:07:22.560
指定此处的api路径uh也可以自定义

00:07:22.560 --> 00:07:29.680
所以这是带有acp客户端配置的json，

00:07:29.680 --> 00:07:33.599
我们不会宣布它，但是如果有人需要它是呃

00:07:33.599 --> 00:07:39.039
开箱即用，它是受支持的，当然您可以喜欢还原

00:07:39.039 --> 00:07:44.240
我在任何时候都只是一个多人

00:07:44.240 --> 00:07:48.080
我们喜欢各种用例的多个请求

00:07:48.080 --> 00:07:51.840
我相信现在任何人都可以实施

00:07:51.840 --> 00:07:55.680
无论他们使用什么而无需在其中实现

00:07:55.680 --> 00:08:02.639
Web ui本身支持http客户端支持的所有参数

00:08:02.639 --> 00:08:06.560
因此，如果缺少任何内容，我们将其添加

00:08:06.560 --> 00:08:13.840
在那里，就是这样

00:08:15.440 --> 00:08:20.639
我们还有其他事情吗，我相信我们在

00:08:20.639 --> 00:08:26.720
网络用户界面也已修复，以防万一有人好奇为什么翻译

00:08:26.720 --> 00:08:30.319
失踪了，他们失踪了，嗯，还有一个

00:08:30.319 --> 00:08:35.919
那个背景的一点点，我们确实添加了一些额外的翻译

00:08:35.919 --> 00:08:41.039
这个版本的负担，我经历了很多

00:08:41.039 --> 00:08:44.880
重复的国际化字符串um

00:08:44.880 --> 00:08:48.800
实际上，出现在多个文件中的东西非常非常非常

00:08:48.800 --> 00:08:51.680
类似，所以我确实经历并清理了所有

00:08:51.680 --> 00:08:56.160
那些我们确实有一个标准的app.json，现在已经有点

00:08:56.160 --> 00:08:58.640
就像出现在多个地方的主弦一样

00:08:58.640 --> 00:09:02.480
这样应该有助于一致性，同时也可以帮助我们

00:09:02.480 --> 00:09:06.640
随着我们添加功能的不断完善，我们可以更加一致地进行写作

00:09:06.640 --> 00:09:09.680
嗯，它们以相同的声音出现，

00:09:09.680 --> 00:09:12.240
相同的方法论相同的整体心理

00:09:12.240 --> 00:09:16.480
我们拥有的模型，但这意味着我们确实做了很多

00:09:16.480 --> 00:09:18.959
国际化的方式

00:09:18.959 --> 00:09:22.160
嗯，您知道transfex确实会像

00:09:22.160 --> 00:09:26.000
自动模式，但并非所有功能如此抱歉

00:09:26.000 --> 00:09:30.000
收听此电话，是我们的活跃翻译之一，您就像在等待

00:09:30.000 --> 00:09:32.560
我已经做到了，所以我们深表歉意

00:09:32.560 --> 00:09:38.800
这是一些技术债务的举措，事前准备

00:09:39.440 --> 00:09:45.200
嗯，可能是痛苦的事情是，在transfex上，我们有一个功能

00:09:45.200 --> 00:09:49.120
启用了被称为呃的翻译记忆库

00:09:49.120 --> 00:09:54.640
这有点像安全网，以防万一我们搞砸了

00:09:54.640 --> 00:10:00.480
嗯，没有翻译会被遗忘或遗忘，即使有翻译也不会

00:10:00.480 --> 00:10:04.480
就像消失了，因为我们弄乱了钥匙，而您的翻译也消失了

00:10:04.480 --> 00:10:08.560
它仍然在共享内存之间

00:10:08.560 --> 00:10:12.000
项目，因此如果出现相同的源字符串

00:10:12.000 --> 00:10:15.120
在不同的键下，它应该自动被拾取，或者至少您应该

00:10:15.120 --> 00:10:17.519
是的，您应该在右侧看到它

00:10:17.519 --> 00:10:22.160
大概有100％左右，我认为很多

00:10:22.160 --> 00:10:27.040
那个应该让机器人来照顾

00:10:27.040 --> 00:10:30.079
大部分，但是将需要做一些事情

00:10:30.079 --> 00:10:36.399
手动重新翻译了，是的，只是像表演一样关闭

00:10:36.399 --> 00:10:41.360
并告诉本节，也许我会快速地偷看一下

00:10:41.360 --> 00:10:48.720
新版本的台式机，我们将向您发送ipfs 0.7 uh

00:10:48.720 --> 00:10:55.680
可能是本周，可能是下周，它将包括这个新的Web用户界面

00:10:55.680 --> 00:10:59.680
好了，敬请期待，同伴

00:10:59.680 --> 00:11:05.120
我们可能会缩小范围，我们会看看这是怎么回事

00:11:05.360 --> 00:11:10.000
那是我的错，我想也许我会把这个里程碑

00:11:10.000 --> 00:11:14.000
很好，这很容易，是的，它在旁边开玩笑

00:11:14.000 --> 00:11:18.000
嗯，我已经成功制作了嵌入式js ipfs

00:11:18.000 --> 00:11:25.040
在这个可迭代迭代之后，勇敢地跑了，所以就像一个

00:11:25.040 --> 00:11:31.200
大量的时间同步，但是现在应该更加流畅了，所以

00:11:31.200 --> 00:11:35.920
就像期望在本周或下周发布

00:11:35.920 --> 00:11:39.440
是的，我认为下一部分就是这样

00:11:39.440 --> 00:11:44.079
只是关于固定服务的快速PSA

00:11:44.079 --> 00:11:51.120
因为为什么不将服务固定在出厂前就不会一周

00:11:51.120 --> 00:12:00.160
0.1这是理想的最新版本，嗯

00:12:00.160 --> 00:12:05.519
我们只会标记1.0呃

00:12:05.519 --> 00:12:09.519
从相同的修订版本开始，没有任何更改。

00:12:09.519 --> 00:12:15.200
当go ipfs 0.8附带内置客户端时为1.0

00:12:15.200 --> 00:12:20.079
 api，所以这个主意是

00:12:20.079 --> 00:12:26.560
go ipfs本身将为人们提供选择加入功能，以添加远程

00:12:26.560 --> 00:12:30.720
服务并具有固定的能力

00:12:30.720 --> 00:12:37.680
带有其他名称的特定cid，以及指向该远程服务的特定cid，以及

00:12:37.680 --> 00:12:44.079
当上升到0.8艘船时，我们将冻结规格，可以这样说

00:12:44.079 --> 00:12:47.600
发布，我们进行了两次制动更改，因为我们将其重命名为

00:12:47.600 --> 00:12:52.560
还是我们引入了更严格的字段

00:12:52.560 --> 00:12:56.160
错误响应的结构，但除了

00:12:56.160 --> 00:13:03.200
但除此之外，没有革命性的变化只是缓慢的

00:13:03.200 --> 00:13:10.959
稳定和澄清我们将进行重构

00:13:10.959 --> 00:13:15.360
接下来几周的固定服务分支史诗

00:13:15.360 --> 00:13:22.720
并切换到使用这些新p远程命令的新js http客户端

00:13:22.720 --> 00:13:28.560
所以我们下次会期待有趣的更新

00:13:28.560 --> 00:13:32.880
打电话给我，我现在就这样

00:13:32.880 --> 00:13:40.320
嗯，你想直接提到一个很大的重构吗

00:13:40.320 --> 00:13:45.519
降落在webui嗯，昨天降落了

00:13:45.519 --> 00:13:48.959
我们的使用方式发生了很多变化

00:13:48.959 --> 00:13:56.320
做出反应，对不起，redux捆绑程序，它基本上清除了一些逻辑，

00:13:56.320 --> 00:13:58.480
简化一点，因此更容易遵循

00:13:58.480 --> 00:14:02.880
因此希望它将使我们能够更快，更可靠地进行更改

00:14:02.880 --> 00:14:06.160
并在其中添加一些类型脚本

00:14:06.160 --> 00:14:12.000
这样我们就可以捕获更改，对不起，请早点捕获错误

00:14:12.000 --> 00:14:17.760
嗯，是的，很酷，我相信就像拉斐尔一样，在没有

00:14:17.760 --> 00:14:23.040
嗯，在他开始进行最终有吸引力的服务集成之前

00:14:23.040 --> 00:14:27.120
在文件屏幕上工作，我相信是的，

00:14:27.120 --> 00:14:30.959
我们现在将其降落并工作将非常有用

00:14:30.959 --> 00:14:34.720
最重要的是

00:14:35.600 --> 00:14:42.639
哦，嗯，​​我们会有进度报告，我没有

00:14:42.639 --> 00:14:47.680
之前提到它，因为它不是不在现实笔记中，而是

00:14:47.680 --> 00:14:53.040
现在，这不是视觉上的，而是主要的

00:14:53.040 --> 00:14:57.680
即将投放到任何地方的新Web用户界面的改进是

00:14:57.680 --> 00:15:01.680
您可以导入非常大的文件，例如

00:15:01.680 --> 00:15:05.440
2 GB，5 GB和4 GB

00:15:05.440 --> 00:15:10.959
但它们会导入并且不会杀死您的浏览器，这非常好

00:15:10.959 --> 00:15:16.639
嗯，问题就好像现在只需要几秒钟，什么都没有

00:15:16.639 --> 00:15:18.480
发生了，我们想添加进度

00:15:18.480 --> 00:15:24.399
报告，所以我认为这也将很快降落

00:15:24.399 --> 00:15:27.920
我正在做那件作品，也有点等待

00:15:27.920 --> 00:15:32.000
大反射器先混合好，是的，嗯

00:15:32.000 --> 00:15:35.920
它降落的消息真酷，我们可以继续前进

00:15:35.920 --> 00:15:40.079
好的，伙计们，您想要的任何话题

00:15:40.079 --> 00:15:45.839
啊，那位猪安德鲁，您对钉子服务的感觉如何，我保证不会

00:15:45.839 --> 00:15:50.000
很快就发布新的规范

00:15:50.000 --> 00:15:56.720
在我看来很好，嗯，我肯定有一些优化

00:15:56.720 --> 00:16:01.600
可以想象客户想要什么，但是从基本的角度来看

00:16:01.600 --> 00:16:05.279
它足以让您到达那里，我马上跳到那是我想要的

00:16:05.279 --> 00:16:09.759
例如固定服务的网络环，以便您可以作为客户端

00:16:09.759 --> 00:16:13.680
只是弹跳而已，就像我将发送到许多固定服务中一样

00:16:13.680 --> 00:16:17.920
所有这些都提供免费的东西，这样我就可以在互联网上很好地分布

00:16:17.920 --> 00:16:21.440
但是很明显，这些东西并不是永远免费的

00:16:21.440 --> 00:16:25.040
人们会利用它，所以

00:16:25.120 --> 00:16:29.440
这不是完美的，有人会写一个代理

00:16:29.440 --> 00:16:35.759
就像通过每个不同的自由选择一个随机的知更鸟一样

00:16:35.759 --> 00:16:40.480
固定服务，是的，否则您可以做很多不同的事情

00:16:40.480 --> 00:16:46.079
如果您拥有像我这样的开源服务器实现，

00:16:46.079 --> 00:16:50.800
可以在您可以找到的每一个免费托管服务上旋转它，或者也许

00:16:50.800 --> 00:16:55.440
在ci内部，您可以保持许多ci构建

00:16:55.440 --> 00:16:59.920
24小时，您一直在固定东西

00:16:59.920 --> 00:17:03.120
只要有一项服务，我们就不应该认可

00:17:03.120 --> 00:17:06.000
诸如此类的事情

00:17:06.880 --> 00:17:11.919
固定服务器也可以是固定到下一个的固定客户端

00:17:11.919 --> 00:17:15.600
然后每当它钉住某个东西时重复一次，然后钉住它并钉住它

00:17:15.600 --> 00:17:18.720
在下一个中，但我很欣赏它将如何使人们

00:17:18.720 --> 00:17:21.760
对规格感到兴奋

00:17:23.919 --> 00:17:27.360
我认为这很好是吧

00:17:27.360 --> 00:17:33.280
以及js客户端，这样您就可以从浏览器中进行操作了

00:17:33.280 --> 00:17:36.240
嗯，接下来我想

00:17:36.240 --> 00:17:40.160
人们会达到的是授权之类的东西

00:17:40.160 --> 00:17:44.080
然后他们想要在那里进行一些标准化

00:17:44.080 --> 00:17:51.600
为了能够获得您的访问令牌，我的意思是所采取的访问应该可以

00:17:51.600 --> 00:17:53.600
可以是任何东西，但它们必须是正确的字符串

00:17:53.600 --> 00:17:57.280
而且它们可以来自任何地方，所以您可能需要一些oauth舞蹈，

00:17:57.280 --> 00:18:02.960
其他人可能是一个用户名和密码，可以完全取回您的令牌

00:18:02.960 --> 00:18:08.320
这就像一个oppac脚本环，主要是因为我们有

00:18:08.320 --> 00:18:12.320
预先存在的固定服务，已经有一些约定，然后

00:18:12.320 --> 00:18:16.559
我们就像新的人将实施它可能

00:18:16.559 --> 00:18:19.679
想选别的东西

00:18:19.760 --> 00:18:25.120
很酷的一点是，当此类api包含其他

00:18:25.120 --> 00:18:29.679
有关请求和响应中提供者的元数据

00:18:29.679 --> 00:18:32.240
但是当客户端在go中实现时

00:18:32.240 --> 00:18:36.400
ipfs有点像隐藏在后面

00:18:36.400 --> 00:18:39.840
窗帘，所以当你喜欢别针时

00:18:39.840 --> 00:18:46.480
go ipfs本身将确保它共享其多其他

00:18:46.480 --> 00:18:50.880
直接使用固定服务，然后在固定服务响应时

00:18:50.880 --> 00:18:56.880
自己节点的其他多个节点会通过ipfs来确保本地

00:18:56.880 --> 00:19:00.960
节点已连接到固定服务，仅此而已

00:19:00.960 --> 00:19:05.120
提到它是因为它对于

00:19:05.120 --> 00:19:09.039
通常在拥有

00:19:09.039 --> 00:19:13.440
奇怪的拓扑和其他元数据跳舞

00:19:13.440 --> 00:19:16.720
我们通过固定服务api来确保

00:19:16.720 --> 00:19:21.919
您无需询问可能会变慢或不是全部的dht

00:19:21.919 --> 00:19:25.520
即使您获得了地址，也可能无法连接到

00:19:25.520 --> 00:19:29.440
并通过确保我们双方都试图

00:19:29.440 --> 00:19:33.360
主动相互连接，以弥补与

00:19:33.360 --> 00:19:39.679
奇怪的网络拓扑将服务固定到同类的另一个机会

00:19:39.679 --> 00:19:44.799
起飞可能是为了

00:19:44.799 --> 00:19:48.320
不确定是客户端还是服务器，但集成

00:19:48.320 --> 00:19:54.720
在纺织品强力门中，基本上

00:19:54.720 --> 00:19:58.080
莲花换硬币是有史以来最不友好的事情

00:19:58.080 --> 00:20:04.799
并强烈建议您不要使用与之类似的用户界面进行交互

00:20:04.799 --> 00:20:08.720
文件filecoin和powergate就像这样使用起来更友好

00:20:08.720 --> 00:20:13.360
所以有Powergate，因为它里面有ipfs

00:20:13.360 --> 00:20:16.880
最终，如果您能通过穿刺

00:20:16.880 --> 00:20:22.240
在0.1上与ipfs对话，那么您就可以使用它，但是

00:20:22.240 --> 00:20:27.120
可以说我可以拥有一个不错的api

00:20:27.120 --> 00:20:34.240
固定为um的Filecoin引脚和用于

00:20:34.240 --> 00:20:37.600
内置在该特定实例的命令行中

00:20:37.600 --> 00:20:41.600
如果您获得相同类型的api，那将是非常棒的

00:20:41.600 --> 00:20:45.280
然后您可以使用您需要与固定门交谈的任何固定客户端

00:20:45.280 --> 00:20:47.679
实例，所有这些事情都发生了

00:20:47.679 --> 00:20:52.080
自动进行，而不必自己进行配置

00:20:52.080 --> 00:20:56.240
当前很痛苦或正在使用第三方服务，但

00:20:56.240 --> 00:20:59.440
那么您就像我必须将我的所有文件上传到那里，然后将它们发送出去

00:20:59.440 --> 00:21:01.679
在那边，然后将它们放在ipfs中，然后

00:21:01.679 --> 00:21:04.960
他们进入文件硬币，然后进入另一个文件硬币存储节点

00:21:04.960 --> 00:21:09.600
那里非常非常缓慢和痛苦

00:21:09.600 --> 00:21:14.000
我想不再考虑了

00:21:14.799 --> 00:21:19.360
是的，目前尚不清楚它是否将成为Powergate的一部分，还是有人会

00:21:19.360 --> 00:21:21.919
创建一种类似于中间件的软件

00:21:21.919 --> 00:21:26.880
它的前面，但是绝对是

00:21:26.880 --> 00:21:30.400
那不是那个我想要的清单

00:21:30.400 --> 00:21:37.360
亲眼看到js客户端是我们可能想要的东西

00:21:37.360 --> 00:21:43.360
创建就像我们创建用于固定服务api uh的go客户端一样

00:21:43.360 --> 00:21:47.039
您即使用js1快速

00:21:47.039 --> 00:21:50.640
像回归测试或合规性测试

00:21:50.640 --> 00:21:54.720
所以您想要一个使用此客户端的网页

00:21:54.720 --> 00:21:58.480
输入令牌和端点，然后按一个按钮，然后

00:21:58.480 --> 00:22:01.840
它运行一组合规性测试，

00:22:01.840 --> 00:22:07.039
既测试客户端，也测试

00:22:07.039 --> 00:22:11.200
您对其运行的固定服务

00:22:11.200 --> 00:22:15.280
因为我想有些人可能想要

00:22:15.600 --> 00:22:19.679
他们可能有自己的业务流程，而他们却没有cid

00:22:19.679 --> 00:22:27.440
他们喜欢通过其他方式产生cid，而他们只是想

00:22:27.440 --> 00:22:32.799
执行此远程固定服务调用，而不必捆绑整个js idfs或

00:22:32.799 --> 00:22:41.840
这样的事情，所以js客户端可能对您有用

00:22:43.919 --> 00:22:52.960
okey-dokey我们通过议程要点和异步更新进行了冲刺

00:22:53.520 --> 00:22:58.400
我们有什么紧急话题要与社区分享吗？

00:22:58.400 --> 00:23:04.720
否则我总是可以立即结束此通话，然后我们将不会与他人共享内容

00:23:04.720 --> 00:23:08.000
社区所有激动人心的更新都不会

00:23:08.000 --> 00:23:13.679
记录我没有什么可添加的

00:23:14.320 --> 00:23:23.840
录制后的激动人心的更新两周后见

