WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.560 --> 00:00:11.400
好吧，我们很好，很好，已经部署了备份，所以你们去PFS吧

00:00:11.400 --> 00:00:26.970
静音，你们可以静音吗，理查德，谢谢您，好吧，所以我在第四季度40 bffs

00:00:26.970 --> 00:00:34.200
我们要完成第3季度的工作，其中包括IPL d和一些

00:00:34.200 --> 00:00:40.170
其他内容，例如核心API和一些GX内容以及一些带宽减少

00:00:40.170 --> 00:00:47.969
超出我们在第四季度真正想要做的事情的是确保我们清理

00:00:47.969 --> 00:00:53.809
dwive EFS使事情变得更好，文档使访问变得更容易

00:00:53.809 --> 00:01:00.629
像在板上增加更多测试之类的事情，我们为第3季度做出了努力，

00:01:00.629 --> 00:01:06.479
在我们尚未花完那么多时间的每个回购上获得更高的代码覆盖率

00:01:06.479 --> 00:01:14.630
限制很困难，但我想确定要在第四季度完成

00:01:14.630 --> 00:01:18.900
我们还应该看看其他资源消耗方面的东西，因为我们做了一些

00:01:18.900 --> 00:01:24.630
我们没有真正期望在第三季度完成的第三季度资源消耗目标

00:01:24.630 --> 00:01:28.650
只是因为这些都是很广泛的事情，但我认为我们应该继续努力

00:01:28.650 --> 00:01:35.670
在第4季度中进行测试，然后进行遍历的测试测试

00:01:35.670 --> 00:01:42.140
测试其他各种场景以进行基准测试并真正获得

00:01:42.140 --> 00:01:46.590
真正变得对我们要运送的物品和物品有更多的信心

00:01:46.590 --> 00:01:52.409
我们真的在推动人们使用哦，目录分片也将是真正的

00:01:52.409 --> 00:02:01.890
在第4季度做的很酷，只是因为它已经完成了，所以尝试

00:02:01.890 --> 00:02:08.220
避免专注于第4季度的新功能，因为我认为总体上会更好

00:02:08.220 --> 00:02:13.440
对于每个参与其中的人，只要我们努力使其更好

00:02:13.440 --> 00:02:19.490
而不是坚持所有这些花哨的东西，所以这将是主要的

00:02:19.490 --> 00:02:27.180
动力说我们不必做新的事情，我只是协议实验室

00:02:27.180 --> 00:02:30.780
通常，我们将只专注于对所有代码库的改进

00:02:30.780 --> 00:02:36.690
因此，如果其他人想通过各种方式帮助开发新功能，我们将为您提供帮助

00:02:36.690 --> 00:02:43.250
是的，我认为完全全新的功能与

00:02:43.250 --> 00:02:49.950
说出一些在飞行中的东西，这些东西一直在理解东西

00:02:49.950 --> 00:02:56.460
虽然如此，例如，让我把诸如私有网络之类的东西

00:02:56.460 --> 00:02:58.950
共享专用网络是某种形式的东西

00:02:58.950 --> 00:03:02.820
客户已经讨论过，这很重要，这是一个新功能

00:03:02.820 --> 00:03:06.720
但它有点像是在灰色地带，我想到的却不像是

00:03:06.720 --> 00:03:12.570
数据存储在文件系统中快速搜索，这暗示了

00:03:12.570 --> 00:03:18.239
一会儿，我们需要进行大量的审查并着陆，并逐渐得到

00:03:18.239 --> 00:03:24.420
这艘船，所以还有其他需要考虑的问题，我觉得没有

00:03:24.420 --> 00:03:27.570
算作它的妮可的一部分，我想他他想做些工作

00:03:27.570 --> 00:03:32.100
在这个季度，还有其他事情正在发生，例如我正在与

00:03:32.100 --> 00:03:36.300
有关不同运输方式的人员，因此您EP并单击可能会取消

00:03:36.300 --> 00:03:41.459
能够寄出这些账单的方式在我们这方面主要是整合的，他们会

00:03:41.459 --> 00:03:46.440
会做他们，然后我们会想下雨的时候，可能这样

00:03:46.440 --> 00:03:53.100
是，但是这些有点像新事物，我确实认为这是我们所做的

00:03:53.100 --> 00:03:59.370
花了很多时间只专注于改善我们现有的东西并修复

00:03:59.370 --> 00:04:07.110
虫子和嗯，就像做大战一样，减少了

00:04:07.110 --> 00:04:12.410
更稳定，诸如获取之类的事情恰恰是坚如磐石

00:04:12.410 --> 00:04:21.150
是的，我们绝对同意，因此这是我们的主要重点，特别是我们

00:04:21.150 --> 00:04:25.500
想讨论一下我们今天要如何运行这些电话吗？

00:04:25.500 --> 00:04:31.650
讨论我们想要什么的细节，以便我完成本季度或完成的任务

00:04:31.650 --> 00:04:39.570
我们想专注于我的意思是磨练确定优先事项，但也

00:04:39.570 --> 00:04:45.210
了解如果事情将要发生时将采取什么正确的措施

00:04:45.210 --> 00:04:51.060
它是高优先级，与中等优先级相比将是非常困难的

00:04:51.060 --> 00:04:54.300
但是这些事情真的很容易，因为那是事实，但是

00:04:54.300 --> 00:04:59.780
这些评估会影响事物在路线图上的位置

00:05:04.460 --> 00:05:09.090
是的，我绝对想念你刚才说的话，因为我的网际网路连线是

00:05:09.090 --> 00:05:15.800
没事，我能听到你知道吗，是的，我现在可以听到你了，所以基本上

00:05:15.800 --> 00:05:21.419
只要继续并根据需要使用这段时间，请紧记主要

00:05:21.419 --> 00:05:25.650
您想要摆脱的事情是弄清楚优先事项

00:05:25.650 --> 00:05:29.280
确定优先事项，并弄清楚某些事情会变得如此艰难

00:05:29.280 --> 00:05:34.229
您可以弄清楚将它们插入路线图的位置和方式，但是没关系

00:05:34.229 --> 00:05:42.180
让您看到感觉很酷，所以我们正在研究的近期产品最适合

00:05:42.180 --> 00:05:46.560
因此，对于最短时间的转移，我们正在做的不是最短时间的转移。

00:05:46.560 --> 00:05:54.210
 0 for 4版本只是个引脚设置错误补丁，所以我们希望拥有

00:05:54.210 --> 00:06:00.900
基本上今天就结束了，我们打完电话，希望如此

00:06:00.900 --> 00:06:06.450
今天推送的是此修复程序本身已经合并到master中的内容，

00:06:06.450 --> 00:06:11.250
那么我们有一个补丁，我们将在0上应用3，这可能不是唯一的补丁

00:06:11.250 --> 00:06:17.460
那里应用的东西，所以人们可以早点拿出来，我也有一个工具是

00:06:17.460 --> 00:06:22.139
如果您没有发现垃圾，有可能恢复丢失的针脚

00:06:22.139 --> 00:06:25.950
收集，因此，如果您遇到了这个bug错误，并且还没有运行垃圾

00:06:25.950 --> 00:06:31.760
集合um，您可以运行此工具，它将打印出类似以下内容的内容

00:06:31.760 --> 00:06:38.700
别针对不起，嗯，我们可能应该把它留给描述所有问题的帖子

00:06:38.700 --> 00:06:42.180
这样的东西，正确的，所以你说的是我们在跳水

00:06:42.180 --> 00:06:46.800
深入讨论诸如工具之类的东西，等等，我们可能只想说

00:06:46.800 --> 00:06:51.090
像超级高水平，好​​吧，我只想确保这是

00:06:51.090 --> 00:06:56.550
对于任何观看者来说都很清楚，因为这很重要，总的来说，

00:06:56.550 --> 00:07:03.840
哦，抓住你好吧，是的，这是可能的事情，所以把它放出来

00:07:03.840 --> 00:07:09.450
在那里，您会在博客文章中阅读更多内容，是的，所以现在下一个

00:07:09.450 --> 00:07:16.880
是我保证我会很快建立我们吗？我们正在为事情做好准备和准备

00:07:16.880 --> 00:07:21.840
切换到用于解决问题的不同库，然后转到

00:07:21.840 --> 00:07:29.160
让Seaboard IPL的可用节点至少希望病得很重

00:07:29.160 --> 00:07:36.810
在某些开发项目中，这样会很酷，超出了凯文（Kevin）

00:07:36.810 --> 00:07:42.120
在文件存储代码上工作，我们在推动

00:07:42.120 --> 00:07:47.760
兼容性强，例如中断更改，这使他们更容易

00:07:47.760 --> 00:07:52.650
整合它，所以我们希望将其整合进来，您很快就会知道

00:07:52.650 --> 00:07:58.620
确保那里的确切时间表，但这是一个很好的超越

00:07:58.620 --> 00:08:03.240
从第三季度开始我们还有其他一些事情要做，

00:08:03.240 --> 00:08:11.720
核心API Lars您想在那方面说些什么模糊Lars kami yep

00:08:11.720 --> 00:08:19.590
所以它进展缓慢，一旦这两把椅子打开，

00:08:19.590 --> 00:08:23.790
另一个我是对的，可以提取网关，然后将其作为一个

00:08:23.790 --> 00:08:29.310
在核心API和核心API acadia上进行更多工作的蓝图，我们

00:08:29.310 --> 00:08:37.080
会使用有线专家承认的大多数核心命令，这是一个白痴

00:08:37.080 --> 00:08:41.310
让社区中的四个人参与其中的项目，因为它可以吸引人

00:08:41.310 --> 00:08:49.200
是非常小的工作，是的，太棒了，是的，我们接下来将完成它

00:08:49.200 --> 00:08:57.390
一般而言，我们在第三季度之前所做的代码覆盖范围的努力

00:08:57.390 --> 00:09:02.910
也许我会说，总体上可能是成功和失败的一半

00:09:02.910 --> 00:09:07.410
大量的工作比我们预期的要多得多，这就是

00:09:07.410 --> 00:09:12.540
部分为什么它还没有完成，所以我们将继续推动它

00:09:12.540 --> 00:09:21.630
第4季度，然后尝试进行更多测试，这绝不是一个坏目标，是的，所以

00:09:21.630 --> 00:09:28.860
对于第3季度的结转额来说大致就是这样，因此请移至与Q对应的特定值

00:09:28.860 --> 00:09:36.890
事情文档将是一件大事，我想努力

00:09:36.890 --> 00:09:41.310
好让人们更容易发现哦如何使用ipf制作东西

00:09:41.310 --> 00:09:46.190
各种不同的模式，我想我们可能会更多地谈论

00:09:46.190 --> 00:09:49.650
特别是想以后再看，但这有点像

00:09:49.650 --> 00:09:59.760
对我们来说是一个很大的目标，是的，因此在我们的时间表上这将是一个很大的目标

00:09:59.760 --> 00:10:06.030
下一个季度通常只是清理一下，所以要解决一些问题

00:10:06.030 --> 00:10:15.210
修复试图解决我们庞大的473个问题并将其缩小并关闭的错误

00:10:15.210 --> 00:10:19.290
整理东西使事情变得更好，通常只是还清

00:10:19.290 --> 00:10:25.650
我们应计的技术债务将真的真的真的真的非常好

00:10:25.650 --> 00:10:34.290
代码库，我认为它将为您提供一个不错的q4斜坡

00:10:34.290 --> 00:10:39.660
进入第1季度，我们可以真正开始做一些您知道的新事物

00:10:39.660 --> 00:10:43.710
清理代码库，使其变得更好，使其准备就绪，然后从

00:10:43.710 --> 00:10:50.040
那里会有个好跳跃的男孩，我想你想提供给库巴吗？

00:10:50.040 --> 00:10:55.920
更新了我不认为的所有内容，就像我完成最脏的工作一样

00:10:55.920 --> 00:11:02.590
板和限制锁定威胁的数量的限制

00:11:02.590 --> 00:11:10.030
同步调用，所以您问您发现它固定了I PFS

00:11:10.030 --> 00:11:16.090
 Raspberry Pi是的，所以有了新的重新计分功能，因为IPF不再

00:11:16.090 --> 00:11:21.970
我们会产生成千上万的线程，而且我们

00:11:21.970 --> 00:11:25.450
每个连接使用较少的文件描述符，因为以前我们会

00:11:25.450 --> 00:11:29.890
用于文件描述符/网络连接，因为我们使用的方式

00:11:29.890 --> 00:11:34.870
现在部分工作了，我们只是在整个过程中使用了一个可重复使用的端口，

00:11:34.870 --> 00:11:41.710
然后，嗯，您知道每个连接都有一个文件描述符，所以这是一个很大的改进

00:11:41.710 --> 00:11:47.230
在那里，我也注意到使它能够在Raspberry Pi上正常运行

00:11:47.230 --> 00:11:51.900
而以前却不能，因为树莓派PI具有线程数限制

00:11:51.900 --> 00:12:08.920
所以这真的很酷，那么您对我们垫子的其他想法是谁，您呢？

00:12:08.920 --> 00:12:13.660
感觉如此，您感觉您将能够建立里程碑列表

00:12:13.660 --> 00:12:19.570
您要根据我们讨论过的内容放到路线图上

00:12:19.570 --> 00:12:27.640
直到现在，是的，因为我们的第4个目标实际上就像是关闭

00:12:27.640 --> 00:12:32.110
总的来说，像我们有很多未解决的问题，有470种问题

00:12:32.110 --> 00:12:38.590
他们，真正的主要目标是使人数减少，并且由五名成员组成

00:12:38.590 --> 00:12:41.950
以有意义的方式缩小，我们实际上正在修复和关闭这些问题

00:12:41.950 --> 00:12:48.010
只是人们会抱怨您的一般事情而已

00:12:48.010 --> 00:12:53.440
代码库运行良好，我不认为这与数字有关，而是与点击有关

00:12:53.440 --> 00:12:57.850
任何人的权利越多，这就是对最重要的东西进行排序的过程

00:12:57.850 --> 00:13:05.440
要修复的关键内容，这是我们需要的工作，我们应该

00:13:05.440 --> 00:13:10.420
现在要做的就是创建像我们致力于保护的事物列表一样的东西

00:13:10.420 --> 00:13:15.800
一季度正确，所以您认为我们应该仔细阅读一份问题清单

00:13:15.800 --> 00:13:21.769
好话不，我是说我们可能已经浮出水面了

00:13:21.769 --> 00:13:27.769
解决他们在这里的问题，例如在垫子上这样可能会很有用

00:13:27.769 --> 00:13:33.050
实际穿过垫子，就像这里的几件事一样

00:13:33.050 --> 00:13:37.370
我们认为有价值的东西，或者可能将所有不重要的东西浮出水面

00:13:37.370 --> 00:13:47.810
在这里列出，我们可能很重要，所以总的来说，只想指出

00:13:47.810 --> 00:13:50.720
剩下的午睡时间还有四分钟，那一天我们可以

00:13:50.720 --> 00:13:56.540
大概碰到约瑟夫太喜庆了，是的，我是时候了

00:13:56.540 --> 00:14:02.890
需要很长时间才能查看此列表，所以我们特别希望看到的是

00:14:02.890 --> 00:14:12.170
更好的测试覆盖范围而不是网络测试哦，我们希望看到一个连续的

00:14:12.170 --> 00:14:17.839
测试网络正在运行，就像一组不同版本的节点和您一样

00:14:17.839 --> 00:14:23.959
知道自动运行用户负载的方案，我们希望了解更多

00:14:23.959 --> 00:14:28.070
文档更多示例使用I PFS做事的一些最佳实践

00:14:28.070 --> 00:14:36.950
一些深思熟虑，我想在我想开始的PFS帖子中做某件事

00:14:36.950 --> 00:14:41.990
在工作上看我实际上在私人网络上工作，我不知道

00:14:41.990 --> 00:14:46.880
我们将优先考虑该优先级，但肯定要在船上

00:14:46.880 --> 00:14:53.180
为了减少带宽使用，这既是DHT内容写入的变化，也是

00:14:53.180 --> 00:14:57.920
修复了位错误，并可能考虑使用pub / sub来解决其中的一些问题

00:14:57.920 --> 00:15:05.540
这些我们确实希望合并我们正在处理的文件星号代码

00:15:05.540 --> 00:15:09.740
很好，我想凯文（Kevin）想说些什么吗？

00:15:09.740 --> 00:15:20.000
快点，否则我要治愈我，是的，不是，我想得到

00:15:20.000 --> 00:15:24.470
这是在我把东西塞进太多之前，因为这两者真的很

00:15:24.470 --> 00:15:28.880
彼此冲突，每当您设置某种模式时，您只要使我

00:15:28.880 --> 00:15:32.570
为我走就好了，对不起，没关系

00:15:32.570 --> 00:15:41.300
没关系，我只是不断地重新定级，我们可能正在混合冲突，是的，可以

00:15:41.300 --> 00:15:48.680
进去不开心，我会很酷，凯文（Kevin）一个问题，所以IPL d会随着

00:15:48.680 --> 00:15:55.759
roblox特别允许您直接指出最快的时间并善待自己

00:15:55.759 --> 00:16:02.089
那些作为独立的对象，这可能会大大简化

00:16:02.089 --> 00:16:12.230
实施嗯是的，它被简化了一点，但是实际上我认为我

00:16:12.230 --> 00:16:19.100
和汤姆·乔（Tom Jo）一起走了，我真的可以将这些代码隔离成

00:16:19.100 --> 00:16:24.560
或其中的两个小模块，所以就像现在快速更换一样，是的

00:16:24.560 --> 00:16:32.839
现在很干净，所以听起来很酷，所以不错，嗯，不

00:16:32.839 --> 00:16:37.630
在人们社区合作伙伴最普遍要求的情况下，

00:16:37.630 --> 00:16:42.529
专用网络的带宽减少，资源使用的减少，内存的减少

00:16:42.529 --> 00:16:45.649
和CPU减少，我们可以确定一些不同的东西

00:16:45.649 --> 00:16:49.490
打这个，例如打孔或在光盘中的信息，您知道

00:16:49.490 --> 00:16:55.130
其他类似的东西，所以我仍然有一些悬空的水果

00:16:55.130 --> 00:17:01.160
例如在灾难Ya Somos世界中被杀死的指标是死党成员

00:17:01.160 --> 00:17:05.659
奶油指标是的，所以那里有很多好东西，我们可以击中，

00:17:05.659 --> 00:17:09.860
降低内存使用率，改善连接性，从而改善连接性

00:17:09.860 --> 00:17:14.839
现在意味着测试连通性，我们需要弄清楚我们在哪些情况下

00:17:14.839 --> 00:17:21.530
实际需要修复我们盲目尝试修复PFS指南api的地方

00:17:21.530 --> 00:17:27.380
我们需要弄清楚谁想担任这个职务，然后弄清楚

00:17:27.380 --> 00:17:31.669
前进的道路，我认为实现这一目标的最好的办法是获得核心

00:17:31.669 --> 00:17:37.730
定义API，然后使用核心API实施go I PFS HTTP API

00:17:37.730 --> 00:17:42.740
就像使它甚至实现了界面漫游集成一样，这意味着

00:17:42.740 --> 00:17:46.620
与开放的奇异工作，并看着

00:17:46.620 --> 00:17:51.360
巡视他们现在拥有的代码，并对其进行审核，然后弄清楚是什么

00:17:51.360 --> 00:17:55.260
所有不同的安全隐患都是这样，所以肯定是在这两个方面

00:17:55.260 --> 00:18:03.630
列出了数据存储和文件存储，是的，所以我们谈到的是那个

00:18:03.630 --> 00:18:07.020
写道您有什么特别的事情，或者我们已经讨论过了吗

00:18:07.020 --> 00:18:13.800
知道您讨论好了再进行分片，所以分片正在审查中，

00:18:13.800 --> 00:18:21.510
然后将内容合并，然后您将其合并，这是对的，所以这不是一个

00:18:21.510 --> 00:18:27.510
庞大的清单，但这是一个非常重要的清单，所以我想如果我们

00:18:27.510 --> 00:18:33.830
削减那些事情的优先级，我们将取得一些令人敬畏的进展

00:18:33.830 --> 00:18:38.910
也许值得一坐的人，无论谁能达到这个目标，或者也许我们都能

00:18:38.910 --> 00:18:44.640
一般注意，这是一个开始的好时机，就像表面认为我们会去

00:18:44.640 --> 00:18:47.820
通过这些问题等等，直到我们确定最终的里程碑

00:18:47.820 --> 00:18:52.560
列出我的业务，​​但如果人们有某些事情，他们真的想要我们

00:18:52.560 --> 00:18:58.190
记得张贴，这是一个喜欢引用这些内容或

00:18:58.190 --> 00:19:02.280
我们可能会以某种方式让人们强调这些东西，他们

00:19:02.280 --> 00:19:09.660
认为是非常重要的，因为我们可能会缺少某些东西，也许我们

00:19:09.660 --> 00:19:14.820
开始遇到类似第4季度的问题或欲望或目标，我可能会有点像

00:19:14.820 --> 00:19:18.990
人们只是开始放东西，还是我应该发布特定的东西，嘿，我

00:19:18.990 --> 00:19:22.650
想要这个，因为我有点重复，我不知道我在哪里

00:19:22.650 --> 00:19:25.380
知道除了我之外，我该如何最好地保存那些东西的用户

00:19:25.380 --> 00:19:29.070
这就是我要问的收据，所以就像一个季刊一样，人们可以

00:19:29.070 --> 00:19:35.190
评论可能是个好主意，是的，我们可以这样做，或者我可以

00:19:35.190 --> 00:19:41.490
找出一种方法，尝试从

00:19:41.490 --> 00:19:44.730
问题列表，我不知道有哪些工具可以解析您的

00:19:44.730 --> 00:19:48.000
问题，然后告诉您这些是评论最多的问题，这些是

00:19:48.000 --> 00:19:52.520
最喜欢你的人喜欢投票的反应或其他

00:19:52.520 --> 00:19:56.370
这样的事情可能会给我们一个非常清晰的视野，直到

00:19:56.370 --> 00:19:59.289
像项目的原因马一样的项目真正的东西是如此

00:19:59.289 --> 00:20:02.529
我会调查我是否可以找到实际记录反应的东西

00:20:02.529 --> 00:20:05.379
我知道这是一项新功能，我不知道是否可以通过

00:20:05.379 --> 00:20:10.599
他们的API，但这是一个很好的观点，也是一个很好的问题，所以我将

00:20:10.599 --> 00:20:14.440
再说一遍，我们可以继续前进，我会

00:20:14.440 --> 00:20:19.090
关于I PFS的最佳位置，我在PFS社区上发表了一个问题

00:20:19.090 --> 00:20:25.749
问题将在未来继续发展，现在我将发布第3季度第4季度问题，然后

00:20:25.749 --> 00:20:30.129
PFS将在接下来的一两个星期内发表评论，这也应该

00:20:30.129 --> 00:20:33.759
向所有观看它的人走出去，因为假设人们只会看这个

00:20:33.759 --> 00:20:42.820
打电话，这样听起来听起来不错，每个人都很好，可以吗？

00:20:42.820 --> 00:20:49.989
 PFS通话，King向您展示，哦，很酷，所以下一个小时是JavaScript

00:20:49.989 --> 00:20:55.690
我们将专注于在轨道上进行30分钟，然后在JSI PFS上进行30分钟，

00:20:55.690 --> 00:21:04.389
然后，所有忙碌的人们都会在一个小时后回来谈论p2p，因此请接受

00:21:04.389 --> 00:21:06.960
躲起来

