WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.260 --> 00:00:05.420
好吧，我们没有录制，希望能流式传输到YouTube，这样我就可以看到

00:00:05.420 --> 00:00:15.260
不用担心，我很好奇我很想听听你对此的看法，但我有点

00:00:15.260 --> 00:00:30.960
通过介绍IPSS IPSS抛出，所以无论如何我们都可以去看看这个，我

00:00:30.960 --> 00:00:42.030
随便分享笔记中的链接，以便您以自己的速度前进-是的，我们

00:00:42.030 --> 00:00:56.370
没关系，所以这可以为David节省一个网络，入门和实用的工具。

00:00:56.370 --> 00:01:04.610
观点，我要问的是什么使您进入去中心化网络

00:01:04.610 --> 00:01:13.799
在仍像这样的全屏模式下完成这项工作是我要做的事情之一

00:01:13.799 --> 00:01:20.270
我真的很想做这样的演讲是为了

00:01:20.270 --> 00:01:26.630
在理论上扎根于人们之前和我曾经提出过的一些想法

00:01:26.630 --> 00:01:32.820
当我把这段话放在一起的时候，我碰到了或者Irie碰到了那个古老的

00:01:32.820 --> 00:01:39.540
关于酷酷的乌尔人的伯纳斯-李·兰特（Berners-lee rant）不会改变，不确定是否要

00:01:39.540 --> 00:01:44.100
跨过那段时间，但自1998年以来，我会公平地引用它

00:01:44.100 --> 00:01:49.049
在整个过程中，但这只是一个论点，就像你想要的那样

00:01:49.049 --> 00:01:56.759
人们要找到东西，你必须成为一个真正体贴的主人，我喜欢这个

00:01:56.759 --> 00:01:59.670
框架，事实证明，蒂姆·伯纳斯·李（Tim berners-lee）实际上正在

00:01:59.670 --> 00:02:03.840
去中心化的网络，因为它确实在许多

00:02:03.840 --> 00:02:11.760
他在1998年做对的事情是URI真正关键的部分之一

00:02:11.760 --> 00:02:15.070
与URL相比，您的视线不会变，所有人都变了

00:02:15.070 --> 00:02:20.080
可能对此非常熟悉，这是URI作为指标，而URL是一个

00:02:20.080 --> 00:02:24.940
定位器，这对于去中心化网络将非常重要，因为

00:02:24.940 --> 00:02:30.580
当您查看一个URL时，您是在说我要使用该协议，

00:02:30.580 --> 00:02:34.660
在永久业权礼仪书I / O上问这个实体，然后我要看一下

00:02:34.660 --> 00:02:40.660
这个特殊的位置，这是问他们说嘿的一种非常不同的方式

00:02:40.660 --> 00:02:43.570
我要问这个协议，然后我要告诉你它是什么

00:02:43.570 --> 00:02:46.630
我正在寻找，我要把它留给协议，告诉我在哪里可以找到

00:02:46.630 --> 00:02:56.020
它还给我，这是蒂姆·伯纳斯·李（Tim berners-lee）在您更改URI时

00:02:56.020 --> 00:02:59.850
您的服务器永远无法完全确定谁将拥有到旧URI的链接

00:02:59.850 --> 00:03:03.370
一旦有人跟随链接并且链接断开，他们通常会丢失

00:03:03.370 --> 00:03:09.970
对服务器所有者的信心，所以我认为这是真的

00:03:09.970 --> 00:03:14.200
我认为这确实在很多情况下都成立了，并没有多大关系

00:03:14.200 --> 00:03:17.470
人们将失去对服务器所有者的信心

00:03:17.470 --> 00:03:23.050
就像我会说Internet上的大多数内容都不是那样

00:03:23.050 --> 00:03:27.040
重要的是，该域不是您特别需要信任的人

00:03:27.040 --> 00:03:31.330
就像你消失了，好吧，我会在其他地方找到它，但这并不总是如此

00:03:31.330 --> 00:03:36.280
这种情况，所以我来自环境数据

00:03:36.280 --> 00:03:42.340
和治理计划，这是一个因应而生的组织

00:03:42.340 --> 00:03:52.330
特朗普的选举到2016年我这本身并不是一个政治脱口秀我

00:03:52.330 --> 00:03:56.770
组织显然对政府的管理有相当强烈的感觉。

00:03:56.770 --> 00:04:00.340
环境数据，但这并非特朗普时代独有，它如雨后春笋般涌现

00:04:00.340 --> 00:04:06.180
因为针对该选举有很多政治路线，

00:04:06.180 --> 00:04:12.489
我们做得很好的是我们最初所做的是

00:04:12.489 --> 00:04:16.959
许多有关环境的政府数据，例如气候证据

00:04:16.959 --> 00:04:22.330
变化和环境正义数据很多人开始了

00:04:22.330 --> 00:04:27.630
组织，我们真的很担心特朗普政府会进来

00:04:27.630 --> 00:04:39.510
或将其删除将使服务器退款或看到um使其无法

00:04:39.510 --> 00:04:47.730
查找或存在，并且所有这些都是移动的驱魔人文本框，而不是单选按钮B

00:04:47.730 --> 00:04:55.590
在这些领域的研究中退还继续进行的研究，这是非常重要的

00:04:55.590 --> 00:05:01.050
危害我们了解实际环境问题并采取实际行动的能力，以及

00:05:01.050 --> 00:05:04.770
真正的环境正义问题有很多环境问题

00:05:04.770 --> 00:05:10.050
例如石油和天然气井释放苯的趋势往往不成比例

00:05:10.050 --> 00:05:15.180
影响那些已经被边缘化并且负担不起的人

00:05:15.180 --> 00:05:20.490
在可以呼吸更干净空气的地方这些是我们的几个

00:05:20.490 --> 00:05:26.520
报告涵盖了这项工作的内容以及我们所做的其中一项工作

00:05:26.520 --> 00:05:32.250
成为我们主要重点的事物一直在专门研究

00:05:32.250 --> 00:05:37.860
网站的网址，并经常定期查看它们

00:05:37.860 --> 00:05:42.540
进入互联网档案库，然后查看其中的内容

00:05:42.540 --> 00:05:46.950
我们构建了不同的引擎，以了解表征这些引擎所发生的变化

00:05:46.950 --> 00:05:53.670
良性变化，例如更新日期戳，或者更恶性的变化，例如

00:05:53.670 --> 00:05:58.590
我们去年夏天发布了一份报告，其中详细介绍了

00:05:58.590 --> 00:06:02.520
全面删除气候变化一词并替换为

00:06:02.520 --> 00:06:10.250
意思是那些不太准确的东西，也少了什么意思

00:06:10.250 --> 00:06:17.070
激化人们不太强烈的正确单词

00:06:17.070 --> 00:06:21.090
关于并且不支持气候变化，即使那可能是正确的

00:06:21.090 --> 00:06:29.520
阿里（Ari）在网页上拥有的东西，所以当

00:06:29.520 --> 00:06:32.460
有人跟随一个链接，它打破了它是平民主义者服务器的所有者，你可以

00:06:32.460 --> 00:06:38.669
如果政府有一个域名，请永远不要告诉我们旧的URI

00:06:38.669 --> 00:06:41.759
您需要相信，他们如何处理数据非常重要

00:06:41.759 --> 00:06:48.060
重要的是有一个移动数据，这是发生了一件事情

00:06:48.060 --> 00:06:57.180
所以这不是政府的气候，你可能会问自己为什么教育部

00:06:57.180 --> 00:07:03.330
的交通部门有一个气候变化网站，好像是

00:07:03.330 --> 00:07:10.020
更多的是诺亚要做的事情，或者是与组织无关或与组织达成的协议

00:07:10.020 --> 00:07:15.150
但事实证明，交通是造成这种情况的原因，我认为这大约占40％

00:07:15.150 --> 00:07:19.710
在美国的排放量，因此他们拥有一个网站并不疯狂

00:07:19.710 --> 00:07:31.999
与此相关的是，截至2020年1月27日的网站是否存在

00:07:31.999 --> 00:07:39.659
谁知道也许他们移动了它，或者在很多情况下，他们删除了它，

00:07:39.659 --> 00:07:45.060
在互联网上四处移动有人刚刚更改了网址还有其他

00:07:45.060 --> 00:07:48.539
解决方案在回溯的过程中有一个页面我拥有浏览器扩展

00:07:48.539 --> 00:07:51.509
互联网档案馆的Wayback Machine，对于这种情况非常有用

00:07:51.509 --> 00:07:56.189
事情，因为至少您可以找到它的旧版本，并且该旧版本是

00:07:56.189 --> 00:08:02.129
托管在某个地方，我认为他们确实完全将其删除了

00:08:02.129 --> 00:08:08.460
我们对此所做的研究显示了什么，但显然对您来说很重要

00:08:08.460 --> 00:08:17.009
当他们只是将内容带走时就能够信任这些政府地址的能力

00:08:17.009 --> 00:08:24.899
说说有关拥有该域的实体的情况（如果您依赖）

00:08:24.899 --> 00:08:30.629
 a.gov页面上提供某些信息，但该网站已被删除，您如何处理

00:08:30.629 --> 00:08:34.440
知道寻找档案可能很多人会

00:08:34.440 --> 00:08:37.529
停在那里，他们会说哦，我不知道也许有人给了我错误的链接

00:08:37.529 --> 00:08:43.440
也许这个东西已经不存在了，然后还有另一个问题

00:08:43.440 --> 00:08:46.230
我的意思是我们可能会信任Internet存档

00:08:46.230 --> 00:08:49.829
另一方面，如果您想找到一个

00:08:49.829 --> 00:08:54.000
a.gov网站的存档，这是关于人们

00:08:54.000 --> 00:08:59.280
关于你能不能百分百确定那是什么的紧张关系

00:08:59.280 --> 00:09:08.610
最初在那里，您如何证明它，如何知道它，更重要的是

00:09:08.610 --> 00:09:13.440
档案比原始档案更安全，并且您知道Internet档案具有

00:09:13.440 --> 00:09:17.790
备份具有服务器，并且在其大部分内容上均不添加任何内容

00:09:17.790 --> 00:09:22.830
商店在旧金山大楼中的服务器上，这也很棒

00:09:22.830 --> 00:09:32.390
只要该地区没有大地震或类似的事情，所以哦

00:09:32.390 --> 00:09:38.760
我会快一点，因为你们可能知道这些东西，但是

00:09:38.760 --> 00:09:42.950
如果有人有问题，这是我很好奇的黑色皮草

00:09:42.950 --> 00:09:47.010
因为这个话题可能很多，所以设计的时间要比30分钟长得多

00:09:47.010 --> 00:10:01.260
分钟，所以我只是潜入水中，所以这是关于ipfs的一部分

00:10:01.260 --> 00:10:04.110
我提到我姐姐达娜（Dana）帮忙做了一些

00:10:04.110 --> 00:10:08.610
她在一起对此进行了很多背景研究，而我做了很多

00:10:08.610 --> 00:10:19.160
制作图像，但我们首先要将其放到网络上，然后

00:10:19.550 --> 00:10:24.750
这是我们文件中想要放置的第一件事

00:10:24.750 --> 00:10:33.420
将这些变成标准化的块，所以在ipfs中，我相信最大文件

00:10:33.420 --> 00:10:38.100
大小为256或微牺牲珍妮特（Janet）减少千字节，这是可设置的

00:10:38.100 --> 00:10:43.800
例如，对于dat可能有所不同，这意味着每个

00:10:43.800 --> 00:10:48.000
这些东西变成一个大块，所以小于256的东西将要去

00:10:48.000 --> 00:10:57.810
就像将纸片放在一个很大的文件盒中一样，

00:10:57.810 --> 00:11:01.260
盒子里放几张纸，然后这两张纸都装满了

00:11:01.260 --> 00:11:06.540
CSV文件以这三个文件中的四个块结尾，以便具有

00:11:06.540 --> 00:11:14.389
一个标准的叹息，我假设，我很好奇

00:11:14.389 --> 00:11:18.470
听听你们的消息，但我假设那个专业的数字

00:11:18.470 --> 00:11:21.290
原因是您需要知道的是您拥有的块数

00:11:21.290 --> 00:11:27.170
将适合您拥有的硬件，但是另一个明显的原因

00:11:27.170 --> 00:11:35.060
需要分块是为了确保您有一些标准

00:11:35.060 --> 00:11:40.759
您有能力通过移动

00:11:40.759 --> 00:11:49.490
确保有能力提高SSS的安全性接下来，我们要做的是加密散列

00:11:49.490 --> 00:11:55.970
基本上是给您的块分配标签，并且哈希的一些字符是

00:11:55.970 --> 00:11:59.899
这是您无法向后运行函数以获取相同输入的一种方式

00:11:59.899 --> 00:12:04.399
这是一张表格，其复杂程度远低于

00:12:04.399 --> 00:12:08.750
您将使用技术上适合这种单向定义的方式，如果我要

00:12:08.750 --> 00:12:13.790
说哦，输出是3我输入了多少您将无法回答

00:12:13.790 --> 00:12:20.810
因为它是3或8或13，即使此输出在算法上也是如此

00:12:20.810 --> 00:12:32.600
从输入中编码的哈希值具有1/6的大小，这对于再次重要

00:12:32.600 --> 00:12:40.459
有关速度的问题，因此，如果我输入的是某些单词fox或a

00:12:40.459 --> 00:12:43.430
甚至是狐狸的图片，或者包含单词的更长句子

00:12:43.430 --> 00:12:50.000
狐狸的输出，因为你在这里看到仍然是相同的大小，这意味着

00:12:50.000 --> 00:12:57.920
您可以将任意大小的块编码为相同的相对较短的字符串哈希

00:12:57.920 --> 00:13:02.750
确定性相同的输入将始终产生相同的输出，这是

00:13:02.750 --> 00:13:06.290
防撞性能如果您将它们输入不同的输入，它将获得不同的输入

00:13:06.290 --> 00:13:17.240
输出概率，所以这里我们有科学的哈希值

00:13:17.240 --> 00:13:20.140
已经经历了一点，但是对文件验证很有用

00:13:20.140 --> 00:13:26.380
而识别和效率最重要的部分是

00:13:26.380 --> 00:13:34.600
给定文件的编码方式会有所不同，因此如果我更改了原始文件

00:13:34.600 --> 00:13:40.180
例如，如果我有一个与苯释放有关的非常重要的文件

00:13:40.180 --> 00:13:44.830
涉及法律诉讼的特定区域，而我拥有

00:13:44.830 --> 00:13:48.760
政府和每个人都信任，但这是政府的正确哈希，然后我

00:13:48.760 --> 00:13:53.860
在其他地方有存档版本，即使狗狗也与哈希匹配

00:13:53.860 --> 00:14:00.010
我赢了，不再需要进行比较了，我们仍然可以证明这一点，因为

00:14:00.010 --> 00:14:05.370
加密散列的优势在于它与我拥有宠物的文件相同

00:14:05.580 --> 00:14:12.220
所以我们通过默克尔有向无环图，这是很长的路要走

00:14:12.220 --> 00:14:16.330
说我们想要做的是将所有这些不同的东西混在一起

00:14:16.330 --> 00:14:26.350
一个很好的标签，所有其他标签的长度都相同

00:14:26.350 --> 00:14:31.210
我们所有与不同块相关的哈希值我们要做的是

00:14:31.210 --> 00:14:35.560
将它们粘贴到一长串的双流中，但这仅仅是更多

00:14:35.560 --> 00:14:40.390
可散列的信息，这就是我们要做的，然后此散列包括

00:14:40.390 --> 00:14:44.410
这两个哈希值放在一起，其中包括这两个哈希值

00:14:44.410 --> 00:14:51.340
编码为您的实际数据，然后我们再做一次，直到只有一个，然后

00:14:51.340 --> 00:14:55.000
这是一件很酷的事情，因为您可以继续展开

00:14:55.000 --> 00:15:00.070
在这些层中，这是一个短字符串类型的代码，用于显示您所有的信息

00:15:00.070 --> 00:15:07.420
喜欢，这有点类似于文件夹翻转的想法

00:15:07.420 --> 00:15:14.860
比这更灵活的事情之一是

00:15:14.860 --> 00:15:18.310
再次对这个验证问题真的很好，所以说我不只是

00:15:18.310 --> 00:15:23.800
寻找一个文件说我正在寻找整个数据集，任何地方的任何变化

00:15:23.800 --> 00:15:29.440
在任何文件中都会导致不同的哈希值，因为我有该哈希值

00:15:29.440 --> 00:15:33.730
在这里站起来，这当然只是从

00:15:33.730 --> 00:15:36.730
之前的哈希值，因此，如果我们修改此哈希值，它将改变

00:15:36.730 --> 00:15:40.179
进入这里，这样会改变这里发生的事情，从而改变发生的事情

00:15:40.179 --> 00:15:47.230
在最后的哈希中，您会发现它们是否完全不同，您可以

00:15:47.230 --> 00:15:54.809
也可以进行部分验证，因此，如果您只关心image / png

00:15:54.809 --> 00:15:59.679
如果您知道此哈希值，则不一定需要展开所有内容

00:15:59.679 --> 00:16:12.959
此哈希的这一部分为图像编码，我在这里的时间怎么样

00:16:14.819 --> 00:16:21.429
您还有5分钟出色的时间，所以我要点击

00:16:21.429 --> 00:16:27.579
通过访问文件，因为我相信您通常对此很熟悉，但是我

00:16:27.579 --> 00:16:31.540
喜欢这个报价，您需要做的是让Web服务器查找持久的

00:16:31.540 --> 00:16:35.829
即时获取URI，并在您当前的疯狂文件中的任意位置返回触发文件

00:16:35.829 --> 00:16:40.299
系统有点在等我们哦，这正是去中心化的地方

00:16:40.299 --> 00:16:46.839
Web协议通常会做，并且在ipfs上将成为顶级

00:16:46.839 --> 00:16:52.059
我们刚刚讨论过的哈希值，所以您将其放到了

00:16:52.059 --> 00:16:58.809
互联网，人们会说，哦，我有这块，我有那块

00:16:58.809 --> 00:17:06.069
这个块，我们将其发送回去，这对于静态内容真的很有效

00:17:06.069 --> 00:17:12.730
因为一个URI将始终使用与该URI完全相同的内容

00:17:12.730 --> 00:17:17.769
实际上是目录的读取密钥，它说可以，我可以

00:17:17.769 --> 00:17:23.559
作者在此处发布的内容，这是使用密钥对

00:17:23.559 --> 00:17:29.409
所以这是公钥版本，但是写​​它的人有私钥

00:17:29.409 --> 00:17:32.169
密钥，因此这是唯一可以按下公共密钥的人

00:17:32.169 --> 00:17:36.820
附带一些有关何时发布的元数据，他们说，哦，让我们

00:17:36.820 --> 00:17:41.590
比较一下，我们都有作者写的东西，但它们都附在这些不同的东西上

00:17:41.590 --> 00:17:47.039
日期戳，最新的是我们将回馈给您的

00:17:47.140 --> 00:17:52.420
这对于更新内容和您的东西真的很有价值

00:17:52.420 --> 00:17:56.290
可以看到这两个地方实际上可能真的很好地配对在一起

00:17:56.290 --> 00:18:01.630
可能需要能够以一种非常信任的方式信任特定来源

00:18:01.630 --> 00:18:07.390
当前信任域，但也有可验证的内容，您的来源

00:18:07.390 --> 00:18:16.060
提供一组哈希值，然后如您所知，现在就可以

00:18:16.060 --> 00:18:24.160
Rijo stit，这意味着您会加强整个网络，因此

00:18:24.160 --> 00:18:29.290
回到我们的工作，这就是我们，这是我们在米里亚姆拱门上所做的最后一个案例

00:18:29.290 --> 00:18:36.220
史蒂夫·马奇（Steve March），我们有人在环境数据治理中找我们

00:18:36.220 --> 00:18:41.770
主动说，嘿，我们担心鹿园会发生化学火灾

00:18:41.770 --> 00:18:46.060
是我们将要开始的法律案件，但我们可能不会开始

00:18:46.060 --> 00:18:50.950
该法律案件直到现在十年后，因为发生的事情是

00:18:50.950 --> 00:18:57.100
是一场大火，有一些化学坦克正在被释放

00:18:57.100 --> 00:19:02.560
实地的反应很糟糕，因为基本上他们弄错了

00:19:02.560 --> 00:19:05.500
百万分之几的危险数量级

00:19:05.500 --> 00:19:11.020
他们在哪个月份派遣了没有呼吸器的消防员

00:19:11.020 --> 00:19:16.870
他们派人进去，他们派遣工人回到隔壁的工厂，他们派满了

00:19:16.870 --> 00:19:21.540
隔壁的孩子们回到学校，苯是一种非常活跃的致癌物

00:19:21.540 --> 00:19:26.080
而且基本上该地区的每个人都有可能

00:19:26.080 --> 00:19:28.590
癌症

00:19:28.860 --> 00:19:37.570
更可怕的是，负责火灾和火灾的人

00:19:37.570 --> 00:19:45.490
与之抗争的还有控制数据的人

00:19:45.490 --> 00:19:49.870
那将证明是罪过的，这是在此期间发生的事情之一

00:19:49.870 --> 00:19:55.590
火，这就是为什么人们努力工作的原因，这是因为我们

00:19:55.590 --> 00:19:59.860
我们看到其中一台与我们实际使用的显示器相关的显示器

00:19:59.860 --> 00:20:03.710
在大火中掉下来，所以有犯规的可能

00:20:03.710 --> 00:20:10.190
因此，在这种情况下，确保有一个可以放置您的地方非常重要

00:20:10.190 --> 00:20:14.840
可以将数据存档在有弹性的地方，而不会意外消失

00:20:14.840 --> 00:20:18.410
并可以真正证明它与最初放置的数据相同

00:20:18.410 --> 00:20:22.420
由负责对其进行衡量的实体提供

00:20:22.750 --> 00:20:28.850
因此我们以两种不同的方式对此进行归档，以通过查询将其放入IP FS中

00:20:28.850 --> 00:20:36.860
这是一个基于IPSS的数据库管理器数据管理器，我们也将其放在

00:20:36.860 --> 00:20:42.530
Internet存档，然后简短地讲，这是我从事的论文

00:20:42.530 --> 00:20:48.710
去年与不同档案工作者讨论数据风险矩阵

00:20:48.710 --> 00:20:52.640
类型和数据管理器，就像其中一句名言一样，它很棒

00:20:52.640 --> 00:20:55.730
除非我们有专门的计划，否则我们将被视为有风险的数据

00:20:55.730 --> 00:21:03.620
处于危险之中，因此我们制定了一个风险矩阵来评估

00:21:03.620 --> 00:21:09.170
数据被存储以查看是否看似输出到什么程度

00:21:09.170 --> 00:21:12.290
仍然处于危险之中基本上所有数据都处于危险之中

00:21:12.290 --> 00:21:19.580
方式，但这是我们最终存储在传统档案中的数据，

00:21:19.580 --> 00:21:24.170
您可以看到这很抱歉，可以快速解析一下

00:21:24.170 --> 00:21:29.990
分钟，但这是我们从IPSS开始的时间，您会注意到

00:21:29.990 --> 00:21:34.220
这两个幻灯片这中间部分灾难性地依赖于服务

00:21:34.220 --> 00:21:44.210
火灾和政治干预的潜力可能会大大降低，因为它

00:21:44.210 --> 00:21:50.270
有潜力分布在节点上的众多不同人群中

00:21:50.270 --> 00:21:53.960
具有不同程度的身体风险，无论是谁，这都是可以验证的

00:21:53.960 --> 00:22:00.050
有了它，这意味着它不必存储在受信任的档案中，仅此而已

00:22:00.050 --> 00:22:03.620
仅可能为真，因为它取决于其他人复制数据

00:22:03.620 --> 00:22:10.960
这是另一个挑战，我认为那是我要离开你的地方

00:22:13.100 --> 00:22:27.019
太好了，非常感谢您分享凯西（Kelsey），谢谢，很好，我

00:22:27.019 --> 00:22:33.679
认为我们快没时间了，如果您有任何问题，请添加

00:22:33.679 --> 00:22:41.600
到文档，我会反对惊人的谢谢大家，并有一个伟大的

00:22:41.600 --> 00:22:49.299
周-谢谢凯尔西谢谢

