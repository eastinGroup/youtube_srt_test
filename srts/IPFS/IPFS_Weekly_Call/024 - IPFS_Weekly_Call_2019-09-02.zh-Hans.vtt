WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:13.170
我要为Z如何使它变得困难而感到困惑的障碍

00:00:13.170 --> 00:00:18.539
按下录制按钮，您做到了，这不像是其中之一

00:00:18.539 --> 00:00:38.610
当您将鼠标移到上方时左右移动按钮，这样很好看

00:00:38.610 --> 00:00:49.680
我自己很棒，我们是动荡的互联网，好吧，欢迎大家。

00:00:49.680 --> 00:00:58.350
欢迎大家参加2019年9月2日星期一的ipfs每周酷

00:00:58.350 --> 00:01:02.850
这将很有趣，我正在动脑，我是你们所有的主人

00:01:02.850 --> 00:01:06.950
九月从尊贵的人手中接过

00:01:06.950 --> 00:01:18.210
板条箱工作很酷，所以我们有一些公告，我们有一个

00:01:18.210 --> 00:01:22.380
公告，然后我们会从几个小时的顶部开始进行一个非常有趣的演讲

00:01:22.380 --> 00:01:30.420
仲裁控制非常期待这一点，因此，一个公告是

00:01:30.420 --> 00:01:36.390
寻求帮助很酷，希望帮助您创建下一代导航

00:01:36.390 --> 00:01:42.390
ipfs失效的文档系统哦，如果您有兴趣的话，那会很好

00:01:42.390 --> 00:01:48.630
参与其中，我们需要您的帮助，这些可以是网址中的视频通话

00:01:48.630 --> 00:01:53.340
文档，所以我不打算读出它，因为它是从5:00开始的9月

00:01:53.340 --> 00:02:03.420
pm到6:30 UTC不错不错，我要把它传递给礼帽

00:02:03.420 --> 00:02:11.310
他可以告诉我们所有有关头等大事的信息。嗨，大家好！

00:02:11.310 --> 00:02:16.349
聚集在这里，所以有人觉得她打扰了我，让我有

00:02:16.349 --> 00:02:19.769
有点感冒，所以，如果我说了一些话，你也听不懂

00:02:19.769 --> 00:02:25.290
打扰我，说你说什么，我再说一遍，我想我是

00:02:25.290 --> 00:02:28.890
我要做的是给一些背景，我有一些像短片一样的

00:02:28.890 --> 00:02:33.120
不仅是图珀洛（Tupelo），然后我将尝试将其大部分集中在

00:02:33.120 --> 00:02:38.550
实际上，您知道反对所有演示上帝在这里针对我们进行现场演示

00:02:38.550 --> 00:02:44.480
测试网，因为我认为这将有助于说明更多

00:02:44.480 --> 00:02:48.840
粒子实验室特定的东西在IP上，然后让p2p和分子的东西我

00:02:48.840 --> 00:02:53.130
不仅仅是看到幻灯片，还想多了

00:02:53.130 --> 00:03:00.209
使这种东西对我来说是单击的，这样我就可以从那里开始，我需要

00:03:00.209 --> 00:03:04.010
分享我的屏幕，否则我们将无法看到它

00:03:07.160 --> 00:03:14.150
我阅读了，您将鼠标悬停在我的礼物上，但是每个人都可以看到介绍

00:03:14.150 --> 00:03:21.470
到这里下面是的，好吧，我是法定人数控制的首席执行官，

00:03:21.470 --> 00:03:26.930
是一家营利性公司，建立了一个开放且未经许可的图珀洛网络，

00:03:26.930 --> 00:03:33.620
是一个新的第一层DLT平台，专门用于现实世界的对象和

00:03:33.620 --> 00:03:40.460
与金融和分散式金融相对的应用，我认为

00:03:40.460 --> 00:03:45.860
说明这有助于在这里谈论一些现有技术，并且

00:03:45.860 --> 00:03:49.990
我将快速浏览一下这些东西，让您摆脱那些烦恼

00:03:49.990 --> 00:03:56.060
知道是否有问题，我会备份并回答，但我认为

00:03:56.060 --> 00:04:00.190
与现有技术相比，谈论打击是很有趣的，

00:04:00.190 --> 00:04:06.080
几乎每个当前的区块链都起作用的方式是，您知道有一个链

00:04:06.080 --> 00:04:10.760
正确的区块，在该区块内，每笔交易都下达订单

00:04:10.760 --> 00:04:14.030
对，所以有一个交易，一个交易B，一个交易C，还有那些

00:04:14.030 --> 00:04:18.470
由比特币整理的将是矿工和其他一些东西

00:04:18.470 --> 00:04:23.810
这将是真正的利益，他们会做很多工作来努力做到公平

00:04:23.810 --> 00:04:27.830
关于将这些交易整理好，他们必须做很多工作

00:04:27.830 --> 00:04:33.920
在总订购中，您知道总有很多开发人员

00:04:33.920 --> 00:04:38.720
在去中心化系统中，订购是一个非常困难的问题，因此他们花费

00:04:38.720 --> 00:04:42.830
为实现这一目标付出了很多努力，以及他们必须这样做的原因

00:04:42.830 --> 00:04:49.030
通常是由于传统DLT中所谓的双花问题

00:04:49.030 --> 00:04:53.930
这意味着您知道爱丽丝是否正在向鲍勃付款，而爱丽丝也在试图

00:04:53.930 --> 00:04:57.500
付给Carol，您需要先查看其中哪一笔交易才能查看

00:04:57.500 --> 00:05:01.700
鲍勃（Bob）是爱丽丝（Alice）付给鲍勃（Bob）还是爱丽丝（Alice）付给了卡罗尔（Carol）权利，等等

00:05:01.700 --> 00:05:04.550
他们花了很多工作只是为了确保这些交易发生

00:05:04.550 --> 00:05:08.990
以正确的顺序进行操作，以使爱丽丝永远不会花费超过您所知道的费用

00:05:08.990 --> 00:05:15.080
而不是她的代币余额，而且只有Bob或Carol之一都能获得付款，

00:05:15.080 --> 00:05:19.280
这就是为什么他们开始进行整个全球巡回演出的原因

00:05:19.280 --> 00:05:22.810
订购，但随后我们开始使用LT

00:05:22.810 --> 00:05:27.490
在上面放各种其他疯狂的疯狂东西，这是一张图片

00:05:27.490 --> 00:05:32.020
气象站对，所以我们知道有些人已经开始气象了

00:05:32.020 --> 00:05:36.820
数据进入区块链，而我们所要解决的是

00:05:36.820 --> 00:05:40.840
即使使用正确的天气数据，系统也会经历所有相同的过程，因此

00:05:40.840 --> 00:05:44.440
只是按照气象数据的顺序进行操作，但这也使爱丽丝（Alice）

00:05:44.440 --> 00:05:48.070
和鲍勃的交易按照天气数据正确排序，所以就像

00:05:48.070 --> 00:05:51.700
系统完全不需要做的工作，没人在乎天气

00:05:51.700 --> 00:05:56.460
在Alice付款之前或之后，以及另外

00:05:56.460 --> 00:06:02.620
很多团队在保持数据永续性方面很棒，但他们也必须保持

00:06:02.620 --> 00:06:05.800
永久的数据，所以所有这些天气数据都是

00:06:05.800 --> 00:06:12.760
我认为在区块链中，区块链永远存在

00:06:12.760 --> 00:06:14.950
您知道的创作可能对

00:06:14.950 --> 00:06:18.580
可审计的区块链，专门用于赚钱，但是当您开始交谈时

00:06:18.580 --> 00:06:21.880
关于应用程序，它变成了一种不同的关注点，就像

00:06:21.880 --> 00:06:26.410
该数据在某些情况下应该永远存在，但并非总是如此

00:06:26.410 --> 00:06:29.500
正确，不需要每五秒钟保存一次气象数据

00:06:29.500 --> 00:06:37.240
在全球范围内永久使用25,000个中继器，您知道我有点遇到了

00:06:37.240 --> 00:06:43.480
这些问题是我自己尝试在InfoSec公司中建立的，当时

00:06:43.480 --> 00:06:49.870
我对我的团队说的那种核心控制的原始风味是安全的

00:06:49.870 --> 00:06:54.250
公司，我试图将信任度从任何公众的视线转移到

00:06:54.250 --> 00:06:58.510
公司的一组安全规则，而我刚刚意识到的是

00:06:58.510 --> 00:07:00.730
生意真的没用，我在看一切

00:07:00.730 --> 00:07:06.460
这是在2016年，所以您知道选择的范围比较有限，但是

00:07:06.460 --> 00:07:12.370
仍然有很多大硬币和理论毫米，现在被称为纳米

00:07:12.370 --> 00:07:15.400
标题叫做勇敢的lakhs，还有其他所有深奥的

00:07:15.400 --> 00:07:20.050
高速的，我意识到几乎所有的都不会

00:07:20.050 --> 00:07:23.800
工作他们出于各种原因都不会为公司工作

00:07:23.800 --> 00:07:28.390
所有的交易都是昂贵且昂贵的，并且就像最糟糕的方式一样

00:07:28.390 --> 00:07:32.229
像可变成本一样写，有时他们要花一分钱，有时他们要花几分钱。

00:07:32.229 --> 00:07:35.510
花费40或100美元，这是当您尝试烘烤时

00:07:35.510 --> 00:07:39.950
运行一个应用程序的成本变得非常困难

00:07:39.950 --> 00:07:45.200
我在某些情况下也很僵化，例如比特币，它非常僵化，但在

00:07:45.200 --> 00:07:51.590
在其他情况下，您也总是在编写智能合约，并且存在问题

00:07:51.590 --> 00:07:55.220
智能合约在某些情况下是很棒的，实际上

00:07:55.220 --> 00:08:00.170
在某些情况下是必要的，但在90％的情况下，人们正在重写

00:08:00.170 --> 00:08:03.980
一遍又一遍的相同的东西，这是这个对象，有一些有关的数据

00:08:03.980 --> 00:08:07.640
这里的对象是拥有对象的人，就是关于它的东西，所以当您在

00:08:07.640 --> 00:08:11.720
谈论诸如此类的任何现实应用程序，无论数据是否

00:08:11.720 --> 00:08:15.620
像任何种类的追踪系统一样的供应链，甚至像加密货币之类的东西

00:08:15.620 --> 00:08:19.670
小猫，所有这些东西实际上只是人们的粗俗应用

00:08:19.670 --> 00:08:24.560
为它编写复杂的安全智能合约，然后不可伸缩的就是

00:08:24.560 --> 00:08:28.760
我们都知道并喜欢，就像每秒七次交易，

00:08:28.760 --> 00:08:32.599
我什至不知道这是怎么回事爱尔兰或

00:08:32.599 --> 00:08:39.130
现在像这样的东西，所以图珀洛（Tupelo）是完全不同的

00:08:39.130 --> 00:08:44.570
它会在结构状态下为每个单独的对象建模

00:08:44.570 --> 00:08:50.240
一秒钟内称为链树的更多细节，这些对象是完全

00:08:50.240 --> 00:08:54.980
与系统中的所有其他对象分开，它们的链树是一个

00:08:54.980 --> 00:08:59.720
区块链和当前状态树的组合都总结为

00:08:59.720 --> 00:09:07.430
单个IP LD对象如此本地化，以单个提示的形式提供给您

00:09:07.430 --> 00:09:10.250
是您拥有当前状态的树以及所有历史的加

00:09:10.250 --> 00:09:15.440
包含单个数据结构的数据结构的更改

00:09:15.440 --> 00:09:18.530
而且不必与其他任何链状树互动，它们都有自己的状态

00:09:18.530 --> 00:09:26.830
它是可验证的，因为我们可以定义元组，所以它定义了某些确定性

00:09:26.830 --> 00:09:30.980
您可以在那些链状树上进行的交易，我将在稍后介绍

00:09:30.980 --> 00:09:37.430
再次，但基本上，它们提供了设置拥有此数据集的数据集的功能

00:09:37.430 --> 00:09:41.750
链树，然后在该链树上做一些标记工作，我再次

00:09:41.750 --> 00:09:46.670
很快进入，但要对单个对象进行建模非常重要

00:09:46.670 --> 00:09:49.460
分别是共识算法可以是

00:09:49.460 --> 00:09:53.210
更容易，更快捷地进行交易

00:09:53.210 --> 00:09:58.160
异步，因此当交易发生在一个链式树上时，我们

00:09:58.160 --> 00:10:02.870
不必等待一个区块，我们不必等待交易和三个

00:10:02.870 --> 00:10:07.250
发生其他链式树，我们可以再处理一次交易

00:10:07.250 --> 00:10:17.420
加快了整个过程，并且没有不必要的工作，所以是的，我们

00:10:17.420 --> 00:10:21.590
有一个新的链树，有一个称为链树的新数据结构

00:10:21.590 --> 00:10:25.610
我们自己的共识算法，我的意思是说这是一个不完全是我们自己的算法

00:10:25.610 --> 00:10:30.620
这是基于别人的出色工作，我不想坐在这里说

00:10:30.620 --> 00:10:33.980
我们在那里完全形成了自己的共识，但我们当时是

00:10:33.980 --> 00:10:41.420
能够做到的是将BFG建议简化为降低消息复杂性并

00:10:41.420 --> 00:10:49.160
而且在这里也具有类似异步的能力，而且由于IP LD，我们

00:10:49.160 --> 00:10:52.910
还有其他很酷的事情，那就是签名者就像我们的版本

00:10:52.910 --> 00:10:56.960
验证者实际上不需要保留区块链的历史

00:10:56.960 --> 00:11:03.950
他们要做的是基本上保留一个链树ID的哈希表

00:11:03.950 --> 00:11:07.970
和它的当前提示，所以这意味着什么是当下一个

00:11:07.970 --> 00:11:13.040
交易进入链式树可以以任何相关状态传回

00:11:13.040 --> 00:11:19.310
交易需要的，所以可能有点复杂，所以不是我

00:11:19.310 --> 00:11:24.140
这对任何人都没有意义，但签名者只能这样做，如果您

00:11:24.140 --> 00:11:27.590
想要做一些需要状态的事情，您可以在该状态下返回

00:11:27.590 --> 00:11:31.340
因为签名者有提示，他们可以验证您正在传递的数据

00:11:31.340 --> 00:11:34.070
回到世界之前

00:11:34.070 --> 00:11:38.750
所以是的，这很酷，签约者几乎不做任何工作，只需要存储很少的东西

00:11:38.750 --> 00:11:46.370
数据要达成全球共识，然后元组不是一个智能合约平台

00:11:46.370 --> 00:11:51.410
但是由于以下原因，您最终可能会做一些非常复杂的应用程序：

00:11:51.410 --> 00:11:58.660
这些简单的集合数据交易实际上就是集合数据集所有权

00:11:58.660 --> 00:12:02.240
建立令牌Minto同意橡木并接收

00:12:02.240 --> 00:12:08.059
使您可以进行各种现实世界的用例，就像数字使用一样

00:12:08.059 --> 00:12:12.170
具有设置数据和设置所有权的案例，然后是各种

00:12:12.170 --> 00:12:16.160
就像我们期望从DLT中获得令牌的令牌经济一样

00:12:16.160 --> 00:12:25.999
交易，因此正如我在下文所述，您可以考虑每笔交易，

00:12:25.999 --> 00:12:34.339
是孤立地进入的，而最终的结果是整个

00:12:34.339 --> 00:12:38.480
事情更快，因为还因为他们的签名人必须保留

00:12:38.480 --> 00:12:42.709
大量的旧交易可以更便宜

00:12:42.709 --> 00:12:48.139
这是事关重大的证明，不适合工作，因此该中心实际上并没有做很多事情

00:12:48.139 --> 00:12:52.519
进行这项交易，因此可以将它们建模为超级便宜

00:12:52.519 --> 00:12:57.980
四个签名者的交易可能会收支平衡，因为没有

00:12:57.980 --> 00:13:03.889
智能合约，感觉更像是使用您知道Minna的API

00:13:03.889 --> 00:13:06.199
拼字潜入，您实际上正在做的是

00:13:06.199 --> 00:13:11.299
发送消息到点对点（例如发布/订阅网络），但来自

00:13:11.299 --> 00:13:14.509
编程语言，就像您要调用api并获得

00:13:14.509 --> 00:13:19.879
该尖端像链状树的已签名尖端一样，我将在其中向您展示

00:13:19.879 --> 00:13:27.110
在一秒钟的实际代码中，这是一种

00:13:27.110 --> 00:13:33.259
链树有一条指向链的路线，而这棵树就在这条树上

00:13:33.259 --> 00:13:37.069
在水平方向离开左侧可能会更好，但这就像您知道

00:13:37.069 --> 00:13:41.540
异常区块链有最后一个锁，它会到达第一个区块

00:13:41.540 --> 00:13:49.519
并且树指向用户所有数据部分的用户集，无论用户可以做什么

00:13:49.519 --> 00:13:53.569
无论它想要什么，这都强调了图珀洛部分的变化

00:13:53.569 --> 00:13:58.119
整个事情是一个有限状态机吗？

00:13:58.119 --> 00:14:02.629
用户可以随意更改的有限规则是Tupelo的下划线

00:14:02.629 --> 00:14:05.509
因为它与令牌和所有权有关，所以它们必须

00:14:05.509 --> 00:14:11.559
像这样的特定交易，在此下划线Tupelo部分

00:14:13.170 --> 00:14:17.560
是的，所以火车树是有限状态机，它们从一个过渡

00:14:17.560 --> 00:14:22.300
状态从另一个IPL DSP转移到另一个

00:14:22.300 --> 00:14:27.250
交易，实际上将在区块链部分附加一个块

00:14:27.250 --> 00:14:31.390
这是您进行交易的列表，这些交易进入了链式树

00:14:31.390 --> 00:14:35.590
得到一个新的提示，然后网络上的签名者对该提示进行签名，然后

00:14:35.590 --> 00:14:42.910
世界可以知道他们的链树的新状态是什么，所以我已经去了

00:14:42.910 --> 00:14:49.660
通过这些，我现在可以演示，但是我会在那里停顿任何问题

00:14:49.660 --> 00:14:52.860
人们现在拥有的

00:14:53.530 --> 00:15:01.750
看起来，所以我们嗯，我们有一个新的SDK，

00:15:01.750 --> 00:15:06.850
 Blossom SDK，这很酷，实际上是在协助使用我

00:15:06.850 --> 00:15:12.510
像协议实验室的所有代码和所有JavaScript一样思考p2p和

00:15:12.510 --> 00:15:19.090
和IP LT，因此不必重做交易的发生方式

00:15:19.090 --> 00:15:24.550
JavaScript我们有一个Lawson文件生成器

00:15:24.550 --> 00:15:31.000
像走散列数组Maps树之类的东西，但是是的，然后使用

00:15:31.000 --> 00:15:37.660
JavaScript可以执行诸如阻止服务和阻止服务以及发布之类的工作

00:15:37.660 --> 00:15:42.760
sub，我们实际上会阻止Pinot完全停留在JavaScript领域，因此使用

00:15:42.760 --> 00:15:49.320
我们也有这个资源管理器和钱包，稍后我会告诉你

00:15:50.560 --> 00:15:54.450
每个人都可以在这里在我的屏幕上阅读吗

00:15:56.230 --> 00:16:03.100
是的，好的，我们可以看到这很简单，所以我们得到了一个社区

00:16:03.100 --> 00:16:09.910
最重要的一层是打击他们实际的共识算法，以便打击

00:16:09.910 --> 00:16:16.209
为pub子网络提供一些东西，还为

00:16:16.209 --> 00:16:21.820
那些我们现在运行社区成员的公共成员，这个社区层是

00:16:21.820 --> 00:16:25.690
分散化，就像电子邮件而不是DLT，就像任何人都可以运行其中之一

00:16:25.690 --> 00:16:31.510
自吹自的节点是一个漂亮的筹码系统，正在处理状态币

00:16:31.510 --> 00:16:39.550
成为签名者，关键是拥有一棵链树的钥匙，然后我改变了我

00:16:39.550 --> 00:16:42.639
图珀洛不知道它是由创建它的第一个键所拥有的

00:16:42.639 --> 00:16:48.220
是什么创建它的D ID的分散标识符，所以在此

00:16:48.220 --> 00:16:51.010
例如，我们要做的是创建密钥，然后我们将

00:16:51.010 --> 00:16:55.269
创建一个交易卡，以便代表我们的交易卡的链树

00:16:55.269 --> 00:17:01.649
仅通过常规ipfs阻止服务及其键I传递阻止服务

00:17:01.649 --> 00:17:07.150
知道C我们正在设置交易卡ID的属性，然后我们将

00:17:07.150 --> 00:17:11.429
制作一个区块，这样该交易会在交易卡树上创建一个区块

00:17:11.429 --> 00:17:16.870
我们要进行三组训练数据集的交易，所以我们要设置斜线

00:17:16.870 --> 00:17:24.370
将斜线项目2的编号48串联到此​​处，并将斜线条件减为薄荷

00:17:24.370 --> 00:17:28.329
条件是有三个社区成员，我们只是在等待那些

00:17:28.329 --> 00:17:34.059
更新，然后再次获取ID，然后返回发光并获取新

00:17:34.059 --> 00:17:38.260
分配成员所知的小费，我们将在此处看到该新的小费

00:17:38.260 --> 00:17:42.100
这些断言不会出现，我们将在这里成功地看到

00:17:42.100 --> 00:17:47.910
芥末酱，假设一切顺利

00:17:51.029 --> 00:17:55.029
并且您会看到，它实际上在这里与我们的真实测试网相对应-

00:17:55.029 --> 00:17:59.289
而不是针对我的当地人，所以您可以看到速度和类似的事物，

00:17:59.289 --> 00:18:02.590
这是结局-这不是概率，我不能

00:18:02.590 --> 00:18:07.870
无法撤消，您会看到新的割嘴雕刻机已成功注册，因此我们

00:18:07.870 --> 00:18:16.360
带D ID，如果我们回到这一点，我也应该指出，所以这个应用程序，

00:18:16.360 --> 00:18:27.159
我们将在这里使用3o c是的，所以这是支票

00:18:27.159 --> 00:18:33.070
好的，此应用没有服务器，我的意思是它在github io上运行，所以我

00:18:33.070 --> 00:18:35.799
猜想那是一台服务器，但是我的意思是里面没有像现在这样的东西了

00:18:35.799 --> 00:18:42.100
前端，并在此处查看它们在浏览器中的运行情况，所以这是Machane

00:18:42.100 --> 00:18:46.960
直接的资源管理器，因此您可以在这里看到我们所做的更改的D ID和

00:18:46.960 --> 00:18:54.700
我们可以单击它的树数据，这是项目系列和条件

00:18:54.700 --> 00:18:59.889
我们在这里设置的同时也看到了链条的一面，虽然不那么漂亮，但是

00:18:59.889 --> 00:19:08.950
快速单击链，我们可以走到尽头，这是我们做的签名

00:19:08.950 --> 00:19:14.049
从爱丽丝（Alice）那里，然后您就知道有一个交易清单

00:19:14.049 --> 00:19:16.870
他们三个，你可以看到像设置数据

00:19:16.870 --> 00:19:21.730
有效负载是路径，值是缓冲区，此处是

00:19:21.730 --> 00:19:29.009
通过以设置另一个特性链中的另一个

00:19:29.009 --> 00:19:36.100
很快这里就可以进行所有权转移，因此有了这一点，我们得到了

00:19:36.100 --> 00:19:40.570
我们获得分析密钥的社区，也获得了我们自己鲍勃的培训部分

00:19:40.570 --> 00:19:47.529
得到一个钥匙，鲍勃得到一个地址，然后爱丽丝立即进行第一笔交易

00:19:47.529 --> 00:19:56.879
是将交易卡的所有者更改为Bob，因此我们将这样做

00:20:04.850 --> 00:20:08.580
但是你知道什么并不能告诉我们哪种类型，所以不是很

00:20:08.580 --> 00:20:23.640
乐于助人，然后我们就添加一张交易卡，好吧，我们去

00:20:23.640 --> 00:20:28.650
回到这里再做一次，这是一张新的交易卡，我不会更改

00:20:28.650 --> 00:20:40.559
不一样，所以好，所以我们去这里，我们在这里好吧，让我和树一起去树上

00:20:40.559 --> 00:20:45.419
这个，现在我看到这个在我正在说的下面有一个下划线的两个

00:20:45.419 --> 00:20:53.160
关于身份验证之前的信息，现在这是鲍勃的地址，因此仅

00:20:53.160 --> 00:20:59.580
只有其密钥与该地址匹配的Bob才能对该链树进行任何更改

00:20:59.580 --> 00:21:14.370
在世界和令牌中快速查看代码，我们将在此处创建令牌

00:21:14.370 --> 00:21:27.270
一链树爱丽丝和鲍勃的，我们将确保我们这次可以ID

00:21:27.270 --> 00:21:32.610
大约好，然后我们要让每一个链树都相信这只是

00:21:32.610 --> 00:21:39.660
令牌，并且在

00:21:39.660 --> 00:21:42.600
这种变化所独有的链式贸易，就像链树中的独特性一样

00:21:42.600 --> 00:21:48.510
但是，最上面的完整令牌名称是完整链条条约ID：令牌，其中

00:21:48.510 --> 00:21:52.020
意味着您知道，这样您就可以做一些有趣的事情，例如

00:21:52.020 --> 00:21:54.690
有一幅由链树代表的艺术品，你可能会发现那些

00:21:54.690 --> 00:21:57.510
令牌可以共享，您可以使用它们做的其他事情是

00:21:57.510 --> 00:22:01.770
像使用令牌，就像我们实际上有一个踏板车公司大楼，

00:22:01.770 --> 00:22:04.559
他们将使用这些令牌来代表您被允许骑行

00:22:04.559 --> 00:22:10.510
踏板车之类的事情对不起，所以您建立了

00:22:10.510 --> 00:22:13.600
令牌以及建立您的原因是为了让您可以

00:22:13.600 --> 00:22:17.590
有史以来创造的最大金额是我们目前唯一的货币政策

00:22:17.590 --> 00:22:23.500
支持，但与他人一起看，然后您铸造，所以这将铸造一个

00:22:23.500 --> 00:22:30.850
令牌，然后将其发送给鲍勃，然后鲍勃执行接收令牌，

00:22:30.850 --> 00:22:32.950
那实际上是一个不同，因为我们不知道总数

00:22:32.950 --> 00:22:36.130
订购我们确实需要在发送和接收之间建立关系

00:22:36.130 --> 00:22:40.120
因此我们发生了发送交易，您收到了该交易的收据

00:22:40.120 --> 00:22:43.150
然后您将其交给下一个人，他们称他们将收到

00:22:43.150 --> 00:22:49.480
交易，因此它扩展了链下的一些有效负载，然后

00:22:49.480 --> 00:22:52.690
接收交易，并且做的是在两个之间建立一个命令

00:22:52.690 --> 00:22:56.530
确实需要该命令的交易，但仅但仅在这些交易之间需要

00:22:56.530 --> 00:23:00.660
两个，让我们去看看令牌

00:23:07.460 --> 00:23:17.350
我们可以去和三个

00:23:20.520 --> 00:23:25.090
令牌，您现在可以看到这里有这个爱丽丝令牌

00:23:25.090 --> 00:23:30.280
而且我知道我们会按时赶到这里，所以我会尽快

00:23:30.280 --> 00:23:33.760
这就像是同一东西的钱包代表，基本上是不同的

00:23:33.760 --> 00:23:40.480
链树比我们正在使用的树，但您可以看到可以在以下位置建立令牌

00:23:40.480 --> 00:23:44.220
MS Koken会做到这一点，以便周围只有几个人

00:23:44.220 --> 00:23:53.230
并在刷新后立即允许使用UI在我们所有人中都不是完美的

00:23:53.230 --> 00:24:01.270
但现在有最多10个的IPS令牌，我们可以铸造五个

00:24:01.270 --> 00:24:05.320
余额为五，我们可以将它们发送给具有D ID的所有人，

00:24:05.320 --> 00:24:13.000
这是在您看到的相同系统中发生的，所以我认为这是我的

00:24:13.000 --> 00:24:17.799
快速概览，我们将在下面使用它，这是一个单独的

00:24:17.799 --> 00:24:22.090
仅因为ipfs DHT而为我的PFS联网，所以很难拥有节点

00:24:22.090 --> 00:24:26.440
如果现在已解决，现在可以在那里找到对方，我们可能

00:24:26.440 --> 00:24:33.970
只需直接在ipfs网络上运行，整个过程就可以了

00:24:33.970 --> 00:24:40.510
更改完全建立在IP LD的基础上

00:24:40.510 --> 00:24:44.799
重新发明轮子，以使用其他一些不同的技术来完成这些任务，

00:24:44.799 --> 00:24:48.730
那么我们使用您知道位交换，我们实际上并没有一个完整的ipfs，但是我们使用

00:24:48.730 --> 00:24:52.210
与他们一起的p2p那里有一些马虎的胖屁股，做这样的事情

00:24:52.210 --> 00:24:57.760
只是像探险家那样改变，而当我想

00:24:57.760 --> 00:25:04.049
这是我的概述，因为我们会按时到这里，所以有任何问题

00:25:05.700 --> 00:25:12.510
哦，嘿，谢谢，谢谢，我正在尝试

00:25:12.510 --> 00:25:17.550
把我的头绕在总订货的方式上，并且

00:25:17.550 --> 00:25:21.350
也像是暗示的意思是，主要是喜欢创新

00:25:21.350 --> 00:25:29.280
解耦发送和接收，因此解耦发送和接收允许

00:25:29.280 --> 00:25:34.710
令牌再次建立订单，但喜欢设置数据

00:25:34.710 --> 00:25:38.370
东西没有1，您不必使用任何工具，认为

00:25:38.370 --> 00:25:43.830
发生交易，但是是的，发送和接收的解耦是为了

00:25:43.830 --> 00:25:50.070
确定什么允许接收并知道像是像一个

00:25:50.070 --> 00:25:53.520
收银员的支票我不知道那里有多少美国人，欧洲人倾向于

00:25:53.520 --> 00:25:58.290
不知道那是什么，而是，就像发送令牌实际扣除一样

00:25:58.290 --> 00:26:01.770
那时链树上的余额，那么您就有了这个有效负载

00:26:01.770 --> 00:26:04.470
不需要保持安全，因为这就像写到

00:26:04.470 --> 00:26:08.040
接收器，然后我们使接收器去接收网络时

00:26:08.040 --> 00:26:11.850
已经签名相同，所以您要在两者之间建立此顺序

00:26:11.850 --> 00:26:17.850
他们再次有意义，是的，我想是这样，主要的好处是

00:26:17.850 --> 00:26:21.270
是删除总订单的主要好处是

00:26:21.270 --> 00:26:26.550
验证者所做的工作是正确的，验证者不必做

00:26:26.550 --> 00:26:29.940
达成协议要比刻在协议上要难得多

00:26:29.940 --> 00:26:33.960
部分顺序，您可以看到在所有类似情况中，您知道我们所有人都是

00:26:33.960 --> 00:26:36.810
重建90年代研究的东西，如果您看一下

00:26:36.810 --> 00:26:40.380
当时的文档就像很多人想出的部分顺序一样

00:26:40.380 --> 00:26:44.790
系统很快，但进入总订购量却很大

00:26:44.790 --> 00:26:49.230
更难，这使得它可以跳过整个部分，这实际上意味着

00:26:49.230 --> 00:26:54.510
我们可以跳过什么和不切实际的拜占庭默认容限，我们可以

00:26:54.510 --> 00:26:59.520
可以跳过确认阶段，这样以后就可以达成共识了

00:26:59.520 --> 00:27:03.510
一致层的油井必须做更少的工作，因此可能会损失

00:27:03.510 --> 00:27:10.860
好的，谢谢，是的，我认为我们已经没时间了

00:27:10.860 --> 00:27:14.340
我想说非常感谢您来参加我们的讨论

00:27:14.340 --> 00:27:23.440
两个pi很有趣，所以在所有人还没到达之前就到了，谢谢

00:27:23.440 --> 00:27:26.409
下周我们有Dirk，他将谈论他正在取得的进步

00:27:26.409 --> 00:27:30.490
她非常有趣的两点，非常感谢

00:27:30.490 --> 00:27:35.049
我一直在做这件事，这一直是9月2日ipfs每周的热点

00:27:35.049 --> 00:27:37.769
2019年

