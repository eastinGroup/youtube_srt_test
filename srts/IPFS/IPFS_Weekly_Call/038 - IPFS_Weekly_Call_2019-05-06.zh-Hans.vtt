WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.820 --> 00:00:05.780
所以你这里有人群

00:00:08.530 --> 00:00:10.590
你

00:00:11.450 --> 00:00:14.690
好极了

00:00:16.970 --> 00:00:29.730
现在让我们开始录制我们的生活，是的，我肯定可以很快

00:00:29.730 --> 00:00:34.260
插上办公室，我很酷，他们看到我们了，现在我们正在观看视频，我们正在直播

00:00:34.260 --> 00:00:40.800
现在我们正在录制，所以大家好，欢迎来到ipfs每周

00:00:40.800 --> 00:00:44.789
通话，但是我们看到了在IP之上构建的伟大事物的场景

00:00:44.789 --> 00:00:51.540
FS今天我们有一个关于Keep Network的演讲，但是在我们开始之前

00:00:51.540 --> 00:00:57.750
主要介绍阿里（Ali）为以下人士致以激动人心的宣布道歉

00:00:57.750 --> 00:01:02.160
您知道的通话是三遍，但是ipfs办公时间是一件很重要的事情

00:01:02.160 --> 00:01:06.000
发生在每周很酷的想法之前，所以您错过了它，因为

00:01:06.000 --> 00:01:10.110
每周都会发生这种情况，但下周将再次发生，如果您

00:01:10.110 --> 00:01:13.079
对贡献感兴趣，所以我给了这个，但是不知道从哪里开始

00:01:13.079 --> 00:01:16.740
或者您正在生产中，并且遇到一些类似我们在这里的问题

00:01:16.740 --> 00:01:21.630
为了帮助它，我们随时可以与您交谈检查非常感谢

00:01:21.630 --> 00:01:27.780
再次很棒，阿里感谢您的帮助，很好，所以

00:01:27.780 --> 00:01:33.210
我们没有其他公告，所以我们将开始今天的演讲

00:01:33.210 --> 00:01:40.970
关于网络磁带网络是我们私有数据的链下容器，

00:01:40.970 --> 00:01:47.970
如果您的连锁店在这里告诉我们，并谈论保持网络，我们将封锁ha

00:01:47.970 --> 00:01:52.920
以及如何使用盖子p2p，所以如果我进一步废话啊

00:01:52.920 --> 00:01:59.549
václav感谢您在这里，我会把它交给您，以便

00:01:59.549 --> 00:02:09.689
您可以提出谢谢谢谢Portia谢谢您邀请我们

00:02:09.689 --> 00:02:15.569
真的很高兴能在这里进行评论，您能看到我的屏幕吗？

00:02:15.569 --> 00:02:20.879
所以我叫Pioche和raga，我们想给你做个介绍

00:02:20.879 --> 00:02:27.110
关于如何使用p2p保持网络，我们将首先讨论什么是关键，

00:02:27.110 --> 00:02:30.390
它是如何工作的，然后我们讨论如何做

00:02:30.390 --> 00:02:37.590
我们把它滑到小便，所以如果我不得不形容保持一个，就跳下去保持

00:02:37.590 --> 00:02:43.230
我要说的一句话是，保持对公共狗链的隐私说谎

00:02:43.230 --> 00:02:46.980
最近几年，公共区块链的透明度令人难以置信，

00:02:46.980 --> 00:02:52.319
表格中具有可审核性和抗审查记录，但任何情况下

00:02:52.319 --> 00:02:56.340
可以轻松访问发布到区块链的智能合约

00:02:56.340 --> 00:03:00.239
利益冲突，因此当公司考虑在以下方面构建应用程序时

00:03:00.239 --> 00:03:05.070
区块链隐私是出现的主要问题之一，保持是一座桥梁

00:03:05.070 --> 00:03:10.170
在公共区块链和私人数据之间，因此公共合同可以作为

00:03:10.170 --> 00:03:14.819
区块链技术的全部功能而又不影响透明度和

00:03:14.819 --> 00:03:21.300
隐私我们也可以说Keep是可以存储的私人计算机的一种形式

00:03:21.300 --> 00:03:30.030
并计算甚至隐藏自身的数据，这也是keep的基本原语之一

00:03:30.030 --> 00:03:35.760
网络是负责提供信任的随机信标

00:03:35.760 --> 00:03:42.480
公共博客链的随机性来源，我们可以将保持网络分为两个

00:03:42.480 --> 00:03:47.850
零件我们称之为连锁的零件是一组出售的以太坊合约

00:03:47.850 --> 00:03:53.280
作为我们网络的一种api，我们取消链接的第二部分是

00:03:53.280 --> 00:03:59.459
保持客户端连接的网络，这些客户端使用特殊的通信协议来

00:03:59.459 --> 00:04:06.120
服务链的请求，现在我们可以专注于随机成为，因为从

00:04:06.120 --> 00:04:12.000
从PE的角度来看，我们将对所有其他方法使用非常相似的机制

00:04:12.000 --> 00:04:17.910
髋关节网络的未来，因此信标工作的方式是外部客户

00:04:17.910 --> 00:04:23.220
向链发布请求，请求说请产生一个随机的

00:04:23.220 --> 00:04:29.250
对我而言，保持客户从链和子集中收到此请求的数量

00:04:29.250 --> 00:04:34.680
他们是所选组中的那些客户合作

00:04:34.680 --> 00:04:39.150
以这种合作协议的方式产生一个随机数

00:04:39.150 --> 00:04:45.180
设计不允许任何人使用结果，结果可以稍后使用

00:04:45.180 --> 00:04:50.729
经密码学证明是不受操纵的，因此请保持硬币出版。

00:04:50.729 --> 00:04:54.180
结果链，他们开始了另一个协议称为组选择

00:04:54.180 --> 00:04:59.280
这样他们就可以选举一个新的小组，并且将添加这个新小组

00:04:59.280 --> 00:05:04.560
到组注册表，这个组可能会或可能不会在这个新组中被询问

00:05:04.560 --> 00:05:11.610
将来产生一个新的随机数这也是一个随机数

00:05:11.610 --> 00:05:17.580
选择，所以如果您从链外的角度来看它，这部分是

00:05:17.580 --> 00:05:22.910
连接到链，我们有一个使用剪辑p2p相互连接的客户端

00:05:22.910 --> 00:05:30.060
在此网络内，客户组成一个小组，一个便笺可以是以下成员的成员

00:05:30.060 --> 00:05:36.479
几个客户端对等方在这些组内进行通信的组

00:05:36.479 --> 00:05:43.530
从网络的角度来看，它们的时间跨度有限

00:05:43.530 --> 00:05:47.070
我们需要以下属性，以便客户必须能够有效

00:05:47.070 --> 00:05:51.210
在这些组内交换消息消息必须具有非常高的

00:05:51.210 --> 00:05:55.349
小组内部的传递率小组必须公开交流

00:05:55.349 --> 00:05:59.880
我们需要在两个客户之间保持某些通信的私密性

00:05:59.880 --> 00:06:03.840
消息属性的能力，因此必须正确定义发件人，并且消息必须

00:06:03.840 --> 00:06:08.520
提供站点的发送者，我们需要消息的完整性，因此我们需要

00:06:08.520 --> 00:06:13.229
为了能够检测到邮件被篡改，我们需要发现药丸

00:06:13.229 --> 00:06:19.590
当新客户端加入时加入网络的机制，从而导致p2p和

00:06:19.590 --> 00:06:23.340
特别是实施和建立的目的是为了掩盖

00:06:23.340 --> 00:06:28.009
最终决定将其作为对我们的最佳选择

00:06:28.009 --> 00:06:32.909
主要是因为客户是书面的，并且在培训中去了我们的客户。

00:06:32.909 --> 00:06:41.490
积极开发库ipfs和Goldie p2p服

00:06:41.490 --> 00:06:50.250
就像彼得说的那样，将呈现它在引擎盖下的精确外观

00:06:50.250 --> 00:06:53.370
我们大约一年半前开始了这个冒险

00:06:53.370 --> 00:06:58.500
真正带领p2p使用了areum的发现代码，他们

00:06:58.500 --> 00:07:03.120
有，然后再滚动您自己的，我们决定让您知道加入会p2p和

00:07:03.120 --> 00:07:08.970
ipfs，因为它们具有相当大的吸引力，因此我们如何在我们的产品中使用它

00:07:08.970 --> 00:07:13.350
代码是客户使用以太坊帐户进入

00:07:13.350 --> 00:07:18.720
这些是ECDSA密钥，因此我们在以太坊代码之间有接口

00:07:18.720 --> 00:07:23.550
以及我们的实时p2p代码，我们将这些ECDSA密钥转换为Lib

00:07:23.550 --> 00:07:28.380
 PDP表示，然后从那里获取我们的对等ID，我们还使用

00:07:28.380 --> 00:07:32.640
我们使用DHT主机自定义传输的侦听地址，因此我们将所有这些实例化

00:07:32.640 --> 00:07:37.650
的东西，这开始了我们的网络，使客户端可以连接到

00:07:37.650 --> 00:07:45.510
盖子p2p网络，然后转到下一张幻灯片，您将看到我们所做的

00:07:45.510 --> 00:07:51.120
从这里开始，客户需要找到一个引导列表，以及像well table这样的表

00:07:51.120 --> 00:07:54.420
显示一堆引导节点，我们对此有点担心，因为它们

00:07:54.420 --> 00:07:58.470
看起来像老板矢量，但我们将发布这些节点的客户端

00:07:58.470 --> 00:08:01.200
将连接到引导节点，我们需要做的一件事是

00:08:01.200 --> 00:08:05.340
确保客户端可以连接的引导节点种类繁多

00:08:05.340 --> 00:08:11.449
还重试和类似的事情，这是我们有趣的事情之一

00:08:11.449 --> 00:08:18.590
要做的是，我们编写了自己的自定义传输来劫持连接

00:08:18.590 --> 00:08:23.449
在关键客户端加入将要点对点网络的网络之前，我们在这里做什么

00:08:23.449 --> 00:08:26.800
是我们得到了联系

00:08:28.099 --> 00:08:33.390
我们检查PA的外观，以听取对方的意见，然后他们做了一些

00:08:33.390 --> 00:08:36.000
像挑战挑战一样的握手，一旦他们

00:08:36.000 --> 00:08:38.729
彼此进行了身份验证，好吧，您可以加入，也可以加入

00:08:38.729 --> 00:08:47.670
网络，所以彼得提到我们在其中有一个组选择协议

00:08:47.670 --> 00:08:51.930
组选择协议客户基本上在链上提交票证

00:08:51.930 --> 00:08:54.899
他们都被验证了，好吧，这些门票很好，这是多少份额

00:08:54.899 --> 00:09:00.209
您将获得并允许您加入pub / sub频道，因此基本上

00:09:00.209 --> 00:09:05.370
就像一个子泵通道一样，您会知道一个随机单词只是所有

00:09:05.370 --> 00:09:12.570
客户，他们加入了这个频道，每个小组都是自己的酒吧

00:09:12.570 --> 00:09:18.180
这是一个主题，请与PDP pub / sub一起使用，所以我们就像形成该主题一样，我们

00:09:18.180 --> 00:09:22.100
目前使用的是我们在闲聊中使用过的Flood Sub，但我们希望

00:09:22.100 --> 00:09:26.399
最初是用洪水歌曲来的，所以有一个很好的，你知道的多样性

00:09:26.399 --> 00:09:30.149
消息击中了所有同龄人，如果我们看到八卦子集

00:09:30.149 --> 00:09:38.760
将来更好的用例会做到这一点，所以发送一条消息，这些

00:09:38.760 --> 00:09:43.110
接下来的几张幻灯片有些过时了，因为我们将p2p更新为

00:09:43.110 --> 00:09:47.820
利用严格的签名和验证，所以我们要做的就是

00:09:47.820 --> 00:09:51.480
您知道无论客户端使用哪种协议，我们都会收到此协议消息

00:09:51.480 --> 00:09:56.339
执行，所以可能会有dkg或中继签名，而我们要做的就是封送

00:09:56.339 --> 00:10:01.350
我们喜欢注册子处理程序的特定协议消息，然后我们只是

00:10:01.350 --> 00:10:05.760
发送它，我们称之为调用publish，我们不再拥有我们的内部签名代码

00:10:05.760 --> 00:10:10.680
一切都放完了，我们依靠PDP来签署

00:10:10.680 --> 00:10:16.500
消息并进行验证，因此这就是消息层的外观

00:10:16.500 --> 00:10:22.079
我们使用protobuf，您会看到盒盖PDP发布/订阅消息，然后您就可以

00:10:22.079 --> 00:10:25.740
忽略网络包络，因为我们删除了所有内容，现在变得如此简单

00:10:25.740 --> 00:10:34.440
因为网络消息本身是正确的，所以对于接收消息，我们基本上

00:10:34.440 --> 00:10:40.810
接下来调用，这是pub / sub接口公开的方法

00:10:40.810 --> 00:10:45.250
而且每条消息基本上都像HTTP请求一样对待，我们感觉还好

00:10:45.250 --> 00:10:49.710
这是该消息的静音执行例行程序，然后调用正确的

00:10:49.710 --> 00:10:58.870
处理程序，将其发送到正确执行的协议，因此我们

00:10:58.870 --> 00:11:03.430
还写了一些自定义代码，例如处理不同的密钥

00:11:03.430 --> 00:11:08.290
类型，但我们还是主要关注ECDSA，并确保它们

00:11:08.290 --> 00:11:15.839
彼此可互操作，我们也有一些自定义处理代码

00:11:16.410 --> 00:11:21.160
对，所以我们需要做的事情或可以使用的事情之一

00:11:21.160 --> 00:11:25.120
我们需要深度连接管理，我相信这将会是

00:11:25.120 --> 00:11:29.770
可以使用连接管理器，但是我不确定我们需要的原因

00:11:29.770 --> 00:11:35.290
这是为了断开低于臭味阈值的客户端，如果我们

00:11:35.290 --> 00:11:40.240
需要取消参赛资格的意见，并且有给定的协议回合，因此我们需要

00:11:40.240 --> 00:11:43.779
可以让我们喜欢Band连接或切断它们的东西，或者您知道

00:11:43.779 --> 00:11:47.890
服务器一段时间，我们需要更多的弹性引导程序，

00:11:47.890 --> 00:11:51.370
前面提到过，这是为了确保我们获得大量的助推器

00:11:51.370 --> 00:11:55.930
出现，然后我们需要一个重试器，这里有一些选择，我们可以

00:11:55.930 --> 00:11:59.080
就像重试代码一样简单，或者有点

00:11:59.080 --> 00:12:03.280
更复杂，例如Hashi公司实施和游泳的东西以及最后一件事

00:12:03.280 --> 00:12:07.839
是返工验证管道和Golub PB发布/订阅，所以目前

00:12:07.839 --> 00:12:14.440
锚定到PR审阅中的提交，这是因为更新到

00:12:14.440 --> 00:12:21.160
严格启用Golub p2p pub / sub中的签名，我们注意到我们中有些人

00:12:21.160 --> 00:12:26.700
可以运行我们的最终代码进行我们的实验，而我们中的一些人不能，并且

00:12:26.700 --> 00:12:32.080
我们注意到，一旦启用签名消息，

00:12:32.080 --> 00:12:38.110
放弃我们团队中的一些人，我们终于意识到这是因为

00:12:38.110 --> 00:12:42.640
验证正在发生的事情，并且此提交就在这里

00:12:42.640 --> 00:12:47.230
将其分为同步验证和异步验证，这允许

00:12:47.230 --> 00:12:52.330
待处理的消息如此昂贵的事情被异步推迟，然后

00:12:52.330 --> 00:12:56.860
基本的结构检查是按顺序进行的，这将是很棒的

00:12:56.860 --> 00:13:03.460
尽快版本，这样我们就可以回到大师了，谢谢，这是我们的

00:13:03.460 --> 00:13:11.260
希望实施有足够的信息真棒谢谢

00:13:11.260 --> 00:13:28.150
您非常介意吗，接下来是质量检查，所以如果有人有疑问，

00:13:28.150 --> 00:13:31.740
可以把它放在聊天中，这太好了

00:13:32.280 --> 00:13:42.540
因此，对于um网络和Lupita Pete实施存在任何疑问

00:13:48.360 --> 00:13:56.140
嗯，我有一个问题，你能不能像一个更高层次的人那样告诉我们

00:13:56.140 --> 00:13:59.830
高峰网络，例如每当建立智能合约时，他们就需要联网

00:13:59.830 --> 00:14:05.200
他们需要有一份公共合同，但是需要一个私有的数据容器，例如

00:14:05.200 --> 00:14:14.470
用水来使用您最初看到的用例，因此我们将启动

00:14:14.470 --> 00:14:18.580
我们的私人测试网很快就在这里，所以我们还没有启动，但是人们

00:14:18.580 --> 00:14:23.890
希望与需要这些私人服务的人们一起工作

00:14:23.890 --> 00:14:27.700
让您知道Aragon或类似的几个人的容器很漂亮

00:14:27.700 --> 00:14:32.500
对这些用例感兴趣的人需要分散的保管解决方案

00:14:32.500 --> 00:14:38.470
对此技术将非常感兴趣，

00:14:38.470 --> 00:14:41.200
在锡上看了一些关于这个的演讲，你们可以找到

00:14:41.200 --> 00:14:46.510
在线，我们的Tec DSA保持阈值，至少DSA保持阈值，这将成为我们的

00:14:46.510 --> 00:14:52.210
第一种类型，而我们实际上正在以此来制造我们的第一种产品

00:14:52.210 --> 00:14:56.290
知道我们稍后会宣布更多相关信息，因此任何需要下放权力的人

00:14:56.290 --> 00:15:00.130
托管解决方案以及需要私有容器来存储可能

00:15:00.130 --> 00:15:04.540
掩盖一段时间内的某些信息很有意思，但最初

00:15:04.540 --> 00:15:08.170
我们只是专注于tec tsa多维数据集，因此任何拥有

00:15:08.170 --> 00:15:12.850
私有ECDSA保管箱，需要对其进行远程控制或安全地保存在其上

00:15:12.850 --> 00:15:17.650
那里他和任何需要公共区块链中的随机性的人

00:15:17.650 --> 00:15:24.390
实际上现在不太可能让Network使它可用

00:15:24.480 --> 00:15:42.010
非常感谢，我们还有其他问题吗，如果我们不这样做的话

00:15:42.010 --> 00:15:47.860
还有其他问题，我非常感谢您的介绍，我们可以

00:15:47.860 --> 00:15:53.230
把它留在这里，我们可以在所有回到您大约13分钟的人身上结束

00:15:53.230 --> 00:15:59.560
我会在下一次见到其他所有人，因为那是每周一次的会议，所以一次

00:15:59.560 --> 00:16:03.730
再次非常感谢您代表表情谢谢谢谢

00:16:03.730 --> 00:16:07.710
你保重

