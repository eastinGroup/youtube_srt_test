WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.680 --> 00:00:08.550
我可能会或可能不会在YouTube上进行实时流式传输，我们会看看这是否

00:00:08.550 --> 00:00:14.450
作品与我以前做过的流程截然不同

00:00:15.230 --> 00:00:21.650
嘿，我刚收到YouTube的通知，说这是实时流媒体广告

00:00:21.650 --> 00:00:31.170
然后它在世界范围内都很棒，所以我想我是7月的房东，我不是

00:00:31.170 --> 00:00:36.140
上周的主人，因为我在飞机上，我要从巴塞罗那回来

00:00:36.140 --> 00:00:41.149
因为我没有真正地安排演讲者，我只想给一个

00:00:41.149 --> 00:00:45.180
代表我在ipfs Meetup上所做的演示

00:00:45.180 --> 00:00:53.129
那是在ipfs营地前几天在巴塞罗那，我发布了一个新的

00:00:53.129 --> 00:01:02.190
Pierre Pad的版本，这就是我要展示的内容，可以走到我的身边，可以

00:01:02.190 --> 00:01:07.250
大家看到这个哦，我必须分享屏幕

00:01:13.950 --> 00:01:16.009
你

00:01:18.810 --> 00:01:36.090
好吧，不知道如何在这里摆脱这件事好吧，好吧，这又好吧，可以

00:01:36.090 --> 00:01:38.540
大家看到

00:01:39.740 --> 00:01:42.690
是的，我要假设每个人都可以

00:01:42.690 --> 00:01:47.580
好的，所以Pierre Pad和使用IP FS的纯基础构建协作应用程序

00:01:47.580 --> 00:01:54.660
+ CR DTS，所以靠垫网是一个项目

00:01:54.660 --> 00:01:58.770
在协议实验室呆了大约一年半的时间

00:01:58.770 --> 00:02:05.490
由Pedro Teixeira创办，如果您已经是协作降价编辑器

00:02:05.490 --> 00:02:12.330
曾经使用过Google Docs或etherpad之类的系统，它与

00:02:12.330 --> 00:02:19.160
他们可以立即登录以编辑内容，因此这是一个屏幕截图

00:02:19.160 --> 00:02:25.950
协作实时降价加密，所以我想

00:02:25.950 --> 00:02:33.750
快速演示，因此我将其加载到此处，如果您查看是否键入同伴

00:02:33.750 --> 00:02:46.140
如果您删除s和HTTP，请立即填充本系列中的网络操作或网关

00:02:46.140 --> 00:02:55.410
它会很好地工作，是的，还是不好，我还没有加载

00:02:55.410 --> 00:03:03.239
在不同的网络浏览器中，好吧，我们转到这里，基本上，您可以

00:03:03.239 --> 00:03:08.060
单击此处的这个小符号，好吧，我们真的真的站得很快，

00:03:08.060 --> 00:03:12.390
曾经有一个登陆页面和登陆页面，但是登陆页面会

00:03:12.390 --> 00:03:19.019
很快就会再来一些白兰地，它只是markdown编辑器，但是在您的

00:03:19.019 --> 00:03:33.660
标题这里没有文档标题加载，您知道它是

00:03:33.660 --> 00:03:36.350
降价

00:03:36.959 --> 00:03:47.280
可以做其他事情，你可以做降价，所以，如果你想做一个

00:03:47.280 --> 00:03:51.049
与您刚复制的其他人一起记录文档

00:03:51.300 --> 00:03:58.550
复制网址并粘贴给聊天时说的人

00:04:08.900 --> 00:04:19.370
然后您可以看到

00:04:19.950 --> 00:04:26.130
这样您就可以看到键入的内容，其他人将会看到，这就是Rick，

00:04:26.130 --> 00:04:31.730
基本上就是这样，我会回到幻灯片上

00:04:38.000 --> 00:04:46.270
和Pierre的合作编辑基本上是为了演示

00:04:46.270 --> 00:04:52.900
使用称为CR DT的数据结构的编程技术，代表

00:04:52.900 --> 00:05:00.110
无冲突的预复制数据类型，Pedro建立了一个名为peer的库

00:05:00.110 --> 00:05:06.770
基础，使您可以组合这些数据结构，这可能使它真正成为现实

00:05:06.770 --> 00:05:12.140
轻松构建各种实时协作应用程序并运行它们

00:05:12.140 --> 00:05:19.010
在您的Web浏览器中，但对所有网络都使用IP FS原语

00:05:19.010 --> 00:05:25.900
通讯，因此该库称为对等库，也称为

00:05:25.960 --> 00:05:35.800
哦，糖在这里，好吧，这是它所写的网页

00:05:35.800 --> 00:05:40.210
JavaScript运行新的浏览器，也运行没有GS的浏览器，因此您可以在

00:05:40.210 --> 00:05:46.419
服务器端的想法和Pinterest以及您可能想写的东西

00:05:46.419 --> 00:05:51.009
将在服务器中运行，该服务器还将在

00:05:51.009 --> 00:05:58.780
协作部分不使用所有ifs，而是主要使用肢体

00:05:58.780 --> 00:06:05.770
p2p用于所有网络通信和WebSocket，并且还使用IP FS

00:06:05.770 --> 00:06:13.240
发布/订阅八卦，因此当您开始文档时，其他人希望

00:06:13.240 --> 00:06:16.270
那里有一个他们想要在同一文档上进行协作的不同的Web浏览器

00:06:16.270 --> 00:06:21.250
必须排序并找到某种方式，它使用IP FS pub sub

00:06:21.250 --> 00:06:29.110
通道，这样当纯低音启动时，您就可以在网络浏览器中运行ipfs

00:06:29.110 --> 00:06:35.889
 pure pure pad具有pure pad pub子通道，并且无论如何都会启动pure

00:06:35.889 --> 00:06:42.070
垫起来，他进入这个酒吧子频道，就像嘿，我想编辑这个

00:06:42.070 --> 00:06:45.250
文档，这个人可能已经在里面说了哦，我们已经在做什么

00:06:45.250 --> 00:06:52.060
编辑该文档，然后他们基本上加入其中，就像聊天一样

00:06:52.060 --> 00:06:57.310
渠道，然后一旦他们这样做，它们就是一堆数据结构，

00:06:57.310 --> 00:07:05.380
他们曾经使用WebSockets来维持彼此之间的连接

00:07:05.380 --> 00:07:09.130
和一个名为WebSockets tar的库以通过防火墙

00:07:09.130 --> 00:07:17.740
因为网络浏览器无法运行ipfs使用的TCP套接字

00:07:17.740 --> 00:07:24.099
不能听连接，所以他们不得不和一个中心点说话

00:07:24.099 --> 00:07:30.639
还提供了一些支持和使用WebRTC的Lib p2p，因此他们仍然需要成为

00:07:30.639 --> 00:07:34.120
集中式信令服务器，但随后他们可以直接对等对话

00:07:34.120 --> 00:07:39.270
但是我们还没有在梨皮中设置它，是的

00:07:39.270 --> 00:07:46.870
所以纯低音还有其他一些人们使用的示例应用程序

00:07:46.870 --> 00:07:53.740
因此，Moxie Studio构建了一种称为“讨论”的东西，即浏览器

00:07:53.740 --> 00:08:01.120
扩展程序，它使用纯粹的基础，使人们可以访问任何网页，并且您可以

00:08:01.120 --> 00:08:07.990
登录，您可以评论网页上的内容，并有一点

00:08:07.990 --> 00:08:12.850
讨论线程，我认为该线程可以在Chrome和Firefox应用商店中找到

00:08:12.850 --> 00:08:19.930
因此，如果我真的建立一个Bennett担任他的首席执行官，那是一个真正的讨论

00:08:19.930 --> 00:08:27.040
在临床实验室中，他建立了一个使用纯粹基础的国际象棋游戏，因此您可以

00:08:27.040 --> 00:08:34.050
不只是协作编辑和/或提交硬币，我还在做实验

00:08:34.050 --> 00:08:42.820
使用纯基础的文本客户端，允许您与其他客户端协商交易

00:08:42.820 --> 00:08:50.890
文件声明矿​​工并存储您的文件，因此CRT T的C或DT代表冲突

00:08:50.890 --> 00:08:57.090
机队预先复制的数据类型，从2011年开始在本文中进行介绍

00:08:57.090 --> 00:09:05.650
而这正是应用程序的结构，它真的很棒

00:09:05.650 --> 00:09:11.950
可以有多个作者，没有领导者，如果每个人都同步

00:09:11.950 --> 00:09:17.740
每个人都会看到相同的文档，所以这里有一个可视化工具

00:09:17.740 --> 00:09:23.670
我将向您展示哪些可以展示它们的工作原理

00:09:31.930 --> 00:09:41.230
Playa讨厌，所以这是CDT可视化工具中的Lorenzen网络浏览器，

00:09:41.230 --> 00:09:46.270
解毒剂数据库项目，这个项目有几个，我现在要去

00:09:46.270 --> 00:09:50.680
显示最简单的一个是CR DP计数器，您可以看到三个

00:09:50.680 --> 00:09:54.970
不同的副本，或者您可以将它们视为不同的客户端，您知道谁

00:09:54.970 --> 00:09:57.430
在网络浏览器中将是三个不同的网络中的三个不同的人

00:09:57.430 --> 00:10:04.300
浏览器，它实现了一个计数器，所以如果我单击此处，您会看到增量

00:10:04.300 --> 00:10:09.670
而这里的状态是一个，所以如果我添加另一个

00:10:09.670 --> 00:10:27.190
现在是无国籍的，哦，是的，不是三个国家，然后是社区

00:10:27.190 --> 00:10:31.150
副本知道此计数器现在是3，但其他副本

00:10:31.150 --> 00:10:35.680
尚未与其他人交谈，因此您可以在此处模拟消息传递，因此

00:10:35.680 --> 00:10:41.290
您可以在此处绘制，然后可以看到状态为三，然后如果

00:10:41.290 --> 00:10:46.510
一种是增加计数器的状态，现在状态为四，这一点知道

00:10:46.510 --> 00:10:52.209
没什么，所以你可以做到这一点，让我们得到它

00:10:52.209 --> 00:10:57.429
等等，那样的事情他们不知道，然后你知道是否一切

00:10:57.429 --> 00:11:00.629
秘密使我们同步

00:11:01.650 --> 00:11:05.270
一切都将具有相同的状态，这基本上是他们的职责

00:11:05.270 --> 00:11:13.770
对于离线多设备类型的应用程序来说，这真的很棒

00:11:13.770 --> 00:11:18.540
是当今您需要在现代移动应用程序中找到的典型

00:11:18.540 --> 00:11:23.540
与网页同步等等

00:11:28.260 --> 00:11:36.120
因此，2011年的原始论文有几种不同类型的CID茶

00:11:36.120 --> 00:11:39.270
介绍了两种不同风格的CRD茶

00:11:39.270 --> 00:11:43.860
一种叫做基于状态的CRD茶，另一种叫做Operation

00:11:43.860 --> 00:11:50.820
 VCR海地基于状态的工作，是将整个状态从一个副本复制到

00:11:50.820 --> 00:11:59.180
另一个，但是如果您保持很小的状态，但效果很好，如果您的状态是

00:11:59.180 --> 00:12:04.650
非常大，可能需要大量数据才能移动操作库CR DT

00:12:04.650 --> 00:12:08.160
通过记录您所做的每一个小动作来工作，然后

00:12:08.160 --> 00:12:15.420
同步个人所谓的操作，这实际上是

00:12:15.420 --> 00:12:19.890
对于诸如协作文本编辑器之类的工作非常高效

00:12:19.890 --> 00:12:25.470
微小的变化并同步许多小的变化，但是它们具有

00:12:25.470 --> 00:12:30.780
缺点是，当您第一次同步它时，您必须进行播放

00:12:30.780 --> 00:12:34.860
每个操作都可能会开始一段时间，并且可能会有数十次

00:12:34.860 --> 00:12:39.270
数以千计，甚至上百万次操作，这可能要花很长时间

00:12:39.270 --> 00:12:46.140
时间，所以他们俩都有利弊Delta CR DTS是纸上的追随者，

00:12:46.140 --> 00:12:50.610
试图找到一种中间地带，在那里他有很好的一面

00:12:50.610 --> 00:12:57.860
两种模型的特性，因此Pedro实施了本文并实施了

00:12:57.860 --> 00:13:01.800
实现这些的JavaScript库，您可以在此处找到

00:13:01.800 --> 00:13:10.050
github页面，当您使用CR DT时有很多，这有点不同

00:13:10.050 --> 00:13:13.770
为程序员准备的编程模型，您必须提前选择类型

00:13:13.770 --> 00:13:19.830
时间并选择您的类型，您还可以选择如何解决冲突

00:13:19.830 --> 00:13:25.200
和东西，这个库有许多不同类型的集计数器寄存器

00:13:25.200 --> 00:13:30.600
数组和映射，因此当您构建使用Delta C或D的纯基本应用程序时

00:13:30.600 --> 00:13:35.940
挑逗您建模，您必须先建模您的数据结构，然后

00:13:35.940 --> 00:13:39.280
您必须选择您要使用的数据类型

00:13:39.280 --> 00:13:52.390
所以厘米时间检查在这里你有20分钟，所以我有一个家庭自动化演示

00:13:52.390 --> 00:13:58.480
我不会去展示它，因为它只是一次运行，但是它很亮

00:13:58.480 --> 00:14:02.800
淀粉，并选择冷静，如果我使用多个网络浏览器连接到它，我可以

00:14:02.800 --> 00:14:08.740
打开和关闭指示灯，这里有一些源代码

00:14:08.740 --> 00:14:13.660
可能会把它变成纯粹的基础的hello world应用程序

00:14:13.660 --> 00:14:24.220
因为它比现在列出的东西要简单得多，所以在

00:14:24.220 --> 00:14:34.990
除了纯净的底座（您会看到纯净的垫子），这只是一个静态的es应用

00:14:34.990 --> 00:14:41.740
只是您生成了静态文件，然后将其上传到ipfs并

00:14:41.740 --> 00:14:50.800
Peapod网络只是托管在公共IP FS网关上，我们只是

00:14:50.800 --> 00:14:54.430
将域名映射到该域名，因此它是完全静态的，没有服务器

00:14:54.430 --> 00:15:01.839
与我们之前讨论的WebSocket服务器不同，但我们

00:15:01.839 --> 00:15:08.470
它是否确实有另一个与之相关的服务被称为piner，所以

00:15:08.470 --> 00:15:13.110
当我在其中输入内容时

00:15:16.180 --> 00:15:22.779
您可以在此处看到它说将很快保存，如果它正在工作，它会说保存，因此，如果

00:15:22.779 --> 00:15:27.990
我翻过来，打印机上没有用户界面，但是您可以看到

00:15:27.990 --> 00:15:36.279
我这个Pinner在Heroku上运行，并且每个LP垫都加入其中

00:15:36.279 --> 00:15:43.270
合作，因此，如果您单击此处，其中之一将是Pinner，正如我

00:15:43.270 --> 00:15:51.270
键入有大约20秒的延迟，它将尝试保存它

00:15:51.270 --> 00:15:57.700
现在我可以关闭此浏览器，与某人共享链接

00:15:57.700 --> 00:16:03.279
其他在不同时区的地方可以获取该链接并打开它，

00:16:03.279 --> 00:16:09.640
即使我的浏览器没有打开，您也可以看到此处的数据已固定

00:16:09.640 --> 00:16:15.520
并将所有数据固定到ipfs集群中，我们正在运行ipfs集群

00:16:15.520 --> 00:16:24.279
收集所有所有所有文档的文件都已加密，因此

00:16:24.279 --> 00:16:31.360
集群中的数据，我们无法读取，但人们正在合作

00:16:31.360 --> 00:16:36.750
这些应用程序可以做到

00:16:36.820 --> 00:16:40.590
窗格就是这样做的

00:16:42.510 --> 00:16:50.810
并且我们正在协议实验室中发生的唯一CR DT项目中建立同等基础

00:16:50.810 --> 00:16:59.399
博士ipfs集群团队的San Juan建立了一个名为Merkel C或D的系统

00:16:59.399 --> 00:17:04.620
T存储非常相似的数据结构，但是将其存储在IPL中

00:17:04.620 --> 00:17:13.290
有潜力支持非常大的D

00:17:13.290 --> 00:17:19.049
数据结构是非常非常有趣的，我鼓励您去

00:17:19.049 --> 00:17:23.339
阅读论文，我们也是协议实验室

00:17:23.339 --> 00:17:28.980
向ipfs营地的Viktor Khristenko提供研究经费

00:17:28.980 --> 00:17:32.070
我和他一起出去玩了，他正在做一个叫做

00:17:32.070 --> 00:17:38.100
复制的对象符号，这是他实际上正在执行的另一个CR DT

00:17:38.100 --> 00:17:45.690
 CRD T几乎与C或D T在其他地方出现的时间一样长

00:17:45.690 --> 00:17:51.480
我之前在一个名为“超级合并”的项目中工作过的东西

00:17:51.480 --> 00:17:56.610
从Martin clapman获取自动合并CR DT并在其上运行

00:17:56.610 --> 00:18:01.110
理论上也可以在ipfs上运行，但是有很多人在做一些

00:18:01.110 --> 00:18:07.169
那个库有很多有趣的东西，还有很多其他关于CR的现有技术

00:18:07.169 --> 00:18:14.340
像很多这样的DTS人一样，这些工作都是从完成工作而来的

00:18:14.340 --> 00:18:19.260
这些他们在React数据库中的职责，还有一个名为

00:18:19.260 --> 00:18:22.890
解毒剂数据库，其中有一些使用某些相同的数据

00:18:22.890 --> 00:18:30.750
CR DT数据结构和akka分布式数据参与者系统，用于

00:18:30.750 --> 00:18:39.840
Scala也有一些这样的东西，就是这样，所以我喜欢任何人都拥有的

00:18:39.840 --> 00:18:45.650
我现在可以做的任何问题

00:18:49.160 --> 00:18:54.590
我做到了，我确实有一个问题，我不想再问了，但是你已经有

00:18:54.590 --> 00:19:01.580
一个是我的问题是现在关于平等的操作描述了

00:19:01.580 --> 00:19:09.080
Pinner使用IP LD存储数据，但是在网络浏览器中却没有

00:19:09.080 --> 00:19:13.940
使用IP LD，因此非常有趣，因为我不太了解

00:19:13.940 --> 00:19:19.970
如果花生不知道解密的钥匙，那会是什么样的可能性

00:19:19.970 --> 00:19:26.179
如果操作发送的不是我所感觉的对象，那么Peener怎么能

00:19:26.179 --> 00:19:31.309
不知道有哪些操作会聚在一起，例如创建

00:19:31.309 --> 00:19:37.730
声明当我杀死我时旋转，所以支柱是有限的

00:19:37.730 --> 00:19:43.039
因为它只处理加密的斑点，所以不是很多

00:19:43.039 --> 00:19:48.020
信息，它基本上只是在文档中获得名称，然后他

00:19:48.020 --> 00:19:54.280
得到了这类加密的Blob，并且必须存储它们，因此

00:19:54.280 --> 00:19:58.580
我最初对Pinner的尝试是我真的很想喜欢尝试

00:19:58.580 --> 00:20:02.840
存储类似默克尔C或D T的类型并存储所有信息，但是您不能

00:20:02.840 --> 00:20:08.289
因为它们都是加密的，所以它实际上没有任何信息，所以

00:20:08.289 --> 00:20:13.549
所以它基本上只是存储，所以可以使用Delta C或D T

00:20:13.549 --> 00:20:16.640
文档的完整状态，基本上是其中的所有内容

00:20:16.640 --> 00:20:21.799
文档，或者它可以处理我们决定只处理的小差异

00:20:21.799 --> 00:20:26.690
处于全状态，这就是为什么我们不连续固定的原因

00:20:26.690 --> 00:20:36.490
分钟左右，我们只是将整个状态放入ipfs集群中

00:20:36.490 --> 00:20:40.549
令我着迷的是他们不了解，就像您要存储所有

00:20:40.549 --> 00:20:44.570
操作所有的增量，然后我可以将新的触摸到用户

00:20:44.570 --> 00:20:48.260
浏览器就像只是接收所有这些操作并解决

00:20:48.260 --> 00:20:52.280
像在本地汇聚州一样，但是像Peener

00:20:52.280 --> 00:20:58.220
如果钉扎有效地获取了状态的快照，那么

00:20:58.220 --> 00:21:02.570
告诉Pinner什么是加权快照？

00:21:02.570 --> 00:21:05.570
在浏览器之间交谈就像我说哦

00:21:05.570 --> 00:21:11.590
只是将状态转换为我收敛，所以，如果您像两个人一样编辑

00:21:11.590 --> 00:21:16.250
同时具有私人密钥的文档，因此它们正在发送

00:21:16.250 --> 00:21:20.630
彼此之间来回的小三角洲，但Pinner只是

00:21:20.630 --> 00:21:25.400
偶尔每隔一段时间拍摄一次快照，基本上就是备份

00:21:25.400 --> 00:21:30.559
就像这两个人下线，然后他们将链接发送到第三个

00:21:30.559 --> 00:21:34.880
第三人称在线，他们必须获得某人的声明，

00:21:34.880 --> 00:21:40.010
该地区的两个人不再在线，所以定位角色是抢

00:21:40.010 --> 00:21:44.390
可以保存到ipfs群集中的状态，以便重新补充水分

00:21:44.390 --> 00:21:49.490
然后将此加密的Blob发送给第三者，然后他们可以进行编辑

00:21:49.490 --> 00:21:55.850
它可以进行更改，可以将更改返回给Pinner，然后当

00:21:55.850 --> 00:22:00.950
其他两个人回到网上他们可以到达那里，所以这有点像

00:22:00.950 --> 00:22:06.380
随着时间的流逝，越来越大的球或类似加密的密文

00:22:06.380 --> 00:22:09.350
Pinner所做的事情就像本文档中正在发生的一切一样

00:22:09.350 --> 00:22:13.400
它只是像粉碎更多一样，然后由新客户来决定

00:22:13.400 --> 00:22:17.360
就像散布这东西，然后给它加电，然后我就

00:22:17.360 --> 00:22:23.809
弄清楚如何付款，所以所有这些都是在一起的，是的，我认为是这样

00:22:23.809 --> 00:22:28.190
对于纯垫文件效果很好，因为它们往往是您知道的小文件

00:22:28.190 --> 00:22:33.950
文字，但您知道自己是否在做，就像有更详尽的数据一样

00:22:33.950 --> 00:22:38.030
可能要大得多的结构

00:22:38.030 --> 00:22:42.500
更改固定的位置，以便将所有加密的增量保存为

00:22:42.500 --> 00:22:48.500
很好，但是它确实没有很多功能，就像您无法合并

00:22:48.500 --> 00:22:53.330
加密Delta的加密状态，因此我们只需要保留所有类似

00:22:53.330 --> 00:23:00.890
小三角洲周​​围，然后它可能会做到这一点，我认为

00:23:00.890 --> 00:23:04.760
是一个简化的假设，只是为了不担心该特定用途

00:23:04.760 --> 00:23:09.910
情况是现在不需要了吗

00:23:11.110 --> 00:23:17.860
我什么也没去，是的，我不知道你是否有时间

00:23:17.860 --> 00:23:22.600
我不确定我是否完全了解Pinner是否必须加入每个

00:23:22.600 --> 00:23:30.279
能够阅读以补充水分的文档是的，所以基本上就是八卦

00:23:30.279 --> 00:23:34.179
引导发布/订阅频道以及每个频道，因此Pinner正在收听

00:23:34.179 --> 00:23:39.580
每个对等便笺文档，但它只喜欢听

00:23:39.580 --> 00:23:44.409
一两分钟，如果没有活动，它就会掉下来，就像是

00:23:44.409 --> 00:23:52.109
真的只需要听现场文档，所以，就像每个人一样

00:23:52.109 --> 00:23:58.029
那是使用公共对等垫，我们都想说，嘿，这是我的文件

00:23:58.029 --> 00:24:03.309
这个公共频道，所以有点隐私

00:24:03.309 --> 00:24:08.529
就像东西是文件的名字一样，就像一个随机的东西

00:24:08.529 --> 00:24:14.950
并且文档的内容是随机的，所以没有

00:24:14.950 --> 00:24:19.749
那里不是一个很大的隐私问题，但是是的，但是您看到了，但它们有点

00:24:19.749 --> 00:24:27.399
的全球广播，嘿，这个文件现在正在直播，是的，所以这是

00:24:27.399 --> 00:24:34.690
品纳（Pinna）使您离线，其他人也都离线了，那么

00:24:34.690 --> 00:24:43.480
文档可能会永远丢失，但是文档还保存在什么内容中

00:24:43.480 --> 00:24:48.220
您的本地浏览器indexdb，因此即使该引脚是

00:24:48.220 --> 00:24:53.169
只要您在线并且对方不在同一时间，您就会感到片刻

00:24:53.169 --> 00:24:58.029
确实很早就需要图钉，您仍然希望其中的一个关键部分

00:24:58.029 --> 00:25:07.570
必须保持在线的是WebSocket服务器，因此潜在地我们可以使用WebRTC

00:25:07.570 --> 00:25:12.429
但是我们仍然需要一个信令服务器，这将是一个较小的事情，因此

00:25:12.429 --> 00:25:17.289
WebSocket服务器将所有的所有流量都发送到中央集线器和

00:25:17.289 --> 00:25:19.379
然后

00:25:19.600 --> 00:25:24.130
熄灭，因此使用WebRTC可能会直接从Web发出数据包

00:25:24.130 --> 00:25:27.760
浏览器到Web浏览器，但您仍然必须拥有

00:25:27.760 --> 00:25:36.700
集中化，这最终增加了更多的复杂性，希望是

00:25:36.700 --> 00:25:43.030
是在p2p的ipfs中实现的会合协议，可能会带走

00:25:43.030 --> 00:25:50.559
一些集中化，但是我们也许可以使用一些电路继电器

00:25:50.559 --> 00:25:54.130
就像您的员工使用IPF一​​样，确实打开了一个秘密电路，它可以

00:25:54.130 --> 00:25:59.070
避免整个WebSocket业务，我们仍将是WebSockets，但您知道更多

00:25:59.070 --> 00:26:02.740
就像一堆服务器可以连接

00:26:02.740 --> 00:26:06.460
到，并且当您硬连线到您的计算机时，它们就像是专门的

00:26:06.460 --> 00:26:09.059
应用领域

00:26:10.970 --> 00:26:13.030
你

00:26:13.880 --> 00:26:22.740
并通过蓝牙对WebRTC信号进行传输，是的，我想

00:26:22.740 --> 00:26:29.660
如果这可以脱机工作，以便尚未完成工作，那真是太好了

00:26:29.660 --> 00:26:36.300
是的，所以时代运行得非常有趣，是的，我们正在解决的问题

00:26:36.300 --> 00:26:41.160
在网络浏览器环境中，并且网络浏览器受到限制lydell一直在做

00:26:41.160 --> 00:26:47.520
与ipfs同伴的出色合作，勇敢地为您打开了一些

00:26:47.520 --> 00:26:49.860
这些实际上可以离线工作的可能性

00:26:49.860 --> 00:27:08.840
我想我们已经超时了，让我们打电话给我，下周再见，谢谢你吉姆。

00:27:18.490 --> 00:27:20.550
你

