WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:03.210
看到我要做的第一件事就是开始流式传输

00:00:03.210 --> 00:00:05.870
YouTube

00:00:12.150 --> 00:00:17.160
你还好吧

00:00:19.520 --> 00:00:25.700
您好，欢迎来到ipfs每周电话，这是您获得IPFS的地方

00:00:25.700 --> 00:00:33.980
有机会看到在ipfs生态系统中构建的令人兴奋的项目，因此我们

00:00:33.980 --> 00:00:39.530
否，我们今天没有任何公告，所以我们要直截了当

00:00:39.530 --> 00:00:48.320
进入bogdan pabich的演示文稿中，谢谢Bogdan同意演示

00:00:48.320 --> 00:00:52.370
今天Bogdan是一位软件工程师，

00:00:52.370 --> 00:00:58.760
也是招标人的联合创始人，专门进行以太坊智能合约监控

00:00:58.760 --> 00:01:03.830
它确实可以堆栈跟踪分析调试器，这肯定是

00:01:03.830 --> 00:01:08.030
在这个空间中需要我，我很高兴它温柔地存在

00:01:08.030 --> 00:01:13.010
tymberlee使用IP FS，因此对于Bogdan来说，讲起来真的很有趣

00:01:13.010 --> 00:01:22.880
我们确切地知道他们如何使用IP FS，所以事不宜迟Bogdan嗨，嗨

00:01:22.880 --> 00:01:28.009
在为Web 3构建内容之前，每个人都是Bogdan。我在GoDaddy和

00:01:28.009 --> 00:01:31.969
它开始被它收购了，所以我也在建立开发人员

00:01:31.969 --> 00:01:36.469
工具，因此Web 3开发人员工具非常适合我和

00:01:36.469 --> 00:01:40.909
喜欢GoDaddy，并开始构建3的东西，所以现在我正在

00:01:40.909 --> 00:01:44.240
以太智能中的雷李去了合同监督

00:01:44.240 --> 00:01:48.499
平台，但在执行此操作之前先看看我们如何实现这个想法很有趣

00:01:48.499 --> 00:01:52.069
实际上，我们建立了去中心化的公共采购平台

00:01:52.069 --> 00:01:56.090
采购是指政府是否要购买（例如）他们拥有的100把椅子

00:01:56.090 --> 00:02:01.369
像大型拍卖一样，人们申请等等，所以我们在铈中使用ITS

00:02:01.369 --> 00:02:04.729
使它完全去中心化，但是问题是

00:02:04.729 --> 00:02:08.330
很好地发展了所有这些，尤其是我们网站上的摩擦

00:02:08.330 --> 00:02:12.080
用乙醚，所以在与政府人员交谈时，我们首先发现了

00:02:12.080 --> 00:02:14.690
我们不知道如何与政府人员交谈，所以这是其中之一

00:02:14.690 --> 00:02:18.170
我们无法解决的问题，但我们确实设法解决的问题

00:02:18.170 --> 00:02:21.440
内部实际上是在开发开发工具，因此我们决定

00:02:21.440 --> 00:02:26.270
通过更多的乐趣来构建它并实际解决公众问题

00:02:26.270 --> 00:02:30.350
像采购这样的采购问题，所以我们开始建立

00:02:30.350 --> 00:02:36.819
温柔地，让我们开始吧，只是分享我的屏幕给我一点时间

00:02:36.819 --> 00:02:43.879
底部的按钮非常好，它是绿色的，是Icona系统，所以当我

00:02:43.879 --> 00:02:51.470
单击此按钮，您仍然会看到屏幕，我们可以看到它很好，这样您就可以

00:02:51.470 --> 00:02:55.159
已经提到过，所以请温柔地给我几秒钟，我实际上看不到鼠标

00:02:55.159 --> 00:03:00.260
就像我很抱歉，在这里，我们如此温柔地走，就像我说的是第一个e3

00:03:00.260 --> 00:03:03.230
雇主使用实时EVM进行合同管理的监控平台

00:03:03.230 --> 00:03:06.439
现在对于网络的每笔交易都没有什么见识

00:03:06.439 --> 00:03:10.909
意思是说，我们的一侧已经温柔地运转了。

00:03:10.909 --> 00:03:14.569
存档笔记，然后我们实际上可以听取每笔交易中的

00:03:14.569 --> 00:03:18.799
叙利亚网络发生的情况，那么我们认为这些交易中的每一项

00:03:18.799 --> 00:03:23.209
我们对其进行了分析，到目前为止，我们正在分析所有内容，但实际上

00:03:23.209 --> 00:03:26.900
仅显示有关失败交易的数据，因此，如果交易失败

00:03:26.900 --> 00:03:31.549
集中捕获事务本身，对其进行分析并使用源代码

00:03:31.549 --> 00:03:36.290
智能合约本身可以为您提供有用的工厂，然后我们还有

00:03:36.290 --> 00:03:40.430
这是一个CLI版本，所以如果您在进行本地开发，通常会有一些东西

00:03:40.430 --> 00:03:44.900
例如无效的操作码或要求失败或其他原因，而您不会

00:03:44.900 --> 00:03:48.049
知道它实际上是在哪里失败的，并且来自传统语言

00:03:48.049 --> 00:03:52.459
正常的部门是必须的，所以我们建立工厂或多或少

00:03:52.459 --> 00:03:55.760
平台方面的特征我们可以提醒您可以拍摄

00:03:55.760 --> 00:03:59.449
网络挂钩和您的闲置邮件会自动执行某些操作，例如

00:03:59.449 --> 00:04:03.769
因此，基本上，我不会在此讨论太多细节

00:04:03.769 --> 00:04:07.519
通过这个特定的链接，您实际上可以看到其中一位联合创始人谈到了

00:04:07.519 --> 00:04:11.209
我们构建了完全开放源代码的跟踪程序本身，他进入了

00:04:11.209 --> 00:04:15.440
如何从字节码本身中最大化elyda T字节码的详细信息

00:04:15.440 --> 00:04:21.289
到特定的代码行，因此我们做了两遍，所以我们

00:04:21.289 --> 00:04:26.300
使用自定义EDM实现惯用法是cerium构建的虚拟机，因此

00:04:26.300 --> 00:04:30.229
我们正在运行完整的RM注释，其中主要是肠道，这很有趣

00:04:30.229 --> 00:04:33.740
设置和维护已经注意到实际上有2 TB的数据

00:04:33.740 --> 00:04:37.759
所以我们必须从某个地方开始，所以我们有一个自定义版本的CBM

00:04:37.759 --> 00:04:41.150
不断分析所有交易并最终进行挖掘

00:04:41.150 --> 00:04:45.650
然后我们有一个庞大的自定义数据处理管道，这是

00:04:45.650 --> 00:04:49.010
kubernetes中的Google云平台的组合

00:04:49.010 --> 00:04:53.570
在亚洲和亚洲运行节点本身，我们还使用IP FS

00:04:53.570 --> 00:04:57.770
开始存储用户合同，这样您就可以确保可以看到

00:04:57.770 --> 00:05:01.700
从任一扫描导入合同，然后我们使用它们拥有的数据，但是

00:05:01.700 --> 00:05:05.630
如果您将其上传给我们，则我们实际上会使用IPS，因为我们正在存储

00:05:05.630 --> 00:05:10.130
Eclipse中的数据，这样您就可以生成此人（如果有）

00:05:10.130 --> 00:05:13.370
关于这个问题，但总比告诉你所有这些要好，让我告诉你

00:05:13.370 --> 00:05:18.830
实际上是如何工作的，所以这里是定理混合时失败的事务的处理方式

00:05:18.830 --> 00:05:22.460
现在，所以在这里您实际上无法知道交易失败的地方，

00:05:22.460 --> 00:05:26.780
合同本身非常简单，我们仍然无法知道合同的实际位置

00:05:26.780 --> 00:05:30.770
失败，我们将看到该合同实际执行的工作以及它如何使用ID FS，但是

00:05:30.770 --> 00:05:34.940
在这里，即使他们去巴黎，我们也看不到任何有用的信息

00:05:34.940 --> 00:05:38.570
并进行跟踪，例如，我们可以看到它刚刚被还原，没有任何东西

00:05:38.570 --> 00:05:43.010
确实有用，我们将看到它如何真正帮助您

00:05:43.010 --> 00:05:46.730
构建这个，我实际上将在这里进行快速构建，以展示案例

00:05:46.730 --> 00:05:50.390
我们将使用etherium和IDP构建一个去中心化密码管理器的工作

00:05:50.390 --> 00:05:55.970
所以我们要使智能合约成为一个非常简单的合约

00:05:55.970 --> 00:06:00.650
会为我们存储一个IPSS哈希，这是一个非常常见的设计模式

00:06:00.650 --> 00:06:04.610
ECM开发，然后我们将使用IRS加密来停止

00:06:04.610 --> 00:06:09.620
一切都以加密的方式在IDF上进行，以便向您展示这实际上是如何工作的

00:06:09.620 --> 00:06:16.040
请给我几秒钟，所以在这里我们有一个简单的分散应用程序，

00:06:16.040 --> 00:06:19.730
在这里，我可以输入一个冷静的帐户，您可以添加用户名

00:06:19.730 --> 00:06:23.630
和一个超级安全的密码一二三一三，这里我已经存储了

00:06:23.630 --> 00:06:26.900
我的密码，但是如果它在我的计算机上，那么它就没有用，所以我要去

00:06:26.900 --> 00:06:30.440
我要做的是再说一次更新主文件，因为我们知道安全性

00:06:30.440 --> 00:06:33.950
我必须在这里再次做一二三一二三

00:06:33.950 --> 00:06:40.870
再一次，所以我要弹出一个蒙版，在这里给它几秒钟

00:06:40.870 --> 00:06:46.860
我要确认行动本身，在这里我们得到了

00:06:46.860 --> 00:06:52.020
交易哈希，所以如果我们选择其中一种扫描，那就太好了，可以自由完成

00:06:52.020 --> 00:06:59.700
实际上给它几秒钟的时间，所以它应该在那里

00:06:59.700 --> 00:07:04.560
您在这里找到了我们，我们可以在实际IP SS缓存中看到这一点

00:07:04.560 --> 00:07:08.820
交易，如果我们去看合同本身，我们可以看到交易

00:07:08.820 --> 00:07:13.260
是我的，我们历史学家现在在这里，我们实际上是如何构建它的，以及如何

00:07:13.260 --> 00:07:17.100
这实际上是可行的，实际上是另一件事，所以如果我将其加载

00:07:17.100 --> 00:07:22.830
例如，使用我的DNS，我们实际上应该将其加载起来，我可以说加载

00:07:22.830 --> 00:07:26.760
我们使用的超级安全密码后的主文件实际上是

00:07:26.760 --> 00:07:30.810
获取查询以获取ipfs哈希值的污点以下拉回二进制数据

00:07:30.810 --> 00:07:35.010
解密并显示我们输入的信息，以便您查看1 2 3

00:07:35.010 --> 00:07:39.060
 1 3因此，这就是我们可以在IVF中使用定理存储数据的方式，因为

00:07:39.060 --> 00:07:41.669
当一个定理的价格太高而无法搜索数据时，它实际上是效率低下的，

00:07:41.669 --> 00:07:48.240
在这里，点子成为一个很好的数据存储点，让我们看看

00:07:48.240 --> 00:07:52.680
实际上是在我演示的演示的背景中发生的，所以我们有一个

00:07:52.680 --> 00:07:57.960
我们使用加密密钥的JSON文档，它是主类master

00:07:57.960 --> 00:08:02.040
输入一个密码，我们得到了一些乱码，二进制数据已加密

00:08:02.040 --> 00:08:07.050
二进制数据，然后我们将数据提交给ipfs，然后返回

00:08:07.050 --> 00:08:12.510
ipfs返回的多重哈希，然后我们将多重哈希发送给

00:08:12.510 --> 00:08:15.870
Metamath签署我们的交易并将交易发送给叙利亚

00:08:15.870 --> 00:08:20.190
网络，因此它发送的有效负载本身看起来像这样

00:08:20.190 --> 00:08:25.080
简单，您就像网站一样拥有用户名，密码和加密

00:08:25.080 --> 00:08:27.750
本身真的很简单，我喜欢我喜欢的东西

00:08:27.750 --> 00:08:31.919
您可以使用的ipfs就像是非常简单的东西，可以做出色的抽象工作

00:08:31.919 --> 00:08:36.419
以简单的方式处理复杂的内容，所以我们在这里要做的是

00:08:36.419 --> 00:08:40.770
密码，我们使用隐秘的ojs库，该库非常易于使用

00:08:40.770 --> 00:08:45.120
然后我们生成一个RSA密钥对，并根据我们拥有的单身汉对其进行过滤

00:08:45.120 --> 00:08:50.880
我们将所有内容加密，然后将其发送到IDF，这非常简单，我们

00:08:50.880 --> 00:08:56.610
拿回了哈希，所以现在我们可以实际看到智能合约本身了

00:08:56.610 --> 00:09:00.450
我们看到了，所以我们有一个叫做密码管理器的东西，它具有密码

00:09:00.450 --> 00:09:05.190
所有者，即部署智能设备的人员的地址

00:09:05.190 --> 00:09:09.420
合同，所以这是我们拥有数学和标准的地方，那么我们有一个真正的

00:09:09.420 --> 00:09:14.430
一个非常简单的函数，称为send hash，它使用它来获取字符串和

00:09:14.430 --> 00:09:17.910
在这里，我们断言邮件发件人实际上是该邮件的密码所有者

00:09:17.910 --> 00:09:20.970
密码管理器，这实际上是第一笔交易失败的地方，但是

00:09:20.970 --> 00:09:24.300
我们将看到在合同上我通常可以将其实际映射到这个范围的情况，

00:09:24.300 --> 00:09:30.060
那么如果昨天过去了，我们可以存储我们发送的I BFF现金发送到那里

00:09:30.060 --> 00:09:33.900
还有一个简单的视图功能，它或多或少像实用程序

00:09:33.900 --> 00:09:37.410
函数，我们刚刚返回了教室经理的ipfs现金

00:09:37.410 --> 00:09:41.280
再次持有几行代码，我们可以使用定理和

00:09:41.280 --> 00:09:45.390
猜猜这是很酷的明星物品，所以提交交易本身

00:09:45.390 --> 00:09:49.200
我们需要一个小的设置，所以通常我要来铈时，我们有一个叫做

00:09:49.200 --> 00:09:53.670
一个ABI，当我们有一个地址时，它是一个应用程序二进制接口

00:09:53.670 --> 00:09:57.540
这个共轭的合同我是Demming这个合同，然后我们有一个

00:09:57.540 --> 00:10:02.130
ABI从字面上看就像一个API，可用于与智能交易

00:10:02.130 --> 00:10:10.140
合同，因此我们建立了Web 3提供程序，我们获得了铈帐户

00:10:10.140 --> 00:10:15.330
在这种情况下，我们会传递控制细节，因此ID I和

00:10:15.330 --> 00:10:20.790
地址，我们说了状态，因为我们正在使用反应，但这就是魔术的地方

00:10:20.790 --> 00:10:23.910
发生，所以在我们将所有内容添加到ITS之后，

00:10:23.910 --> 00:10:29.160
我们得到了多重哈希，我们可以将哈希发送给合同本身，如果

00:10:29.160 --> 00:10:33.510
一切正常，我们可以存储以太坊的交易哈希

00:10:33.510 --> 00:10:38.190
努力，还有一次又一次的散列的想法，这就是为什么有很多想法的原因，因为

00:10:38.190 --> 00:10:43.200
就像这四行代码一样，这种存储几乎可以永远存储，所以如何

00:10:43.200 --> 00:10:47.100
我们确实喜欢再次加载现有文件，并提示用户输入主文件

00:10:47.100 --> 00:10:51.990
密码，我们在第三行从合同本身获取ITSs现金

00:10:51.990 --> 00:10:56.610
得到了帽子，我们确实得到了现金下跌，然后我们使用文件API

00:10:56.610 --> 00:11:00.930
实际上使用get IPSS method方法进行抽象以获取文件本身

00:11:00.930 --> 00:11:06.450
再次转换为缓冲区，我们用神秘的哦创建了一个守护者，我们只是

00:11:06.450 --> 00:11:10.490
解密IPSS给我们的回复，如果我们杰森解析磁盘，我们就是

00:11:10.490 --> 00:11:15.260
她从巴布（Babu）的一生开始就获得了电池，

00:11:15.260 --> 00:11:20.330
行代码，并且您获得了公钥/私钥加密，从本质上来说，您获得了IDF。

00:11:20.330 --> 00:11:24.529
存储，并且您称您也从分散存储中获得了多重哈希

00:11:24.529 --> 00:11:29.959
尤金铈很好，所以如果我们只是想调整一下娱乐性，

00:11:29.959 --> 00:11:33.770
想真正了解我们如何使它变得更好或更酷，或者

00:11:33.770 --> 00:11:38.029
无论我们可以为所有用户使用一个合同，基本上就是您使用的地图

00:11:38.029 --> 00:11:43.220
将地址和定理地址映射到多哈希或I DNS的想法

00:11:43.220 --> 00:11:47.899
缓存也可以工作，我们可以使用icns托管，在我做过的工作坊上

00:11:47.899 --> 00:11:51.770
实际上是这样做的，所以我们有了这个序列来存储多重哈希，然后我们有了

00:11:51.770 --> 00:11:55.970
IPFS存储加密的有效载荷，我们也有IP，我想

00:11:55.970 --> 00:11:59.240
整个项目作为选项卡，因此整个项目完全去中心化，

00:11:59.240 --> 00:12:04.610
坚不可摧，然后我们还可以使用事件存储在

00:12:04.610 --> 00:12:08.300
以太网网络，因此我们可以仅重播事件并以这种方式存储信息

00:12:08.300 --> 00:12:14.800
但是idss更有用，因此可以实际展示它如何温柔地

00:12:14.800 --> 00:12:19.640
所以您记得我提交了交易，我们可以看到它

00:12:19.640 --> 00:12:25.140
五分钟前成功了，但是现在如果他们回到这里

00:12:25.140 --> 00:12:30.870
选择一个不同的帐户，即我们可以在密码中看到的klog帐户

00:12:30.870 --> 00:12:34.589
我们有此要求的密码合同，它说邮件发件人必须

00:12:34.589 --> 00:12:37.620
是密码所有者和密码所有者，该人实际上是已部署

00:12:37.620 --> 00:12:41.760
签约，所以如果他们回到这里并使用其他帐户

00:12:41.760 --> 00:12:46.829
在metamath中获得保护，我可以尝试实际重写我刚刚创建的帐户

00:12:46.829 --> 00:12:51.120
这是他们自己的密码，因此，如果说一个大的主密码文件，请输入一个

00:12:51.120 --> 00:12:55.320
这是正确的不同指标，因为我想变成恶意的东西

00:12:55.320 --> 00:12:59.970
要去吃垫子垫子的箱子给我几秒钟

00:12:59.970 --> 00:13:06.320
是的，我需要重新整理一下，对不起

00:13:07.370 --> 00:13:17.910
好的，好的，我们剪切了弹出窗口，我们可以确认正在进行的交易

00:13:17.910 --> 00:13:27.270
如果我们去这里，现在无论发生在哪一个扫描中，都要花几秒钟才能失败

00:13:27.270 --> 00:13:29.690
实际上

00:13:38.730 --> 00:13:42.810
来自-选举渗透剂期间警告放空推车遇到

00:13:42.810 --> 00:13:48.120
如果我们去参加鹦鹉比赛，或者如果我们去参加竞赛，我们的贡献将恢复到原来的水平

00:13:48.120 --> 00:13:51.120
有一个复杂的国家，我们看不到它，我们将看到如何使用

00:13:51.120 --> 00:13:56.040
温柔地解决这个问题，所以为了简洁起见，我已经验证了

00:13:56.040 --> 00:13:59.910
这份合同在国际米兰展位上，所以我们可以在这里看到您在混音中看到的代码

00:13:59.910 --> 00:14:04.080
所以我要把地址复制到合同上，然后你要温柔地去

00:14:04.080 --> 00:14:10.740
并登录，我将创建一个新项目，她将被称为ipfs

00:14:10.740 --> 00:14:12.980
例如

00:14:13.430 --> 00:14:17.450
现在有两种向我们实际添加合同的方法，因此，如果您选择

00:14:17.450 --> 00:14:21.350
CLIA方法实际上是将其上传到我们的Google云或

00:14:21.350 --> 00:14:25.490
idss这是我们实际使用创意节的地方，我们也非常兴奋

00:14:25.490 --> 00:14:28.310
合同，所以我要在此处选择“通话”按钮，该按钮将使用

00:14:28.310 --> 00:14:32.210
兴趣和我要说的是AB合约

00:14:32.210 --> 00:14:35.690
我们正在检查合同是否有效，我们还将撤消合同

00:14:35.690 --> 00:14:39.860
从任何扫描本身，我们将要编译合同，现在我们怀疑

00:14:39.860 --> 00:14:43.940
一分钟前我们将实际看到的所有事务都失败了，但是

00:14:43.940 --> 00:14:47.390
而不是仅仅看到这是无法实际调试某些东西的，如果

00:14:47.390 --> 00:14:51.230
我去这里实际上是要查看中断代码的确切行

00:14:51.230 --> 00:14:55.160
这直到雷霆真正建成才有可能，所以这就是我们

00:14:55.160 --> 00:14:59.720
内置的，这或多或少是我的主要演示以及我想在这里分享的内容，因此

00:14:59.720 --> 00:15:09.310
我很愿意提问，非常感谢

00:15:11.840 --> 00:15:19.220
因此，如果您可以停止共享屏幕，我一定会给我几秒钟的好消息

00:15:19.220 --> 00:15:26.810
好的，很棒的演示文稿，谢谢，你有吗

00:15:26.810 --> 00:15:32.210
如果您有任何问题，请把它放在聊天室中，以便所有问题都可以

00:15:32.210 --> 00:15:43.940
在聊天中我有一个问题，你能告诉我们是什么吗

00:15:43.940 --> 00:15:48.380
ipfs功能方面的愿望清单，例如您希望看到的功能

00:15:48.380 --> 00:15:55.760
将来，所以我记得当我在用idns做事时

00:15:55.760 --> 00:15:59.960
刚接触ITS的人可能会非常复杂，尤其是当

00:15:59.960 --> 00:16:04.490
您想将其映射到T名称，因为您可以将夜间DNS缓存映射到

00:16:04.490 --> 00:16:08.720
cname，然后喜欢使用常规域来实际重定向以适应

00:16:08.720 --> 00:16:11.690
希望在晚上PMS，所以这是其中之一

00:16:11.690 --> 00:16:14.930
不缺少它只是很难弄清楚它

00:16:14.930 --> 00:16:19.550
我们第一次使用它时，所以我认为这是第一件事，我

00:16:19.550 --> 00:16:23.540
在你们喜欢WebSocket之前，我不知道我真的很喜欢

00:16:23.540 --> 00:16:25.970
在网络上发布并添加了一些内容，而仅仅是

00:16:25.970 --> 00:16:30.770
像遍历后背一样，我不会说具有次级功能，但是现在您

00:16:30.770 --> 00:16:36.740
有它，那么我很好，所以我们正在使用它，我们真的很高兴

00:16:36.740 --> 00:16:42.760
有了它，所以我只想带走一个更清晰的地方

00:16:42.760 --> 00:16:49.250
开发人员和grub的文档，对更多高级内容来说，

00:16:49.250 --> 00:16:53.750
绝对文件API非常丰富，您可以用它做很多很棒的事情

00:16:53.750 --> 00:16:57.350
然后有诸如get和add之类的抽象内容

00:16:57.350 --> 00:17:02.390
但是，如果您喜欢后使用文件API，则复杂性会大大提高

00:17:02.390 --> 00:17:06.470
像他们的学习曲线一样高，从那一点开始，它就变得更深。

00:17:06.470 --> 00:17:10.310
记得我读过几篇文章，这确实对我有所帮助，但是

00:17:10.310 --> 00:17:17.890
也许在一只正式的狗身上，这可能是其中之一

00:17:17.890 --> 00:17:22.220
我能做的是，我们确实有协议和协议

00:17:22.220 --> 00:17:29.150
当前协议是类似活动的列表，因此个人能够

00:17:29.150 --> 00:17:33.620
了解有关ipfs晚间API的更多信息，以及它如何工作以及是否

00:17:33.620 --> 00:17:39.320
我没弄错他们的下一课是关于处理文件和处理文件的问题。

00:17:39.320 --> 00:17:44.750
文件，因此，如果您甚至可以看一下，并喜欢给我们一些反馈，我们

00:17:44.750 --> 00:17:50.480
会很高兴的，创建协议的人实际上在此通话中，

00:17:50.480 --> 00:17:55.280
那是特里的，所以如果您想将来与她联系并喜欢

00:17:55.280 --> 00:17:58.730
我说过，在我们想给您上新课之前，我们会很乐意您的

00:17:58.730 --> 00:18:04.700
反馈我实际上看到一个可靠的EFS呼叫，就像一个月前的事情一样

00:18:04.700 --> 00:18:11.890
就像那是关于协议正确的权利，我相信是的，我们在一月份推出了

00:18:11.890 --> 00:18:16.700
我现在正在研究的是专门针对我的斋戒

00:18:16.700 --> 00:18:21.350
可变文件系统版本处理文件，然后在稍后的时刻

00:18:21.350 --> 00:18:26.390
会添加一些有关处理文件的非Emma快速版本的信息

00:18:26.390 --> 00:18:30.260
但我们正在等待它支持具有该版本的浏览器中的Blob

00:18:30.260 --> 00:18:36.380
在我们构建该内容之前，如果您正在

00:18:36.380 --> 00:18:38.740
有兴趣看正在进行的工作

00:18:38.740 --> 00:18:43.340
如果您可以将其发送给我和部分，您可以发送给我我的电子邮件，我会

00:18:43.340 --> 00:18:48.730
绝对喜欢看它并获得反馈，所以很好，很好，谢谢

00:18:48.730 --> 00:18:53.830
还有其他问题吗

00:18:54.910 --> 00:18:59.960
我们赞美我们有rad demo bogman谢谢

00:18:59.960 --> 00:19:05.240
分享Hart，这是您开发人员工作流程和调试方法的一部分

00:19:05.240 --> 00:19:09.710
感谢您的演练，我还有另一个问题，您是否曾与

00:19:09.710 --> 00:19:17.600
主要想法，例如视觉Visual Studio或Sublime，因为这

00:19:17.600 --> 00:19:21.140
将会是一件很棒的事情，就像同时和那样一起工作

00:19:21.140 --> 00:19:26.030
文本编辑器，所以我们实际上拥有像仪表板一样向您展示的东西

00:19:26.030 --> 00:19:30.980
您可以将其作为CLI本身运行，然后我们将继续工作，

00:19:30.980 --> 00:19:33.290
完成了对平台本身的学习

00:19:33.290 --> 00:19:36.950
确实与诸如Visual Studio代码之类的东西进行实际集成

00:19:36.950 --> 00:19:41.030
因为像这样的语言服务器之类的东西，

00:19:41.030 --> 00:19:46.490
整个jetbrains工具套件，因为很多人也使用它，也许

00:19:46.490 --> 00:19:51.130
像阿萨姆邦之类的东西，诸如此类的东西

00:19:51.300 --> 00:19:54.930
但现在它是一个CLI，因为它是最容易证明其价值的

00:19:54.930 --> 00:19:58.980
我们正在与大多数人使用的东西打交道，这就是

00:19:58.980 --> 00:20:07.820
当然，它背后的推理当然很好，所以我们别无其他

00:20:07.820 --> 00:20:13.470
问题或评论，我们现在结束，但再次经常感谢

00:20:13.470 --> 00:20:17.310
非常感谢您的演示，非常感谢我们的演示

00:20:17.310 --> 00:20:19.790
欣赏它

00:20:20.060 --> 00:20:28.140
嘿，我会看到的，下周一我会见到每个人的下一个ipfs

00:20:28.140 --> 00:20:35.420
每周通话，享受地球日，下周见，大家好

00:20:35.420 --> 00:20:42.530
很高兴见到你们再见，我很好，你能做吗

