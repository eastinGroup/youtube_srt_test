WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.589 --> 00:00:05.490
您好，欢迎来到ipfs每周电话，了解我们的知识

00:00:05.490 --> 00:00:11.910
今天，我们将听到在IP FS之上构建的令人惊奇的东西

00:00:11.910 --> 00:00:21.720
布伦丹（Brendan）是使用建立在顶部的恒星的首席执行官，而Qri是一位

00:00:21.720 --> 00:00:28.699
对等工具，可帮助人们处理，处理和共享数据，从而

00:00:28.699 --> 00:00:32.449
布伦丹，我要让你把它拿走

00:00:32.650 --> 00:00:36.370
谢谢Portia，谢谢大家参加每周的活动

00:00:36.370 --> 00:00:42.760
打电话给我，以便说到力'提到我在查询工作，我们正在尝试做

00:00:42.760 --> 00:00:48.970
数据科学以一种新的方式，我们认为我们喜欢喜欢称自己为事物

00:00:48.970 --> 00:00:53.890
建立与数据类似的数据集市，或者我们使用

00:00:53.890 --> 00:00:57.910
有点像我们的大教堂风格的软件隐喻

00:00:57.910 --> 00:01:01.059
软件和集市这样的建筑软件商店就像编织的起源一样

00:01:01.059 --> 00:01:04.530
您可以想到许多像奇妙的原始大教堂风格

00:01:04.530 --> 00:01:08.530
主要是在紧密的团队中工作的服装团队，然后是

00:01:08.530 --> 00:01:11.770
奇异的风格，就像您要来任何人一样

00:01:11.770 --> 00:01:16.210
周围，​​你想让我有特色，你可以做什么，所以我们的理论

00:01:16.210 --> 00:01:21.040
现在世界运转的方式实际上是没有

00:01:21.040 --> 00:01:24.430
集市，其原因是因为许多原因

00:01:24.430 --> 00:01:27.640
ipfs缺少许多基础技术

00:01:27.640 --> 00:01:32.320
确实为它提供了坚实的基础，因此当我们说beta时

00:01:32.320 --> 00:01:35.890
集市，我们正在寻找一些我们想要的非常关键的特征

00:01:35.890 --> 00:01:38.740
在双向对话中看到任何东西，任何人都可以

00:01:38.740 --> 00:01:41.950
喜欢给予和获取谈话所需的任何数据

00:01:41.950 --> 00:01:45.069
有意义，所以它是某种结构化的，每个人都可以

00:01:45.069 --> 00:01:47.619
了解每个人在说什么，我想如果您曾经与

00:01:47.619 --> 00:01:51.069
github或任何类似的开源协作工具，您都有

00:01:51.069 --> 00:01:54.550
对这意味着什么的感觉，你有点像我要创造一个拉力

00:01:54.550 --> 00:01:57.759
请求和请求请求是请求某人更改您的代码的方式

00:01:57.759 --> 00:02:02.229
在该代码中工作，有一个过程进行审核，然后最后

00:02:02.229 --> 00:02:05.770
只是需要这种能力将所有这些变化归因于那些

00:02:05.770 --> 00:02:08.440
制作它们，以便在您进行协作时，您会感觉像

00:02:08.440 --> 00:02:11.470
审计跟踪，这是我们从整个版本世界中学到的东西

00:02:11.470 --> 00:02:17.470
不幸的是，当您从软件转向数据事物时

00:02:17.470 --> 00:02:21.400
改变了很多，因为它不是软件，不是数据，它们是不可互换的

00:02:21.400 --> 00:02:25.569
东西，最大的变化就是音量，所以，如果您认为

00:02:25.569 --> 00:02:29.709
关于您的平均github存储库，不是很少超过1 GB

00:02:29.709 --> 00:02:33.010
空间，即使有整个历史，也有点像整个事情，除非

00:02:33.010 --> 00:02:38.110
您正在开发一个定理，但这只是整个对话，但

00:02:38.110 --> 00:02:41.950
当您像演出一样移到数据空间时，这很正常

00:02:41.950 --> 00:02:46.210
对数据进行版本控制时，正确和版本控制是一个截然不同的对话

00:02:46.210 --> 00:02:49.990
因为通常您只取一个文件，而将单个文件

00:02:49.990 --> 00:02:53.470
更改为单个文件，因此请想象您的海量CSV文件中包含很多

00:02:53.470 --> 00:02:56.920
里面的东西，而您只需要进行一些小的编辑就可以

00:02:56.920 --> 00:03:01.330
对此进行协作，因此您将缩小一秒钟，我们会考虑ipfs和

00:03:01.330 --> 00:03:06.310
ipfs的很多功能实际上就像是完美的

00:03:06.310 --> 00:03:10.180
构建数据集版本控制系统的起点与什么查询

00:03:10.180 --> 00:03:15.250
如果您考虑的是ipfs哈希，即一堆文件分解为

00:03:15.250 --> 00:03:20.620
我们专门指的是unix FX v1哈希的块是

00:03:20.620 --> 00:03:25.780
任何与IP LD玩游戏的人vs.我都不觉得你登陆了，但这是一个文件

00:03:25.780 --> 00:03:28.630
系统，并在后台将所有这些文件分解为

00:03:28.630 --> 00:03:33.850
块，因此对于查询，我们设计了一些旨在从中入手的内容

00:03:33.850 --> 00:03:38.440
ipfs的原始不是IPS而是原始的IPS

00:03:38.440 --> 00:03:42.910
并向上构建到一个系统中，该系统使您可以方便快捷地进行

00:03:42.910 --> 00:03:46.540
结构化，合理合理的版本控制，所以今天我想

00:03:46.540 --> 00:03:50.440
在通话中给你们一些人已经知道什么样的查询是

00:03:50.440 --> 00:03:54.700
我们碰面了，聊了一堆，但是我们做了一些相当重要的事情

00:03:54.700 --> 00:03:58.570
从最近几个月以来的最后一刻开始的进步，等等

00:03:58.570 --> 00:04:01.930
今天我想向您展示一些正在发生的事情，让您感到自由

00:04:01.930 --> 00:04:05.860
就像举起手来，随时问问题

00:04:05.860 --> 00:04:09.040
您有点停下脚步，了解发生了什么，但是我们会

00:04:09.040 --> 00:04:13.570
给你一个类似的高层次的旅行，今天我觉得这很有趣

00:04:13.570 --> 00:04:16.770
也许确定的东西与某种

00:04:16.770 --> 00:04:21.520
ipfs社区，所以有多少人曾经想知道

00:04:21.520 --> 00:04:28.990
节点在任何给定点都是在线的是是是好的是的，所以今天让我

00:04:28.990 --> 00:04:32.920
刚开始我要分享我的屏幕我要分享我的全部

00:04:32.920 --> 00:04:36.520
桌面，希望我的桌面不太混乱，可以直接使用

00:04:36.520 --> 00:04:43.990
代码领域不是很酷，所以如果我们进行排序，这是您的问题的答案

00:04:43.990 --> 00:04:49.990
像是放大6月10日（星期一）的时间，如果我们算一下

00:04:49.990 --> 00:04:52.780
我们同行的唯一数目是三千四百四十

00:04:52.780 --> 00:04:57.100
六点，然后我必须移动此窗口，对不起，如果我们看着它的话

00:04:57.100 --> 00:04:59.950
在过去的一天里，有六千个独特的

00:04:59.950 --> 00:05:04.540
在过去的一天中看到的，所以您正在查看的是

00:05:04.540 --> 00:05:07.570
一个查询数据集，所以这是它的概述，我们认为

00:05:07.570 --> 00:05:11.320
关于这个非常类似github repo的事情，但是我们关于加法的概念还很远

00:05:11.320 --> 00:05:15.010
比仓库更细粒度，您将拥有比您更多的数据集

00:05:15.010 --> 00:05:20.110
有回购协议，但是关于查询真正重要的是

00:05:20.110 --> 00:05:25.050
结构化的对话，所以我只是向您展示可视化效果，很酷

00:05:25.050 --> 00:05:29.890
我们做到了，我们做得很棒哦，是的，我必须在嘘嘘民主党人的背景下进行这项工作

00:05:29.890 --> 00:05:32.680
今天对我不好，但实际上其中之一是示威

00:05:32.680 --> 00:05:35.680
连接到分布式Web的同时，它还可以用于

00:05:35.680 --> 00:05:40.810
我是一个本地我的数据集，但如果我们看一下最重要的事情，

00:05:40.810 --> 00:05:43.900
对于查询很重要，就像尝试对数据的对话进行规范化

00:05:43.900 --> 00:05:46.810
我们这样做的方法是开发了一个文档模型

00:05:46.810 --> 00:05:50.650
当我们谈论数据时，一切结构都完全相同

00:05:50.650 --> 00:05:55.420
设置数据集的实际内容，就像我们考虑CSV文件一样

00:05:55.420 --> 00:05:58.630
它的数据集我们称其为身体，我们的工作方式非常相似

00:05:58.630 --> 00:06:03.100
HTML文档工作的方式，我们所有的元数据都是经过排序的

00:06:03.100 --> 00:06:06.970
称为元，然后元与结构和变换共同称为

00:06:06.970 --> 00:06:12.040
称为头，但这是实际数据，因此，如果在任何给定的点上，

00:06:12.040 --> 00:06:15.940
可以直接从我的PFS中提取此哈希，然后我们将其加载到

00:06:15.940 --> 00:06:21.430
背景，虽然我们可以解决，但我可以在本地解决，但无论如何

00:06:21.430 --> 00:06:25.000
数据本身实际上就在那里，并且随时可供您访问

00:06:25.000 --> 00:06:28.840
给定点，您可以转到此斜杠斜杠CSV点，您将看到此

00:06:28.840 --> 00:06:33.370
数据实际上在这种情况下，我认为这是一个JSON数据集，是的，所以在JSON中

00:06:33.370 --> 00:06:38.890
这将是身体得到JSON，但是我们得到了我们需要的东西来开始

00:06:38.890 --> 00:06:43.870
数据怪异的对话我喜欢我创建了这个数据集，并且它包含在

00:06:43.870 --> 00:06:47.260
随时间变化的重复历史记录，其中每一个都是准确建立的

00:06:47.260 --> 00:06:51.640
建立它们的方式是在每个数据集都是快照的情况下构建的

00:06:51.640 --> 00:06:56.770
引用引用是它的前一个，所以这是第一个，然后是

00:06:56.770 --> 00:06:59.830
当我们进行所有这些更改时，我们会不断前进，而每个更改都是

00:06:59.830 --> 00:07:03.190
跟踪并记录每个更改，所有这些都是每个

00:07:03.190 --> 00:07:05.980
一次，我们有点像将其记为ipfs哈希并将其移动

00:07:05.980 --> 00:07:15.289
围绕我们需要它，但我们聊天一秒钟

00:07:15.289 --> 00:07:19.039
先生体育，让我们做些什么啊，有实时数据集的实时支持吗？

00:07:19.039 --> 00:07:23.449
现在，我们有点认为这是最终单独的关注点

00:07:23.449 --> 00:07:27.020
我们将进入pub sub EE之类的实时分发内容，但是

00:07:27.020 --> 00:07:30.349
有一种真正的我们的大原语是基于快照的

00:07:30.349 --> 00:07:33.470
现在，简短的答案是“不”，不支持任何形式的

00:07:33.470 --> 00:07:38.270
明智地生活，我认为这是开始我们之间对话的好方法

00:07:38.270 --> 00:07:42.020
必须解决使该数据保持最新状态的问题，因此

00:07:42.020 --> 00:07:46.310
在这种非常具体的用例中，我们有两种选择，例如该数据

00:07:46.310 --> 00:07:50.180
设置是在引擎盖下进行，以了解其详细信息，这是每个

00:07:50.180 --> 00:07:53.630
数据集带有一种称为转换脚本的东西，因此我们嵌入了一个

00:07:53.630 --> 00:07:58.039
将语法编程为称为星日志的查询，该查询看起来很像Python

00:07:58.039 --> 00:08:01.819
所以我实际上可以在编辑器中进行编辑，而不是比较容易看到和

00:08:01.819 --> 00:08:05.539
因此，您实际上可以编写向数据集解释如何更新的Python代码

00:08:05.539 --> 00:08:10.130
本身，这是一个非常有用的工具，因为我们现在已经绑定了

00:08:10.130 --> 00:08:14.479
转换脚本到数据集本身，并且随数据一起移动

00:08:14.479 --> 00:08:18.349
进行设置，以便将其添加到您的查询节点，并将其从一个对等移动到

00:08:18.349 --> 00:08:21.710
另一个则是您拥有多数，您需要重新创建该数据的详细信息

00:08:21.710 --> 00:08:26.449
设置后，您将获得自己的“更新”按钮以重新运行此按钮，但在此特殊操作中

00:08:26.449 --> 00:08:31.310
情况下，我们有像星锁这样的粘性问题，不知道

00:08:31.310 --> 00:08:34.219
关于它的任何事情，所以我们必须喜欢处理其中一些沙箱

00:08:34.219 --> 00:08:37.430
问题，最重要的是，我们实际上是抓住这些问题的方式

00:08:37.430 --> 00:08:41.839
指标是我们在云中运行的kubernetes框正在抓取

00:08:41.839 --> 00:08:47.480
ipfs DHT，所以这里存在一个内在问题，每个人

00:08:47.480 --> 00:08:51.260
可以做到这一点，但这就是如果我们有上千个克隆人的话

00:08:51.260 --> 00:08:55.579
该数据集并运行这些DHT刮板，并不能真正帮助我们

00:08:55.579 --> 00:08:59.810
DHT保持健康，如果这样的话，就像总体上有很多访问请求一样

00:08:59.810 --> 00:09:05.240
意味着服务，如果我们进行设置并运行它可能会更聪明，

00:09:05.240 --> 00:09:08.480
有安排自动更新的计划，所以

00:09:08.480 --> 00:09:11.810
我们最近在查询中构建的内容就是我们现在所在的位置

00:09:11.810 --> 00:09:16.220
之所以称其为雾服务，是因为我们认为这是我不知道的

00:09:16.220 --> 00:09:20.180
雾服务，这意味着如果我查询更新列表，我希望你

00:09:20.180 --> 00:09:24.770
可以看到更大一点，我要等我适应

00:09:24.770 --> 00:09:27.980
好的，您可以查询更新列表，这是一个列表

00:09:27.980 --> 00:09:32.360
排定为自动更新的数据集，因此我可以看到

00:09:32.360 --> 00:09:36.920
这里的第三项说，我将在23小时内重新运行该shell

00:09:36.920 --> 00:09:41.890
脚本，如果我们看一下这些shell脚本，那么这些shell脚本在哪里？

00:09:41.890 --> 00:09:54.160
让我们一秒钟找到它，这里没有帐户，所以这是shell脚本

00:09:54.160 --> 00:09:59.510
在引擎盖下，所以这是在我的计算机上运行的

00:09:59.510 --> 00:10:03.200
这是通过妖魔化的过程安排查询的东西

00:10:03.200 --> 00:10:07.760
在我的操作系统上注册以访问我的计算机并连接到

00:10:07.760 --> 00:10:11.240
在我控制的一组安全密钥上进行kubernetes，而不必

00:10:11.240 --> 00:10:16.220
与数据集一起分发，我们运行到Prometheus的代理连接

00:10:16.220 --> 00:10:19.280
实例将为我们提供数据，我们将等待

00:10:19.280 --> 00:10:23.180
发生这种连接，然后我们将实际使用我们将要运行

00:10:23.180 --> 00:10:27.230
依赖于夜间运行的服务器的转换脚本，并查看

00:10:27.230 --> 00:10:30.500
如果有我可以访问的Prometheus实例，则徽标主机99会命中

00:10:30.500 --> 00:10:34.610
它正在运行这些数据，并将更新数据集本身，并且

00:10:34.610 --> 00:10:38.360
然后将发布，因为我已经包含了此已发布标志，然后

00:10:38.360 --> 00:10:43.370
自动将数据设置推送到查询云备份，因此我们运行

00:10:43.370 --> 00:10:46.280
称为注册​​表的东西，可以保留您所有的ipfs哈希和数据集

00:10:46.280 --> 00:10:52.640
生活在分布式网络上，因此每隔24小时就会运行一次，因此

00:10:52.640 --> 00:10:57.290
我们会在24小时内推送新数据，因此您要做的就是

00:10:57.290 --> 00:11:04.820
获取此数据是访问，是遵循此数据集，该数据集是b5 ipfs节点数和

00:11:04.820 --> 00:11:08.210
您只要点击更新，就会获得新版本的数据和新内容

00:11:08.210 --> 00:11:11.810
您需要进行分析，所以这就是我们所说的某种数据

00:11:11.810 --> 00:11:14.420
集市，您可以获取这些数据，并随心所欲地做任何事情

00:11:14.420 --> 00:11:18.890
您认为它有用或相关，但其结构使得

00:11:18.890 --> 00:11:22.400
您有一个审计跟踪，因此您可以实际查看其工作方式以及是否

00:11:22.400 --> 00:11:25.160
我已经正确完成了我的工作，并为我包含的所有内容添加了注释

00:11:25.160 --> 00:11:27.680
元数据，让您了解正在发生的事情以及它的工作方式

00:11:27.680 --> 00:11:32.090
包括一些注释和有关您的类型的转换脚本

00:11:32.090 --> 00:11:34.460
知道简短哦，我们正在努力实现这些统计数据以及这是如何实现的

00:11:34.460 --> 00:11:38.480
工作，您可以自己决定这是否值得

00:11:38.480 --> 00:11:42.610
正在调查我要去聊天

00:11:46.399 --> 00:11:53.430
感谢社会，好极了，是的，他们Jared的服务不好，但是的，我们可以

00:11:53.430 --> 00:11:56.459
完全谈论雾，薄雾和其他水颗粒，我全神贯注于

00:11:56.459 --> 00:12:00.809
那些，但要点是，我们还包括这些可视化对象，只是为了

00:12:00.809 --> 00:12:03.600
使一切变得快速而简单，这只会更新自身

00:12:03.600 --> 00:12:11.279
时间我要注意的最后一件事是，也许我可以在本地访问此信息，

00:12:11.279 --> 00:12:18.839
还要使网关可用我也应该在8080上做到这一点，是的，我总是得到

00:12:18.839 --> 00:12:20.910
第二斜线是错误的，这真的是

00:12:20.910 --> 00:12:25.829
对我来说，噩梦是我的五千零一分，所以如果我们真的看一下

00:12:25.829 --> 00:12:30.029
这是数据集本身的实际内容，因此您实际上可以看到

00:12:30.029 --> 00:12:35.100
这些快照中的每个快照都是一个单独的东西，涉及到

00:12:35.100 --> 00:12:39.240
有骨灰，这是我们做比较工作的方式，是的，这是什么

00:12:39.240 --> 00:12:42.990
继续在这里，我可能应该停止提问，但最后但并非最不重要的是，我们这样做

00:12:42.990 --> 00:12:47.699
实际上使我们做了很多工作来喜欢确保我们有点

00:12:47.699 --> 00:12:52.740
与我现有的PFS生态系统完全可互操作，因此当您

00:12:52.740 --> 00:12:56.250
运行查询连接，这实际上是我们的ipfs守护程序版本

00:12:56.250 --> 00:12:58.949
进入网络用户界面，这很有趣，您实际上可以看到

00:12:58.949 --> 00:13:03.420
事物的版本已正确注册，就好像完全不需要

00:13:03.420 --> 00:13:07.860
我们可以探索我们的文件和资料，所以这一切都归功于

00:13:07.860 --> 00:13:11.220
特别是发生了奇妙的工作，而不是去做PFS那样的事情

00:13:11.220 --> 00:13:15.809
这对我们来说真的很容易，所以也许我会停在那里

00:13:15.809 --> 00:13:21.389
问题，看看发生了什么，或者如果可以的话，请阅读此聊天室。

00:13:21.389 --> 00:13:26.220
将演示文稿放到最后，然后我们会提出问题，好酷

00:13:26.220 --> 00:13:30.329
是的，然后我想在演示文稿的细节方面讲起来比较容易

00:13:30.329 --> 00:13:34.339
通过一些这样的东西，所以我们对这些类似的课程

00:13:34.339 --> 00:13:39.029
滚滚向前，接下来的几个月

00:13:39.029 --> 00:13:42.389
在查询中将是激动人心的时刻，我们终于通过了一个非常重要的时刻

00:13:42.389 --> 00:13:45.300
对我们而言，里程碑是建筑和建筑的后端功能

00:13:45.300 --> 00:13:48.120
管理版本控制系统比以往任何时候都更加充实

00:13:48.120 --> 00:13:50.429
我们有很多工作要做

00:13:50.429 --> 00:13:53.970
文档，我们在教程编写方面还有很多工作要做

00:13:53.970 --> 00:13:58.050
然后我们对用户体验进行了非常非常大的修改

00:13:58.050 --> 00:14:01.410
内幕到来，但我们很高兴的是，我们现在的后端在哪里

00:14:01.410 --> 00:14:04.350
具有自动更新和自动发布的功能，我们认为它形成了

00:14:04.350 --> 00:14:08.370
令人兴奋的系统，人们可以在其中设计这些数据集

00:14:08.370 --> 00:14:11.250
自己，尽管他们是他们自己的权威来源

00:14:11.250 --> 00:14:16.379
数据已经并且现在能够自动发布这种信息，理想情况下，

00:14:16.379 --> 00:14:20.430
可以帮助我们解决这一问题，例如数据中的两个棘手问题

00:14:20.430 --> 00:14:24.629
这是可审核性，并避免保持新鲜感，因此我们想到了

00:14:24.629 --> 00:14:28.769
就像一种巨大的数据集市一样，您可以访问

00:14:28.769 --> 00:14:33.540
是的，是否存在人们要维护的所有数据集的公共注册表

00:14:33.540 --> 00:14:36.509
他们绝对是人们发布的所有日子的公共注册表

00:14:36.509 --> 00:14:40.310
维护其注册表查询点IO谢谢您我提出的精彩问题

00:14:40.310 --> 00:14:44.459
因此，对于这些人群来说，值得深入研究一下

00:14:44.459 --> 00:14:48.899
注册表对我们来说是一个注册表，我们在那里维护两件事，那就是

00:14:48.899 --> 00:14:52.800
我们在那里强制使用唯一的外观名称，因此您可以看到Mike您的名字是B五

00:14:52.800 --> 00:14:56.279
和实际与注册中心协商的C

00:14:56.279 --> 00:14:59.850
与分散系统相关的系统，它还会处理对我们的搜索

00:14:59.850 --> 00:15:03.240
您运行查询搜索，这将转到我们正在处理的注册表

00:15:03.240 --> 00:15:07.829
分布式搜索，但这显然是其中的一个非常实验性的部分

00:15:07.829 --> 00:15:11.670
树林的脖子，最后它是注册表

00:15:11.670 --> 00:15:15.660
我们是，如果您认为这是对github的热爱，

00:15:15.660 --> 00:15:19.319
就其回购可用性而言，最近推出的我们的注册表只是一个

00:15:19.319 --> 00:15:23.639
分布式系统的支持层，因此查询时我们要处理的一切

00:15:23.639 --> 00:15:26.250
注册表是我们只是保持哈希可用，以便当您关闭

00:15:26.250 --> 00:15:29.759
您发布的哈希值的便携式计算机会自动存在，因此看起来

00:15:29.759 --> 00:15:34.500
更像是一个get get out系统，其中github只是托管您的git

00:15:34.500 --> 00:15:37.110
存储库，这非常类似于他在做什么，它只是托管

00:15:37.110 --> 00:15:41.819
您的哈希查询注册表的副本没有能力在您的网站上发布任何内容

00:15:41.819 --> 00:15:45.930
代表所有提交都使用预配置的特殊密钥对进行签名

00:15:45.930 --> 00:15:51.120
根据每个用户的查询说明，它主要不同于您的IP FS PR ID

00:15:51.120 --> 00:15:57.410
这样您就可以拥有许多最好的计算机，并使用相同的配置文件，但是

00:15:57.410 --> 00:16:01.740
这些是分叉的概念，是的，分叉就像事实上的方式

00:16:01.740 --> 00:16:05.370
如果您在其他人的数据集上运行查询广告，那么一切都会正常进行，然后您

00:16:05.370 --> 00:16:08.279
编辑该数据并将其设置为Forks，现在是现在

00:16:08.279 --> 00:16:12.779
只是您自己的，这会自动为您设置，我们还没有

00:16:12.779 --> 00:16:15.779
弄清楚合并，我们从技术上知道我们将如何做像拉

00:16:15.779 --> 00:16:20.790
请求，但我们实际上还没有编写任何代码，哦，最大的

00:16:20.790 --> 00:16:25.230
奇怪的是，与git仓库不同的是设置了数据模型

00:16:25.230 --> 00:16:30.089
内部而不是查询数据集，因此您可以合并任意两个数据集

00:16:30.089 --> 00:16:34.230
在任何给定的点比较任何两个数据集，因为没有关于

00:16:34.230 --> 00:16:38.189
什么文件是我们确切知道每个文件应该做什么的地方，那就是

00:16:38.189 --> 00:16:44.399
有道理，我想在那种情况下，如果我想继续像在

00:16:44.399 --> 00:16:47.819
再次转换，我只想适应相同的脚本眼睛

00:16:47.819 --> 00:16:51.899
你今天必须喜欢触摸，我是的，你喜欢在

00:16:51.899 --> 00:16:56.459
源，我一直在播放它，是的，我是说我可以很快分享

00:16:56.459 --> 00:17:03.809
我们将其称为召回的快捷方式，这样我可以进行查询来保存召回TF，并且

00:17:03.809 --> 00:17:08.069
如果我现在就将转换从过去的历史中拉出来

00:17:08.069 --> 00:17:12.600
想回到可以回忆起波浪号的诉讼来起诉我PFS

00:17:12.600 --> 00:17:16.470
知道营地，这会出错，因为没有转换

00:17:16.470 --> 00:17:20.399
如果您认为这是一种历史的回想，那是一种有趣的思考方式

00:17:20.399 --> 00:17:26.039
您正在考虑它的可能版本，所以我这样做

00:17:26.039 --> 00:17:33.080
不，我不能做一个GF显然行不通，因为我

00:17:33.080 --> 00:17:37.890
Prometheus服务器未打开，但召回作品召回是

00:17:37.890 --> 00:17:43.470
如果我们执行查询更新，那么如果下雪的计数可以准确执行

00:17:43.470 --> 00:17:46.799
同样，只是用于回忆最后一个转换脚本的别名

00:17:46.799 --> 00:17:50.210
因为这很常见

00:17:52.800 --> 00:17:56.890
是的，您需要自定义代码，查询如何与花花公子互动，这是

00:17:56.890 --> 00:18:02.170
这是很神奇的自动魔术，所以里面有两个真正的自动魔术零件

00:18:02.170 --> 00:18:05.559
在转换中，我们有一个叫做下载的东西，有一个叫做

00:18:05.559 --> 00:18:08.830
转换，这是您在其中定义的两个特殊功能

00:18:08.830 --> 00:18:12.700
查询，下载的转换的签名是ds，然后是

00:18:12.700 --> 00:18:16.960
上下文，因此ds只会为您提供数据集的最新版本，因此您

00:18:16.960 --> 00:18:20.830
可以看到你知道我们有多酷，你知道这就是身体，我可以检查一下

00:18:20.830 --> 00:18:23.530
这样，这对于仅附加的锁定非常有效，所以您可以说嘿

00:18:23.530 --> 00:18:26.830
这是我的数据集将这十个条目转到他们将要输入的最后一个条目的开始

00:18:26.830 --> 00:18:31.300
然后从那里盖章，然后将这两个功能定义在哪里

00:18:31.300 --> 00:18:35.620
他为您呼叫它们，因此它们会在后台自动调用

00:18:35.620 --> 00:18:38.320
但是，如果您没有定义它们，则不会发生任何事情，因为您的

00:18:38.320 --> 00:18:41.320
如果有意义的话，transform并没有做任何特别的事情

00:18:41.320 --> 00:18:48.130
然后是问题，然后是的，所以继续讲约翰尼拐杖，你怎么样

00:18:48.130 --> 00:18:53.170
处理json-ld之间的数据的语义和绘图这是一个很大的问题

00:18:53.170 --> 00:18:58.570
Johnny，我喜欢深入研究，因此计划对Jason提供我们的json-ld支持，

00:18:58.570 --> 00:19:04.020
当前支持将D cat作为原始规范，将RDF作为导出格式

00:19:04.020 --> 00:19:09.730
所以查询查询对您的数据有语义上的理解

00:19:09.730 --> 00:19:11.860
注意事项，因为我们必须对单词这个词有一些具体的了解

00:19:11.860 --> 00:19:15.760
语义意味着您是否有一个级别标记为人口查询的列

00:19:15.760 --> 00:19:19.030
不知道那是很多人写的，因为你会

00:19:19.030 --> 00:19:22.059
意味着某种规范，例如RDF，例如json-ld

00:19:22.059 --> 00:19:26.260
实际上是在谈论同一件事，我对ipfs感到非常兴奋

00:19:26.260 --> 00:19:28.870
扎根于与IPL进行大型对话吗？

00:19:28.870 --> 00:19:33.450
关于以一种可以表示为json-ld的方式绘制和链接模式的信息

00:19:33.450 --> 00:19:39.190
但是我认为这是我们未来的研究领域，但在基础层上

00:19:39.190 --> 00:19:43.030
查询可以为您提供开箱即用的功能，因为它了解您在说什么

00:19:43.030 --> 00:19:46.030
当您说数据集时，如果您说结合这两个数据集，它可能会崩溃

00:19:46.030 --> 00:19:49.630
您可以将所有这些行放在一起，也可以将所有元数据粉碎在一起

00:19:49.630 --> 00:19:52.540
您或者您可以获取所有数据集的所有标题标题

00:19:52.540 --> 00:19:57.700
这都是可行的，但我们要查询的是了解

00:19:57.700 --> 00:20:02.290
当我说人口时，我是在谈论人的账目，这是一个漫长的过程

00:20:02.290 --> 00:20:05.440
对话中浪漫地描绘着人类的事物

00:20:05.440 --> 00:20:12.549
关于机器知道的通缉犯，这是一个大麻烦的问题，然后

00:20:12.549 --> 00:20:16.600
最后，您是否正在与政府合作开展开放数据计划？是的，我们

00:20:16.600 --> 00:20:18.879
与政府盟友特别是纽约合作我们有很多

00:20:18.879 --> 00:20:21.399
在这里与纽约市进行了非常有益的对话

00:20:21.399 --> 00:20:26.039
它一直是一个很好的合作伙伴，我们也在努力

00:20:26.039 --> 00:20:30.519
关于联合国可持续发展目标的国际层面

00:20:30.519 --> 00:20:34.629
也是我们处理大量旧数据的另一个来源，并且

00:20:34.629 --> 00:20:38.049
通过我在环境数据和治理计划中的工作，我们

00:20:38.049 --> 00:20:42.429
有关存档气候数据的大量工作，这也是另一种类似的部门

00:20:42.429 --> 00:20:46.779
他们往往会变得过时，并且往往很难保持自己的状态

00:20:46.779 --> 00:20:52.299
有点像脉搏，所以我们认为重力的人会工作

00:20:52.299 --> 00:20:56.559
我们是最早出现在数以百万计的技术领域的公司

00:20:56.559 --> 00:21:00.730
那种淡淡的兴趣使我想补充一点，这让我感到很温暖，

00:21:00.730 --> 00:21:04.389
我知道与纽约市开放数据公司合作多年，

00:21:04.389 --> 00:21:10.330
老旧数据和过时数据之类的问题，老实说，

00:21:10.330 --> 00:21:15.100
所以您正在做的工作不，谢谢，是的，我们实际上是

00:21:15.100 --> 00:21:18.039
对此感到非常兴奋，因为有一个真正的愿望使之成为双向

00:21:18.039 --> 00:21:21.070
如果我们考虑数据门户，那么对话是正确的

00:21:21.070 --> 00:21:25.330
单向散布的数据通常是陈旧的，这对于

00:21:25.330 --> 00:21:29.710
一个公民进来说我想我想帮助我想

00:21:29.710 --> 00:21:33.309
可以改善您的数据字典，或者我想对数据进行一些更改

00:21:33.309 --> 00:21:36.789
我知道这是不正确的，现在没有方法可以打开该对话框，

00:21:36.789 --> 00:21:40.480
因此，许多令人兴奋的地方是有人可以将其审核

00:21:40.480 --> 00:21:45.220
升级权我可以接受这些数据证明我所做的更改正是

00:21:45.220 --> 00:21:47.980
东西，只有这东西，我们才真正进入查询嗅探工具

00:21:47.980 --> 00:21:53.110
今天，但我们有一个很大的不同，它可以让您进行结构化数据，而我

00:21:53.110 --> 00:21:56.470
可以告诉你，嘿，这就是我要更改的内容，

00:21:56.470 --> 00:22:00.700
谈话是在一个负担沉重的城市里做了一个维护者的

00:22:00.700 --> 00:22:05.230
他们已经在市政部门中开展工作了

00:22:05.230 --> 00:22:08.519
接受那种增强

00:22:09.350 --> 00:22:14.590
好吧，我想我们涵盖了很多，到处都是

00:22:14.590 --> 00:22:19.190
还有其他问题吗，有几对我认为你没有

00:22:19.190 --> 00:22:32.779
在这里获取实体和另一个实体，我想当然是的，我可以使用Qi

00:22:32.779 --> 00:22:37.399
作为IP FSOC网站上用于自定义数据可视化的API，基本上

00:22:37.399 --> 00:22:45.289
当然，是的，完全可以，当我像幻想的节点仪表板一样时，可以

00:22:45.289 --> 00:22:47.899
完全输入花哨的便笺密码，因此您在正面看到的所有内容

00:22:47.899 --> 00:22:51.559
端利用了JSON API，当您为连接振铃时可用

00:22:51.559 --> 00:22:56.059
在本地可用，我们不会提供类似的托管版本

00:22:56.059 --> 00:23:01.159
因为我们真的希望您使用分发工具，但这完全是

00:23:01.159 --> 00:23:06.919
可能的，而我现在不应该在谈论这个，但是我们是

00:23:06.919 --> 00:23:12.289
距图QL几英寸，看起来像是有可能

00:23:12.289 --> 00:23:16.100
我不能等我们六个月，但我们认为您会

00:23:16.100 --> 00:23:20.919
能够将整个查询网络变成图QL的东西，这很有趣

00:23:20.919 --> 00:23:26.029
了解身份以及身份和私人数据集的管理

00:23:26.029 --> 00:23:30.590
认为是齐头并进的，那些就像是真正的构成

00:23:30.590 --> 00:23:35.559
我们未来八个月到一年的目标我们将做一个非常认真的

00:23:35.559 --> 00:23:40.549
看一下访问控制，包括围绕差分的许多前沿工作

00:23:40.549 --> 00:23:43.309
隐私，这将允许某些人说我想要一个

00:23:43.309 --> 00:23:46.549
对我们来说是数据集的匿名版本是非常重要的一件事

00:23:46.549 --> 00:23:49.360
当我们在考虑与数据相关的访问控制时要进行讨论

00:23:49.360 --> 00:23:53.149
我们希望所有这些都发生在某种加密原语上

00:23:53.149 --> 00:23:57.860
基于分散的标识符，因此我们采用了D

00:23:57.860 --> 00:24:03.080
理想情况下，访问控制系统上的ID规范分层

00:24:03.080 --> 00:24:06.980
通用，而不是只处理查询问题，但为我们留出了处理的空间

00:24:06.980 --> 00:24:10.490
像我想要该数据集中的匿名版本这样的东西

00:24:10.490 --> 00:24:13.190
大型联赛的积极研究我们今天拥有的是

00:24:13.190 --> 00:24:16.220
您只提供了一个基本的加密密钥对，哦，差不多

00:24:16.220 --> 00:24:19.190
类似于您的纯ID，因此您有一对公用/专用密钥对，并且

00:24:19.190 --> 00:24:23.060
这就是我们现在管理查询身份的方式

00:24:23.060 --> 00:24:25.690
有道理

00:24:26.100 --> 00:24:29.380
是的，当您阅读设置Kirino的过程时，他是否会跑步

00:24:29.380 --> 00:24:32.200
疯狂的设置以及保留错误的规定，可确保您

00:24:32.200 --> 00:24:34.750
有一个主动的掌握，并确保您拥有，然后它使您

00:24:34.750 --> 00:24:38.260
查询保持错误，当您选择一个对等名称时，我们只注册公共

00:24:38.260 --> 00:24:42.460
注册表中的密钥，说好你能证明这一点，然后有一个简单的

00:24:42.460 --> 00:24:46.630
证明仪式，然后您可以索取标识符，然后我们确保您

00:24:46.630 --> 00:24:50.250
一个小时内不能要求太多

00:24:51.000 --> 00:24:54.370
非常感谢您的倾听，每个人都有其他人吗

00:24:54.370 --> 00:24:58.840
对此没有疑问，这是一个有趣的人群，因为我们有点融合，没有

00:24:58.840 --> 00:25:03.010
ipfs，因此我们可以非常技术地进行讨论，但是查询非常多

00:25:03.010 --> 00:25:06.100
针对那些您不了解ipfs并喜欢花费很多时间的人

00:25:06.100 --> 00:25:10.300
处理数据，因此它可以在两个之间快速转换

00:25:10.300 --> 00:25:14.910
对话很好Brendan非常感谢您

00:25:14.910 --> 00:25:19.980
抽出时间来解释一项工作，一切正常，谢谢

00:25:19.980 --> 00:25:25.260
非常感谢您的收听，您会来ipfs camp的，对不起，我会在

00:25:25.260 --> 00:25:28.530
相机让我非常兴奋，分享了很多我刚刚向您展示的内容

00:25:28.530 --> 00:25:31.860
引擎盖下的胆量有些是我们真正希望的

00:25:31.860 --> 00:25:36.570
有点猪肉回到ipfs社区，是的，我们真的很期待

00:25:36.570 --> 00:25:41.190
对他们来说，很多聊天我觉得是同性恋，只是接受，太棒了

00:25:41.190 --> 00:25:46.650
我们迫不及待地想了解更多，再次感谢您

00:25:46.650 --> 00:25:51.630
花点时间来解释查询以及您正在做的一件出色的工作

00:25:51.630 --> 00:25:58.050
IPO首次每周会议的其他所有人都不会

00:25:58.050 --> 00:26:03.960
由于ipfs阵营，在下一周的下周召开每周例会，但我们会

00:26:03.960 --> 00:26:09.390
再次继续，我相信七月初，所以非常感谢你，我会

00:26:09.390 --> 00:26:14.670
提出了一个问题，我会在下一个未来见到每个人

00:26:14.670 --> 00:26:20.870
七月，谢谢您，再见，即将到来的七月

