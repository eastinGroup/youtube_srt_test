WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:06.210
如果您正在录制，那么-好吧，我是比佛利山庄，不用等待，好吧，这是

00:00:06.210 --> 00:00:11.940
All Hands呼吁2017年11月27日，首先在议程上，就像我们

00:00:11.940 --> 00:00:21.920
拥有来自David的基准J s ipfs

00:00:22.609 --> 00:00:30.900
好吧，我只是看到我的视频非常有趣，这有点断断续续

00:00:30.900 --> 00:00:37.320
是的，不应该在这里对不起，不

00:00:37.320 --> 00:00:45.050
分散注意力，因此进行基准测试，因此我们的一台计算机使网站变得非常好

00:00:45.050 --> 00:00:52.710
如果您达到基准测试，基本上可以让用户签出加快我的PMS的权限-

00:00:52.710 --> 00:00:57.960
杰西（Jess），您的IP溃烂了吗？

00:00:57.960 --> 00:01:02.850
最新版本，但仍不是最新版本，只有下一个外观

00:01:02.850 --> 00:01:07.470
您可以更快地找到一个网站，而我，我可以像引导您浏览

00:01:07.470 --> 00:01:14.490
屏幕确保可以更轻松地确定Mike的位置哦，是的，实际上

00:01:14.490 --> 00:01:21.439
Firefox和chrome滥用了，是的

00:01:24.140 --> 00:01:31.229
好吧，我在等Firefox赶上来，所以是的，您获得了一个非常不错的网站

00:01:31.229 --> 00:01:35.460
页面上现在有三个基准可以启动，他告诉

00:01:35.460 --> 00:01:41.009
如果您使用的是这些，则您26岁，一旦开始备忘，您就会看到一些同龄人

00:01:41.009 --> 00:01:46.320
将我的同伴连接起来，现在您可以像这些基准测试之一一样运行

00:01:46.320 --> 00:01:50.970
他们现在有不同的文件，就像静态文件一样，是一张脸

00:01:50.970 --> 00:02:07.049
它给了你一个我看不见的人的地方好吧哦，他在这里，是的

00:02:07.049 --> 00:02:14.220
您和我会引导我们逐步完成我的平台的演讲

00:02:14.220 --> 00:02:21.720
继续吧，嗯，我听到你在说你在做的很好，谢谢

00:02:21.720 --> 00:02:26.670
是的，所以我就像把它包装起来，然后您添加更多的想法，

00:02:26.670 --> 00:02:32.330
你想做什么，就像我说的那样，你们真的很喜欢这些人

00:02:32.330 --> 00:02:38.130
就像告诉文件中有多少块一样

00:02:38.130 --> 00:02:46.410
完成每项工作所花费的时间，您获得的读取速度如此快，因此

00:02:46.410 --> 00:02:49.380
这样的感觉就像是一个平台，让更多人添加更多

00:02:49.380 --> 00:02:53.100
流文件或类似网络类型的基准

00:02:53.100 --> 00:02:58.290
情况，然后比较它，我们喜欢真实的，只是得到HTTP，甚至看到它

00:02:58.290 --> 00:03:02.489
随着时间的流逝，我只见过进攻猫大师

00:03:02.489 --> 00:03:09.860
我不确定该域是否应该像ecfs一样快速还是仅作为基准

00:03:09.860 --> 00:03:14.730
我有插曲，但我们选择了这首歌，因为牺牲是

00:03:14.730 --> 00:03:21.090
已经在那里，设置起来更简单，是的，我们可能会得到Astraeus-两点

00:03:21.090 --> 00:03:28.070
这是一个人，所以是的，这个时期的贡献很大

00:03:28.970 --> 00:03:36.090
抱歉，非常感谢您的贡献谢谢大家的邀请

00:03:36.090 --> 00:03:49.230
我是IP Face的一员，无论如何我都可以为ipfs做出贡献，我希望是的，我希望

00:03:49.230 --> 00:03:57.239
您知道的基准将变得更加有用

00:03:57.239 --> 00:04:09.030
ipfs好多了，你就是这个例子，只是得到了一个流

00:04:09.030 --> 00:04:18.150
对性能监控进行基准测试，但我认为我们可以对其进行改进以使其成为

00:04:18.150 --> 00:04:25.770
您知道一套有用的工具来跟踪正在发生的事情真的很有用

00:04:25.770 --> 00:04:34.920
速度和背景的变化是的，所以我想就像你是

00:04:34.920 --> 00:04:38.640
如果我没记错的话，跳到议程中的下一点

00:04:38.640 --> 00:04:47.460
像其他基准一样，所以我们在这里创建问题，就像我再次猜到一样

00:04:47.460 --> 00:04:52.170
是今天创建的，尽管不是

00:04:52.170 --> 00:04:57.870
然后像几个星期前一样，这是工作的核心

00:04:57.870 --> 00:05:02.220
获得反馈，例如人们希望在此网站上看到的内容是

00:05:02.220 --> 00:05:06.060
像要添加更多文件一样，是否存在任何形式的可视化

00:05:06.060 --> 00:05:11.550
这将帮助每个人了解正在发生的事情，我想知道每个人的想法

00:05:11.550 --> 00:05:15.540
就像我想传播一样，变得像一个大广场

00:05:15.540 --> 00:05:19.380
您的所有小盒子都有一个大方块，我想随着博客的到来

00:05:19.380 --> 00:05:23.280
它们是通向您节点的管道吗，您会看到在这个大块上出现的块

00:05:23.280 --> 00:05:29.790
正方形，最后是整个作品，因此我们可以做更多的可视化

00:05:29.790 --> 00:05:35.730
添加更多测试，我们可以对其进行比较，可以针对HTTP对其进行基准测试，然后看看

00:05:35.730 --> 00:05:39.330
正确的差异是因为HTTP就像是一个小文件一样，

00:05:39.330 --> 00:05:43.110
会更快，因为该小文件来自单个端点

00:05:43.110 --> 00:05:47.700
不必像下载一样做任何加密魔术，但随后我们得到了

00:05:47.700 --> 00:05:53.250
像我小偷的两个演出文件这样的大文件肯定会更快，并且

00:05:53.250 --> 00:06:02.580
进行比较会很有用，就是这样，我想我可以停止

00:06:02.580 --> 00:06:09.980
我的屏幕衬衫在这里嘿，任何问题，想法，什么都留在这里

00:06:09.980 --> 00:06:22.380
豪尔赫还有其他的好事，是的，我对你不了解太多

00:06:22.380 --> 00:06:27.599
知道与ipfs连接发生了什么，担心您

00:06:27.599 --> 00:06:32.840
知道有一张你提到的照片，可以很好地跟踪

00:06:32.840 --> 00:06:40.759
你从家里得到多少块，这是一个非常好的功能，我认为

00:06:40.759 --> 00:06:48.750
而且，我们可以知道我们可以从一些基本的东西开始

00:06:48.750 --> 00:06:55.860
矩阵对于那些使用ipfs的人将非常有用，我们可以开始

00:06:55.860 --> 00:07:03.300
将它们写下来并加以实施，是的，我认为在此过程中，许多

00:07:03.300 --> 00:07:17.280
事情会出现的，是的，使它更有用-我没想到会

00:07:17.280 --> 00:07:22.949
一开始这么有用，我只是创建它来展示演讲

00:07:22.949 --> 00:07:47.849
但是，是的，我在讨论中提到的问题还包括维克多（Victor）的一些

00:07:47.849 --> 00:07:55.259
维克多（Victor）关于他经营多个汽车的一些想法的评论

00:07:55.259 --> 00:08:07.020
每次获取的测试-您知道-保持中位数更好的关键

00:08:07.020 --> 00:08:12.419
了解多个测试以及固定和存在的功能

00:08:12.419 --> 00:08:19.710
提交一个我认为是个好主意的文件，您也可以在其中找到一个列表

00:08:19.710 --> 00:08:25.560
本地文件，然后您就可以尝试播放并查看速度

00:08:25.560 --> 00:08:37.320
去，嗯，是的，我觉得我的英国人有多难过

00:08:37.320 --> 00:08:39.800
你但是

00:08:40.779 --> 00:08:49.100
我们还可以更好地了解这个浏览器类，说它是一个

00:08:49.100 --> 00:08:57.890
之所以神秘，是因为您知道III正在尝试调试它并试图知道

00:08:57.890 --> 00:09:03.589
发生了什么，但我永远无法确定该发生了什么

00:09:03.589 --> 00:09:12.950
背景，是的，我不知道我们是否可以多次运行测试

00:09:12.950 --> 00:09:19.790
关于此错误的问题可能会更频繁地出现，我们更好地了解我不会

00:09:19.790 --> 00:09:27.980
知道我还没有一个流程，如果有的话我还没有看到相关的问题

00:09:27.980 --> 00:09:32.980
完全解决了，但最近我有经验，浏览器缓存未命中

00:09:32.980 --> 00:09:46.040
所以我们可以得到我们可以调查的更多细节，我猜也是

00:09:46.040 --> 00:09:54.260
我们可以使它看起来像更多的仪表板速率，然后添加更多

00:09:54.260 --> 00:10:00.230
还有更多您知道获取文件的基准测试，用于添加靴子的基准测试

00:10:00.230 --> 00:10:14.029
文件和这种方法，欢迎任何想法，也欢迎您

00:10:14.029 --> 00:10:20.270
知道从中创建更好的基准可能仅对那些人有用

00:10:20.270 --> 00:10:26.300
谁真正使用它，你知道，我想拥有有意义的数字

00:10:26.300 --> 00:10:35.360
有道理，这样，如果我们写下规格说明，那就是

00:10:35.360 --> 00:10:44.450
更有针对性，我想这会更有用，我不想劫持

00:10:44.450 --> 00:10:51.740
对话很好，让我们继续

00:10:51.740 --> 00:10:56.150
在这个问题上，有很多想法和类似的东西，我们可以使用

00:10:56.150 --> 00:10:59.870
基准，所以我们可以使用基准来查看不同的问题，就像看

00:10:59.870 --> 00:11:05.210
性能和内存使用方面的改进，是的，我真的同意

00:11:05.210 --> 00:11:10.100
仪表板，因为如果我们有仪表板，它将使这些测试非常可重复，并且

00:11:10.100 --> 00:11:15.710
非常非常快，并且它使每个人都可以真正参与到该活动中

00:11:15.710 --> 00:11:24.580
准确地调试和解决问题

00:11:25.480 --> 00:11:29.750
好吧，如果我们准备继续进行下一个议程项目，就好像我们已经

00:11:29.750 --> 00:11:35.960
直播期间出现了来自David的运输，如果您要混合，可以等一下

00:11:35.960 --> 00:11:41.240
像厨师一样，所有人都拒绝赢得胜利，好吧，我也许我会喜欢

00:11:41.240 --> 00:11:47.900
单击输入，就像有更多的人一样，好吧，我会做的

00:11:47.900 --> 00:11:57.140
这是一个新的，如果您转移一个WebSocket的开始，我认为这对

00:11:57.140 --> 00:12:02.720
提到现在已经可以使用程序了，实际上您可以在下一个版本中使用它

00:12:02.720 --> 00:12:08.750
Jessica TFS的默认情况下会安装它，然后您只需激活即可

00:12:08.750 --> 00:12:14.540
它与多其他功能应该一样简单，就像我在做任何启用任何

00:12:14.540 --> 00:12:24.020
其他运输方式，此Web套接字星形与Web RTC星形非常相似，因此您得到了

00:12:24.020 --> 00:12:29.180
杀死某点的痛点，然后使用这个点的朋友

00:12:29.180 --> 00:12:34.370
以便发现，就像任何知道拨盘设定点的人一样，也会知道mm

00:12:34.370 --> 00:12:40.370
在某种程度上，这有点像浏览器的多播DNS，

00:12:40.370 --> 00:12:45.050
 Web RTC星形和Web套接字星形之间的区别是Web套接字星形使用

00:12:45.050 --> 00:12:51.020
一个Web套接字端点来中继消息，而Web RTC只是选择

00:12:51.020 --> 00:12:55.790
端点中继信令数据，然后您建立一个

00:12:55.790 --> 00:13:01.100
对等渠道建立此传输的原因有两个

00:13:01.100 --> 00:13:04.790
就像主要的那样，真的是因为您看到的内容非常饿

00:13:04.790 --> 00:13:09.620
这真的很难控制，有些事情我们知道

00:13:09.620 --> 00:13:14.060
可以做到，但这有点像一件短小的事情，就像一件快速的事情，我们可以

00:13:14.060 --> 00:13:17.779
为了使人们拥有与他们相同的体验

00:13:17.779 --> 00:13:23.779
韦伯ec明星，而无需等待数周甚至数月的时间

00:13:23.779 --> 00:13:29.240
看到一个完整的解决方案，但现在可以控制WebRTC的野兽

00:13:29.240 --> 00:13:38.660
本质上是WebSocket明星，有点像马戏团接力，非常相似

00:13:38.660 --> 00:13:46.540
就像几乎是同一事物或同一事物的不同颜色

00:13:46.540 --> 00:13:50.480
功能，但实现方式不同，因为电路依赖

00:13:50.480 --> 00:13:55.100
使您可以使用任何ipfs no来将您的连接中继到另一个外观，并且

00:13:55.100 --> 00:13:59.839
你必须拥有那个同伴的多重其他作为一个秘密的现实生活多重

00:13:59.839 --> 00:14:05.120
其他我们WebSocket明星您仍在中继连接，但是

00:14:05.120 --> 00:14:09.920
像点对点设计中那样的传输，设计是有目的的

00:14:09.920 --> 00:14:14.600
以支持我被转移或该堆栈的任何其他部分可以

00:14:14.600 --> 00:14:20.060
就像一组模块本身一样，因此意识到内德知道如何运输

00:14:20.060 --> 00:14:25.339
使用群体和流混合，然后创建订单运输，以防万一

00:14:25.339 --> 00:14:29.029
WebSocket Star的功能更底层，更简单，只使用一个

00:14:29.029 --> 00:14:33.350
WebSocket指向路由连接的要点我实际上是在说

00:14:33.350 --> 00:14:36.199
屏幕就像是一种运输工具，不会做崩溃的事情

00:14:36.199 --> 00:14:41.209
人们已经看到我们今天已经检测到了一些错误，例如它不是很

00:14:41.209 --> 00:14:46.880
在关闭对等连接方面可靠，因此您可以拨号，但可以发现，但如果您

00:14:46.880 --> 00:14:50.810
断断续续在很多时候指向的渲染点有点

00:14:50.810 --> 00:14:57.920
感到困惑，所以那里需要更多测试，是的，我会见到你，因为我

00:14:57.920 --> 00:15:01.880
在IRC频道上看到了关于融合的对话，就像这样

00:15:01.880 --> 00:15:04.760
您想去的我们想为我们的转账创造这些美好的点

00:15:04.760 --> 00:15:09.769
答案是否定的，这就像我们将要解决的短期解决方案

00:15:09.769 --> 00:15:15.470
接下来要做的是对纹理进行反应，以使模块加载点对点的方式

00:15:15.470 --> 00:15:20.209
这样我们就可以通过这种共同点在某些声望中像共同的垂直方向一样

00:15:20.209 --> 00:15:25.339
出现使任何作品都可以立即使用所有其他作品的出现

00:15:25.339 --> 00:15:30.499
由于需要依赖关系的方式，它并不是不平凡的

00:15:30.499 --> 00:15:36.109
内射性的，但是就像一旦有真正的质感，那么运输将

00:15:36.109 --> 00:15:42.949
能够从上层调用某些东西，所以这意味着我

00:15:42.949 --> 00:15:47.029
可以在单个渲染点中进行设置，则网络中的任何节点都可以成为

00:15:47.029 --> 00:15:53.029
一个可更新的点，让其他任何节点都可以像电路一样再次见面

00:15:53.029 --> 00:15:58.939
只是同一产品的同一事物的不同颜色，然后我们将

00:15:58.939 --> 00:16:03.709
删除那些中心点，是的，我们不希望它们，我们不需要它们

00:16:03.709 --> 00:16:07.519
就像是对事物进行真实纹理化的问题一样，它的工作原理是很小的，

00:16:07.519 --> 00:16:11.319
那如果我仍然尊重他们

00:16:12.249 --> 00:16:17.089
是的，我希望这种解释是有用的，也许不是每个人在整个上下文中

00:16:17.089 --> 00:16:21.229
您知道的所有事情现在或以后都可以问我，或者问我

00:16:21.229 --> 00:16:26.839
是的，是的，可以吗？在我们讨论之后，您可以确保

00:16:26.839 --> 00:16:32.539
更新他们的笔记，使他们喜欢什么是WebSocket star，什么是

00:16:32.539 --> 00:16:37.669
我喜欢什么样的RTC明星，人们在哪里可以了解到更多有关这方面的内容？

00:16:37.669 --> 00:16:50.449
也像related空间中的相关或请求或问题，好了，我们已经准备好了

00:16:50.449 --> 00:16:56.149
继续进行下一个议程项目，嗯，只选择一个看起来像ipfs包裹的项目

00:16:56.149 --> 00:17:04.579
从Victor那里拿两个是的，这只是一个简短的说明，我将链接放在

00:17:04.579 --> 00:17:11.329
在计划成为夏天的16号之后，他也注意到了，他会很友善

00:17:11.329 --> 00:17:17.179
希望相同的格式的高时间会更好一些，但是如果您是

00:17:17.179 --> 00:17:20.089
巴塞罗那的封闭点，你想来

00:17:20.089 --> 00:17:23.809
非常有趣，或者您想参加或远程帮助

00:17:23.809 --> 00:17:27.220
也会很好

00:17:31.429 --> 00:17:37.980
好吧，看来本周的JSI PFS 2.7也超过了一次

00:17:37.980 --> 00:17:42.480
发布，那里有一个问题

00:17:42.480 --> 00:17:50.760
没事，所以发布已经准备好了，如果我们

00:17:50.760 --> 00:17:55.170
想做的事和即将发生的事情的注释我们必须对此感到非常沙皇

00:17:55.170 --> 00:18:00.299
问题，现在我们发现WebSockets star的问题是

00:18:00.299 --> 00:18:05.850
修复它们，但该版本应在今天发布，所以如果您在星期三发布

00:18:05.850 --> 00:18:11.940
是仅TFS的用户，请测试此最新版本，并让我们知道是否

00:18:11.940 --> 00:18:15.299
如果您在测试中发现应用程序有任何问题，它将为您工作

00:18:15.299 --> 00:18:20.790
看到其他人运行他们的测试套件总是很亲切

00:18:20.790 --> 00:18:26.280
反对最新的，因为它给了我们像很多人一样的东西，有时候这只是一个

00:18:26.280 --> 00:18:29.640
像我们对事情一样了解的信心程度

00:18:29.640 --> 00:18:34.169
一直以来都很棒，实际上是他们发现了错误，这就是

00:18:34.169 --> 00:18:43.070
也很棒，因为这样我们就可以在破坏人的软件之前修复它们，是的

00:18:44.979 --> 00:18:50.389
好的，看起来像David，您不介意继续使用Web UI

00:18:50.389 --> 00:18:53.419
车站会得到很多爱，我会做的

00:18:53.419 --> 00:19:00.079
所以这有点优势，他是整个项目的新贡献者

00:19:00.079 --> 00:19:04.039
像几周前一样开始，就像经历问题并提交

00:19:04.039 --> 00:19:10.399
请求，在这段时间里，他设法使Web UI再次正常工作，我参加了测试

00:19:10.399 --> 00:19:14.989
在CI上并且实际上是可构建的，这是没有发生的

00:19:14.989 --> 00:19:21.469
相当长的一段时间，例如我们需要更新Web UI并进行ipfs，因为就像

00:19:21.469 --> 00:19:26.989
ipfs的HTTP api一直在发展，而TFS api一直在发展，但是网络

00:19:26.989 --> 00:19:31.819
用户界面始终从未真正更新过，因此，如果您使用的是Web，则有点落后

00:19:31.819 --> 00:19:36.649
今天的用户界面可能存在一些问题，因此现在它的Web用户界面已经修复

00:19:36.649 --> 00:19:44.119
更新它构建后，我们可以获取一个新的ash或该应用，并且喜欢更新-

00:19:44.119 --> 00:19:50.029
是dodongo ipfs的文章，因此用户可以使用Web um进行其他操作

00:19:50.029 --> 00:19:53.899
在空缺中也有所贡献，aki可能接下来会加入我们的行列

00:19:53.899 --> 00:20:00.799
演示的一周，我就像分享字节一样，是的，看到站，然后站

00:20:00.799 --> 00:20:06.919
可以再次使用，并且已全部更新，因此您现在就可以了，我也将提供指向的链接

00:20:06.919 --> 00:20:10.969
如果您现在找不到它，但是驻地在，这两件事都不用担心

00:20:10.969 --> 00:20:14.599
电子应用程序和这些样式，就像菜单栏项一样，它是一个每晚的盛宴

00:20:14.599 --> 00:20:17.629
知道您可以拖放文件，然后将其复制到您的

00:20:17.629 --> 00:20:23.799
将该文件放在io / /处的ipfs剪贴板，以便您可以与朋友共享

00:20:23.799 --> 00:20:29.029
无论如何，打开和关闭笔记的灯都一样，这是一种不错的安装方式

00:20:29.029 --> 00:20:33.139
IP节节点，而无需执行终端命令行操作

00:20:33.139 --> 00:20:38.659
第二眼安全，还有一些大想法，例如该如何处理

00:20:38.659 --> 00:20:42.709
外观以及它应该如何工作以及您可以拥有哪些功能，如果您

00:20:42.709 --> 00:20:47.719
也有想法去那些仓库，他展示了想法和

00:20:47.719 --> 00:20:55.399
希望在接下来的几周/下个季度能真正得到一些东西

00:20:55.399 --> 00:21:01.669
我们当时的想法是走-走向一个我们拥有的场景

00:21:01.669 --> 00:21:06.409
它们的名称可能会更改，但就像ipfs仪表板一样，它就像一个整页

00:21:06.409 --> 00:21:09.770
像Web UI一样，但喜欢更多功能，因为ipfs已经发展了很多

00:21:09.770 --> 00:21:17.120
因为您是为iOS设计的，所以您拥有ipfs UI，例如菜单栏或

00:21:17.120 --> 00:21:23.360
适用于Firefox和Chrome扩展程序，例如安装ipfs随播广告时

00:21:23.360 --> 00:21:27.950
当您看到电子高兴时，您会像一个很小的UI框，您会看到一只小眼睛

00:21:27.950 --> 00:21:36.020
框，例如，如果我们可以对那些UI页面进行模块化-网络组件，那么我们可以

00:21:36.020 --> 00:21:41.149
在不同的集成中重复使用它们，再将其传输到电子，再到桌面

00:21:41.149 --> 00:21:45.710
浏览器和EFS随播广告一起浏览到视图I，该视图更大，并且

00:21:45.710 --> 00:21:49.309
也因为我们将启用和禁用Web组件

00:21:49.309 --> 00:21:53.840
它们取决于用户要使用的功能

00:21:53.840 --> 00:21:58.549
他们正在使用的IP个性化设置，还使用户能够

00:21:58.549 --> 00:22:02.360
说我想使用m-pam作为防御，或者我想使用远程节点

00:22:02.360 --> 00:22:05.779
与我的PFS，所以是的，真的有很多类似的东西

00:22:05.779 --> 00:22:09.980
好主意，例如让用户加入ipfs，我开始玩

00:22:09.980 --> 00:22:15.409
很多都是围绕这些回购协议，例如FIFA的伴随网络用户界面和

00:22:15.409 --> 00:22:21.440
电台，敬请关注，如果您有兴趣阅读，请写一个

00:22:21.440 --> 00:22:26.620
在本届会议的笔记或涟漪中注意

00:22:29.690 --> 00:22:34.870
好吧，看来我们对于go ipfs和JSI PFS有关键问题

00:22:34.870 --> 00:22:41.210
所以我只在其中扔了一张我们有这些清单的表

00:22:41.210 --> 00:22:46.670
在本季度中，一些大型ipfs团队和JSI PFS团队在幕后

00:22:46.670 --> 00:22:51.080
在解决已知的关键问题上进行了大量工作，并且

00:22:51.080 --> 00:22:57.650
今天赫克托尔与NGO ipfs团队最接近

00:22:57.650 --> 00:23:05.930
迪米特里（Dimitri）我想，但杰里米（Jeremy）在飞机上，我认为库巴斯（Kubas）在上课

00:23:05.930 --> 00:23:14.060
现在，但我们至少可以看看非政府组织ipfs，其中一些

00:23:14.060 --> 00:23:19.690
已经解决了，所以连接关闭是一个

00:23:19.690 --> 00:23:25.910
长期存在的挑战也使热裤优化，我不确定那是什么

00:23:25.910 --> 00:23:30.950
一个是我们没有史蒂夫在这里，并修复了一些淹没物，所以您可以

00:23:30.950 --> 00:23:36.170
检查那个列表，我想说，好吧，下周我不会在这里，但也许

00:23:36.170 --> 00:23:40.280
在下周的电话会议上，一些NGO提交者可以浏览此清单

00:23:40.280 --> 00:23:46.100
提供有关这些进展情况的最新信息，然后除非

00:23:46.100 --> 00:23:49.670
任何关于优秀产品的事情都会让我们大吃一惊，我们可以看看GS

00:23:49.670 --> 00:23:59.360
对我来说还可以的您想快速浏览一下您曾经去过的J的那些吗？

00:23:59.360 --> 00:24:09.140
绝对可以，所以我将再次共享我的屏幕

00:24:09.140 --> 00:24:13.760
是的，所以我过去经常使用Alpha板来跟踪我们优先考虑的所有鞋子

00:24:13.760 --> 00:24:20.890
这个季度，顺便说一句，我不知道变焦发生了什么，但窗户

00:24:20.890 --> 00:24:25.580
每个人的脸都消失了，所以如果有人

00:24:25.580 --> 00:24:31.850
举起你的手，请告诉我好吧，我们已经在华夫饼板上了

00:24:31.850 --> 00:24:38.210
按部分筛选很重要，我们可以看到有很多

00:24:38.210 --> 00:24:43.320
进度，我们从“准备就绪”列上的51个问题开始，现在我们是

00:24:43.320 --> 00:24:51.630
剩下的17个项目和5个进行中的项目已售出了很多性能问题

00:24:51.630 --> 00:24:58.260
在杰西卡（Jessica）电影节中，就像那些令人讨厌的bug一样，下一个在那里

00:24:58.260 --> 00:25:04.650
IPL de track仍然需要引起注意的两个非常重要的项目

00:25:04.650 --> 00:25:11.430
所以最后提出了很多发展或很多改进

00:25:11.430 --> 00:25:19.830
上一季度的数据，就像已经被杀死一样，创建了代码来填充

00:25:19.830 --> 00:25:23.850
一些用户正在报告的需求，但我们从未真正有机会

00:25:23.850 --> 00:25:30.270
只需将这些更改推送到整个IPL D堆栈中

00:25:30.270 --> 00:25:38.880
所以这就是这里的工作，您看到它支持我的API和像这样的IPL解析器

00:25:38.880 --> 00:25:44.580
是一个错误，然后IPL解析器也会随之更改，

00:25:44.580 --> 00:25:51.390
对于GSI PFS而言至关重要的问题是，支持对API的支持

00:25:51.390 --> 00:25:58.100
Jessup EFS API，因此通常与go ipfs一起使用的客户端

00:25:58.100 --> 00:26:04.830
工作取决于很多需要在ipfs土地上进行的工作，是的，我们

00:26:04.830 --> 00:26:12.000
本质上需要重新审视这一点，例如看看我们决定采用的设计和

00:26:12.000 --> 00:26:15.630
就像我们决定采用的方法一样，仍然有效，如果有的话

00:26:15.630 --> 00:26:21.420
这个季度我们仍然可以做一些事情，所以另一个大问题是

00:26:21.420 --> 00:26:28.920
DHT的工作，所以我们在杰西卡（Jessica）的土地上有DHT实施方案，但事实并非如此

00:26:28.920 --> 00:26:34.650
尽管它可以在开玩笑的地方和喜欢的环境中工作，但仍可与该女孩进行互操作

00:26:34.650 --> 00:26:40.550
它需要更多的调试，很多东西都在那儿，但是有一些东西

00:26:40.550 --> 00:26:45.780
一些没有传递的消息，它看起来更像是一个我们非常纯粹的问题

00:26:45.780 --> 00:26:51.480
则一定是她有一个PFS问题，但是如果s检测到al Jessup

00:26:51.480 --> 00:26:55.800
在本季度的剩余时间内可以正常工作，并获得用户的体验

00:26:55.800 --> 00:27:01.540
再次只是为了强调这将是周围的事情

00:27:01.540 --> 00:27:07.740
PL D，然后按该顺序进行DHT

00:27:11.160 --> 00:27:14.580
任何改变

00:27:16.690 --> 00:27:21.520
是的，如果有任何疑问或类似的意思，我相信我会

00:27:21.520 --> 00:27:26.890
遇到这些问题，就像我知道整个旅程中写的是什么，所以我看到了

00:27:26.890 --> 00:27:31.150
它，但是就像您对这种事物的状态有疑问时，您可以信任

00:27:31.150 --> 00:27:39.910
现在，对吧，继续有趣，所以跟史蒂文说对了，我想这是

00:27:39.910 --> 00:27:47.169
使用网关解决IP LD的可能性仍然是

00:27:47.169 --> 00:27:53.860
是否真的要通过API Daggett来完成您的意思呢？

00:27:53.860 --> 00:28:00.190
 / CID就像只是做ipfs一样，是的，我们肯定谈论了很多，或者

00:28:00.190 --> 00:28:06.380
至少在很多场合，没有人反对

00:28:06.380 --> 00:28:09.770
问题更多的是像今天人们实际使用的那样今天有用吗？

00:28:09.770 --> 00:28:15.200
需要API，到目前为止，答案是否定的，也许您会说

00:28:15.200 --> 00:28:20.570
我们，我们错了，因为您也许有一些用例

00:28:20.570 --> 00:28:24.320
现实就像大多数使用网关访问文件的人

00:28:24.320 --> 00:28:28.910
对图的单个节点感兴趣，以及人们希望进行操作时感兴趣

00:28:28.910 --> 00:28:32.539
在图上，他们真的想要一个API，就像可以创建程序的东西，

00:28:32.539 --> 00:28:36.830
批注者图并与之相反，我进行过滤和选择，

00:28:36.830 --> 00:28:42.730
转换，依此类推，因此，如果有案子可去主持，那就去吧

00:28:42.730 --> 00:28:47.990
其实我的IP ID规范不是IP上的D ID规范

00:28:47.990 --> 00:28:54.440
FS我现在使用IP LD来构建它，所以我想所以我主要使用的API

00:28:54.440 --> 00:28:57.140
现在有点不稳定，所以我认为这并不重要

00:28:57.140 --> 00:29:01.159
在API之上构建它，但我认为最终将是为了

00:29:01.159 --> 00:29:07.010
其他人解决像主权基金会那样能够公正

00:29:07.010 --> 00:29:14.870
击中游戏网关以解决该对象，所以我认为主要是为了

00:29:14.870 --> 00:29:19.600
给其他用户带来的便利，而不是您自己

00:29:19.600 --> 00:29:27.440
好的，所以我想该条目实际上是关于解决您可以获取JSON的问题

00:29:27.440 --> 00:29:32.270
文档，但JSON文档必须在Seaborg中进行序列化，并且您必须

00:29:32.270 --> 00:29:38.480
验证内容的哈希值，我想这确实是问题-嗯

00:29:38.480 --> 00:29:47.020
确保它是确定性的，真的很难像一个独立的

00:29:47.020 --> 00:29:53.659
HTTP接口，这样就可以避免在IPL的前面没有任何客户端

00:29:53.659 --> 00:29:57.890
就像向您显示数据一样，我们可以打个便笺，我给您一个JSON版本的

00:29:57.890 --> 00:30:05.150
数据，但是一旦具有要提供的数据类型或不同的数据类型

00:30:05.150 --> 00:30:10.640
种数字，因为Jason获取字符串的方式被定义并放入

00:30:10.640 --> 00:30:14.740
连线并不会像弄乱数据一样，这意味着您可能会

00:30:14.740 --> 00:30:24.720
从like / IPL d / c ad和任何相对的jason中抢走一块Jason，

00:30:24.720 --> 00:30:29.070
然后您再说一遍，然后再做一次IV，它就不会匹配

00:30:29.070 --> 00:30:34.049
如果您一开始是在同一城市，那么这有点像一个很难

00:30:34.049 --> 00:30:40.740
问题的解决方案就像创建也许

00:30:40.740 --> 00:30:44.880
你得到他们的原始节点得到一个可视化器，就像当人们

00:30:44.880 --> 00:30:50.250
在IPL上加载一些东西，如果他们真的把我焊接的东西焊接起来，

00:30:50.250 --> 00:30:55.380
曾经去过那个海滨或il游乐场或Jason lb游乐场

00:30:55.380 --> 00:30:59.250
像这个方块一样，它告诉您里面的数据，然后分析

00:30:59.250 --> 00:31:03.899
版本，这样，如果您获取样式化的版本，则可以复制相同的版本

00:31:03.899 --> 00:31:07.860
在本地使用管道事务来满足内容，或者仅使用几对，否则在将来的火灾中

00:31:07.860 --> 00:31:14.399
论文等等，是的，就像我猜，我们只需要了解什么是

00:31:14.399 --> 00:31:19.140
需求并且喜欢什么，我们可以在那条道路上做到最好

00:31:19.140 --> 00:31:26.190
对用户有用，很酷，是的，我认为我们应该将Spinner作为一个问题

00:31:26.190 --> 00:31:35.549
认为不是高优先级，是的，但是就像是否需要使用任何端点

00:31:35.549 --> 00:31:42.570
为了使IDS向前发展，是的，我也是这样想的。

00:31:42.570 --> 00:31:46.950
大部分时间我都可以通过直肠将其写入

00:31:46.950 --> 00:31:51.720
ipfs库，但实际上意识到只使用API​​就可以了

00:31:51.720 --> 00:31:57.240
猜猜有接口go interface go I PI，所以我

00:31:57.240 --> 00:32:00.210
基本上建立在此之上，因此密钥库和其他所有功能都可以正常工作

00:32:00.210 --> 00:32:06.590
很好，所以我基本上在构建它，而D ID规范基本上是

00:32:06.590 --> 00:32:16.559
JSON建模非常简单，就像食物还可以

00:32:16.559 --> 00:32:22.620
看起来接下来我们在JSI PFS取消控制请求上有一个pull请求

00:32:22.620 --> 00:32:33.059
一些地方的一些反馈

00:32:33.059 --> 00:32:41.940
谈论有一个一致的模块来启动和停止ipfs注释，那就是

00:32:41.940 --> 00:32:46.460
基本上是一个提案，并试图提供一些反馈，因为那是一个

00:32:46.460 --> 00:32:53.610
拦截器，用于在超级计算机上真正获得所需的测试量

00:32:53.610 --> 00:33:02.429
准备黄金时段，这也是其中的一个重要部分，是的

00:33:02.429 --> 00:33:08.369
如果您有某些建议，请在建议的界面上提供一些反馈

00:33:08.369 --> 00:33:14.460
知道需要评论或批评就把它留在那儿，但是我在这一点上

00:33:14.460 --> 00:33:19.049
尝试在接下来的24小时内设置时间限制，但您知道没有

00:33:19.049 --> 00:33:25.169
保护向前迈进了一步，但我俩都可以，但是如果有的话，让我们确保

00:33:25.169 --> 00:33:35.330
我们会抚养他，是的，每次都可以预防

00:33:35.330 --> 00:33:41.309
是的，所以嗯，所以我们和我们一直在谈论的米奇本质上只是为了

00:33:41.309 --> 00:33:48.629
给每个人更多的上下文是ipfs D-CTL，我们称之为恶魔

00:33:48.629 --> 00:33:53.129
控制器，它是人们通常使用的从json生成的模块

00:33:53.129 --> 00:33:59.190
去ipfs恶魔，因为现在还需要生成J hyperfest

00:33:59.190 --> 00:34:05.669
恶魔做所有这些工作测试，我们有点想找出我们最好

00:34:05.669 --> 00:34:09.780
只需创建一个模块，它比创建一个模块更灵活，用途更广

00:34:09.780 --> 00:34:14.730
不同的模块和恶魔控制器模块，就像所有

00:34:14.730 --> 00:34:19.319
就界面而言，它不支持很多功能，而

00:34:19.319 --> 00:34:26.730
也喜欢没有很好的文档记录，等等，因为我们学习了一些用户体验

00:34:26.730 --> 00:34:31.679
开发人员期望通过构建我们所谓的ipfs Factory来实现

00:34:31.679 --> 00:34:35.579
我们在杰西卡诗歌中对索菲亚杰西卡进行测试时，我们认为

00:34:35.579 --> 00:34:39.119
就像好的，让我们就像将所有创新带回本模块并使其

00:34:39.119 --> 00:34:42.389
整个社区都可以使用，就像那样，我们只有一个地方可以生成

00:34:42.389 --> 00:34:46.730
来自Mike的浏览器的电子节点

00:34:46.730 --> 00:34:52.590
单个javascript文件等，十几个恶魔就可以成为河流，可以成为一个女孩

00:34:52.590 --> 00:34:56.940
或将来的其他任何实现方式

00:34:56.940 --> 00:35:02.100
在房子里，如果您使用它为代码生成恶魔，就像我一样

00:35:02.100 --> 00:35:08.040
知道其他应用程序时，您一定要确保将其检查为完整。

00:35:08.040 --> 00:35:12.450
请求，因为它对其API有一个新的建议，该建议应该更简单

00:35:12.450 --> 00:35:17.760
应该更好，应该更易于调试，如果有的话

00:35:17.760 --> 00:35:23.370
就像您在旧API之上创建的那样，您会发现我们丢失了

00:35:23.370 --> 00:35:28.770
您认为最好也添加它一定会更好，或者如果您看到

00:35:28.770 --> 00:35:31.890
我们正在删除不应该的情况，但是如果我们看到

00:35:31.890 --> 00:35:37.880
我们正在删除会破坏您对它的使用的东西，也请告知我们

00:35:37.880 --> 00:35:45.240
这就是惯例，否则就像我们再次打开公关一样

00:35:45.240 --> 00:35:49.910
有点像几天要发展，所以你还有一些时间

00:35:49.910 --> 00:35:56.780
如果将来我们必须添加一些东西，我们可以随时添加更多

00:35:57.049 --> 00:36:05.609
是的，绝对感谢埃迪，没问题，谢谢您推动一切顺利，如果

00:36:05.609 --> 00:36:09.210
我们已经准备好继续前进，然后就好像有一个关于当前状态的演示

00:36:09.210 --> 00:36:15.740
维克多（Victor）的詹金斯（Jenkins）是的，您好，这样每个人都可以听到我的声音。

00:36:15.740 --> 00:36:20.220
完美，好吧，我要分享我的浏览器

00:36:20.220 --> 00:36:24.750
碰巧是Firefox，一直都是Firefox，我不是叛徒

00:36:24.750 --> 00:36:31.920
所以让我们看看我们已经运行了很长时间了，现在一切都在这里，但是不要

00:36:31.920 --> 00:36:38.789
担心这是我的最爱，所以这就是詹金斯现在的样子

00:36:38.789 --> 00:36:46.289
亲爱的海洋，他喜欢一个新的用户界面和其他东西，所以我是我最大的关注点

00:36:46.289 --> 00:36:51.539
这个季度，我一直在研究詹金斯（Jenkins），并试图使我们的CI成为

00:36:51.539 --> 00:36:58.410
尽可能好的还包括确保Travis和Sonken CI以及一名球员

00:36:58.410 --> 00:37:06.839
效果也很好，所以目前的状态是我们现在拥有

00:37:06.839 --> 00:37:17.910
仓库，但我在这里，我们为所有人保留共享的共享管道

00:37:17.910 --> 00:37:24.509
到目前为止，JavaScript工作已经基本完成，我们有几个node.js

00:37:24.509 --> 00:37:30.509
版本，所以出了什么问题，我们要测试一些其他Global的OSS

00:37:30.509 --> 00:37:35.130
不要版本，然后我们知道针对Windows的特定测试

00:37:35.130 --> 00:37:42.960
这有点特殊，然后我们有了设置较差或与UNIX兼容的计算机，

00:37:42.960 --> 00:37:48.569
基本上，我会并行处理所有这些内容，所以看起来不会

00:37:48.569 --> 00:37:54.480
实际工作看起来像这样，所以这是快速的

00:37:54.480 --> 00:38:01.559
例如，以马克西米尔（Maksimir）为例，我们发现最后四个数字花了35分钟

00:38:01.559 --> 00:38:07.950
有点像太长的时间，所以我要谈谈一种血腥的书面技能

00:38:07.950 --> 00:38:10.010
等等，我们可以

00:38:10.010 --> 00:38:16.640
看到：pipeline看起来像这样，这有点糟糕，因为我只是

00:38:16.640 --> 00:38:20.330
基本上是昨天一起砍掉的，但原理相同，我们有一堆

00:38:20.330 --> 00:38:28.280
Oso在俄罗斯进行，我们在这里安装了DX，因此请检查

00:38:28.280 --> 00:38:34.400
删除安装依赖项的代码，重写完成的测试，然后如何

00:38:34.400 --> 00:38:39.200
这看起来像是其他人的核心IP，它要快得多

00:38:39.200 --> 00:38:46.580
大约两分钟，所以我们可以希望演示之神在我身边，您可以重播

00:38:46.580 --> 00:38:53.270
这些，我们应该看到它同时在所有OSS上进行测试，因此我们不会

00:38:53.270 --> 00:38:56.960
必须等待，以便Linux版本在30年内完成

00:38:56.960 --> 00:39:07.070
秒鲁拉（Rula）一个性问题较慢，所以

00:39:07.070 --> 00:39:14.390
也是Windows版本，因此这对github的实际影响

00:39:14.390 --> 00:39:22.910
我们可以随时查找，因此我们有Co ipfs地址，这是我的第一个地址

00:39:22.910 --> 00:39:29.420
首先我没有在这里创建拉取请求，但是我们有一个分支

00:39:29.420 --> 00:39:37.100
在这里，我们现在可以看到典型的状态github status jumbo

00:39:37.100 --> 00:39:43.790
图书馆只有一个，这里很多项目有多个

00:39:43.790 --> 00:39:53.930
一个更好的例子可能是多种格式之一，所以目前

00:39:53.930 --> 00:40:00.160
我认为当年的状态是所有多人游戏和IP中的JavaScript项目

00:40:00.160 --> 00:40:07.460
已经完成，并且正在使用Jenkins，因此对于我们的JavaScript

00:40:07.460 --> 00:40:13.580
在项目中，您有一个向上的圆圈和Travis文件，然后我们将

00:40:13.580 --> 00:40:19.730
CI文件夹中的Jenkins文件，然后您就可以将此函数称为

00:40:19.730 --> 00:40:28.279
您的作品，让我们来看在线播放池中的请求吧，所以

00:40:28.279 --> 00:40:31.759
现在每次取得进展，您都会得到四个不同的结果

00:40:31.759 --> 00:40:38.979
服务，我知道我看不到旧吨哦，是的

00:40:38.979 --> 00:40:45.619
所以在这里，我们只有马戏团欣赏詹金斯和特拉维斯的JavaScript项目

00:40:45.619 --> 00:40:51.140
我的目标很差，我认为这是Travis Circle，现在我是

00:40:51.140 --> 00:40:57.349
添加Jenkins，所以这是一个go Flood子程序，我现在刚刚添加为

00:40:57.349 --> 00:41:06.049
只是使用Travis，谢谢，是的

00:41:06.049 --> 00:41:15.849
工人是亚马逊和私有Mac OS云上的工人，因此AWS

00:41:15.849 --> 00:41:21.079
我们可以在需要的时候随时随地旋转起来，当我们需要更多和需要更多

00:41:21.079 --> 00:41:29.569
工人，然后Mac工人需要更多的工作，所以目前我们

00:41:29.569 --> 00:41:34.459
有一个Linux工作者，我们有两个Windows和两个Michaelis，因为Elena

00:41:34.459 --> 00:41:40.089
工人的速度要比另一个人快得多，所以我们在这一点上只需要一个

00:41:40.089 --> 00:41:46.400
是的，因此，下一步是基本上只在每个

00:41:46.400 --> 00:41:51.979
我们拥有的单个记录，然后在此之后我们可以关闭

00:41:51.979 --> 00:42:00.169
其他NCOA服务，一切将运行得更快，这就是为什么这就是我的

00:42:00.169 --> 00:42:06.880
更新，我们将有任何问题

00:42:07.269 --> 00:42:13.249
所以你会像明天一样完成，因为实际上没有那么多

00:42:13.249 --> 00:42:16.189
大概只需要10分钟或类似的时间，尽管我认为我只是

00:42:16.189 --> 00:42:24.259
还剩300条记录，但实际上我至少为Jas编写了一个工具

00:42:24.259 --> 00:42:29.269
项目以自动同步文件我仍然需要手动检查

00:42:29.269 --> 00:42:34.579
一切都过去了，我还在管道中发现了一些小错误-

00:42:34.579 --> 00:42:43.020
在忙碌的项目中它是粉红色的我不确定这是谁

00:42:43.020 --> 00:42:50.580
是的，这真的很酷，就像我浪费了太多时间等待色彩

00:42:50.700 --> 00:42:54.040
因为你总是喜欢尝试做别的事情，但是那时你也有

00:42:54.040 --> 00:42:57.220
必须向省检查是否已经完成

00:42:57.220 --> 00:43:04.870
是的，那么您必须重试，而我现在忘记了我们打算关闭Travis in

00:43:04.870 --> 00:43:10.620
一旦我们让詹金斯（Jenkins）运行起来，就转圈，所以那些想要它的人就是计划

00:43:10.620 --> 00:43:17.230
而且我们可以让行星也添加更多的架构，例如添加手臂

00:43:17.230 --> 00:43:23.860
更快或更慢的不同工人，我们可以拥有不同的网络

00:43:23.860 --> 00:43:28.300
条件以及我们还有更多的设置可能性，例如

00:43:28.300 --> 00:43:33.490
以在我们想要的确切环境中运行，而不是在某些托管环境中运行

00:43:33.490 --> 00:43:37.890
他们在哪里决定我们应该如何下订单

00:43:43.470 --> 00:43:51.490
一个简短的问题，何时获得本季度计划是GSI计划的一部分，还是本季度计划的一部分

00:43:51.490 --> 00:43:56.260
BFS API始终会针对白皮书进行测试，以便在出现此类情况时

00:43:56.260 --> 00:43:58.950
是抢夺塑料的一种变化，我什至还知道

00:43:58.950 --> 00:44:04.060
我认为GFI教皇的API是正确的，所以曾经有一次

00:44:04.060 --> 00:44:10.390
就像是一台Mac OS机器正在运行，我们teamcity是的，谁在使用我

00:44:10.390 --> 00:44:18.400
我测试了多样性，以使用像大师这样的go ipfs进行测试，但是那去了

00:44:18.400 --> 00:44:22.480
消失了，所以既然消失了，我们已经发现了很多问题，例如

00:44:22.480 --> 00:44:26.350
类型进攻只是改变了几件事，然后我们不得不赶上

00:44:26.350 --> 00:44:34.840
是的，是的，很快回来，是的，请确保我首先专注于编写

00:44:34.840 --> 00:44:40.480
标准的通用Python标准作业的一个故事类似于

00:44:40.480 --> 00:44:45.190
可以在最短的时间内产生最大的影响，但现在我可以专注于

00:44:45.190 --> 00:44:51.070
具有自定义管道以及ipfs本身也需要

00:44:51.070 --> 00:44:55.840
可能需要一个非通用的自定义Python，然后它会更容易

00:44:55.840 --> 00:45:01.060
以另一种方式很好地添加JSI PFS api依赖关系

00:45:01.060 --> 00:45:07.960
co ipfs首先将其构建为对此想法的依赖关系，然后是第一个，因此

00:45:07.960 --> 00:45:11.190
是的，短暂而甜蜜

00:45:16.549 --> 00:45:23.900
好吧，那看起来我们就在议程的尽头，嗯，是的

00:45:23.900 --> 00:45:30.579
至此，2017年11月27日的全体会议结束

