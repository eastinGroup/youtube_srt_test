WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:04.049
您好，我是签证，我将和您谈谈Libby中新的发布/订阅协议

00:00:04.049 --> 00:00:08.429
2pn ipfs好的，所以在我们讨论新协议之前，我们先讨论一下

00:00:08.429 --> 00:00:13.400
旧协议以及它是如何开始的，因此pub / sub的第一个实现是

00:00:13.400 --> 00:00:18.240
ipfs只有p2p是洪水儿子，所以这是您可以做到的最简单的粒子

00:00:18.240 --> 00:00:21.720
写，这取决于我正在做的两件事：发现和泛洪路由

00:00:21.720 --> 00:00:25.560
所以让我解释一下这实际上意味着我处于同伴发现中

00:00:25.560 --> 00:00:30.390
没有对等节点的活动发现，而是您依赖于连接事件

00:00:30.390 --> 00:00:33.510
环境连接事件，并让外部过程驱动您的祈祷

00:00:33.510 --> 00:00:37.559
发现，这使得撰写Orbitz文章变得非常轻松简单

00:00:37.559 --> 00:00:41.700
发现选项，所以第二部分是重要的部分是

00:00:41.700 --> 00:00:45.270
路由，因为pub / sub就是将消息写给所有收件人

00:00:45.270 --> 00:00:48.690
在过去，它曾经被称为多播（multicast）欺骗，但现在我们什至没有

00:00:48.690 --> 00:00:52.800
不做多播，我们做发布/订阅，所以洪水滥用洪水路由，这意味着

00:00:52.800 --> 00:00:55.079
当您收到一条消息以便转发时，只需将其发送到

00:00:55.079 --> 00:00:59.910
每个与之有联系的人以及话题所在的地方，所以让我们得到一些帮助

00:00:59.910 --> 00:01:04.080
具有有趣的属性，因此实现起来显然很简单，而且

00:01:04.080 --> 00:01:07.470
有点健壮，因为无论您做什么，即使您

00:01:07.470 --> 00:01:10.530
可能会使用很多带宽，您知道您将获得的传送

00:01:10.530 --> 00:01:13.430
消息，最重要的部分是它实际上具有最小的延迟

00:01:13.430 --> 00:01:17.880
因为现在它花费了整个图的最小延迟路径

00:01:17.880 --> 00:01:21.060
当然，这是不仅仅需要最小的延迟路径吗

00:01:21.060 --> 00:01:25.259
采用了图中的所有路径，因此这使得它可以高效且最有效地运行

00:01:25.259 --> 00:01:29.220
所有人都面临的问题是地址无限度泛滥，这意味着，如果您

00:01:29.220 --> 00:01:32.700
提供了很多联系，或者我们将向您发送邮件，我们知道我们有一个庞大的

00:01:32.700 --> 00:01:36.150
放大因子，这对于高度连接的节点是一个问题，您知道

00:01:36.150 --> 00:01:40.710
像大型覆盖物一样，那么我们该如何控制洪水和建造

00:01:40.710 --> 00:01:44.909
可以在不中断网络的情况下实际扩展的协议，这是怎么回事

00:01:44.909 --> 00:01:48.600
子作品基本上是一个随机的混乱结构，所以我们从我们的

00:01:48.600 --> 00:01:51.420
底线基本上就是我们拥有的所有连接

00:01:51.420 --> 00:01:55.290
覆盖混乱的构建，但首先选择随机数对

00:01:55.290 --> 00:01:59.040
带有几个参数，然后在其中自我稳定此叠加层

00:01:59.040 --> 00:02:02.490
一些松弛参数如此有效地我们在这里有一个

00:02:02.490 --> 00:02:05.219
参数控制放大系数，因为它是

00:02:05.219 --> 00:02:10.200
协议在实际实现中大约是六个，

00:02:10.200 --> 00:02:13.800
我们用延迟来换取带宽效率，所以就停下来

00:02:13.800 --> 00:02:17.820
在覆盖层结构的顶部，我们实际上通过福音来增加混乱

00:02:17.820 --> 00:02:22.880
忘了把数据流给我，以便发送给未发送消息的对等方

00:02:22.880 --> 00:02:26.640
偶尔发送八卦消息，例如，嘿，这是这里的消息

00:02:26.640 --> 00:02:30.660
如果您愿意，可以向他们要他们，这可以让我们跳

00:02:30.660 --> 00:02:34.440
例如，如果您碰巧有一个覆盖层，尽管您有一个节点，则跳

00:02:34.440 --> 00:02:37.530
您连接到它的位置可能与您相距很远，所以这允许

00:02:37.530 --> 00:02:41.100
您跳跳并直接发送给您发送消息以及更多信息

00:02:41.100 --> 00:02:44.760
重要的是，它使我们能够修复重叠病理，例如，如果我们

00:02:44.760 --> 00:02:48.540
碰巧很有可能，除非您受到攻击才能进入状态

00:02:48.540 --> 00:02:52.350
基本上覆盖层就断开了，然后八卦

00:02:52.350 --> 00:02:56.610
传播使您可以修复此问题并将其变成可能的网络，以便

00:02:56.610 --> 00:03:00.450
比最重要的事情少的是，它们还使我们能够拥有

00:03:00.450 --> 00:03:03.630
可扩展协议，所以八卦安抚您不喜欢基线协议

00:03:03.630 --> 00:03:08.190
您可以构建其他协议来做到这一点，我们可以通过添加更多控件来做到这一点

00:03:08.190 --> 00:03:11.340
消息传播到八卦，因此之一

00:03:11.340 --> 00:03:15.270
扩展已经在八卦顶部的伏特加流行街上开展工作

00:03:15.270 --> 00:03:20.010
所以我们再也不必讨论了，我只是给你一个演示来说明

00:03:20.010 --> 00:03:26.310
这是如何工作的，所以首先我要捕获随机种子，以便

00:03:26.310 --> 00:03:30.030
我要在这里使用他们的网络模拟器

00:03:30.030 --> 00:03:33.720
网络模拟器您开发八卦子程序时的路线，但是您就像

00:03:33.720 --> 00:03:36.360
同样的事情发生在他们走了一点的时候，它与运行的代码相同

00:03:36.360 --> 00:03:42.900
更好一点，所以首先我要运行一个扁平的sup模拟器，我要去

00:03:42.900 --> 00:03:45.239
首先运行模拟，然后看到一堆脂肪

00:03:45.239 --> 00:03:48.450
女士们连接好了，现在模拟将开始，

00:03:48.450 --> 00:03:51.540
基本上所有消息都在传播，然后模拟器等待

00:03:51.540 --> 00:03:54.870
在打电话停下一天之前停下来静静地撒网

00:03:54.870 --> 00:03:59.580
模拟，因此一旦停止，我们就会得到一些总结

00:03:59.580 --> 00:04:03.270
说基本上是一百个节点，我应该

00:04:03.270 --> 00:04:06.600
说我们每个节点有十个连接，基本上我们发送了一个

00:04:06.600 --> 00:04:12.660
方法，我们生成了176个发布事件，因此

00:04:12.660 --> 00:04:18.989
基本上我们的能力亚洲因素是一个不错的第17轮，所以现在让我们开始吧

00:04:18.989 --> 00:04:22.710
八卦表也是一样，我应该说发送一条消息

00:04:22.710 --> 00:04:25.560
绝对是八卦桌所能听到的最坏情况

00:04:25.560 --> 00:04:27.150
因为您要支付建筑成本

00:04:27.150 --> 00:04:31.620
现在，当您只发送一条消息时，他们实际上正在发送八卦，但是

00:04:31.620 --> 00:04:36.360
即使我们在此方块中发送一条消息，模拟也会

00:04:36.360 --> 00:04:40.740
看起来像这样，在随后的模拟中，我将停止显示迹线

00:04:40.740 --> 00:04:43.470
它正在实时运行，我们将只显示一个空白屏幕而不是全部显示

00:04:43.470 --> 00:04:47.340
垃圾在Emacs上降下来，但是这里发生的是我们要说的

00:04:47.340 --> 00:04:51.750
它的放大倍数约为6，但我们要为此付出代价

00:04:51.750 --> 00:04:58.370
八卦还可以，要更具体一点，我要为其制作动画

00:05:01.220 --> 00:05:06.330
那就是平坦的样子，所以您可以看到洪水正在发生，但是

00:05:06.330 --> 00:05:12.479
真的很快就可以了，事实上你可以检查消息

00:05:12.479 --> 00:05:20.190
延迟您可以说将消息发送到大约200毫秒

00:05:20.190 --> 00:05:28.710
这一百个节点现在的八卦sab看起来就像是

00:05:28.710 --> 00:05:32.190
更适度，不会使网络崩溃，我们看到了这些喇叭声

00:05:32.190 --> 00:05:35.099
在我们发送完

00:05:35.099 --> 00:05:37.830
消息，我们有一点点的尾巴，这是八卦不断

00:05:37.830 --> 00:05:41.190
在这里传播消息我应该说不需要那么长时间

00:05:41.190 --> 00:05:45.630
在现实生活中，但您知道模拟器在一百分之一秒内就完成了10毫秒

00:05:45.630 --> 00:05:48.510
毫秒，所以只需要三秒钟，但是

00:05:48.510 --> 00:05:55.680
正确等待30秒，等待整个30秒，让我们开始吧

00:05:55.680 --> 00:06:01.139
更有趣的是，我们增加连接性，假设我们有20个

00:06:01.139 --> 00:06:05.280
连接好吗，在我这样做之前，这实际上应该是我们应该做的。

00:06:05.280 --> 00:06:10.440
实际上需要延迟，所以我们有一些要比较的东西，而不是200

00:06:10.440 --> 00:06:15.690
毫秒中间秒到260毫秒，还不错

00:06:15.690 --> 00:06:23.060
现在我要运行一个模拟，该模拟基本上使用20个connect挂起

00:06:23.210 --> 00:06:29.940
这个键盘真的很萨克斯，这就是我要说的好吧，现在我正在跑步

00:06:29.940 --> 00:06:32.940
安静模式，这将需要几秒钟，因此模拟器将在

00:06:32.940 --> 00:06:36.750
实时，它不是在模拟时间，所以这实际上为我们提供了实时时间，因此

00:06:36.750 --> 00:06:41.160
这就是为什么要花这么长时间运行仿真以及之后

00:06:41.160 --> 00:06:45.300
我要运行，您会像使用八卦选项卡一样进行模拟，这是

00:06:45.300 --> 00:06:50.400
第一个有趣的事实，所以一旦我们将连接数增加到20或

00:06:50.400 --> 00:06:56.880
洪水中的放大系数为10到35，这已经很糟糕了，

00:06:56.880 --> 00:07:00.710
我们将比较同一件事

00:07:01.910 --> 00:07:06.570
使用八卦选项卡，我将看到放大系数保持不变

00:07:06.570 --> 00:07:10.890
六点，我们仍然保留八卦，但即使现在我们发送了

00:07:10.890 --> 00:07:14.310
八卦消息和早期建设见整体消息

00:07:14.310 --> 00:07:19.080
实际发送的数量实际上要比单位数量低得多，

00:07:19.080 --> 00:07:23.340
驱动器，所以我们可以看到这是我们的放大系数，所以我们仍然

00:07:23.340 --> 00:07:28.800
六个六点18，我们知道你像一堆八卦消息，

00:07:28.800 --> 00:07:33.510
现在徘徊以更好地了解网络中实际发生的情况

00:07:33.510 --> 00:07:38.430
二十个联系让我们看一下公寓AB，听得见洪水

00:07:38.430 --> 00:07:46.920
突然会破坏网络，但是在同一时间流言go语的速度非常快

00:07:46.920 --> 00:07:51.750
在另一方面，仅仅剩下的仍然保持着

00:07:51.750 --> 00:07:55.380
简单相同的谦虚配置文件诺亚成长几乎没有任何改变

00:07:55.380 --> 00:08:01.560
的margosa基本上已经发送出去了，因为我们有更多的连接可以

00:08:01.560 --> 00:08:06.630
和斯坦已经如此，这是流言for语，持续了大约三天

00:08:06.630 --> 00:08:11.160
秒，变成动画的三十秒，现在我要做

00:08:11.160 --> 00:08:16.110
同样的事情对于八卦选项卡来说不是最坏的情况，但是

00:08:16.110 --> 00:08:19.169
假设我们在两秒钟的时间内发送了十条消息

00:08:19.169 --> 00:08:24.060
像是每秒五分钱的十条消息现在洪水应用程序将崩溃

00:08:24.060 --> 00:08:27.000
同样，您知道一个可怕的行文件，但您在八卦表中

00:08:27.000 --> 00:08:30.240
摊销八卦的费用，现在突然变得更具战斗力

00:08:30.240 --> 00:08:33.960
与

00:08:33.960 --> 00:08:38.969
whatsapp，所以我们在这里看到，所以我们发布了十条消息，传递了两千条

00:08:38.969 --> 00:08:42.060
这意味着所有一百个音符都得到了，而我们知道您就像放大一样

00:08:42.060 --> 00:08:45.020
35的系数

00:08:50.580 --> 00:08:55.690
另一方面，八卦AB会跑一些，你们可以读

00:08:55.690 --> 00:09:02.160
好的，是的，我正在截屏，所以应该更多

00:09:02.160 --> 00:09:08.410
更容易阅读脚本来获取屏幕截图，现在我们看到了

00:09:08.410 --> 00:09:11.710
我们的修改因素仍然是，您知道在六个周围观察它们的地方

00:09:11.710 --> 00:09:17.080
它涵盖了，如果您从八卦中得到一些因素，大约是两个

00:09:17.080 --> 00:09:20.800
基本上，我们最终会完全忘记因素大约是

00:09:20.800 --> 00:09:24.040
我们发送的利率更高，八卦的摊销甚至会更好，

00:09:24.040 --> 00:09:27.010
因为它大约每秒发送一次，让您知道

00:09:27.010 --> 00:09:31.420
抵制了八轮八卦，所以消息宣布了三轮

00:09:31.420 --> 00:09:35.350
几秒钟就可以了，所以我们的营地的消息发送率更高，甚至没有更好的消息了

00:09:35.350 --> 00:09:41.950
并且您想推动观点前进，让我们看一下平面细分，然后

00:09:41.950 --> 00:09:45.220
享受你喜欢的公寓，因为它的排名红色的单词会很多

00:09:45.220 --> 00:09:47.920
更加明显，因为现在我们让所有混乱都在同一时间传播

00:09:47.920 --> 00:09:56.650
是的，现在有趣的是，如果

00:09:56.650 --> 00:09:59.500
我们来看所有这些消息的传输的总延迟

00:09:59.500 --> 00:10:04.150
液流的延迟优势基本上消失了，因为您知道

00:10:04.150 --> 00:10:08.620
就像我们数了数以千计的延迟来发送所有20条消息，我要计算一下

00:10:08.620 --> 00:10:11.610
真的很快就可以了

00:10:16.470 --> 00:10:23.079
这样一来，您知道闲聊的时间是1.91秒，而闲聊的时间是2.04秒，所以您知道

00:10:23.079 --> 00:10:26.529
确切的优势因洪水而变得微不足道，但放大系数

00:10:26.529 --> 00:10:32.890
八卦sab的优势是巨大的，只是要结束，我要

00:10:32.890 --> 00:10:37.029
适度的八卦sab的模拟，他们只是在发送骚动而没有

00:10:37.029 --> 00:11:03.190
曾经淹没网络好吧，就是这样，是的，这很小

00:11:03.190 --> 00:11:08.350
龙卷风还可以，所以现在它已经可以在IPA中使用了

00:11:08.350 --> 00:11:11.110
你必须知道漂白剂，我的意思是酒吧仍然认为

00:11:11.110 --> 00:11:14.380
实验我的PFS，我们很快将使其变为非实验状态

00:11:14.380 --> 00:11:17.829
具有甲基签名，您可以通过以下选项启用八卦标签

00:11:17.829 --> 00:11:21.579
配置选项，所有这些都建议在实验选项中使用，以便

00:11:21.579 --> 00:11:24.430
重要而重要的部分之一是它完全落后了

00:11:24.430 --> 00:11:27.610
与洪水应用程序兼容，因此您可以混合搭配洪水应用程序并进行一些修改

00:11:27.610 --> 00:11:30.490
节点八卦应用程序看到的洪水子节点的行为将类似于

00:11:30.490 --> 00:11:35.560
如果您要阅读的规范是URL，那么云就可以了

00:11:35.560 --> 00:11:39.519
去实现，那是我在那里使用的模拟器，谢谢

00:11:39.519 --> 00:11:41.699
你们

