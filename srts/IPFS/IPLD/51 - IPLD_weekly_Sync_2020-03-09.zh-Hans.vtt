WEBVTT
Kind: captions
Language: zh-Hans

00:00:08.990 --> 00:00:18.230
好吧，为什么每个人都不能参加本周的IP LD同步会议，会议将于3月9日举行

00:00:18.230 --> 00:00:24.359
像往常一样，到2020年，我们将回顾过去一周的工作成果，

00:00:24.359 --> 00:00:33.780
接下来要做的是什么，然后讨论可能有的未清项目，所以在哪里

00:00:33.780 --> 00:00:42.140
我可能总是从我自己开始

00:00:42.140 --> 00:00:48.800
过去是M，请在参加者名单I上的T上写下您的名字

00:00:48.800 --> 00:00:53.070
基本上也开始把上周的出勤率和

00:00:53.070 --> 00:01:01.199
然后基本上要问所有不参加的人将自己移开，所以是的

00:01:01.199 --> 00:01:09.299
我的工作很粗糙，所以最大的新闻是，最后你

00:01:09.299 --> 00:01:14.760
锈Lea p2p使用的是Braska multi hash的上游版本，

00:01:14.760 --> 00:01:21.330
错了一年半后合并了，这很酷，我也

00:01:21.330 --> 00:01:27.000
所以我从休息的Marty Heche转移到了生锈的动机，生锈的CID以及所有

00:01:27.000 --> 00:01:33.960
其中的所有主要人员都已更新

00:01:33.960 --> 00:01:41.490
分叉，并且我已经合并了所有更改，我想我基本上已经完成了，

00:01:41.490 --> 00:01:47.310
这也意味着rust IPS团队终于能够移动rust IPL

00:01:47.310 --> 00:01:51.990
这些东西到上游版本，不再使用任何功能，因为

00:01:51.990 --> 00:01:56.969
这些都是软项目，基本上像我一样，这是过去完成的

00:01:56.969 --> 00:02:00.570
不知道八个星期左右-基本上可以串流所有内容

00:02:00.570 --> 00:02:06.329
和工作等等，而且这样做也就没有适当的CI，

00:02:06.329 --> 00:02:11.489
那些存储库等等，接下来的大事就是改变

00:02:11.489 --> 00:02:17.640
从麻省理工学院授予麻省理工学院和马萨诸塞州的执照，但这并不算太高

00:02:17.640 --> 00:02:21.330
优先事项，就像在后台一样，但我也在努力解决这些问题

00:02:21.330 --> 00:02:30.180
上星期五，我也有一个想法，关于我们如何支持

00:02:30.180 --> 00:02:35.760
定制多芯电缆，这就是JavaScript中的问题

00:02:35.760 --> 00:02:41.220
增强是一个联合实现，所以早期只是来自魔术的某个地方

00:02:41.220 --> 00:02:46.890
那些正确的电缆，在JavaScript中，它也有点像

00:02:46.890 --> 00:02:50.640
基本上一直都放在所有依赖项中，也许

00:02:50.640 --> 00:02:55.860
始终进行编码，这是如何自定义和生锈的，这也很粗糙

00:02:55.860 --> 00:03:00.540
但是我试图找到一种方法，当然通常是答案特征，但是

00:03:00.540 --> 00:03:05.190
我发现仿制药可能真的​​很好用，我仍然有点像

00:03:05.190 --> 00:03:09.900
弄清楚，但基本上，简短的版本似乎是我们可以定义

00:03:09.900 --> 00:03:15.150
泛型，但您也可以定义自定义类型，因此基本上人们只需要导入一个

00:03:15.150 --> 00:03:19.650
自定义类型甚至都看不到它是泛型，只使用它就可以了

00:03:19.650 --> 00:03:24.120
如果他们使用绘制的默认补品表和其他所有东西都很好

00:03:24.120 --> 00:03:27.270
因为这是您通常想要做的，但是如果有人真的

00:03:27.270 --> 00:03:31.620
想要拥有自己的自定义查询表，它只是直接使用泛型类型

00:03:31.620 --> 00:03:35.310
将代码中的实现和所有相关内容放入表格中

00:03:35.310 --> 00:03:39.690
就像您想要大量的工作，但如果您愿意，可以期待它

00:03:39.690 --> 00:03:43.140
您自己的自定义编码表，您通常会知道自己在做什么，并且您

00:03:43.140 --> 00:03:47.100
努力将其绘制出来，因此希望如此，这就是我需要的

00:03:47.100 --> 00:03:51.840
检查是因为一旦我们从Russ编译到Webassembly，您就有成本了

00:03:51.840 --> 00:03:56.280
在船上，它们就像一个巨大的面板尺寸，或者您也可以使用不同的面板

00:03:56.280 --> 00:04:00.690
散列库，因为其中一些使用我不知道的汇编程序代码或

00:04:00.690 --> 00:04:05.040
某物，所以您想拥有自定义的东西，但是是的，您不想

00:04:05.040 --> 00:04:06.840
画画你知道也可以看到酱汁中的面孔

00:04:06.840 --> 00:04:11.670
那是目标，看起来宽泛可能会起作用，是的，我仍然

00:04:11.670 --> 00:04:19.049
看着这个，但看起来很有希望，这很酷，所以这是

00:04:19.049 --> 00:04:24.680
我所有的下一个

00:04:27.740 --> 00:04:34.290
没事，生病的孩子和其他东西之间的一周过得很慢，但我确实得到了

00:04:34.290 --> 00:04:38.460
开始了一个令人敬畏的编译器实现，在此方面取得了相当不错的进展

00:04:38.460 --> 00:04:44.010
最后要解决PR中的一些评论以及我的目标

00:04:44.010 --> 00:04:48.990
一周是要完成J的编译器，事实证明生成部分真的很容易

00:04:48.990 --> 00:04:52.979
只需生成一个JavaScript对象，然后您就可以将其传递给Block API

00:04:52.979 --> 00:05:00.539
而且由于只有一个块，因此非常容易，所以我只需要

00:05:00.539 --> 00:05:04.400
通过完整的解析器并构建AST，并确保所有

00:05:04.400 --> 00:05:07.889
不太难，因为我牢记我们将获得多个

00:05:07.889 --> 00:05:10.800
的实现，因此，如果需要更改规格以使其更容易

00:05:10.800 --> 00:05:17.130
现在进行编译将是一个改变它的好时机，就是这样，我认为我

00:05:17.130 --> 00:05:22.800
解决了PR中大多数人的评论，因此如果有人想跟进

00:05:22.800 --> 00:05:28.380
在我认为其中大多数人身上得到的结果几乎就是我在做的所有事情

00:05:28.380 --> 00:05:41.460
现在，所以本周我无话可说，因为我试图获得

00:05:41.460 --> 00:05:48.570
进入Doc的行列已经有一段时间了，所以我打开了两个问题

00:05:48.570 --> 00:05:52.950
对于这里的每个人来说，考虑我们的利益可能都很有趣

00:05:52.950 --> 00:05:58.470
现在，我认为分层方案已记录为

00:05:58.470 --> 00:06:03.780
块层，数据模型层，然后是架构层，我正在构建

00:06:03.780 --> 00:06:09.419
我们可能想从编解码器中分离出块，然后用

00:06:09.419 --> 00:06:12.050
其余的低点

00:06:14.570 --> 00:06:20.270
或分散的地方，但我想例如尝试使用清晰的

00:06:20.270 --> 00:06:24.860
数据模型和新模式层之间的线性层排序是有意义的，但

00:06:24.860 --> 00:06:28.820
像是高级数据布局并不能真正适应该层蛋糕

00:06:28.820 --> 00:06:35.260
现在清除它的内含物，直到有更多东西为止

00:06:35.260 --> 00:06:39.680
cogent对我们来说出来，所有分离的块和编解码器可能是一个

00:06:39.680 --> 00:06:43.030
为此开始，所以有一个问题

00:06:45.100 --> 00:06:49.580
我也一直在尝试草拟有关所有事情的文章

00:06:49.580 --> 00:06:54.920
关于字符串的知识知道了，他们最终聊了一段时间，然后打电话

00:06:54.920 --> 00:06:59.780
上周，有很多东西，我们都在经历

00:06:59.780 --> 00:07:05.300
到目前为止，我们认为最好的直觉是完全合理的

00:07:05.300 --> 00:07:10.640
是时候开始将其固定下来了，事实证明这是一种

00:07:10.640 --> 00:07:14.810
大团队努力只是因为有如此多的假设

00:07:14.810 --> 00:07:19.070
令人愉悦并且很容易识别并有时使它们变得相当

00:07:19.070 --> 00:07:24.200
难对了，所以我试图细分一系列类似的地方，

00:07:24.200 --> 00:07:29.570
字符串问题显示出来，就像这样的应用问题，是这样的

00:07:29.570 --> 00:07:33.140
有关模型正确性的问题还是我们该如何解决的问题

00:07:33.140 --> 00:07:37.490
保持沙质的爱的标准就像没有，因为有两个不同的地方

00:07:37.490 --> 00:07:40.460
发生的事情我想弄清楚如果有人有的话它们都是什么

00:07:40.460 --> 00:07:44.830
关于这个的想法，让我们只给我发送他们自己的曲目，能量碟会很有趣

00:07:44.830 --> 00:07:48.410
否则，我希望在

00:07:48.410 --> 00:07:51.800
下周，但首先我要尝试直接跳到答案，

00:07:51.800 --> 00:07:56.570
地理规范，如果您使用的话，这就是事情的运作方式，而我却没有

00:07:56.570 --> 00:07:59.660
知道这是否会在初稿上发生，我认为它看起来要多得多

00:07:59.660 --> 00:08:02.570
可能我会在勘探报告目录中发布一些内容，

00:08:02.570 --> 00:08:10.400
那我们可能要花几个月的时间，我认为我们

00:08:10.400 --> 00:08:15.320
乡亲，我已经看过了，但是克里斯（Chris）也是一个男人，所以我认为

00:08:15.320 --> 00:08:19.850
尽管在Mitas上，yeah发表了一个有关我们正在寻找任务的问题

00:08:19.850 --> 00:08:23.870
声明和愿景声明，并获取一些介绍性文档

00:08:23.870 --> 00:08:27.330
今天的事情，那里正在进行一些非常有趣的讨论

00:08:27.330 --> 00:08:31.379
所以其他人都想加入，我认为它也应该加入

00:08:31.379 --> 00:08:39.740
在笔记中寻找发起被动电话交谈的方法，这在美国大多数地区都是如此

00:08:40.519 --> 00:08:48.209
谢谢，我名单上的下一个是你的名字，可能是我的收入

00:08:48.209 --> 00:08:54.839
对不起，我忘了我会修复该问题，所以大多数情况下仍然只是一个大数据

00:08:54.839 --> 00:09:01.079
我现在要处理的事情很多都是在几个小时后才发生的

00:09:01.079 --> 00:09:07.079
处理的调试非常有趣，看看您是否能修复工作，但这是

00:09:07.079 --> 00:09:11.850
伴随着dag DB的这种侧面开襟衫

00:09:11.850 --> 00:09:15.750
我正在做以使自己经常保持理智，现在复制，所以看起来像一个大

00:09:15.750 --> 00:09:21.420
里程碑，在某个时候它实际上是相当不错的，也许您稍后会喜欢

00:09:21.420 --> 00:09:25.260
一周，我应该为团队准备一些有关此话题的演讲，

00:09:25.260 --> 00:09:30.660
深入研究它，我学到了很多关于您需要的方式

00:09:30.660 --> 00:09:35.760
要使用很多原语，我们将建立数据库，这有点像

00:09:35.760 --> 00:09:41.190
加强，例如一些块API的重要性，还有很多

00:09:41.190 --> 00:09:47.010
就像我们对同步将多么容易的想法有点天真

00:09:47.010 --> 00:09:51.829
实际上，存在一些非常困难的案例和决策要制定

00:09:51.829 --> 00:10:00.149
那不是那么简单，是的，这会很有趣，对我来说就是这样

00:10:00.149 --> 00:10:11.070
谢谢，下一个是罗德，所以我的不是

00:10:11.070 --> 00:10:17.370
在过去的一周里沉重但很多小东西，所以没有那么多

00:10:17.370 --> 00:10:27.329
既是健康问题，又是成功之道

00:10:27.329 --> 00:10:31.890
当然不错，但是太密集了，太快了，Peter可以

00:10:31.890 --> 00:10:36.500
可能证明并解开了这个过程

00:10:36.500 --> 00:10:41.480
赶上我需要审查的旧PRS，并进行了讨论

00:10:41.480 --> 00:10:46.580
有点延迟，但是我经历过的事情的亮点

00:10:46.580 --> 00:10:53.320
是Tim的选择器规范终于有机会参与其中，

00:10:53.320 --> 00:10:58.640
蒂姆有趣的工作很高兴见到你特别

00:10:58.640 --> 00:11:05.210
前往汽车和Hammerstein的javascript代码确实非常好

00:11:05.210 --> 00:11:13.520
努力将选择器带入，以便您可以制作汽车文件

00:11:13.520 --> 00:11:18.590
从它开始，所以当前使用go car使其成为car文件的唯一方法是从

00:11:18.590 --> 00:11:25.490
数据存储和一条路线，它将进行dag步行来填满它，但是家是

00:11:25.490 --> 00:11:32.200
引入了另一种方法来做到这一点，即您为它提供了一个数据存储区，并且

00:11:32.200 --> 00:11:40.550
一些路由，因此有多个路由，以及使用适当IPL d-prime的选择器

00:11:40.550 --> 00:11:47.810
选择器，它将使用能力质数遍历选择器并放置

00:11:47.810 --> 00:11:53.360
现在只有那些块插入到汽车文件中，它仍然是相同样式的汽车

00:11:53.360 --> 00:11:59.470
文件，但这是进入此车v2的非常好的中间步骤

00:11:59.470 --> 00:12:05.150
可能是我们想要的想法之一是在其中存储选择器的位置

00:12:05.150 --> 00:12:10.790
汽车与选择器所经过的路线很好地相符，所以是的

00:12:10.790 --> 00:12:14.480
所以这不是一overnight而就的，但已经准备好要合并了

00:12:14.480 --> 00:12:22.130
然后出去，这真是太好了，我一直在寻找埃里克（Eric）

00:12:22.130 --> 00:12:27.560
在具有节点汇编程序注释拨号的ble prim上拉出请求49

00:12:27.560 --> 00:12:33.770
一件很酷的作品这些是埃里克（Eric）

00:12:33.770 --> 00:12:40.280
过去一直在这样做，但是已经过去了好几个月了，所以只想尝试

00:12:40.280 --> 00:12:44.660
在那里有帮助，但也要努力理解它，以便您可以

00:12:44.660 --> 00:12:47.360
实际使用它，但这就是全部

00:12:47.360 --> 00:12:53.959
对我来说，除了那个主要的东西，别无他法，别的什么都可以做

00:12:53.959 --> 00:13:02.029
想要提供更新或有疑问，是的，如果我不这样做，我会提供快速更新

00:13:02.029 --> 00:13:11.600
看到指向heck pad的链接可能会被发布或以其他方式发布，所以我有

00:13:11.600 --> 00:13:24.160
一直在努力增加汽车进出口go ipfs，因为额外的

00:13:24.160 --> 00:13:29.690
我们在使用GC时可以插入的问题

00:13:29.690 --> 00:13:33.589
Portus的周围环境以及诸如此类的事情，需要进行很多思考

00:13:33.589 --> 00:13:42.519
完成有关如何实际上将所有这些放在一起的工作，我很确定

00:13:42.519 --> 00:13:51.100
到明天我们会为此提供资金，我会给你们一些人贴上标签，

00:13:51.100 --> 00:14:00.399
如果有时间的话，爱子也可以看一看

00:14:00.399 --> 00:14:07.070
在杜兰特的方式之后，我想谈一点为什么我们实际上

00:14:07.070 --> 00:14:14.269
将标题放在最前面，因为在编写汽车文件时，两者都会进入

00:14:14.269 --> 00:14:20.630
当仔细阅读的方式和方式也会妨碍您的学习，

00:14:20.630 --> 00:14:28.610
我要我们介绍酷M的东西在我们发布之前还有其他更新吗

00:14:28.610 --> 00:14:38.420
回答彼得的问题不好，我是说我们可以让学生进行更新，如果

00:14:38.420 --> 00:14:42.230
你想晚一点，所以是的，然后要像

00:14:42.230 --> 00:14:48.620
想要回答这个问题的汽车档案的结构门我需要

00:14:48.620 --> 00:14:53.089
澄清问题，或者现在我问你应该走在最前面

00:14:53.089 --> 00:14:58.959
比当时正确正确正确

00:14:58.960 --> 00:15:04.709
[音乐]因此，流式传输是一种用例

00:15:04.709 --> 00:15:13.410
有用的重量实际上阻止了流式传输，因为我只能验证

00:15:13.410 --> 00:15:20.519
我以yes重估流式传输所有内容后的标题，但流式传输为

00:15:20.519 --> 00:15:30.060
阅读它可以为您提供可能需要的信息，因此正确但所有

00:15:30.060 --> 00:15:36.389
标头中有这是我的这里，这是我实际上没有的根

00:15:36.389 --> 00:15:40.709
索引或导入时基本上所有的东西

00:15:40.709 --> 00:15:45.720
基本上是我们需要的，因为它与基本

00:15:45.720 --> 00:15:52.980
我们的补丁程序意味着我们需要解析多个文件的根目录

00:15:52.980 --> 00:15:58.110
他们在记忆中得到了其他所有东西，然后回去说什么还可以

00:15:58.110 --> 00:16:02.670
我进去了，商店里已经有的那些根实际上是

00:16:02.670 --> 00:16:06.600
那是完整的，或者我实际上不能固定它们吗，我需要出错和填塞东西

00:16:06.600 --> 00:16:09.720
这样，即使在阅读时，似乎

00:16:09.720 --> 00:16:15.390
至少对于导入用例Michael倒退，您遇到了类似的麻烦

00:16:15.390 --> 00:16:19.290
麻烦的是，除了必须进行很多预先计算外，还需要进行一些预先计算

00:16:19.290 --> 00:16:23.940
标题会为您的用例带来任何变化，因此尾部不会

00:16:23.940 --> 00:16:29.130
这对我不起作用，因为嗯，所以假设我在任何地方都需要标头

00:16:29.130 --> 00:16:32.880
时间点的尾巴是开放的，因为它实际上很难阅读

00:16:32.880 --> 00:16:38.730
向后退出s3存储桶，所以它是可变长度的，因此是固定的

00:16:38.730 --> 00:16:41.519
更好的是，我可以阅读它，因为我看不到文件大小，然后

00:16:41.519 --> 00:16:45.449
有点倒退，但由于我不喜欢，所以没有办法，所以这很友善

00:16:45.449 --> 00:16:49.589
在我看来，就像一个非入门级的人一样，如果标头中包含任何信息，

00:16:49.589 --> 00:16:57.060
您需要提前，然后在很多情况下我都无法正常工作

00:16:57.060 --> 00:17:00.930
了解这种流媒体案例，因此您希望能够流媒体中的权利

00:17:00.930 --> 00:17:08.370
是的，今天正确了，是的，彼得·彼得，所以你说你想写

00:17:08.370 --> 00:17:12.140
数据并以正确的方式流进来，或者您正在做选择器，而您

00:17:12.140 --> 00:17:18.470
而不是问选择器，所以每当我想到事情时，这都是显而易见的

00:17:18.470 --> 00:17:23.600
您很难知道必须提前拥有标头，以便流式传输

00:17:23.600 --> 00:17:29.750
我们的基本出口有点麻烦，但我实际上想知道

00:17:29.750 --> 00:17:35.270
从导入，就像我有一个ganar文件，并且正在导入它，我仍然需要查看

00:17:35.270 --> 00:17:41.120
在标题的最后，因为我需要去把车里的所有东西都放进去

00:17:41.120 --> 00:17:45.470
我进入我的情节商店，只有这样我才能说实际上可以将这些东西固定在

00:17:45.470 --> 00:17:51.380
路线，或者我没有消息灵通的细心，所以一个

00:17:51.380 --> 00:17:56.390
关于为什么自动导入必须固定为什么不这样的一点点困惑

00:17:56.390 --> 00:18:00.770
只是一个单独的操作，因为您可能只想导入块并

00:18:00.770 --> 00:18:07.430
不是在他们那里，是的，有一个非常非常简单的答案，所以有

00:18:07.430 --> 00:18:13.460
如果您不这样做，则可以选择不固定或不固定，默认情况下，Dawson处于固定状态

00:18:13.460 --> 00:18:18.950
的东西，因为如果你不这样做，而你的猫很大，进口将

00:18:18.950 --> 00:18:21.470
精确运行时实际上是GC

00:18:21.470 --> 00:18:24.980
好吧，它不会那样做，因为我们还必须锁定所有东西，但是非常

00:18:24.980 --> 00:18:29.000
重要，但是一旦导入完成，它将帮助您GC进行所有操作

00:18:29.000 --> 00:18:33.880
这就是为什么如果我们有多辆多排挡汽车，我们实际上必须

00:18:33.880 --> 00:18:38.840
导入所有内容，然后释放锁，这就是为什么它是一个

00:18:38.840 --> 00:18:45.590
涉及更多，因为如果您拥有第一辆车，那么它就关乎一半

00:18:45.590 --> 00:18:50.870
2号汽车，路线为下午2点，甲板的其余部分

00:18:50.870 --> 00:18:53.420
结合第一辆车实际上给了你一个完整的甲板

00:18:53.420 --> 00:18:58.280
只有这样，您才能真正加入其中，并享受TFS，我们可以使用

00:18:58.280 --> 00:19:05.180
进行修补的情况下，您所获得的只是新路线的更新，而您

00:19:05.180 --> 00:19:10.670
准备根据这辆车即将来的事情弄清楚

00:19:10.670 --> 00:19:16.760
我的数据存储区中已经有餐厅证书实际上可以固定此行，我

00:19:16.760 --> 00:19:22.580
行了，所以当您确定汽车文件时

00:19:22.580 --> 00:19:26.090
导入它应该首先是根，然后是所有块

00:19:26.090 --> 00:19:33.049
订单，所以我不知道为什么你必须回去阅读标题

00:19:33.049 --> 00:19:37.730
结束，因为您可以保留路线的CID，然后读取为

00:19:37.730 --> 00:19:42.289
你在读，是的，是的，当然，这就是我的意思

00:19:42.289 --> 00:19:46.720
就您所知的简单编程方法而言，这不是问题，但是

00:19:46.720 --> 00:19:51.409
从逻辑上来说，我导入时仍然需要头文件

00:19:51.409 --> 00:19:55.250
它什么也没有给我，我基本上只是读了标头，这是我唯一要做的

00:19:55.250 --> 00:19:59.980
实际在汽车文件中启动之前是这个版本，还是仅此一个版本

00:19:59.980 --> 00:20:05.929
搜索进一步像确定性确定性汽车文件一样

00:20:05.929 --> 00:20:12.200
不只是整个图，而是特定顺序的整个图，因为

00:20:12.200 --> 00:20:15.679
您需要能够进行验证，以便您实际上应该能够

00:20:15.679 --> 00:20:19.340
就像您在客户端执行graphs Inc一样

00:20:19.340 --> 00:20:23.510
开始导入时，您希望该标头说出根注释是什么，然后获取

00:20:23.510 --> 00:20:27.260
根节点next验证这是您获得的下一个内容，然后进行其余所有操作

00:20:27.260 --> 00:20:32.090
块应该按顺序排列，因此如果您确实需要

00:20:32.090 --> 00:20:35.210
在将其放入您所要验证的内容时进行确定性验证

00:20:35.210 --> 00:20:38.720
如果您只能固定整个图并且想要

00:20:38.720 --> 00:20:41.929
确保您没有导入无法随身携带的物品

00:20:41.929 --> 00:20:49.789
应该应该进行验证流式传输，我可以看到我猜的数据

00:20:49.789 --> 00:20:54.169
推论是，基本上我认为我得到的汽车文件是

00:20:54.169 --> 00:20:59.529
你知道不是莲花制造的，或者是关于行为的，只是他们很小心

00:20:59.529 --> 00:21:06.169
和您一起知道他们只是得到了支持，所以数据从这里开始是的，我的意思是我可以

00:21:06.169 --> 00:21:10.250
约会他们，但我不能真正嘲笑他们，除非我基本上有严格的模式或

00:21:10.250 --> 00:21:14.870
之类的东西，因为是的，您可能想要运行它，这就是他们的

00:21:14.870 --> 00:21:20.059
说实话的模式，尤其是因为你没有结局

00:21:20.059 --> 00:21:23.870
能够固定选择器或部分图形的基础架构

00:21:23.870 --> 00:21:28.010
拥有您要导入的全部内容，如果是这种情况，那么您

00:21:28.010 --> 00:21:32.330
就像大多数汽车文件一样，对此可能真的很严格

00:21:32.330 --> 00:21:36.289
正在被创建或确定性，因此所有文件硬币创建的

00:21:36.289 --> 00:21:39.840
完全是确定性的所有你要去的

00:21:39.840 --> 00:21:42.750
与您的出口人员一起创建将是确定性的，您可以

00:21:42.750 --> 00:21:46.049
可能会做出这样的假设，并拒绝那些唯一的类似人

00:21:46.049 --> 00:21:50.429
创建您感到不舒服或喜欢我的汽车文件，是的，我

00:21:50.429 --> 00:21:57.179
意思是像我在做，但这是出于非常特定的需求，

00:21:57.179 --> 00:22:01.799
你可以说我们现在不支持这些，尽管我确实有

00:22:01.799 --> 00:22:04.620
完整的图形我没有完整的图形，只是顺序完全混乱了

00:22:04.620 --> 00:22:09.390
起来，因为我必须同时写入这些块，它们是完全一样的

00:22:09.390 --> 00:22:14.159
我正在使用的这个工具中的东西，这是我们

00:22:14.159 --> 00:22:21.480
希望开放给外部人员以开始通过IP地址进行实验

00:22:21.480 --> 00:22:28.470
因为在此问题出现之前，我们基本上是在写

00:22:28.470 --> 00:22:35.390
我在胰岛素中指的是我们自己谨慎的事情，所以没有任何意义

00:22:35.390 --> 00:22:45.450
基本上从BFS的角度来看，这与falcone的互操作性没有那么大

00:22:45.450 --> 00:22:52.860
东西，但它更多是put api的更好版本，基本上没有

00:22:52.860 --> 00:23:00.330
给你一个区块的罚款，其中一个区块实际上还可以

00:23:00.330 --> 00:23:07.500
即使在同一台机器上，例如当您实际想要击打一台机器时

00:23:07.500 --> 00:23:14.130
创建未确定的sidecar文件作为更快的导出机制，可以导入

00:23:14.130 --> 00:23:26.399
好的，在这种情况下，请看看这款拉链车的类型

00:23:26.399 --> 00:23:38.880
标题，您可以使用此名称，是的，我的意思是我仍然像我，意思是它没有伤害到您

00:23:38.880 --> 00:23:43.200
将标头放在前面我确实知道为什么您需要在其中保留很多东西

00:23:43.200 --> 00:23:49.130
记忆，我想您也许可以使CD保持成员身份而摆脱困境

00:23:49.130 --> 00:23:56.500
是的，你是的，我什至没有说过，哦，你知道这个方块，或者我还有更多

00:23:56.500 --> 00:24:01.960
我越想越喜欢，就越觉得没有

00:24:01.960 --> 00:24:05.140
除了您现在所说的用例之外，基本上

00:24:05.140 --> 00:24:09.400
确定性曲线球，然后您可以验证它是否可以用于其他用途

00:24:09.400 --> 00:24:16.360
案例或一堆带有标题类型的电话的博客，我想看看

00:24:16.360 --> 00:24:22.360
最后一个标题以及我的一个新闻案例可能正在检查帐户文件

00:24:22.360 --> 00:24:26.320
并说它包含什么内容，其中包含带有这些选择器的图形

00:24:26.320 --> 00:24:30.820
从这个根开始的这些根，如果你没有办法去

00:24:30.820 --> 00:24:35.200
结束，然后像压缩文件一样再次回来，您可以执行以下操作

00:24:35.200 --> 00:24:38.380
遍历整个您知道的过程，直到找到最后一个块

00:24:38.380 --> 00:24:43.059
获取这些信息，这样您就不会像去汽车档案中去检查一样

00:24:43.059 --> 00:24:47.799
如果报头丢失，除非我们也引入其他机制

00:24:47.799 --> 00:24:51.190
我会说当前的规格基本上是锁，就像我们无法触摸一样

00:24:51.190 --> 00:24:54.370
在谈论变化时，我们真的很喜欢

00:24:54.370 --> 00:24:57.760
关于下一个版本，然后是我们真正想要的下一个版本

00:24:57.760 --> 00:25:01.570
就像没有头块一样，现在有头

00:25:01.570 --> 00:25:05.320
块就像带有CID的实际大超级块，因此您可以很快

00:25:05.320 --> 00:25:10.419
阅读这个想法，并让标题包含所有选择器，以便包含

00:25:10.419 --> 00:25:14.470
路线将所有选择器都终止于图表，这将非常有用

00:25:14.470 --> 00:25:19.090
因为那样的话，您通常可以真正地查看汽车文件的前部

00:25:19.090 --> 00:25:25.179
迅速解析出CID并去，就像我以前看过这个汽车档案一样

00:25:25.179 --> 00:25:29.440
这样的事情，所以现在就像汽车档案一样，就像我们过去一样

00:25:29.440 --> 00:25:33.549
像路线内容标头这样的调用实际上是汽车文件的cid

00:25:33.549 --> 00:25:39.910
对，它意味着更多，在这些用例中，

00:25:39.910 --> 00:25:43.720
绝对希望它能够提前解决，只是在这种情况下

00:25:43.720 --> 00:25:47.950
标头是现在或现在不提供给您，就像是，它不是超级

00:25:47.950 --> 00:25:50.350
在一开始使用它很有用，如果您想使用它，可以在以下位置使用它

00:25:50.350 --> 00:25:53.590
最后但将来我们可以做出改变时，我认为

00:25:53.590 --> 00:25:58.440
有用例，我们有更多信息

00:25:58.799 --> 00:26:06.460
是的，现在基本上，TLDR是v2的下一个标头实际上是

00:26:06.460 --> 00:26:10.260
因此比我们现在拥有的更多

00:26:10.260 --> 00:26:18.400
好的，是的，我也有很多关于Cavi的部分音符

00:26:18.400 --> 00:26:23.380
我打算提出的目标可能是针对PR的粗略公关

00:26:23.380 --> 00:26:29.530
汽车规格只是开始在Calvi上进行讨论-我正试图做到这一点

00:26:29.530 --> 00:26:36.850
这个星期，但我一定会把你拉上彼得，以确保你能够

00:26:36.850 --> 00:26:39.700
宣扬所有问题，因为我知道我也有整个问题

00:26:39.700 --> 00:26:45.309
格式，我从一开始就拥有，但是就像我不想我不想

00:26:45.309 --> 00:26:49.270
首先假装自己是头球的防守者，因为那是我的野兽之一

00:26:49.270 --> 00:26:54.340
当我第一次回到卡片上时，所以我知道还有其他

00:26:54.340 --> 00:26:57.520
参与匿名通话的人也有很强的见解

00:26:57.520 --> 00:27:04.150
关于这个东西，让我们在github上做这件事，我的意思是如果我们想做你的

00:27:04.150 --> 00:27:07.929
整个过程就像在阻止下一件事一样，因此您可以进行真正的快速查找

00:27:07.929 --> 00:27:13.450
会走到尽头，我想我想把它放到最后，我不知道

00:27:13.450 --> 00:27:23.770
那应该是什么样子，但我们应该并且以防万一我们喜欢

00:27:23.770 --> 00:27:27.820
新标题将是Seaborn的正确选择，您可能也喜欢

00:27:27.820 --> 00:27:31.360
标题末尾的信息，我的意思是这将是标题，但就像

00:27:31.360 --> 00:27:37.960
标头会说很好，有索引，是的，它还需要说

00:27:37.960 --> 00:27:41.590
如果它是确定性的，而不是因为它是认真的，那么它应该总是喜欢

00:27:41.590 --> 00:27:45.820
整个汽车文件应为白色，与此匹配

00:27:45.820 --> 00:27:51.070
CID，但也好像如果您不说这是确定性的，

00:27:51.070 --> 00:27:56.020
它可能是所有相同的路线和逆转，实际上就像

00:27:56.020 --> 00:28:07.720
整个我想再提一提关于迈克尔提出的内容，这是可变的

00:28:07.720 --> 00:28:14.710
长度，很难做到这一点，你知道后坐

00:28:14.710 --> 00:28:18.410
这种东西通常是什么[音乐]

00:28:18.410 --> 00:28:25.910
他们基本上定义了一些视频格式，例如最后四个字节是

00:28:25.910 --> 00:28:32.030
变坏的长度，并在64中定义了确切走多远的距离

00:28:32.030 --> 00:28:36.890
基本上有三个六，你一次寻找一次，基本上一次

00:28:36.890 --> 00:28:46.820
事情是你读的是四个字节，你做了另一个偏移量，它已经是

00:28:46.820 --> 00:28:50.150
重要的是，如果这对您来说是重要的新闻案例，那么Zipcar就是一个

00:28:50.150 --> 00:28:59.930
JavaScript中的内容并执行该操作，然后压缩选项是

00:28:59.930 --> 00:29:04.850
也是可选的，所以您不必放气，所以我不知道您

00:29:04.850 --> 00:29:09.560
可以像压缩文件中不需要的那样进行压缩

00:29:09.560 --> 00:29:16.130
我认为实际上到处都是没有或多或少没有

00:29:16.130 --> 00:29:23.140
没有商店版本的压缩算法是一种代码

00:29:23.140 --> 00:29:34.040
无论如何，压缩为零，是的，让我们将其带到github

00:29:34.040 --> 00:29:39.050
因为有很多好的想法，最好将所有

00:29:39.050 --> 00:29:43.310
在下一个版本中，许多困扰我们的事情都会困扰我们，并做到这一点

00:29:43.310 --> 00:29:49.100
尽快避免我们需要照顾太多的汽车v1

00:29:49.100 --> 00:29:53.780
大概那么多，虽然迈克尔你可能是

00:29:53.780 --> 00:30:06.950
将会成为永远存储的大文件，希望是的，是的，我想是的

00:30:06.950 --> 00:30:14.240
我们通过了会议，所以我也认为我们别无其他讨论和

00:30:14.240 --> 00:30:17.690
我忘了说这周我的上班时间有限，因为我去了

00:30:17.690 --> 00:30:27.310
会议直到本周结束，但是，是的，很酷，所以下周你们都

00:30:27.310 --> 00:30:33.400
在同一时间同一地点再见

