WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.540 --> 00:00:39.329
生命周期中的错误按钮欢迎大家，这是IP LD每周的电话

00:00:39.329 --> 00:00:47.280
它是2019年9月9日，与我们浏览ich的每周相同

00:00:47.280 --> 00:00:53.010
讨论过去一周我们所做的事情，然后随便问问

00:00:53.010 --> 00:01:07.670
想讨论一下，所以我们有志愿者做记笔记吗？

00:01:07.670 --> 00:01:15.960
是的，所以我一如既往地从我自己开始，所以我一直是过去两个

00:01:15.960 --> 00:01:20.220
我参加过的磷光体G会议，这是免费开放的会议

00:01:20.220 --> 00:01:24.990
地理空间会议的来源，这是每年一次的全球性会议，

00:01:24.990 --> 00:01:33.390
 1,000名与会者，我进行了两次演讲，一次是关于Jillian ipfs，另一次是关于牛排

00:01:33.390 --> 00:01:36.270
在ILD上，如果您想了解更多，

00:01:36.270 --> 00:01:42.420
查阅记录中的谈话，并查看注释，链接不是

00:01:42.420 --> 00:01:50.220
我曾致力于将Jas ipfs存储库更新为最新版本

00:01:50.220 --> 00:01:56.729
Shay s ipfs比听起来要难，我可能正在工作，所以我

00:01:56.729 --> 00:02:02.790
前往ipfs追踪小组，因为那是一个巨大的时间，所以

00:02:02.790 --> 00:02:06.540
我想帮助他们，但这完全没有意义，我已经花了

00:02:06.540 --> 00:02:11.430
就像，但我们可以毁掉它，这只是问题的故事

00:02:11.430 --> 00:02:23.040
所以他们要求他们接管一切

00:02:23.040 --> 00:02:35.820
接下来是埃里克（Eric），所以我们在您上周没有非常成功地开会时

00:02:35.820 --> 00:02:41.970
出去了，所以我有一个组合的更新设定杆，我做了很多工作

00:02:41.970 --> 00:02:47.520
有关模式语法的内容，并进行清理，并确保每个人都在

00:02:47.520 --> 00:02:55.680
我们的实现中的同一页面是同步的，我们做了很多讨论

00:02:55.680 --> 00:02:59.940
配置高级数据布局的详细信息，我们也尝试过一件事

00:02:59.940 --> 00:03:07.320
要更多地形式化的想法是，我们可能需要某种形式的任何概念

00:03:07.320 --> 00:03:12.390
在模式系统中，曾经有一点难以捉摸

00:03:12.390 --> 00:03:16.170
占位符的引用散落在周围

00:03:16.170 --> 00:03:21.960
我们竭尽全力起草了其中描述的任何内容

00:03:21.960 --> 00:03:29.580
当前的系统，我认为我们发现它不合适，所以这有点

00:03:29.580 --> 00:03:33.150
不满意，我不知道我们是否想出我们想要的东西的想法

00:03:33.150 --> 00:03:41.160
这样做可能会使回燃器回流一会儿，就像没有深度跑步一样

00:03:41.160 --> 00:03:48.600
里面有更多的代码，还有一些不错的自由因素，例如路径段

00:03:48.600 --> 00:03:54.690
现在是一个稀有概念，它可以是字符串或整数，并且

00:03:54.690 --> 00:04:00.300
实施可以做到这一点，并且可以做到尽可能有效的事情。

00:04:00.300 --> 00:04:04.110
去，其中一些礁石演员可能会提高性能

00:04:04.110 --> 00:04:06.600
给选择者，因为它以前在做什么

00:04:06.600 --> 00:04:14.100
经过大量基准测试，我发现其中有一些零件

00:04:14.100 --> 00:04:18.390
选择器系统的数量，这会导致大量的小物件

00:04:18.390 --> 00:04:22.850
分配，使它们像包装对象和新路径

00:04:22.850 --> 00:04:30.950
让我们做到这一点，这是一个不错的改进，koujun开始变得有些不高兴了

00:04:30.950 --> 00:04:36.170
再说一遍关于健康的事情，一切都是迟来的，因为

00:04:36.170 --> 00:04:42.160
有时很难猜测正确的地方不会重复自己

00:04:42.160 --> 00:04:48.440
但是有些模式开始出现，上周我一直在寻找

00:04:48.440 --> 00:04:55.880
在系统中，注释生成器能够返回更多的节点生成器

00:04:55.880 --> 00:05:02.020
子领域，这是我没想到的事情

00:05:02.020 --> 00:05:07.040
超级早期，但随着系统的基本发展而变得越来越流行

00:05:07.040 --> 00:05:12.500
递归是仅在节点构建器方面是必要的，而不仅仅是在节点上

00:05:12.500 --> 00:05:20.870
这是因为，例如，当您使用以下命令将D序列化到系统中时

00:05:20.870 --> 00:05:25.280
对它可以接受的值的任何类型的约束，您都需要提供一个节点

00:05:25.280 --> 00:05:30.290
为您的孩子创造价值的工具，这些价值通过这些约束得以克服，因此他

00:05:30.290 --> 00:05:34.160
有一个模式系统，如果您有，则需要包含逻辑约束

00:05:34.160 --> 00:05:40.870
那些约束完全绑定到本机类型代码的东西

00:05:40.870 --> 00:05:47.720
所以事实证明这是必要的，而且也不必比这容易

00:05:47.720 --> 00:05:52.550
我以为是这样，所以在知道这个想法之后的上周，

00:05:52.550 --> 00:05:56.750
可以在整个系统的皮套上工作的序列化VOC

00:05:56.750 --> 00:06:02.680
他们的工作现在就完成了

00:06:02.950 --> 00:06:07.660
同时不想超卖这个，但哦，我的天哪，我真的很兴奋

00:06:07.660 --> 00:06:16.370
现在有一个小的POC代码生成的结构和一个D序列化

00:06:16.370 --> 00:06:23.300
曾经相当透明的系统仍在重用所有

00:06:23.300 --> 00:06:30.830
食典没有使用任何非令人信服的东西，所以这很好，并且基本上可以正常工作

00:06:30.830 --> 00:06:37.820
没有抽象以一种无法使用的方式膨胀，因此里程碑

00:06:37.820 --> 00:06:40.310
基本上看起来一切都在轨道上

00:06:40.310 --> 00:06:45.260
而且我不想超额销售，因为它只占很小的一部分

00:06:45.260 --> 00:06:50.590
将来在Cochin的整体工作量，但它奏效了

00:06:50.590 --> 00:07:01.760
是的，这是我度过了一个愉快的一周的链接，因为很多下跌是

00:07:01.760 --> 00:07:05.390
仍然在我的本地主机上，我想将其清理成大约五种不同的形式

00:07:05.390 --> 00:07:13.130
今晚提交，所以当您说小便时，我说的是测试的一种形式是

00:07:13.130 --> 00:07:21.860
一个单独的项目，或者将在一个分支中，它将降落在主项目上，然后转到我

00:07:21.860 --> 00:07:26.270
感觉我可能很快，我一直在做它里面所有的东西

00:07:26.270 --> 00:07:33.320
模式包，然后我们继续打包里面的内容，我继续

00:07:33.320 --> 00:07:39.710
那个东西标签，但有点像功能完整性和

00:07:39.710 --> 00:07:48.020
东西，并掌握那些软件包，如果那回答了你的问题，就像呃

00:07:48.020 --> 00:07:53.630
我们只是想知道它是什么形式，就像是这个东西，

00:07:53.630 --> 00:07:59.150
你可以跑步，我想很好，你怎么看？它是什么？它是测试吗？

00:07:59.150 --> 00:08:06.260
只是编写一些测试代码，试图提供一个好的测试框架

00:08:06.260 --> 00:08:16.070
是的，是的，当您让Co gen参与进来时，那是因为

00:08:16.070 --> 00:08:22.150
发生的事情是的，没有什么是超级满足的

00:08:27.939 --> 00:08:33.459
所以那就是ci当前没有行使的地方

00:08:33.459 --> 00:08:38.950
这是一种严重的技术赌注，担心很快就会有测试

00:08:38.950 --> 00:08:45.779
但是您必须进入该目录并首先运行cogent和那些测试

00:08:49.050 --> 00:08:56.560
因此，这包括围绕常规字段的所有关注事项（可选）

00:08:56.560 --> 00:09:05.670
字段已知字段和可选的多个字段检查什么是敏感的

00:09:08.040 --> 00:09:11.949
为了使它变得更严重，我不知道测试的东西需要

00:09:11.949 --> 00:09:17.440
改善很多，你可以想象有多大的废话

00:09:17.440 --> 00:09:23.399
特征矩阵遍历所有种类乘以所有表示

00:09:23.399 --> 00:09:51.310
所以在那一行中有一行和一列，我认为是的

00:09:51.310 --> 00:10:08.220
当我不在这里时，其他事情一直很酷，进展很好，所以来吧，

00:10:08.220 --> 00:10:17.890
我名单上的下一个是棒，所以我上周在我姐姐那里休息了一段时间

00:10:17.890 --> 00:10:23.630
镇上，我正在呼吸beretta，但嗯，所以

00:10:23.630 --> 00:10:29.840
最近两周的最后大部分都是关于三个模式的

00:10:29.840 --> 00:10:36.190
区域中有Jaya赞助商和围棋者的规格，所以在规格前面

00:10:36.190 --> 00:10:42.470
一直试图将所有东西放到一个统一的地方，所以规格真的

00:10:42.470 --> 00:10:47.000
呼吁一切顺利，像杰里米（Jeremy）一样有一些松散的边缘

00:10:47.000 --> 00:10:54.350
已经走了，并在他的go解析器中实现了一些建议的更改，

00:10:54.350 --> 00:10:59.090
在Jaya赞助商里我很担心我的敬意，还有很多方面的敬意

00:10:59.090 --> 00:11:02.960
然后放入J的解析器，然后对其进行一些测试

00:11:02.960 --> 00:11:08.620
这样的事情使统一活动试图

00:11:08.620 --> 00:11:16.690
最终确定高级布局的基本高级布局语法和＆链接

00:11:16.690 --> 00:11:25.240
规范中的简写语法，即后者按如下方式完成

00:11:25.240 --> 00:11:30.290
埃里克（Eric）说，我们仍然随时都在盘旋，这是必不可少的

00:11:30.290 --> 00:11:36.730
为此，但我认为我们不能在特殊情况下使用鲸鱼，在这种情况下，我

00:11:36.730 --> 00:11:43.550
想想，但就此而言，它们在规格中仍然是任何类型都松散的

00:11:43.550 --> 00:11:51.460
但这可以是后来可以找到的测试套件，那就是

00:11:51.460 --> 00:11:55.910
可以跨语言使用，所以这是我最初的紧张意图

00:11:55.910 --> 00:12:00.740
开始编写所有这些固定装置以测试基本用法，而II花费了很多

00:12:00.740 --> 00:12:09.610
进入目标的时间，您知道主要是习惯了这一切，但同时

00:12:09.610 --> 00:12:15.200
看看我是否可以将杰里米（Jeremy）的东西与其余的东西放在一起

00:12:15.200 --> 00:12:20.570
我所拥有的东西，因此我现在围绕着杰里米的作品有了一个测试框架，我

00:12:20.570 --> 00:12:25.460
尚未向其中提出拉取请求，所以我不知道我还不知道如何

00:12:25.460 --> 00:12:29.360
它会适合他现在正在使用的东西，或者我们是否需要分叉并且

00:12:29.360 --> 00:12:33.379
和乔的方向稍有不同，因为他使用的是一些代码

00:12:33.379 --> 00:12:40.489
还有东西总监西摩（Seymour）没有连接到IPL d-prime，所以我要

00:12:40.489 --> 00:12:45.309
希望在接下来的几天中与Jeremy进行对话，我希望可以通过请求请求

00:12:45.309 --> 00:12:50.239
是的，但希望这样做的目的是使此高级链接内容得到整理

00:12:50.239 --> 00:12:58.309
然后解开迈克尔，哦，我猜我们可以做到

00:12:58.309 --> 00:13:04.039
迈克尔下一个，但我确实想谈一谈高级布局的基本语法

00:13:04.039 --> 00:13:10.729
因为那是我去过的唯一一件事，是我认为的语法

00:13:10.729 --> 00:13:17.149
归档非常容易使用，因为我还没有只是讨论

00:13:17.149 --> 00:13:21.529
无论如何，一夜之间，迈克尔我会让你做更新，我可以先回头吗

00:13:21.529 --> 00:13:28.129
您提醒了我以前我想记住要否认的内容

00:13:28.129 --> 00:13:32.359
依赖关系树的更大部分，并为合​​作伙伴提供IPL D素数

00:13:32.359 --> 00:13:37.429
现在非常占位符E，实际上是它的数据结构

00:13:37.429 --> 00:13:44.350
代表它们本身是当前的架构类型

00:13:44.350 --> 00:13:50.389
手工卷制，我认为这会很好，因为我希望它们像

00:13:50.389 --> 00:13:56.899
他们本来就很自然，但是那些的构造函数是

00:13:56.899 --> 00:14:03.729
目前一堆叫做temp的函数并没有用到我

00:14:03.970 --> 00:14:10.850
它们只是非常锋利的构造函数，并且是创建的唯一方法

00:14:10.850 --> 00:14:17.720
这些值当前在go代码中，因此缺少go IPL D主代码库

00:14:17.720 --> 00:14:22.699
模式的任何解析器或这些模式的直接加载器，所有代码生成为

00:14:22.699 --> 00:14:26.389
当前由这些值驱动，您只能创建那些占位符

00:14:26.389 --> 00:14:33.769
的功能，所以至少在一个地方占位符很明显，但是

00:14:33.769 --> 00:14:41.059
另一个与此有关的好消息是希望我们可以

00:14:41.059 --> 00:14:45.529
杰里米（Jeremy）的项目中的一些东西，罗布（Rob）现在正在工作，

00:14:45.529 --> 00:14:50.420
刚好适合很多，但在

00:14:50.420 --> 00:14:55.820
此刻我一直在假设它会很好地适用于免责声明

00:14:55.820 --> 00:15:19.880
好吧，这是生命的时刻，或者你知道的东西，是的，嗯，好吧，所以

00:15:19.880 --> 00:15:27.230
独特的52取得了巨大进展，我们现在可以对文件和目录进行编码

00:15:27.230 --> 00:15:33.920
在JavaScript中递归地吐出代码块和所有东西，

00:15:33.920 --> 00:15:38.209
有一个用于调试它的小相机和实用程序，我仍然缺乏测试，

00:15:38.209 --> 00:15:41.930
就像我已经阅读界面一样进行选择，我们将文件系统以及所有这些

00:15:41.930 --> 00:15:46.760
东西，所以还有更多的工作要做，但是那并没有融合在一起，你永远不会看到

00:15:46.760 --> 00:15:51.890
一个变化就是这样，就像永不消失的问题一样

00:15:51.890 --> 00:15:57.440
嗯，现在就像是关于哪些属性的一般性对话

00:15:57.440 --> 00:16:00.829
我们实际上是否需要拥有，但希望很快能解决

00:16:00.829 --> 00:16:07.970
足够了，我听说这时我们需要进行一次对话，而不仅仅是

00:16:07.970 --> 00:16:12.260
默认情况下，我们想要做的是什么属性？

00:16:12.260 --> 00:16:24.470
可能与今天的状况相比没有任何变化，但是无论如何，然后哦，是的，好的

00:16:24.470 --> 00:16:28.310
我们有一个问题，对不起我会要求所有人

00:16:28.310 --> 00:16:32.420
对我们下一个季度的意见发表意见，我们需要完成此工作

00:16:32.420 --> 00:16:37.579
一周的路线图回购中还有一个问题，我们正在与我们联系

00:16:37.579 --> 00:16:43.570
依赖来尝试展示他们需要的东西，所以请调查一下

00:16:43.570 --> 00:16:50.120
在新的仓库中有一个问题，叫做“自动围绕一些团队”

00:16:50.120 --> 00:16:53.690
权限，需要进行一系列权限更改才能获得权限

00:16:53.690 --> 00:16:58.010
一旦被烦恼就会降落，所以在我走之前请先看一下

00:16:58.010 --> 00:17:01.449
并改变一些姿势以确保看起来神智正常

00:17:01.449 --> 00:17:13.280
我想那是对的，我要写的很酷

00:17:13.280 --> 00:17:21.799
所以我想我们可以回到我忘了上帝想谈论的内容，但是

00:17:21.799 --> 00:17:29.660
我只是想捕捉迈克尔斯，我想我可能会

00:17:29.660 --> 00:17:34.210
需要迈克尔工作的几个链接，但请回到

00:17:34.210 --> 00:17:41.120
所以我是否希望你们看到的是第119期

00:17:41.120 --> 00:17:56.030
贝克的回购，然后如果您向下滚动到埃里克漫画中的埃里克评论X，

00:17:56.030 --> 00:18:06.830
那里的第一部漫画，而忽略X出现的尖括号，那是

00:18:06.830 --> 00:18:16.250
这是当前提案中定义高级布局的广泛提案

00:18:16.250 --> 00:18:21.650
您的架构，然后使用它们，这样尖括号就不在这里了，

00:18:21.650 --> 00:18:27.110
可能会在以后出现，但是您要使用的方法是使用关键字“高级”

00:18:27.110 --> 00:18:35.120
您给它起个名字AL的事情是，我想这会继续回来，我们需要

00:18:35.120 --> 00:18:43.400
确定身份的某种方式，所以如果我们要确定身份，那么我就知道埃里卡（Erica）

00:18:43.400 --> 00:18:48.080
你如何看待亚历克斯的事，因为我知道我们

00:18:48.080 --> 00:18:55.400
断断续续，这似乎是相关的，如果我们要

00:18:55.400 --> 00:19:02.390
参数，是的，好像我们一直在强烈怀疑我们会

00:19:02.390 --> 00:19:10.570
想要有参数我偶尔会发现参数有问题

00:19:10.850 --> 00:19:16.700
但是如果我们本能地认为自己会发生，那就像我

00:19:16.700 --> 00:19:23.360
没有反对他们正确的强有力的论据，好吧，我的意思是，如果我们

00:19:23.360 --> 00:19:28.940
如果我们这样做，那么我们会前进，您给它取一个任意的名称，然后是我们的小发明

00:19:28.940 --> 00:19:33.980
您可以使用它将其连接到逻辑或连接到某个场景的地方

00:19:33.980 --> 00:19:40.130
一些可以执行params东西逻辑的东西，不是那样的

00:19:40.130 --> 00:19:44.840
未来的工作，没有必要时不时地向前迈进

00:19:44.840 --> 00:19:51.740
使用它们，您将不得不使用这种表示形式的东西，因此，如果您有一个

00:19:51.740 --> 00:19:57.919
就像是一架小提琴，然后您会说输入任何地图，因此通常使用

00:19:57.919 --> 00:20:01.250
亲切的然后你说代表高级

00:20:01.250 --> 00:20:10.730
给它一个高级名称，然后您就可以像通过字符串一样使用它了

00:20:10.730 --> 00:20:17.840
速记版本稍微复杂一点，我认为我们应该下注

00:20:17.840 --> 00:20:21.860
就目前的任何速记而言，这就是讨论的主旨，

00:20:21.860 --> 00:20:27.620
好吧，所以我只想看看我们是否可以取得一些基本知识

00:20:27.620 --> 00:20:32.539
在这方面取得进展，因为一旦我们可以，我可以合并一些东西并开始制作

00:20:32.539 --> 00:20:44.840
所有的代码都朝着方向发展，对我来说听起来不错，但我并不那么深入

00:20:44.840 --> 00:20:55.149
进入Erika hmm的架构，所以我正在查看一条注释，其中有一个alpha

00:20:55.149 --> 00:21:05.570
哪些成年人是父亲之一，问题编号为119，如果您在

00:21:05.570 --> 00:21:12.799
同样的问题，对不起，我想我的意思是182对不起，是的，所以我拉了这个

00:21:12.799 --> 00:21:23.750
190里有一个特别的问题，所以我要做的是

00:21:23.750 --> 00:21:28.479
我只知道尖括号我不知道我是否

00:21:28.479 --> 00:21:32.559
真的相信以后会有强烈的对模板机制的渴望

00:21:32.559 --> 00:21:39.669
要么，但是我认为那是弱形式，我不确定

00:21:39.669 --> 00:21:43.059
权衡是有意义的，而不是强有力的形式，我认为这在道德上

00:21:43.059 --> 00:21:49.149
从某种重要的第一原则上是有效的，所以其余的

00:21:49.149 --> 00:21:56.979
周围的争论如此站立，是的，我也深信，但是，是的，

00:21:56.979 --> 00:22:02.279
拥有内联速记，这不是世界上最重要的事情

00:22:02.279 --> 00:22:08.440
um可以通过某种方式将架构与高级布局相关联

00:22:08.440 --> 00:22:14.529
内部块在高级实验室中的表示，所以我一直倾向于

00:22:14.529 --> 00:22:21.340
可能有用的东西，但如果这样的话几乎完全是一个实现

00:22:21.340 --> 00:22:27.249
属于Avance布局内部并从外部引用的细节

00:22:27.249 --> 00:22:33.669
我们在使用它的地方正确的正确的正确的就像高级的一样

00:22:33.669 --> 00:22:40.179
像里面的rot13支架，我想基本上只通过电子邮件关联

00:22:40.179 --> 00:22:48.580
好的，是的，我目前的理论是，无论您指的是什么

00:22:48.580 --> 00:22:53.859
如果必要的话，该东西应该包括两个逻辑端

00:22:53.859 --> 00:22:56.249
图式

00:23:07.040 --> 00:23:14.480
因此，例如在HAMP中，hab自我会伴随一个

00:23:14.480 --> 00:23:19.910
模式，它将在内部使用schemer，然后使用

00:23:19.910 --> 00:23:26.630
您将声明I和高级哈希图的手，然后命名为

00:23:26.630 --> 00:23:32.570
我们不能同意，但是它们是故意的，然后您请HAMP决定如何

00:23:32.570 --> 00:23:35.630
要解决它是计划和东西，这是关于谈论的讨论

00:23:35.630 --> 00:23:39.380
对路线障碍物作出断言，并能够一路穿越

00:23:39.380 --> 00:23:44.180
在某种程度上与埃里克（Eric）保持一致，因为它的实用性是

00:23:44.180 --> 00:23:50.420
可能仅限于复杂性失控的情况，也许

00:23:50.420 --> 00:23:56.960
就连我都说我意思是我什至不值得掉进那个兔子洞

00:23:56.960 --> 00:24:03.110
会立即使用它，就像我能够提取单个文件，然后

00:24:03.110 --> 00:24:07.250
本质上吐出整个API，然后您只需要

00:24:07.250 --> 00:24:10.640
迷上你将需要它，就像哦，仅在目前范围内给我提供事件布局

00:24:10.640 --> 00:24:16.010
就像它的任何不良逻辑一样，它已经为您完成了所有模式验证

00:24:16.010 --> 00:24:20.600
而且，我的意思是说事后喜欢将其挂起来的区别

00:24:20.600 --> 00:24:25.340
从不同的文件中并将其保存在文件中只是意味着它要少一些

00:24:25.340 --> 00:24:28.910
引人入胜的设计语言，因为现在我必须为每个文件都有一个单独的文件

00:24:28.910 --> 00:24:35.780
我曾经创建过的索引布局很烦人，我真的不知道

00:24:35.780 --> 00:24:42.560
这些参数是什么，我真的不明白这些是

00:24:42.560 --> 00:24:46.100
必须将其编码为实际的块结构，以便它们属于

00:24:46.100 --> 00:24:50.180
模式，所以如果这不是模式所在，那么我不知道这些品牌是什么

00:24:50.180 --> 00:24:55.280
是为此用途，虽然这不是在声明高级

00:24:55.280 --> 00:25:01.100
现在这很沉重，因为您拥有高度的用户防御人员，所以在这种情况下，rot13

00:25:01.100 --> 00:25:05.480
在其他地方定义的高级布局

00:25:05.480 --> 00:25:09.170
逻辑和结束的模式存在，这是用户说我想拉

00:25:09.170 --> 00:25:13.760
那个东西就可以使用了，为什么呢？为什么不编码呢？

00:25:13.760 --> 00:25:19.680
算法变成了块结构，那么就没有算法了

00:25:19.680 --> 00:25:23.850
并确定可以被命名他们可以被标识为我们的

00:25:23.850 --> 00:25:32.990
贾斯汀（Justin）以愚蠢的名字命名埃里卡（Erica）

00:25:32.990 --> 00:25:40.710
就像我对此不喜欢的是不是，我们正在采取某种

00:25:40.710 --> 00:25:45.540
在这里定义它的参数，它实际上并没有被编码在数据中

00:25:45.540 --> 00:25:51.510
一定是有问题的，就像我本能地说

00:25:51.510 --> 00:25:56.040
它不在数据中，也不在数据中，如果要设置，

00:25:56.040 --> 00:26:02.460
想传递一个参数，当您创建数据结构时将其传递给我，所以我

00:26:02.460 --> 00:26:06.990
我认为我们必须对整个前提保持谨慎，让我们不要被抓住

00:26:06.990 --> 00:26:11.640
因为它仍然是一个单独的问题，我认为我们可以

00:26:11.640 --> 00:26:18.510
可以p，因为但您知道他们是否对我有用吗？

00:26:18.510 --> 00:26:24.000
我构思的方式是，这将解决其中的一些顾虑

00:26:24.000 --> 00:26:27.990
远的量子有关于那些参数，并且不希望他们去

00:26:27.990 --> 00:26:31.620
分成根块，因为它们总是固定的，所以您可以在文件中说硬币

00:26:31.620 --> 00:26:37.110
贝克我正在使用hampt，参数并不总是这样，而在我们

00:26:37.110 --> 00:26:42.630
用例，您可以说您可以将这种担忧留给代码层，或者也许

00:26:42.630 --> 00:26:48.510
在进阶版面的逻辑跌落的中，有一个选项

00:26:48.510 --> 00:26:52.260
无论您在那提供什么，总是会对其进行编码，就像您可能会提供的那样

00:26:52.260 --> 00:26:57.630
13的大宽度，它仍将13的出价写入块中，但是您的

00:26:57.630 --> 00:27:03.390
策划者是指导逻辑去做的事情，而不是

00:27:03.390 --> 00:27:07.050
通过代码来做到这一点，所以您知道这只是获取这些内容的途径

00:27:07.050 --> 00:27:15.600
参数添加到逻辑用户端是的，是的，我知道为什么他们要

00:27:15.600 --> 00:27:19.830
那我很同情，但这也是一个不好的做法，但我想我是说我们

00:27:19.830 --> 00:27:23.550
我们已经经历了数十次这样的经历，但是就像事情需要自我

00:27:23.550 --> 00:27:27.990
描述，这意味着将其放入数据中，就像他们不想

00:27:27.990 --> 00:27:30.810
要被编码为数据的参数，然后他们只需要提出一些

00:27:30.810 --> 00:27:33.580
我们假定的合理默认值，这将是一部分

00:27:33.580 --> 00:27:37.659
就像模式的痛苦部分一样，如高级布局的模式

00:27:37.659 --> 00:27:41.619
而不是像这样的每个体式的参数应该是固定的

00:27:41.619 --> 00:27:48.070
如果想要的话，应该不像是的，如果想要设定一个任意的，是的。

00:27:48.070 --> 00:27:52.659
参数的默认值，然后在高级布局的模式中执行此操作

00:27:52.659 --> 00:27:57.759
在用法的参数化中执行此操作，因为然后您可以更改它，就可以

00:27:57.759 --> 00:28:01.899
取相同的数据并调整这些参数，例如

00:28:01.899 --> 00:28:04.779
我们可能不想给人们的灵活性，因为那样他们会

00:28:04.779 --> 00:28:13.269
创建较少的自我描述数据结构，所以我认为这个问题

00:28:13.269 --> 00:28:19.570
想暂时缩小范围，否，他们同意或不同意

00:28:19.570 --> 00:28:27.070
婴儿车说，因为我们抢劫的事情我想按顺序缩小

00:28:27.070 --> 00:28:34.690
要弄清楚解析器的作用，不只是字面意义上的一个单位

00:28:34.690 --> 00:28:38.230
定义中将涉及多个标量之类的信息

00:28:38.230 --> 00:28:41.769
一种高级布局，因为如果有多个布局，我们就不会有块

00:28:41.769 --> 00:28:49.059
像这样的语法，所以我在那里发表了另一条评论，

00:28:49.059 --> 00:28:55.169
埃里克（Eric）的例子进一步摆脱了参数

00:29:01.169 --> 00:29:06.190
因此，在我的示例中，我将高级布局的名称命名为

00:29:06.190 --> 00:29:12.129
可以将其与逻辑联系起来的东西，或者像Erik所建议的那样，我们回去

00:29:12.129 --> 00:29:16.779
在这个想法上，您有一个可以识别它的名称，并且您可以

00:29:16.779 --> 00:29:19.629
就像我只是在那儿放了一个小表情，例如，这是一个

00:29:19.629 --> 00:29:26.859
在某个注册表或映射中显示的某个位置的任意字符串

00:29:26.859 --> 00:29:33.730
这是代码，您可以在此处甚至在其中将其与代码连接

00:29:33.730 --> 00:29:39.100
在运行中，您将拥有编译标志，当您遇到IPL D斜杠时会说

00:29:39.100 --> 00:29:44.799
rot13，那么您应该连接到此github存储库，该存储库中包含较旧的代码

00:29:44.799 --> 00:29:51.499
它，所以把它全部拉在一起做koujun谢谢玛丽娜的脸，是的，不

00:29:51.499 --> 00:29:56.720
这很有意义，我只是不想要它，因为我们不这样做

00:29:56.720 --> 00:30:00.799
没有，我们还没有该系统，在最初的几次迭代中，我们也不会

00:30:00.799 --> 00:30:05.989
所以我只想确保您可以在不附加此名称的情况下创建它们

00:30:05.989 --> 00:30:11.389
如果您不需要它，替代方法是像我不认为

00:30:11.389 --> 00:30:16.779
我实际上并不认为现在像我们可以做到的那样根本不需要

00:30:16.779 --> 00:30:21.259
让我在那儿再发表一条评论，这是完全删除了那条评论

00:30:21.259 --> 00:30:25.879
块，而名称Advance是您要连接的名称，因此

00:30:25.879 --> 00:30:30.950
前进的背后是晚上可以进行的活动，所以您知道--映射rot13然后指向

00:30:30.950 --> 00:30:35.539
将它放到只是您做某事的地方，现在当您仍具有灵活性时

00:30:35.539 --> 00:30:44.239
做到这一点，我们将拥有一些可以映射午睡字符串rot13的东西-逻辑是的

00:30:44.239 --> 00:30:49.789
好吧，我的意思是这样，当您像半编码一样推动此操作时，

00:30:49.789 --> 00:30:54.769
我喜欢将其中产生的所有api都命名为类型名称，

00:30:54.769 --> 00:30:59.059
而且您最终还会遇到一个名为rot13的类，该类是高级

00:30:59.059 --> 00:31:04.999
布局类，因此您基本上可以加入该类以为其添加任何逻辑

00:31:04.999 --> 00:31:10.309
暂时还是我想你也将不得不使用

00:31:10.309 --> 00:31:17.539
为了给它附加更多的架构，但是当我们喜欢时该怎么办

00:31:17.539 --> 00:31:20.929
我们想出的东西，或者说让我们使用哈希图

00:31:20.929 --> 00:31:26.599
例如，这是一个复杂的逻辑捆绑，我们要导出，然后人们

00:31:26.599 --> 00:31:29.899
要说先进的哈希图，他们将把它连接到我们的

00:31:29.899 --> 00:31:35.299
逻辑会按照您现在对JavaScript代码的理解进行工作

00:31:35.299 --> 00:31:41.179
基因，只是担心当我们实际上与您离用户太近时

00:31:41.179 --> 00:31:45.320
导出具体的东西，我们不需要您对gen hash map进行编码，就可以了

00:31:45.320 --> 00:31:49.909
只需要您有一个地方，可以使用您的内容，是的，我的意思是

00:31:49.909 --> 00:31:53.570
是的，就像我没有倒入您的哈希图库一样，

00:31:53.570 --> 00:32:00.740
然后我将我的代码取为像您要参考的模式一样就在您的模式附近

00:32:00.740 --> 00:32:03.950
我吐出来的东西会给你上手课，然后你会打电话给

00:32:03.950 --> 00:32:08.210
方法，然后传入您编写的实际实现的任何模块内容

00:32:08.210 --> 00:32:18.740
是的，所以就像用户只需配置一条线就可以了

00:32:18.740 --> 00:32:23.899
如果那如果那最底层的东西现在能正常工作的话，那实际上给了我们

00:32:23.899 --> 00:32:30.019
演化为动态算法名称或参数或以后的任何内容的空间

00:32:30.019 --> 00:32:37.669
就目前而言，在我看来，这是我们现在可以使用的最基本的方法

00:32:37.669 --> 00:32:43.299
很好，就好像哦

00:32:43.720 --> 00:32:50.720
另一种选择是，当我进行体育锻炼时，我可以通过

00:32:50.720 --> 00:32:54.080
先进的布局，以便当它被他们击中时，它实际上已经

00:32:54.080 --> 00:32:58.039
有另一种能力，那就是我认为这是可行的

00:32:58.039 --> 00:33:02.629
我也想在JavaScript中使用的样式

00:33:02.629 --> 00:33:08.590
更好，嗯，我的意思是说II在将来的某个时候希望能够

00:33:08.590 --> 00:33:15.980
在与另一个架构相同的文件中定义高级布局的架构

00:33:15.980 --> 00:33:20.419
为了简化设计语言，但我的意思是现在我可以将它们制作出来

00:33:20.419 --> 00:33:23.440
单独的文件就可以了

00:33:23.830 --> 00:33:30.649
因为无论如何我都要独立地询问他们，好吧

00:33:30.649 --> 00:33:33.950
是的，我认为我关心的一件事

00:33:33.950 --> 00:33:39.070
对于这里的语法，整个讨论中只有很多

00:33:39.070 --> 00:33:45.590
“高级”一词是一个关键字，它从左侧开始一直很高兴

00:33:45.590 --> 00:33:49.789
关于这一点，只要附近也有东西出现

00:33:49.789 --> 00:33:53.419
表示形式的东西，所以它没有像名称空间那样与

00:33:53.419 --> 00:33:59.149
内置表示形式，我是mmm，最后一个建议有这两个主要方面

00:33:59.149 --> 00:34:07.940
其余的盒子都选中了，我只是个小记号，种类很多

00:34:07.940 --> 00:34:11.240
通过字符串字符串表示高级路由13

00:34:11.240 --> 00:34:20.060
是的，但是随着我们的喜爱，那将会很有趣

00:34:20.060 --> 00:34:30.500
你我的意思是说，处理架构语法确实有道理

00:34:30.500 --> 00:34:35.090
只是说实话太虚弱了，是的，我的意思是对我来说，这很奇怪

00:34:35.090 --> 00:34:39.200
看到与其他部分在同一行上的表示，因为通常

00:34:39.200 --> 00:34:43.250
表示像某处的尖括号一样出现，因为通常

00:34:43.250 --> 00:34:54.860
像在工会中一样使用它，但没有，尽管我们需要做，但确实有道理

00:34:54.860 --> 00:35:09.680
确实需要该行中的高级关键字，虽然可以，但是您

00:35:09.680 --> 00:35:18.560
已经很好了，是的，我猜你是否真的不是，是的

00:35:18.560 --> 00:35:21.890
您最终得到的就像是一个扁平的结构，因此您没有

00:35:21.890 --> 00:35:26.890
点菜，所以你不能说已经定义好了的哦

00:35:26.890 --> 00:35:34.190
是的，好的，好的，因为它们有一个固定的表示类型列表

00:35:34.190 --> 00:35:42.800
像我一样，每种基本的和高级的食物都可以食用

00:35:42.800 --> 00:35:51.530
需要知道它代表自己是一个字符串是和这个

00:35:51.530 --> 00:35:54.680
这再次给了我们灵活性，就像我还是不那样

00:35:54.680 --> 00:36:00.200
当您定义高级rot13时，这很不舒服，这就是事实

00:36:00.200 --> 00:36:04.670
那种，我仍然希望在那里有一种，但是它确实删除了任何一种

00:36:04.670 --> 00:36:08.750
复制，如果有的话，它可以让您将高级版式重用为其他类型

00:36:08.750 --> 00:36:14.450
它可能就像您可以使用HAMP将无序列表作为列表说，如果

00:36:14.450 --> 00:36:19.880
你想知道我去过哪里，是的，所以你想的时候

00:36:19.880 --> 00:36:22.640
一旦将它们放在多个文件中，您的使用情况就

00:36:22.640 --> 00:36:27.670
将它们传递给来自一种模式的类型

00:36:27.670 --> 00:36:34.160
将最终您实际上将最终将它们附着在这里，这是如何治疗

00:36:34.160 --> 00:36:39.230
这是该类型的屏幕逻辑，然后可能将该类型传递给

00:36:39.230 --> 00:36:44.330
下一个模式波特使用的是背面布局，因此您可能会

00:36:44.330 --> 00:36:50.620
甚至在命名上也有些对称，只是为了方便。

00:36:51.400 --> 00:36:55.850
好吧，让我们做这个吧，这周，让我们做吧，让我们看看它如何动摇

00:36:55.850 --> 00:37:05.270
并希望它能正常工作，但如果不能，我们可以调整一下，好吗？

00:37:05.270 --> 00:37:19.760
还有其他任何人，我们今晚已经十分钟了，那么我

00:37:19.760 --> 00:37:25.570
关闭会议并说再见，下周再见，然后停止

00:37:25.570 --> 00:37:29.500
录制停止直播

