WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:03.540
这些日子之一，我想先输入更新说明，然后再开始

00:00:03.540 --> 00:00:27.930
记录下来会很好，欢迎大家每两周参加一次

00:00:27.930 --> 00:00:43.500
ILD团队的意思是UTC日是6月24日，我们有什么

00:00:43.500 --> 00:00:49.890
所以通常我们先快速运行更新，然后再讨论

00:00:49.890 --> 00:00:57.180
和您要谈论的问题，我首先开始，因为我写下了我的

00:00:57.180 --> 00:01:08.970
我已经忘了音符，所以我忘了放在那儿，我也玩了一下

00:01:08.970 --> 00:01:13.350
也会在以后把它放在那里，我也花一些时间在webassembly上

00:01:13.350 --> 00:01:18.990
因为这样的背景故事是IPS团队是IDF的某人

00:01:18.990 --> 00:01:25.409
团队通过一个简单的脚本从JavaScript支持了功能区Shanker

00:01:25.409 --> 00:01:34.740
编译到Web程序集，我们有一个本机C实现和Web

00:01:34.740 --> 00:01:37.079
汇编东西比C东西慢

00:01:37.079 --> 00:01:41.130
只是出于兴趣，因为我找到了一篇有关编译C的博客文章

00:01:41.130 --> 00:01:45.390
直接进入webassembly而无需em脚本编写，所以我也想玩

00:01:45.390 --> 00:01:50.159
围绕它，所以我只想移植原始版本，看看它是否

00:01:50.159 --> 00:01:54.659
更快，所以结果是它并没有更快，只是具有相同的

00:01:54.659 --> 00:02:01.140
性能基本上是的，因为看起来汇编脚本相当不错

00:02:01.140 --> 00:02:06.780
在创建它们时，它们只是M代码，它也不是那么复杂，但是它

00:02:06.780 --> 00:02:13.140
是的，只是看到工作没有执行，而B的

00:02:13.140 --> 00:02:21.209
死了，我再次在梦dream以求的东西上写了堆叠的东西

00:02:21.209 --> 00:02:26.280
我可以加载的系列没有写在D上，现在有一个in

00:02:26.280 --> 00:02:32.520
保存一个称为堆栈浏览器浏览器的界面，今天我来管理

00:02:32.520 --> 00:02:38.700
实际上从IP LD获得了他们使用JSON降级对象的萨拉米香肠

00:02:38.700 --> 00:02:45.030
存储，然后将对象直接放入他们的Web应用程序中，然后

00:02:45.030 --> 00:02:50.940
它可能会抛出数据，这非常令人兴奋，因为现在我需要

00:02:50.940 --> 00:02:55.019
弄清楚如何遵循事物等等，但这是一个好的开始

00:02:55.019 --> 00:02:59.790
看来我真的可以简单地使用他们的浏览器，只需更改一些

00:02:59.790 --> 00:03:05.970
几行代码我需要书本工作，这很酷，而且我认为这是一种好方法

00:03:05.970 --> 00:03:10.950
看或喜欢基本的东西，让我看看我是否真的

00:03:10.950 --> 00:03:15.360
在这些情况下适用于现实世界，看看我是否可以

00:03:15.360 --> 00:03:23.250
真正用最小的代码范围来工作，是的，然后

00:03:23.250 --> 00:03:28.290
当我这样做时，这个技术krauser失去了销售捆绑器的能力

00:03:28.290 --> 00:03:34.950
这只是JavaScript的捆绑器，可惜我花了几个小时

00:03:34.950 --> 00:03:43.010
尝试将其与我们的库进行比较，直到我发现那不是

00:03:43.010 --> 00:03:50.400
转换节点模块，没有办法告诉它

00:03:50.400 --> 00:03:55.500
特定浏览器版本或子品牌的捆绑包中的依赖项

00:03:55.500 --> 00:03:59.910
大多数版本，只是我不知道，它的可重复购买设计使您可以找到

00:03:59.910 --> 00:04:04.350
未解决的问题是设计使然，所以我的结论是，如果您构建一个项目

00:04:04.350 --> 00:04:09.959
即使我们盯住这个Web包，也要放心，至少您可以使它正常工作

00:04:09.959 --> 00:04:14.280
这么辛苦，只是，是的，我认为它适用于小型项目，但如果您有

00:04:14.280 --> 00:04:19.620
任何可能无法转换的依赖项，或者或者您无法隐藏为

00:04:19.620 --> 00:04:25.050
因为我们确实进行了转换，但是无论如何都没有进行转换，所以我花了一个

00:04:25.050 --> 00:04:30.210
几个小时，我曾经参与其中，因为是的，这太可怕了

00:04:30.210 --> 00:04:42.950
无论如何，我认为这就是我所拥有的，所以您想下一步去做的每一件事

00:04:46.139 --> 00:04:56.900
我有很多东西，所以这是一两个非常忙碌而令人兴奋的星期

00:04:56.900 --> 00:05:00.689
部分是因为我张贴了无数的东西让我坐在上面

00:05:00.689 --> 00:05:05.280
就像完成了98％一样，现在他们都被浪费了，只有两个客人

00:05:05.280 --> 00:05:10.050
和在各个地方的PRS将需要回去画我们的西服或做饭

00:05:10.050 --> 00:05:16.710
为此，选择器草稿被浪费了，并且不在PRN上

00:05:16.710 --> 00:05:19.770
规范回购，因为有很多例子需要更新，但是

00:05:19.770 --> 00:05:28.259
模式本身被推得太多了，我认为其中包括一个完全

00:05:28.259 --> 00:05:31.940
合理的递归系统，并且仍然有大约两个花花公子

00:05:31.940 --> 00:05:36.030
条件语言，但递归部分本身似乎是正确的

00:05:36.030 --> 00:05:43.740
塑造得很酷，我不得不和法尔科内的一些人坐下来

00:05:43.740 --> 00:05:49.289
那些渴望选择年龄并获得选择的人

00:05:49.289 --> 00:05:53.729
像这些案例中的一些非常具体的例子，所以现在我们可以

00:05:53.729 --> 00:05:57.509
就像对那些人的差异比较，原来他们想要的是其中一项困难的工作

00:05:57.509 --> 00:06:01.979
我们为支持他们而准备的东西不只是递归，他们还有

00:06:01.979 --> 00:06:09.389
在它们的遍历中嵌套嵌套的递归，但是我们应该能够做到这一点，这就是

00:06:09.389 --> 00:06:15.089
很酷，我在旅途中将选择器的POC代码托管到分支中，我填补了素数

00:06:15.089 --> 00:06:18.690
这是一些更基本的基本实现的东西

00:06:18.690 --> 00:06:25.229
的东西，但它使球滚动，听起来像其他

00:06:25.229 --> 00:06:28.110
在上一两周我将无法进行的对话

00:06:28.110 --> 00:06:32.580
汉娜也许过来帮忙，充实其余的人

00:06:32.580 --> 00:06:38.699
选择器编码，她基本上从记录中说出她没有

00:06:38.699 --> 00:06:42.810
想处理任何规范的东西，但如果规范是好的，她是

00:06:42.810 --> 00:06:50.100
非常乐意处理其余的事情，就像安娜在这里一样，谢谢

00:06:50.100 --> 00:06:55.169
[音乐]还有另一轮Unix FS v2

00:06:55.169 --> 00:07:00.229
 PR中的架构草案

00:07:00.250 --> 00:07:04.370
所以我问了他们我们其他一些沟通渠道，人们如何

00:07:04.370 --> 00:07:09.860
人们对推送像这样的自以为是的草稿感到

00:07:09.860 --> 00:07:15.860
放入Revo中，我将带有时间戳和日期戳的文件放在该文件中，

00:07:15.860 --> 00:07:21.590
传达它是草稿的想法，就像快照一样

00:07:21.590 --> 00:07:25.220
本意是自洽的，但不一定要永生而不是

00:07:25.220 --> 00:07:30.290
一定要成为最终规格，所以我想听听

00:07:30.290 --> 00:07:35.990
人们认为这只是收集笔记的一种方式，但我确实有一个

00:07:35.990 --> 00:07:42.139
在此基础上与Michael进行了愉快的交谈，我认为我们基本上

00:07:42.139 --> 00:07:48.229
说是的，这很近，所以他一直在做其他一些尖刺的事情，

00:07:48.229 --> 00:07:53.180
合理地实现了UNIX FS课程的一些想法，他

00:07:53.180 --> 00:07:55.880
已经开始积累一些有趣的逻辑，例如如何

00:07:55.880 --> 00:08:01.580
拆分文件，因此我们正在研究和研究架构

00:08:01.580 --> 00:08:05.450
草稿，我们有点想可以在这里中间碰到任何东西

00:08:05.450 --> 00:08:09.560
有趣的分块逻辑基本上是if或以上的任何东西

00:08:09.560 --> 00:08:15.349
功率水平，只要我们将其置于为

00:08:15.349 --> 00:08:20.180
先进的数据布局或什至可以合成，无论我们在这里做什么

00:08:20.180 --> 00:08:27.289
只要我们可以将其放在该边界内，那么这对我们来说是一个不错的选择

00:08:27.289 --> 00:08:31.400
将抽象限制在最大范围内，以便我们能够改变您的想法

00:08:31.400 --> 00:08:39.560
以后以建设性的方式，那将是一件好事，所以与所有

00:08:39.560 --> 00:08:46.490
我正在考虑将这些东西转移到滑雪工作上，理想情况下

00:08:46.490 --> 00:08:49.880
试图获得我们可以考虑开始上电的框架

00:08:49.880 --> 00:08:56.750
教练一起去，还有另一个团队的其他人

00:08:56.750 --> 00:09:00.110
之前做了一些通用的代码，并说他可能想跳进去做

00:09:00.110 --> 00:09:04.250
一些东西，所以我将尝试找出是否有可能做到这一点

00:09:04.250 --> 00:09:17.420
在你的未来，是的，这是一个星期，我认为那是我的清单的结尾

00:09:17.420 --> 00:09:29.749
事情，接下来是杆好吧，所以我去过有趣的功能性领域

00:09:29.749 --> 00:09:34.610
大量讨论持久性数据结构的编程社区

00:09:34.610 --> 00:09:38.839
实际上只是不可变的数据结构，他们在

00:09:38.839 --> 00:09:44.569
我们谈论IP LD中的数据结构的方式相同，他们思考

00:09:44.569 --> 00:09:49.779
以您知道的几乎完全相同的术语[音乐]

00:09:49.779 --> 00:09:54.410
真的很有趣，你不喜欢他们不这样做，他们不这样做

00:09:54.410 --> 00:10:00.019
出于同样的原因，他们还有很多其他问题，例如优化

00:10:00.019 --> 00:10:04.550
缓存局部性和所有类似的东西，但除此之外，还有很多

00:10:04.550 --> 00:10:09.670
来自那个社区的想法，这是一个非常有趣的旅程，

00:10:09.670 --> 00:10:16.819
当前正在实现一个可调整大小数组的矢量

00:10:16.819 --> 00:10:22.819
他基本上是您可以推动并推动某些要素发展的东西，

00:10:22.819 --> 00:10:31.970
解决效率不是很高-在您使用时效率不是很高

00:10:31.970 --> 00:10:35.379
把事情从它的前面移开，但是将事情放在它的末尾非常有效

00:10:35.379 --> 00:10:42.019
就是说效果很好，算法很好，

00:10:42.019 --> 00:10:49.360
名称，但实际上这就像一个没有它们的哈希和

00:10:49.360 --> 00:10:55.850
它映射为与Jeremy对char a所做的非常相似的事情

00:10:55.850 --> 00:11:06.290
他是我们今天的Y回购和他的github我想如果我追求这个东西

00:11:06.290 --> 00:11:14.709
并让它尊重它可能是可以映射到的东西

00:11:14.709 --> 00:11:20.839
他以某种形式完成的工作，因此在某些默认情况下，它可能会产生

00:11:20.839 --> 00:11:25.120
他做了什么，我想我不太了解

00:11:25.120 --> 00:11:29.140
动机是因为他的事，但这是事实，这与文件有关

00:11:29.140 --> 00:11:34.240
投币灯客户确实了解这一点，但我相信Lua参与其中，

00:11:34.240 --> 00:11:45.040
所以我认为这应该是非常小的，高效的或简单的，但是是的

00:11:45.040 --> 00:11:48.760
我将不得不弄清楚存在的动机是什么以及如何保持一致

00:11:48.760 --> 00:11:55.620
它可能会得到它以及您可以从中获得的所有其他好处

00:11:55.620 --> 00:12:06.520
基本上是按索引或可能是按顺序排列的非常大的IP LD数组

00:12:06.520 --> 00:12:11.350
距离不够近，我会看到我不太了解go代码

00:12:11.350 --> 00:12:18.970
在那儿，但是足以看到它是一个非常相似的地方

00:12:18.970 --> 00:12:24.970
过去几周一直是我的主要冒险经历，不要以为我把

00:12:24.970 --> 00:12:33.630
其他值得注意的东西-要真正包含在内，所以我可能很酷

00:12:33.630 --> 00:12:40.800
有什么我们想讨论的

00:12:44.790 --> 00:12:50.880
我猜唯一想到的就是我花时间在

00:12:50.880 --> 00:12:57.190
实际上在浏览器中使用IPD，我看到我们确实需要添加或喜欢

00:12:57.190 --> 00:13:01.810
当我们有

00:13:01.810 --> 00:13:05.830
类似的东西，所以就像您在浏览器中一样

00:13:05.830 --> 00:13:11.560
想要追逐一个易于理解且易于理解的表示形式

00:13:11.560 --> 00:13:20.560
可能的，因为我传达了这一点，所以我觉得更多

00:13:20.560 --> 00:13:24.730
基本上是高级版本，但我认为它不像是我认为这很酷

00:13:24.730 --> 00:13:28.810
事情，但我认为这与许多电影中的《追蛋》并不一样，所以我不

00:13:28.810 --> 00:13:31.420
在乎名字，但我认为这是与众不同的

00:13:31.420 --> 00:13:35.530
当前页面Jason非常易于使用，我认为我们应该保留

00:13:35.530 --> 00:13:42.509
之类的步骤，因为这很容易

00:13:42.509 --> 00:13:47.290
类似的，我认为关于增加一些东西的建议，我当时

00:13:47.290 --> 00:13:51.279
有趣，就像我觉得也许有一天我们应该探索其中之一

00:13:51.279 --> 00:13:55.240
但我只想将其放入新的编解码器中，我认为它更容易

00:13:55.240 --> 00:14:03.870
这样做比扩展经测试验证的dag JSON更好，更糟

00:14:11.490 --> 00:14:17.589
您是否想谈谈protobuf命名链接删除哦，是啊，是的，我

00:14:17.589 --> 00:14:21.129
可以谈谈这是一个好主意，因为我犯了高傲的罪恶

00:14:21.129 --> 00:14:33.850
电子邮件，但无论如何，是的，所以事情就这样了，问题在于

00:14:33.850 --> 00:14:40.209
向那里的成千上万的直播观看说明，所以我们

00:14:40.209 --> 00:14:48.759
要做的是在调整表面上，您可以直接使用

00:14:48.759 --> 00:14:54.759
阿拉伯联合酋长国曾经使用过的假咳嗽药，但在iPod II中存储的方式不同，如果您使用

00:14:54.759 --> 00:15:00.220
您现在通常遍历的ipod II和图标D的当前版本

00:15:00.220 --> 00:15:06.670
您遍历数据访问的方式是布局以及对象内部，现在

00:15:06.670 --> 00:15:11.439
我们有一个问题，您想遍历该协议缓​​冲哪些

00:15:11.439 --> 00:15:17.439
对于UNIX来说，对于激进主义者而言，基本的东西是基本上有两个

00:15:17.439 --> 00:15:23.740
遍历数据的方式以及Alex告诉我谁在处理数据

00:15:23.740 --> 00:15:28.809
JavaScript即将开始服务的扩充是他从未使用过

00:15:28.809 --> 00:15:36.910
那些命名的链接，说实话让我感到惊讶，所以这个问题

00:15:36.910 --> 00:15:45.879
是我应该完全包含那些命名的链接还是Ruby删除它们

00:15:45.879 --> 00:15:49.900
因为他们表现出色，所以他做了一些基准测试

00:15:49.900 --> 00:15:56.260
大约有8％的时间只是使用创建那些命名链接的时间，而现在

00:15:56.260 --> 00:16:01.300
我的问题是向埃里克（Eric）提出的，因为我想我认为这件事已经解决了

00:16:01.300 --> 00:16:06.310
我猜类似的事情，但我不确定这种补充是如何进行的

00:16:06.310 --> 00:16:13.330
是在ILD海布里（Highbury）还是在外面，就像他们在外面一样

00:16:13.330 --> 00:16:23.110
它是免费的，而不是小狗，我不知道，嘿，我刚刚看到了您的留言

00:16:23.110 --> 00:16:27.420
关于这个电话之前的那一刻，我

00:16:27.810 --> 00:16:32.680
认为东西是在我的老一辈中完成的，我去了图书馆

00:16:32.680 --> 00:16:39.400
没走，我想我也应该在说之前先看一下，但我很确定

00:16:39.400 --> 00:16:42.310
我记得在我之前看过类似的东西-嗯，这不

00:16:42.310 --> 00:16:53.920
看起来很有效率，是的，我不太确定我们要对此做些什么

00:16:53.920 --> 00:17:02.860
在未来，我不认为好像每次我们都在谈论什么

00:17:02.860 --> 00:17:08.620
我们想为现有的dag PB之间的关系做未来的工作

00:17:08.620 --> 00:17:13.959
东西，以及我们将来想去的地方，其中涉及的技术和

00:17:13.959 --> 00:17:19.450
在您现有的PB标签中，有很多您需要详细信息，也许

00:17:19.450 --> 00:17:23.770
我们不胜感激，因为基本上UNIX S必须总共为1

00:17:23.770 --> 00:17:33.550
用户，也许只是根据入场开始做事，然后

00:17:33.550 --> 00:17:40.170
您在以后的任何时候都超出通用用途的任何频谱，因此

00:17:43.300 --> 00:17:48.650
是的，如果我不知道的话，请多加注意，我要走了

00:17:48.650 --> 00:17:52.490
来到这里，我觉得我们应该觉得我们应该很灵活

00:17:52.490 --> 00:17:55.370
关于如何处理这些事情，因为似乎没有

00:17:55.370 --> 00:18:00.170
这个API的许多使用者，似乎正在使用它的人

00:18:00.170 --> 00:18:05.240
总体而言，无论如何，它都喜欢给它一个有趣的外观，所以如果我们要改进

00:18:05.240 --> 00:18:12.200
它应该让我们感到自由，我想是的，我们还从

00:18:12.200 --> 00:18:17.930
仅JavaScript方面，因此有一个PR开放，从真正地改变了API

00:18:17.930 --> 00:18:23.360
协议会缓冲到您提供最安全需求的那些东西中，因此

00:18:23.360 --> 00:18:27.440
就像其他一些我们同步的事物一样，因为

00:18:27.440 --> 00:18:32.480
我参与进来，依此类推，但是现在就像提供目的不需要任何

00:18:32.480 --> 00:18:38.240
这些多余的东西，所以我们只是删除了它，所以我想基本上我们的计划是

00:18:38.240 --> 00:18:42.440
你们只是把它降低到最低限度，因为我们当然需要

00:18:42.440 --> 00:18:47.720
由于执行此FS v1而将其永久维护，但是您想使其

00:18:47.720 --> 00:18:53.240
越小越好，因为明显地减少了更少的代码包，我认为

00:18:53.240 --> 00:18:58.240
命名链接也只是我的意思，这肯定是一件很酷的事情

00:18:58.240 --> 00:19:05.690
就像是的，这很酷，但是如果没有人使用它，是的，没有

00:19:05.690 --> 00:19:11.420
如果事后仍然可行，则没有必要保留它

00:19:11.420 --> 00:19:18.560
所以我倾向于删除它们，我的意思是即使它转身

00:19:18.560 --> 00:19:26.150
出来是个问题，您可以将其添加回去，我是说如果我们怀疑托尼找到

00:19:26.150 --> 00:19:31.850
出去，我们打破了是的，但是到目前为止，我所有的改变都让我从未听说过

00:19:31.850 --> 00:19:37.910
外面的任何人，或者像我从未使用过JPB的其他人来信

00:19:37.910 --> 00:19:45.470
在幸福之外，据我所知，基本上我编写的每一段代码

00:19:45.470 --> 00:19:50.570
我们小组以外的人曾经审查过JSON为12月且未染色为PP

00:19:50.570 --> 00:19:55.940
染料PP太难使用了，所以没人管

00:19:55.940 --> 00:20:04.240
好吧，所以你看，所以我们可以得出结论，我们只是与

00:20:04.240 --> 00:20:14.240
从IPL DI删除其命名的链接有点像我们应该问别人

00:20:14.240 --> 00:20:19.549
当时谁更参与其中，因为我觉得我还可以

00:20:19.549 --> 00:20:27.259
但是我只是对历史或后果不甚了解，所以我

00:20:27.259 --> 00:20:34.309
不想成为这个问题的最终意见，但基本上是这样，所以II

00:20:34.309 --> 00:20:39.730
我会照顾好这些东西吗，基本上，我会从IPL D团队那里得到照顾

00:20:39.730 --> 00:20:47.389
目前的印象是我们可以很好地删除它，但是我会

00:20:47.389 --> 00:20:51.860
我要问那些清楚我们之前有两个人参与的人，看看是否

00:20:51.860 --> 00:20:55.940
如果实际上是一个问题，但从iPod D的角度来看，

00:20:55.940 --> 00:21:05.360
我们在删除它时没有看到任何问题，这是脚本，还不错，我什至

00:21:05.360 --> 00:21:09.049
考虑也许我们可以喜欢JavaScript，这将非常简单

00:21:09.049 --> 00:21:15.559
只是将另一个放置在表面上，让我们将其构建在顶部，所以如果

00:21:15.559 --> 00:21:23.149
我们希望有一些演示工作或以PB标签命名的任何电影

00:21:23.149 --> 00:21:28.399
链接库或其他任何东西，但这基本上是我所需要的

00:21:28.399 --> 00:21:32.750
会看到我们可以根据需要进行建造，希望我们永远不要建造

00:21:32.750 --> 00:21:39.710
那是我的计划，是我可以想到的其他应用程序

00:21:39.710 --> 00:21:48.559
这个区域是某些集群工作的向量，mmm对我说，他

00:21:48.559 --> 00:21:54.009
绝对希望保持这种能力以获取大量链接

00:21:54.009 --> 00:22:00.799
基本上所有块中的链接，即使它们是更深的对象，我也告诉过

00:22:00.799 --> 00:22:05.210
他们是的，好吧，我们只是要使用恰好可以做到这一点的选择器来做到这一点

00:22:05.210 --> 00:22:09.860
只是要使这样的曝光将是一个常数

00:22:09.860 --> 00:22:12.799
库中的选择器，所以很容易找到一个辅助函数

00:22:12.799 --> 00:22:21.020
直接指向它，这很酷，是的，猜想唯一的

00:22:21.020 --> 00:22:25.910
允许我在笔录网站上看到的也许是生态资源管理器

00:22:25.910 --> 00:22:31.940
像握住UI的东西一样，他们可能会使用名称链接来做某事，但我

00:22:31.940 --> 00:22:37.100
只有在这种情况下才能观看，甚至可以将其固定好

00:22:37.100 --> 00:22:40.820
是的，看起来仍然可以进行功能上的转换

00:22:40.820 --> 00:22:46.280
只是给了东西是的，是的，实际上我很酷，但是我们得到了一些

00:22:46.280 --> 00:22:50.350
基本上我们是从汽车上把它拿下来的，只是把它放在别的地方

00:22:50.350 --> 00:22:57.730
总是无时无刻不在做，是的，母狗不会出问题

00:22:58.750 --> 00:23:03.620
而且它将使代码变得非常容易，我现在是一个，所以我真的不知道

00:23:03.620 --> 00:23:11.650
就像当前的APB代码一样，但这使事情变得更简单了

00:23:12.160 --> 00:23:25.360
好吧，还有别的吗？

00:23:27.580 --> 00:23:33.200
也许我们应该注意，关于高级的讨论很多

00:23:33.200 --> 00:23:38.780
布局，这已经是噢，泛型或其他任何东西，这已经占据了

00:23:38.780 --> 00:23:43.190
无论如何，在过去的两三天中，我们有很多时间在讨论中

00:23:43.190 --> 00:23:50.000
几周后，也许我会在文档中放入一些链接，但是

00:23:50.000 --> 00:23:55.910
只是在讨论它在哪里适合它与模式之间的关系如何

00:23:55.910 --> 00:24:02.900
做信号和所有这些部分，所以有关于生活的讨论

00:24:02.900 --> 00:24:09.200
这些东西，我想是在巴塞罗那埃里克亲自面对你和迈克尔

00:24:09.200 --> 00:24:16.070
在那里取得了有趣的进展，所以我们谈到了您知道的那个

00:24:16.070 --> 00:24:22.580
SVG草案的UNIX突出显示了，基本上看起来不错，所以

00:24:22.580 --> 00:24:26.240
认为我实际上已经有了一点点购买的想法，尽管至少我们

00:24:26.240 --> 00:24:30.070
当然可以使用模式来发信号

00:24:34.090 --> 00:24:39.950
是的一件事，肯定还有很多事情要解决

00:24:39.950 --> 00:24:45.980
关于我们在何处填充任何参数，我的官方立场是我只是不

00:24:45.980 --> 00:24:51.440
甚至在乎我们根本无法支持高级布局的参数

00:24:51.440 --> 00:24:59.270
并以实现名称完整地输入-很好

00:24:59.270 --> 00:25:07.010
对我来说，好吧，我们应该对我不知道是否命名的事物表示敬意

00:25:07.010 --> 00:25:10.580
github问题，例如在该github上达成最终解决方案的最大方法

00:25:10.580 --> 00:25:16.160
问题有永远存在的趋势，您可以想像没有办法

00:25:16.160 --> 00:25:21.620
投票或表示共识和github问题，这不是对话式的否

00:25:21.620 --> 00:25:31.070
你可以用这项技术做的，她是一种持续的刺激物，是的，首先，我们可以

00:25:31.070 --> 00:25:35.570
只是在下一个会议上做，就是想开会，这样我就可以提出名字或

00:25:35.570 --> 00:25:42.410
无论如何，但对我而言，似乎仍然是高级布局的东西

00:25:42.410 --> 00:25:49.130
对我来说听起来很干净，就像下雨一样，但是我们可以击中

00:25:49.130 --> 00:25:55.370
下周的讨论区使用首字母缩略词“ a do”表示高级数据

00:25:55.370 --> 00:26:00.110
在我的一些个人笔记中的布局，我陷入了困境，并试图进行辩论

00:26:00.110 --> 00:26:07.430
如果是assi首字母缩略词系列的一种情况，我想确定是否

00:26:07.430 --> 00:26:13.390
首字母缩略词的情况很糟，或者实际上就像是

00:26:15.610 --> 00:26:21.860
是的，我们应该像集思广益一样，集思广益

00:26:21.860 --> 00:26:27.310
有文件，然后是一些东西

00:26:29.530 --> 00:26:36.190
我已经收集了几个链接，因为它是先生之一。迈克尔斯

00:26:36.190 --> 00:26:44.450
一个是里克（Rick）所说的仿制药，另一个是您的问题

00:26:44.450 --> 00:26:51.890
关于信令引用和实现的Eric，我认为这些是

00:26:51.890 --> 00:27:04.670
主要讨论的主要领域其他问题，我还没有考虑到

00:27:04.670 --> 00:27:13.160
我的大脑，我想很多东西都来自柏林

00:27:13.160 --> 00:27:18.350
没放人的东西，是的，实际上有那些笔记，有一些我

00:27:18.350 --> 00:27:25.010
应该提到的是，在IPL d a-- / IP LD回购中，仍然存在拉取请求

00:27:25.010 --> 00:27:36.530
等待帐单上的评论，所以如果你们有一个

00:27:36.530 --> 00:27:47.440
只是为了捕捉那些东西而已

00:27:50.690 --> 00:27:58.269
是的，我们有很多公关和惠普清理工作，就像这样玩

00:28:00.249 --> 00:28:05.479
在Thea中，这不是特别适合开会的话题，但有一些东西

00:28:05.479 --> 00:28:10.700
最近引起了很多讨论，使我觉得我现在

00:28:10.700 --> 00:28:17.359
对此感到非常高兴和感兴趣的是

00:28:17.359 --> 00:28:24.710
实验室笔记本的想法是，就像这些组织中的一些

00:28:24.710 --> 00:28:29.029
过去以出色的研究而闻名，就像约会的人会

00:28:29.029 --> 00:28:33.109
有一个实验室笔记本在上面写东西，其他人可以来看看你的

00:28:33.109 --> 00:28:37.999
实验笔记，但基本上是您将想法付诸实践的地方

00:28:37.999 --> 00:28:47.029
没错，没有审查程序，只是那种

00:28:47.029 --> 00:28:52.249
我与其中一名公关人员所做的关于规范草案的事情相同，但事实并非如此

00:28:52.249 --> 00:29:00.799
需要去任何地方，我只是想和某个地方交谈，可能会很麻烦

00:29:00.799 --> 00:29:05.690
将其像脏的实验室笔记本中的脏页一样扔掉，但在

00:29:05.690 --> 00:29:14.570
至少简短地将其记录在纸上我不知道我是否有什么好主意

00:29:14.570 --> 00:29:18.859
喜欢执行该策略并喜欢使其完全适合他

00:29:18.859 --> 00:29:22.929
的获取，但我认为如果我们做更多此类的工作会很酷

00:29:22.929 --> 00:29:30.710
相应地解决了很多问题，因为它们可以住在其他地方

00:29:30.710 --> 00:29:34.720
那不是那个半生半熟的父亲

00:29:36.129 --> 00:29:41.389
这样就不会有没有人没有人对实验室的建设提出具体建议

00:29:41.389 --> 00:29:46.759
笔记本可以工作，但对我们来说只是一个主意

00:29:46.759 --> 00:29:56.450
是的，只是一个想法，我的意思是我们可以使用github Wiki

00:29:56.450 --> 00:30:03.389
有点黑洞，但它们确实存在，是UX的棘手部分

00:30:03.389 --> 00:30:09.470
事情是确保您可以将其写入，而我不知道

00:30:09.470 --> 00:30:13.529
试图弄清楚如何做到这一点可能就像整个创业公司和

00:30:13.529 --> 00:30:23.750
产品，所以我不知道也许我会阻止自己过多思考

00:30:25.429 --> 00:30:30.389
不，您是对的，尽管我确实觉得这样有太多回购

00:30:30.389 --> 00:30:38.220
问题，同时也不足以捕获某些事物

00:30:38.220 --> 00:30:43.049
发生在他们自己的脑海中，但当我们集体交谈时，你知道

00:30:43.049 --> 00:30:46.679
我们做这些会议是将这些东西公开的好地方，但是仍然

00:30:46.679 --> 00:30:51.690
因此缺少更多的上下文，所以我想我想你知道我

00:30:51.690 --> 00:30:55.350
知道外面的人可以尝试进入并尝试起身

00:30:55.350 --> 00:30:59.580
加快我们共同思考和讨论的内容

00:30:59.580 --> 00:31:04.500
仅仅从我们在公众场合发布的内容就不可能了

00:31:04.500 --> 00:31:09.690
如果您要为这些东西放松一下，那将是不够的，所以

00:31:09.690 --> 00:31:14.580
我们确实需要某种方式来捕获它，就像我昨天一样

00:31:14.580 --> 00:31:19.409
有了一些资源，我们只是觉得这太棒了，我该怎么办

00:31:19.409 --> 00:31:24.090
可以，我的头很好，但是我想可以放一个便条

00:31:24.090 --> 00:31:32.279
在某个将来可能对其他人有趣的地方，是的，我

00:31:32.279 --> 00:31:36.269
我不知道该怎么做，我只能想到一些我认为不应该做的事。

00:31:36.269 --> 00:31:46.799
无论如何，这是当我尝试自己做的时候，就像localhost repo我很漂亮

00:31:46.799 --> 00:31:51.960
只是非常大量地使用日期戳文件，因为事实上

00:31:51.960 --> 00:31:57.090
造成诸如垃圾收集的痕迹和扫荡的原因，我认为这是一个

00:31:57.090 --> 00:32:01.740
如果您不打算使用的话，重要的因素是我不会尝试编辑DOS所做的事情

00:32:01.740 --> 00:32:08.279
更容易发出可以持续给定项目长达一年或一年的新内容

00:32:08.279 --> 00:32:10.350
所以在有如此多的文件之前，我可能

00:32:10.350 --> 00:32:16.690
再次回购的方式很少，以至于无法完成此类工作

00:32:16.690 --> 00:32:26.890
要么工作，不知道，是的，我想这就像我一样

00:32:26.890 --> 00:32:35.560
听起来有点像tiddlywiki，但实际上很好，我有点喜欢

00:32:35.560 --> 00:32:42.640
像这样杀死东西等等，是的，就像是，我二世尝试了几次

00:32:42.640 --> 00:32:49.150
非常喜欢tiddlywiki，但我不喜欢它听起来像一个概念，所以很接近

00:32:49.150 --> 00:32:57.040
很好，但我不知道是的，但这是我的责任，这需要几年时间才能完成

00:32:57.040 --> 00:33:00.490
像这样的东西，或者像IPL一样，你可以

00:33:00.490 --> 00:33:06.190
将您的笔记放到iPhone中，我们应该尝试的对象非常酷的应用程序

00:33:06.190 --> 00:33:13.330
尖刺是的，我认为接下来会有一些人来参加ipfs营地

00:33:13.330 --> 00:33:18.810
一周，他们对欧文斯（Owens）的方向有一些有趣的产品

00:33:18.810 --> 00:33:25.150
是的，你完全在营地里榨汁，就像在问人们他们的情况如何

00:33:25.150 --> 00:33:29.260
对诸如统计之类的事情的看法是的，他知道他们是否有良好的

00:33:29.260 --> 00:33:53.590
想法或工具，甚至更好的方法，还有其他可以削减成本的人吗？

00:33:53.590 --> 00:34:01.870
然后我结束会议，谢谢大家的出席和观看，再见

00:34:01.870 --> 00:34:05.530
伙计们两周后再次见面，我不会去了，因为我们俩都到了

00:34:05.530 --> 00:34:09.520
假期有两个星期了，抱歉，我们还是去找了，所以我

00:34:09.520 --> 00:34:19.710
下周不会在这里，但是不错，所以再见

00:34:25.379 --> 00:34:29.040
停止直播

