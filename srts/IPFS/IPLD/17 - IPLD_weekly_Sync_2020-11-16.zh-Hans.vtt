WEBVTT
Kind: captions
Language: zh-Hans

00:00:26.640 --> 00:00:33.079
欢迎大家参加11月16日的本周ipld同步会议

00:00:33.079 --> 00:00:38.320
2020年，就像每周一样，我们回顾一下我们所从事的工作

00:00:38.320 --> 00:00:46.000
在过去一周内，然后讨论并打开项目um

00:00:46.000 --> 00:00:50.960
让我打开hack yeah，所以我从我自己开始

00:00:50.960 --> 00:00:57.520
嗯，我在um的防锈方面仍在做很多工作

00:00:57.520 --> 00:01:00.879
事物和我当前所处的事物

00:01:00.879 --> 00:01:04.400
本季度的基本计划是集中精力

00:01:04.400 --> 00:01:08.400
让人们使用上游生锈的东西

00:01:08.400 --> 00:01:12.159
实际使用它，并且在

00:01:12.159 --> 00:01:15.520
多种格式的东西，现在我正在帮助那些人

00:01:15.520 --> 00:01:19.520
升级，当然也很理想

00:01:19.520 --> 00:01:23.520
他们会自我升级，但实际上就像是巨大的

00:01:23.520 --> 00:01:27.600
突破性的变化，我帮助他们，因为我也想看看

00:01:27.600 --> 00:01:31.040
如果事情仍然可以变得更顺畅

00:01:31.040 --> 00:01:35.520
p2p的示例，这就像是一个非常糟糕的重大更改

00:01:35.520 --> 00:01:37.600
然后他们帮助我基本上弄清楚了

00:01:37.600 --> 00:01:42.079
哦，我怎样才能让他们更顺畅并发布新版本，所以我真的

00:01:42.079 --> 00:01:45.280
想要也借此机会获得升级路径

00:01:45.280 --> 00:01:49.520
是的，对每个人来说都更加顺畅

00:01:49.520 --> 00:01:53.439
我帮助他们，所以几乎没有P2P，

00:01:53.439 --> 00:01:56.399
还森林rust filecon的实现

00:01:56.399 --> 00:01:59.360
升级已经通过最新升级

00:01:59.360 --> 00:02:02.719
multihash并且正在升级最新的cid版本

00:02:02.719 --> 00:02:07.280
他们甚至看到了性能上的提升，这是很棒的

00:02:07.280 --> 00:02:11.039
嗯，基本上只是由于升级

00:02:11.039 --> 00:02:15.760
是的，所以接下来的事情显然是生锈的ipod本身，然后

00:02:15.760 --> 00:02:20.720
也是ipfs实施ipfs嵌入式和rust ipfs

00:02:20.720 --> 00:02:24.480
将是我将研究的下一个候选人

00:02:24.480 --> 00:02:29.200
嗯，然后它与ipald关系不大，但仍然

00:02:29.200 --> 00:02:32.400
我正在为文件代码工作

00:02:32.400 --> 00:02:36.000
获得锈项目的代码覆盖率和代码覆盖率

00:02:36.000 --> 00:02:39.760
对我们来说，目前这件事是一个可悲的故事，但是

00:02:39.760 --> 00:02:43.280
上周有一个新的公关合并成锈

00:02:43.280 --> 00:02:48.400
这将改善覆盖率工具，我将对此进行调查

00:02:48.400 --> 00:02:51.040
好，所以当然也像那时

00:02:51.040 --> 00:02:55.120
我可以用五枚硬币来做，但这显然也很有益

00:02:55.120 --> 00:03:01.519
我们有任何防锈项目，嗯，让我们看看进展如何，这周我

00:03:01.519 --> 00:03:04.720
也准备演讲，如此令人兴奋的是

00:03:04.720 --> 00:03:10.080
星期四我们有两个ipfs聚会，是慕尼黑

00:03:10.080 --> 00:03:13.599
ipfs metup虚拟的，我会讲一讲

00:03:13.599 --> 00:03:20.720
um ipali，这有点像是对所有内容的广泛概述

00:03:20.720 --> 00:03:26.159
确实从多种格式转变为模式，但我已经答应过我

00:03:26.159 --> 00:03:30.159
也进入模式，所以我可能会对你们中的一些人进行ping操作以获取更多信息

00:03:30.159 --> 00:03:33.920
喜欢奔跑的东西，因为它真的对那些

00:03:33.920 --> 00:03:37.519
基本上一无所知，但也像已经使用过ipl的人一样

00:03:37.519 --> 00:03:39.760
对我们正在建造的新事物感到兴奋

00:03:39.760 --> 00:03:42.640
所以也许甚至像graphql这样的东西也很酷

00:03:42.640 --> 00:03:44.640
它也和模式有关，是的

00:03:44.640 --> 00:03:49.760
基本上看到所有这些可能去哪里对他们来说可能很有趣

00:03:49.760 --> 00:03:56.319
嗯，所以这就是我本周也要工作的原因嗯是的，我认为这很漂亮

00:03:56.319 --> 00:04:02.319
我名单上的下一个是丹妮尔

00:04:02.480 --> 00:04:07.040
很酷，所以我终于合并了go multi-codec的第一个版本

00:04:07.040 --> 00:04:11.680
和我们几周前谈到的目录

00:04:11.680 --> 00:04:14.879
花费了一段时间，但这是一个回购，其中有一些用户和贡献者

00:04:14.879 --> 00:04:16.799
之前，我只是想确保自己没有

00:04:16.799 --> 00:04:19.680
太快了，以防其他人有任何想法

00:04:19.680 --> 00:04:23.680
现在有第二个拉取请求，基本上对api进行了一点点抛光

00:04:23.680 --> 00:04:27.120
编写代码的人我已经审查了该代码

00:04:27.120 --> 00:04:30.240
合并之前有很多次，但还有一些剩余

00:04:30.240 --> 00:04:33.840
诸如常量名称之类的东西

00:04:33.840 --> 00:04:37.440
仍然不是很好，所以我简化了一点

00:04:37.440 --> 00:04:42.479
一旦出现评论，我将标记第一个版本，然后我们就可以

00:04:42.479 --> 00:04:45.360
实际上在其余的重新发布中开始使用它

00:04:45.360 --> 00:04:48.880
我也继续用手，所以现在有

00:04:48.880 --> 00:04:52.160
它遵循链接，并且还知道如何在知道时创建链接

00:04:52.160 --> 00:04:55.440
您创建的地图对于单个节点来说太大了，诸如此类

00:04:55.440 --> 00:05:00.400
嗯，我现在正在进行节点复制，所以当我修改节点时，我只是

00:05:00.400 --> 00:05:03.759
将其修改为适合测试的位置，但不适用于

00:05:03.759 --> 00:05:08.320
还有很多其他事情，所以我正在努力，而且我到达那里的唯一障碍是

00:05:08.320 --> 00:05:11.199
不久前射出eric一个问题

00:05:11.199 --> 00:05:13.840
我不清楚我的api应该如何寻找这些东西

00:05:13.840 --> 00:05:17.440
因为如果我修改一个指向另一个节点的节点

00:05:17.440 --> 00:05:21.440
我可以修改此链接，这很好，但是根节点

00:05:21.440 --> 00:05:25.280
如果我要复印，我不能就地修改它

00:05:25.280 --> 00:05:28.400
以某种方式复制回用户，所以我不清楚

00:05:28.400 --> 00:05:34.320
Go API应该看起来如何，我也一直在帮助eric审核，

00:05:34.320 --> 00:05:38.560
合并一些对ipld prime的更改，因为他一直在发布一堆

00:05:38.560 --> 00:05:44.320
在过去的几周中，对审查请求的审查请求不佳

00:05:44.320 --> 00:05:47.919
嗯，有很多代码，所以我们正在弄清楚该如何获得评论

00:05:47.919 --> 00:05:52.000
正确地，最后我要去演讲

00:05:52.000 --> 00:05:55.280
明天在贝尔法斯特见面

00:05:55.280 --> 00:05:57.520
鬼建立缓存，所以它不会

00:05:57.520 --> 00:06:01.360
ipld相关，但如果有人感兴趣，嗯，我认为是

00:06:01.360 --> 00:06:06.160
有点相关，特别是对于一些更复杂的

00:06:06.160 --> 00:06:09.680
像ipld prime这样的存储库，其中的测试做了很多时髦的事情

00:06:09.680 --> 00:06:12.960
然后也许缓存不能很好地处理这种事情，所以它

00:06:12.960 --> 00:06:16.800
可能很有趣，仅此而已

00:06:18.319 --> 00:06:22.080
谢谢，下一个是对的

00:06:23.120 --> 00:06:28.240
因此，在那几个星期中，感觉不像是

00:06:28.240 --> 00:06:33.199
我正在捕捉我所做的所有事情，但是我认为这只是因为这个

00:06:33.199 --> 00:06:38.560
文件硬币数据RPL数据结构的东西实际上是很多工作，我去了

00:06:38.560 --> 00:06:41.759
返回并梳理所有代码并拉出

00:06:41.759 --> 00:06:44.479
类型和文档，所以有一个

00:06:44.479 --> 00:06:50.000
链接中有很多内联文档和很多结构

00:06:50.000 --> 00:06:54.479
我在笔记中放的um页，所以有um

00:06:54.479 --> 00:06:58.319
主链，然后是消息uh，它也有返回值，

00:06:58.319 --> 00:07:03.360
它们的版本也都很好，所以有

00:07:03.360 --> 00:07:07.520
一直以来，这都是很有教育意义的，所以

00:07:07.520 --> 00:07:11.280
那里还有其他东西，比如演员

00:07:11.280 --> 00:07:14.880
演员类型用代码识别，我生成了所有不同的

00:07:14.880 --> 00:07:18.639
文档中的代码um，这样您就可以

00:07:18.639 --> 00:07:22.400
实际上，如果您要构建它，则可以

00:07:22.400 --> 00:07:28.800
字节字符串以检查代码，并且有一堆地方

00:07:28.800 --> 00:07:30.800
只是添加了其他文档

00:07:30.800 --> 00:07:34.880
描述什么是事物，所以我认为这是一个很好的资源，这是一个好的开始

00:07:34.880 --> 00:07:39.599
无论如何要将此记录在案

00:07:39.599 --> 00:07:47.039
下一步可能是重组adl内容

00:07:47.039 --> 00:07:50.560
妨碍了它，因为它们之间混在一起，但是

00:07:50.560 --> 00:07:56.400
它确实需要一个很好的方法来做到这一点，所以它并没有完全隐藏它

00:07:56.879 --> 00:08:00.720
还有一些小事情，但是

00:08:00.720 --> 00:08:04.479
嗯，我还说了vs代码中的语法荧光笔

00:08:04.479 --> 00:08:08.800
用于ipld模式，这在您执行操作时非常好用

00:08:08.800 --> 00:08:15.280
模式页面，对此感到非常高兴，现在是那里唯一的地方哦

00:08:15.280 --> 00:08:17.919
有两个地方需要突出显示语法，一个是vim，另一个是

00:08:17.919 --> 00:08:22.720
一个是嗯嗯在github上，这不会得到

00:08:22.720 --> 00:08:27.840
在那里，那真的是我的全部

00:08:28.240 --> 00:08:31.919
谢谢，还有下一个

00:08:33.760 --> 00:08:38.800
嗯，对不起，是的，所以继续

00:08:38.800 --> 00:08:44.480
ipld模式的graphql代码生成，现在在人们可以玩的地方

00:08:44.480 --> 00:08:49.120
有了它，这是很酷的，我们正在不断努力以使其更快

00:08:49.120 --> 00:08:55.120
并找出所有各种形式仍然有很多设计资料

00:08:55.120 --> 00:08:58.880
那当你有地图的时候你想要什么方法

00:08:58.880 --> 00:09:03.680
因为地图不是graphql拥有的东西

00:09:03.680 --> 00:09:06.959
不管有什么原因，它只是结构而已，但是您可以

00:09:06.959 --> 00:09:10.880
在它上面定义方法，所以我留下了一些笔记

00:09:10.880 --> 00:09:16.000
可能主要是针对各种设计问题以及如何

00:09:16.000 --> 00:09:19.839
它们与graphql和ipld cogen之间啮合

00:09:19.839 --> 00:09:25.120
类型架构，尤其是um

00:09:25.120 --> 00:09:28.480
您经常想在有不同之处进行分页

00:09:28.480 --> 00:09:31.760
传入请求，而这些请求则需要一个不同的集合部分

00:09:31.760 --> 00:09:35.040
列表或地图，现在我们唯一要做的就是

00:09:35.040 --> 00:09:39.440
在ipld.node上公开是一个迭代器呃，这意味着我们必须

00:09:39.440 --> 00:09:42.480
要么有状态地将迭代器保留在不同请求之间，

00:09:42.480 --> 00:09:47.120
知道现在在哪里，否则我们必须重新开始

00:09:47.120 --> 00:09:51.519
迭代器或以某种方式保持我们对获取方法的认识

00:09:51.519 --> 00:09:55.440
您知道地图或列表中的后10个项目

00:09:55.440 --> 00:09:58.640
嗯，尤其是在清单中，我的意思是我可以通过

00:09:58.640 --> 00:10:03.760
索引并希望它能起作用，但我们应该考虑一下是否

00:10:03.760 --> 00:10:06.800
有一种方法可以使用游标或其他一些标准的东西

00:10:06.800 --> 00:10:12.399
做一些值得你知道的事情来使人们的生活

00:10:12.399 --> 00:10:18.480
从这个意义上说，比较容易，嗯，我也很喜欢

00:10:18.480 --> 00:10:22.240
嗯，它存在于filecoin项目斜杠中

00:10:22.240 --> 00:10:26.240
去amp ipld或它的名字中仍然有ipld的东西

00:10:26.240 --> 00:10:31.839
um，并向其中添加了ipld node um方法，并且能够成功

00:10:31.839 --> 00:10:36.160
将其插入为ipld类型uh，这意味着它可以通过

00:10:36.160 --> 00:10:40.720
它不会加载整个adl，这从性能上来说是相当不错的

00:10:40.720 --> 00:10:44.000
改善，但我们应该考虑一下

00:10:44.000 --> 00:10:46.560
实际上意味着在实践中以及为什么我们会

00:10:46.560 --> 00:10:50.240
可能会阻止人们这样做

00:10:50.240 --> 00:10:53.440
修复呃或添加了更多的验证，我开始

00:10:53.440 --> 00:10:57.120
了解go代码的复杂性

00:10:57.120 --> 00:11:01.920
一代多一点，我们将尝试并继续投入一些

00:11:01.920 --> 00:11:04.399
那里的代码

00:11:07.040 --> 00:11:12.720
谢谢，接下来是彼得

00:11:13.600 --> 00:11:21.040
是的，恩，所以上周的ipod东西是的，恩，我

00:11:21.040 --> 00:11:24.240
终于想出了如何捕捉我需要的一切

00:11:24.240 --> 00:11:31.279
从莲花嗯，包括我们关心的所有状态，呃想通

00:11:31.279 --> 00:11:36.079
找出如何正确地将其隔离到呃

00:11:36.079 --> 00:11:40.399
放入平板，因为就像将其放入立体声或只是放入

00:11:40.399 --> 00:11:44.959
into到数据库不足以满足我们需要做的事情

00:11:44.959 --> 00:11:48.880
现在我实际上有一种捕捉方法

00:11:48.880 --> 00:11:53.040
这个特殊的街区是第一次出现

00:11:53.040 --> 00:11:55.760
在这样的时代等等

00:11:55.760 --> 00:11:58.000
有趣的是，我们将要做的事情

00:11:58.000 --> 00:12:03.040
我也可以捕获并记录主链

00:12:03.040 --> 00:12:10.079
这天已经访问了这个特定的呃块

00:12:10.079 --> 00:12:15.920
呃，我不能说我可以在里面为你整整一个dag

00:12:15.920 --> 00:12:18.800
数据库，但是它将是1 TB，我们

00:12:18.800 --> 00:12:24.320
不想那么做，但是我们至少可以拥有很高的

00:12:24.320 --> 00:12:27.600
像这样说的粒度

00:12:27.600 --> 00:12:33.279
在这一天和这一天，可能已经访问了呃块

00:12:33.279 --> 00:12:36.399
足以让人粗略了解在哪里看

00:12:36.399 --> 00:12:40.240
从那里您可以进一步深入了解诸如此类的信息

00:12:40.240 --> 00:12:47.600
我昨天刚在nerpo上进行这项工作，希望

00:12:47.600 --> 00:12:51.680
我们今天就可以开始主要摄取了

00:12:51.680 --> 00:12:54.160
这没有一点困难，我需要经历

00:12:54.160 --> 00:12:57.519
整个链一次实际上记录了所有这些

00:12:57.519 --> 00:13:02.399
这些嗯互动，但是

00:13:02.399 --> 00:13:06.240
是的，它希望本周能完成，所以你

00:13:06.240 --> 00:13:12.959
结果将有一种方法

00:13:12.959 --> 00:13:16.720
不仅是那里，还有什么时候被访问，我们当然会

00:13:16.720 --> 00:13:20.560
可以访问整个学生聊天链行业

00:13:20.560 --> 00:13:24.320
转发呃，我现在实际上正在处理中

00:13:24.320 --> 00:13:30.240
嗯，在所有较旧的地方上传uh，例如

00:13:30.240 --> 00:13:35.920
两三天前um组的块我只想看看如何

00:13:35.920 --> 00:13:38.000
它会去，我需要什么调整

00:13:38.000 --> 00:13:41.360
使twist曲曲折地变得更快

00:13:41.360 --> 00:13:48.160
嗯，是的，稍后要问的一个问题是

00:13:48.160 --> 00:13:52.079
如果有人有机会穿过小巷

00:13:52.079 --> 00:13:55.680
设置我放在一起只是为了确保

00:13:55.680 --> 00:14:03.120
我实际上并没有错过任何事情，但是是的，这或多或少是我的更新

00:14:03.120 --> 00:14:08.320
谢谢，接下来是克里斯

00:14:09.839 --> 00:14:16.560
嘿，大家有很多报道，但上周我确实和汉娜见面了

00:14:16.560 --> 00:14:20.000
关于验证图形同步的一些问题

00:14:20.000 --> 00:14:24.160
要求并获得一些灵感，寻求更好的方法，这实际上是

00:14:24.160 --> 00:14:28.800
更类似于她在gra and go中的操作方式，但嗯

00:14:28.800 --> 00:14:32.639
从我认为是高层次设计的角度来看，所以开始实施

00:14:32.639 --> 00:14:36.639
今天早上可以继续做下去

00:14:36.639 --> 00:14:40.399
嗯，走吧，这是我的更新

00:14:41.360 --> 00:14:48.000
谢谢um eric，您有任何更新吗，对不起，我仍在输入另一个

00:14:48.000 --> 00:14:54.160
缓冲区，还没有复制粘贴到嗯，所以在上周

00:14:54.160 --> 00:14:58.079
嗯，我已经聊了一些即将来临的汉普顿

00:14:58.079 --> 00:15:02.240
主要是通过其他人的工作，非常令人兴奋

00:15:02.240 --> 00:15:05.680
我们在星期四举行规格会议，

00:15:05.680 --> 00:15:10.399
上周我们设法再次做到了，嗯，我们应该对任何人说

00:15:10.399 --> 00:15:12.079
互联网上有谁在听这个

00:15:12.079 --> 00:15:15.440
这些不是超级秘密，它们只是与这次会议不同的会议

00:15:15.440 --> 00:15:20.079
如果有人想就规范和文档问题进行斗争

00:15:20.079 --> 00:15:24.399
和我们一起，让我们知道是不是喜欢出现

00:15:24.399 --> 00:15:28.560
在这次会议上谈论它或喜欢在irc或向我们发送消息

00:15:28.560 --> 00:15:33.040
我想我们想喜欢的东西要保持紧张

00:15:33.040 --> 00:15:37.759
有点像工作组的氛围，但这也不是秘密，所以

00:15:37.759 --> 00:15:41.040
无论如何，这是上周的星期四发生的，我当时的主要经历是

00:15:41.040 --> 00:15:44.000
感兴趣的是我们试图弄清楚将要发生的事情

00:15:44.000 --> 00:15:47.040
模式层中的任何规范再次

00:15:47.040 --> 00:15:50.160
嗯，我们已经招募了更多有关此的信息

00:15:50.160 --> 00:15:53.920
还有一些其他主题，我仍然欠大家一个公关

00:15:53.920 --> 00:15:56.399
记入团队管理会议的地方

00:15:56.399 --> 00:16:00.000
再次在互联网上的其他人，你可以去找到这个文本注释

00:16:00.000 --> 00:16:04.959
我们不会亲自录制这些会议，因为我坦白地说

00:16:04.959 --> 00:16:10.480
像在他们身上坦率地说嗯，但我们正在生产

00:16:10.480 --> 00:16:13.440
他们的文字笔记，就像记录的文物一样

00:16:13.440 --> 00:16:16.959
所以嗯，希望这是有成效的

00:16:16.959 --> 00:16:22.320
代码新闻中的内容

00:16:22.320 --> 00:16:25.759
所以我在尝试上花了点力气

00:16:25.759 --> 00:16:29.440
修改一些法典并进行ipld prime

00:16:29.440 --> 00:16:32.560
嗯，这是我可能要携带的警棍

00:16:32.560 --> 00:16:35.600
一点办法，然后尝试找到一个安全的安静地方再次放下

00:16:35.600 --> 00:16:40.639
因为这不是当前世界上最大的优先事项，而是

00:16:41.199 --> 00:16:45.759
这样做的目的主要是为了对

00:16:45.759 --> 00:16:48.880
去ipld的主要职位，这已经是什么

00:16:48.880 --> 00:16:50.880
我们知道我们想改善很长时间

00:16:50.880 --> 00:16:54.160
所以嗯，这是试图朝那个方向迈进

00:16:54.160 --> 00:16:57.839
um获得一些规范化的api，因此它们更易于插入和

00:16:57.839 --> 00:17:03.199
只是规范化尝试找出编解码器可配置性在哪里适合

00:17:03.199 --> 00:17:06.400
当我们容忍这种情况时，当然并非总是采用多编解码器

00:17:06.400 --> 00:17:10.079
必然喜欢支持可配置性，但是

00:17:10.079 --> 00:17:13.439
有时候，如果我们能有一个小小的开关，那真是太好了

00:17:13.439 --> 00:17:16.160
如果您真的知道自己在做什么，请使用

00:17:16.160 --> 00:17:20.559
像空白容忍度，嗯，所以目前这些东西是

00:17:20.559 --> 00:17:24.400
疯狂的屁股在旅途中配置我感到最棒的痛苦

00:17:24.400 --> 00:17:27.600
代码基础，它需要覆盖多个程序包，这只是丑陋的

00:17:27.600 --> 00:17:32.400
我正在尝试解决该问题，以尝试通过获取更多内部可重用的代码

00:17:32.400 --> 00:17:36.400
更好地放置标记化边界，并希望成为目标

00:17:36.400 --> 00:17:39.280
无论如何还是机会的改善

00:17:39.280 --> 00:17:42.960
所以这个已经有101个公关了

00:17:42.960 --> 00:17:47.760
我上周已经想起来了吗，现在112正在演示我的更多内容

00:17:47.760 --> 00:17:52.880
希望新的编解码器实际上看起来像这样，我认为其中一些代码是

00:17:52.880 --> 00:17:56.320
找出更简单的基准仍然很重要，因此我们将

00:17:56.320 --> 00:18:02.000
看一下性能改进，但是事情似乎有点动

00:18:02.000 --> 00:18:06.320
沿那里um 112 pr上升

00:18:06.320 --> 00:18:12.000
并且可以提供，如果有人想对其进行审查，但这还只是初步的

00:18:12.000 --> 00:18:15.520
例如缺少的基准测试，所以您知道

00:18:15.520 --> 00:18:18.240
带着一粒盐，那里可能需要更多的东西

00:18:18.240 --> 00:18:24.160
在那之前，附近还有一些未成年人的公关处，而且很小

00:18:24.160 --> 00:18:27.840
添加了诸如便捷功能之类的功能以选择链接

00:18:27.840 --> 00:18:32.799
一个节点树的小物件和um作为维可牢尼龙搭扣

00:18:32.799 --> 00:18:34.799
提到将有一个简短的谈论

00:18:34.799 --> 00:18:38.080
ipld，我明天要去另一个地方做

00:18:38.080 --> 00:18:41.440
关于新功能以及我们的发展方向将非常简短

00:18:41.440 --> 00:18:44.400
对于那些关注所有这些内容的人来说，可能实际上并不有趣

00:18:44.400 --> 00:18:48.559
会议的详细内容，但希望能成为一个很好的高级评论

00:18:48.559 --> 00:18:51.840
所以我将注册链接复制到我们的文本中

00:18:51.840 --> 00:18:54.240
如果有人想要的话，也为这次会议做笔记

00:18:54.240 --> 00:19:00.880
那就是对我来说，我实际上需要为此做好准备

00:19:02.400 --> 00:19:06.000
谢谢，嗯

00:19:06.720 --> 00:19:13.840
嗯，还有其他人吗

00:19:13.840 --> 00:19:17.440
我没有看到任何代理商项目

00:19:19.840 --> 00:19:25.280
不，那我想这是个快速会议

00:19:25.280 --> 00:19:28.799
很好，因为像我们最初一样，我们说的是

00:19:28.799 --> 00:19:32.160
从半小时扩展到一个小时，我们试图将其压缩

00:19:32.160 --> 00:19:36.320
试图保持半个小时，现在我们更好了，所以

00:19:36.320 --> 00:19:41.360
很好，是的，所以谢谢大家，

00:19:41.360 --> 00:19:46.880
下周再见

