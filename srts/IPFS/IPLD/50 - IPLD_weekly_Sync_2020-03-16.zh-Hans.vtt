WEBVTT
Kind: captions
Language: zh-Hans

00:00:15.840 --> 00:00:24.520
欢迎大家参加本周的知识产权会议，这是第一版

00:00:24.520 --> 00:00:29.489
特殊儿童在家版

00:00:29.579 --> 00:00:35.350
每周我们都会谈论上周所做的事情，

00:00:35.350 --> 00:00:42.640
我们计划在本周做任何其他事情，我们可能想谈谈

00:00:42.640 --> 00:00:51.120
因此，让我们看看前端播放器上的内容是什么，请将您的名字放在

00:00:51.120 --> 00:00:58.089
与会者列出或删除您的名字（如果您不在的话，因为我已将其放置）

00:00:58.089 --> 00:01:05.740
过去一周很酷，是的，我没做那么多，因为我最后一次猜到是什么

00:01:05.740 --> 00:01:14.650
那是在德国举行的地理会议，但我可能会讲一个有趣的话题

00:01:14.650 --> 00:01:19.810
我正在与OpenStreetMap社区的某人交谈，

00:01:19.810 --> 00:01:24.940
如果您要下载

00:01:24.940 --> 00:01:30.700
整个数据集都是卷曲的，并且它们以我认为的BitTorrent也是卷曲的

00:01:30.700 --> 00:01:36.130
好吧，这是IPS的紫色用例，然后我发现60

00:01:36.130 --> 00:01:42.940
千兆字节可能不是那么容易，有趣的是它们的方式

00:01:42.940 --> 00:01:48.550
转储它不适用于ipfs，因为它可能与当前

00:01:48.550 --> 00:01:54.070
分块，我们最终会得到很多独特的数据，所以您没有那么好

00:01:54.070 --> 00:01:59.470
重复数据删除，以便使用自定义块，否则可能会很酷，所以如果我们有一个

00:01:59.470 --> 00:02:06.940
为OpenStreetMap数据自定义分块器，它可能工作得很好，是的

00:02:06.940 --> 00:02:10.840
好吧，我认为这是一个很酷的用例，一旦我们进入了自定义分块

00:02:10.840 --> 00:02:17.939
和恩一起玩可能是一件好事，是的，我拥有的全部

00:02:17.939 --> 00:02:28.320
我列表上的下一个是原始的，什么是空的报告，所以我继续

00:02:28.320 --> 00:02:39.310
埃里克（Eric）所有您要做的事情仍然有一些时间让您的想法变得混乱

00:02:39.310 --> 00:02:49.450
在地球上的一周推着血腥的演员走来带来了一些有趣的事情

00:02:49.450 --> 00:02:59.650
关于我们要如何导出被调用的节点样式的评论

00:02:59.650 --> 00:03:05.760
目前导出了一些非常有趣的指令，我们正在辩论做一些

00:03:05.760 --> 00:03:11.560
为了使输出反馈看起来更好，采用了怪异的编码风格

00:03:11.560 --> 00:03:15.910
欢迎大家在乎，否则我会花一些时间

00:03:15.910 --> 00:03:22.870
sidequest看着ipfs及其使用方法，我剥D并尝试考虑如何

00:03:22.870 --> 00:03:26.650
我们可以使它们在将来更加顺利地融合在一起，甚至可能

00:03:26.650 --> 00:03:32.350
即将进行的重写，我认为其中大部分与这次会议无关。

00:03:32.350 --> 00:03:41.770
我只是觉得很糟糕，我没什么好说的，接下来我的清单是

00:03:41.770 --> 00:03:51.790
迈克尔你好，我们走吧：哦，是的，嗯，仍然在做这个大事

00:03:51.790 --> 00:03:58.000
数据量达到一些非常有趣的性能问题

00:03:58.000 --> 00:04:04.570
特别是对于发电机，就像阻碍了很多进步一样，因此

00:04:04.570 --> 00:04:10.360
使我真正地价值8整个方法，而实际上

00:04:10.360 --> 00:04:15.520
避免一些大型的发电机问题，这也让我发现了一个奇怪的问题

00:04:15.520 --> 00:04:20.710
s3性能的一角，显然s3性能将

00:04:20.710 --> 00:04:24.880
最佳修复的瓶颈，因此您可以在其中找到最大读取量

00:04:24.880 --> 00:04:29.410
写入容量是一个完美的基础，所以我想出了一种做块的方法

00:04:29.410 --> 00:04:32.470
存储我们只需要获取哈希值，然后使目录名称和

00:04:32.470 --> 00:04:35.139
在代码中使用斜线，然后突然间我们得到

00:04:35.139 --> 00:04:40.130
像性能图表一样，我们在每个块上都获得了最大的性能

00:04:40.130 --> 00:04:47.560
太好了，现在我女儿正在打字，所以现在就用它

00:04:47.560 --> 00:04:51.050
通常会研究一种针对整个大数据收集的新方法，

00:04:51.050 --> 00:04:55.190
甚至在我们做的第一天就进行了重构，但总体而言

00:04:55.190 --> 00:04:59.930
它将变得更快，更容易，因此进行工作也使很多

00:04:59.930 --> 00:05:04.550
dag DB的进展，这正在显示一些非常有趣的新用例

00:05:04.550 --> 00:05:09.470
用于汽车文件，就像使用git repo这样的汽车文件，

00:05:09.470 --> 00:05:12.770
然后每次执行操作都只是替换汽车文件

00:05:12.770 --> 00:05:16.310
与新的，因此我们目前拥有的api

00:05:16.310 --> 00:05:20.570
操纵汽车文件不是非常适合，这就像一个完整的文件。

00:05:20.570 --> 00:05:25.460
每次您突然操作它时都会重写整个图

00:05:25.460 --> 00:05:29.180
到目前为止，不是什么设计的，而是先生的生意和有趣的用途

00:05:29.180 --> 00:05:32.630
您可能要考虑前进的案例，所以我将对此进行一些探讨

00:05:32.630 --> 00:05:37.850
更多，然后又像我开始建立一些索引

00:05:37.850 --> 00:05:42.889
现在的基础架构以及缺少多块肮脏数据结构

00:05:42.889 --> 00:05:47.030
我们在IPL D中将成为一个问题，所以在某个时候我们将

00:05:47.030 --> 00:05:51.110
必须回到那些地方，在上面放一些东西，因为那里只有一个

00:05:51.110 --> 00:05:54.770
如果没有一些良好的功能，您现在无法在该Kildee上构建很多应用程序

00:05:54.770 --> 00:06:14.210
是时候工作了，所有项目负责人都被要求这样做，是的，所以

00:06:14.210 --> 00:06:20.780
所有项目都在进行应急计划以发表评论，所以我会

00:06:20.780 --> 00:06:25.700
制定一个计划，你知道我是否必须被我女儿拉住

00:06:25.700 --> 00:06:31.130
去为她或团队不必停止做的任何事情播放视频

00:06:31.130 --> 00:06:34.880
工作，每个人都知道该联系谁，所以可能只是一个清单

00:06:34.880 --> 00:06:39.440
IPL D的不同领域以及与之联系的人不会像Kira的人那样

00:06:39.440 --> 00:06:43.969
现在是新来的我，因为我现在感觉没有任何人有足够的能力

00:06:43.969 --> 00:06:48.289
可见度确实如此，但是直到

00:06:48.289 --> 00:06:52.449
就像扑克上的铁锈和Eric上的东西一样，所以

00:06:52.449 --> 00:06:58.599
期望这个计划可能在今天或明天，对我来说就是这样

00:06:59.090 --> 00:07:07.010
好的，谢谢你，第二分钟，我有基督徒宠物和提问者，是的，你

00:07:07.010 --> 00:07:13.070
在汽车方面就很好地举起了你的手，就像

00:07:13.070 --> 00:07:17.960
像数据存储替换一样有趣，是的，不，我的意思是

00:07:17.960 --> 00:07:22.040
现在肯定不是为此设计的，但是考虑一下它是有趣的

00:07:22.040 --> 00:07:25.190
将需要这样做，并且它与我们正在使用的其他一些东西重叠

00:07:25.190 --> 00:07:28.910
就像最近一样，我们正在谈论如何才能真正做到

00:07:28.910 --> 00:07:33.490
有效地固定我们需要做的就是保持橡胶的所有指数

00:07:33.490 --> 00:07:38.630
当前每个块的所有链接以及我们当前链接到谁的块

00:07:38.630 --> 00:07:41.240
拥有数据存储权就像拥有该索引一样，但是允许我们这样做

00:07:41.240 --> 00:07:45.290
真正相关的垃圾收集，您想做一些非常相似的事情

00:07:45.290 --> 00:07:48.740
汽车文件，您希望拥有该索引的那一层，以便在什么时候

00:07:48.740 --> 00:07:52.370
您进行操作即可看到哪些块是孤立的，如果有

00:07:52.370 --> 00:07:57.380
是唯一指向它们的链接，然后您就可以做一个非常有效的新

00:07:57.380 --> 00:08:00.620
如果您只知道所有块偏移量，则无需Rhian编码即可获得汽车文件的右侧

00:08:00.620 --> 00:08:02.960
因为那样你就可以走了哦，或者这些东西是新的

00:08:02.960 --> 00:08:06.950
现在可以从旧数据中获得一个新的，而不是像一个完整的真实代码流程图

00:08:06.950 --> 00:08:12.590
操纵，但问题是我们想使这个故事复杂化吗？

00:08:12.590 --> 00:08:15.770
我们一直在谈论建立索引，不仅包括链接中的链接

00:08:15.770 --> 00:08:21.620
返回，而不仅仅是偏移量，还是我们想让它只是扫描

00:08:21.620 --> 00:08:25.400
整个过程，只是需要先期准备，所以我将对此进行探索

00:08:25.400 --> 00:08:27.860
使用当前的汽车格式，我可能会在某个时候编写一个库

00:08:27.860 --> 00:08:31.820
尝试更有效地做到这一点，然后浮出水面的任何要求

00:08:31.820 --> 00:08:35.180
如果我们想解决这个问题，请为汽车格式的下一个版本向前迈进

00:08:35.180 --> 00:08:38.409
汽车文件格式的用例

00:08:39.360 --> 00:08:44.740
太太。小姐，你静音了，静音静音，对不起，我以为这是工作，但如果你有

00:08:44.740 --> 00:08:48.750
就像一些核心格式，听起来像汽车，但就像步行

00:08:48.750 --> 00:08:53.230
格式或类似存储标签，但非常灵活，然后汽车就像是特定的

00:08:53.230 --> 00:08:57.310
该版本的所有集中档案都具有特定的形式，

00:08:57.310 --> 00:09:02.170
因为建立在同一基础之上的其他事物（例如步行商店）

00:09:02.170 --> 00:09:08.860
的想法，但是是的，我没去，我们在换车，因为他们会以肉欲

00:09:08.860 --> 00:09:12.160
就像其他内容的可变数据一样，这是一个重大事件

00:09:12.160 --> 00:09:18.340
搭建好一切，我不会像这次会议一样出轨，不，我是说这是一个

00:09:18.340 --> 00:09:22.570
我会说有趣的领域就像我们已经思考了一段时间

00:09:22.570 --> 00:09:26.320
关于存储API的外观，他们在此方面做得更好，并且会

00:09:26.320 --> 00:09:30.490
有类似我们是否存储此图块的整个图形之类的信息，或者不正确

00:09:30.490 --> 00:09:33.790
就像给我们一个所有链接到的事物的索引，以及

00:09:33.790 --> 00:09:38.380
正确地链接到当前存储系统中的附件，例如附加组件是什么

00:09:38.380 --> 00:09:42.040
我们需要进行更有效的运营，当我考虑如何

00:09:42.040 --> 00:09:48.510
将其移植到不同的存储后端，就像我看不到

00:09:48.510 --> 00:09:54.040
特定的文件格式会有所帮助，因为就像我在做s3一样

00:09:54.040 --> 00:09:57.190
我实际上只是在使用像钥匙一样的存储来存储很少的东西

00:09:57.190 --> 00:10:02.230
用这些东西索引这些东西，是的，所以在那里，但值得

00:10:02.230 --> 00:10:06.850
就像思考我们可以建立的所有不同层次

00:10:06.850 --> 00:10:11.470
以及我们可以利用的方式[音乐]

00:10:14.259 --> 00:10:23.899
好吧，我排在第二位的是Chris嗨，所以我赶快和Michael呆在​​一起

00:10:23.899 --> 00:10:28.610
上周只是看我如何能帮助该项目，基本上决定

00:10:28.610 --> 00:10:33.829
专注于从应用程序开发人员的角度提供反馈图标的可用性

00:10:33.829 --> 00:10:38.180
API的名称为and而并非如此，所以我想你们当中的任何人都知道我正在从事

00:10:38.180 --> 00:10:42.529
医学成像空间正在构建原型，所以我提供了几个

00:10:42.529 --> 00:10:45.740
问题和对话是的，您可能会与迈克尔就其中一些问题进行讨论

00:10:45.740 --> 00:10:51.259
从我的角度来看，但我可以帮助他做其他事情

00:10:51.259 --> 00:10:56.660
随时可以ping我，知道我会尽力帮助与我紧密相关的人

00:10:56.660 --> 00:11:05.180
朋友，我正在第一步工作，你知道一件事，是的，所以

00:11:05.180 --> 00:11:10.370
获得一些现实世界或第一手经验，在某个时候我

00:11:10.370 --> 00:11:13.790
不确定与特斯拉互动的最佳方式会吸引这支团队，但想请

00:11:13.790 --> 00:11:17.240
分享一些有关它如何工作的信息，并获得设计反馈

00:11:17.240 --> 00:11:22.999
大概在下周召开，或者可以安排一个单独的会议，我不确定是否

00:11:22.999 --> 00:11:26.029
并可能以这种方式将众生分开如果您不想来，就不必

00:11:26.029 --> 00:11:32.360
你知道占用你的时间一件事是，我需要某种方式好吧，我

00:11:32.360 --> 00:11:36.050
原本以为我是一个个人项目，要使用集中式数据库来

00:11:36.050 --> 00:11:41.990
指出您知道IP fsip LD，但随后您知道Michael所做的工作

00:11:41.990 --> 00:11:45.709
爸爸数据库，这让我觉得您实际上可以在IP之上构建数据库

00:11:45.709 --> 00:11:50.689
LD不必拥有单独的对立数据库，因此最终

00:11:50.689 --> 00:11:53.959
想要绕动轨道数据库，我敢肯定你们已经看着你了

00:11:53.959 --> 00:11:56.990
但这是有限的，就像薄雾笼罩的一切都需要成为记忆

00:11:56.990 --> 00:12:00.860
所以这不合适，但我认为我真的很喜欢这个想法

00:12:00.860 --> 00:12:04.069
和迈克尔，你是从爸爸开始的，好像你知道吗

00:12:04.069 --> 00:12:08.509
就您而言，过渡是一件很酷的事情

00:12:08.509 --> 00:12:12.709
通常可扩展的数据库，并提供这种搜索功能

00:12:12.709 --> 00:12:18.439
这很有用，所以您问我的更新我最后有几个问题，如果

00:12:18.439 --> 00:12:24.129
我们有时间将这些时间投入到小组中以表示感谢

00:12:26.610 --> 00:12:36.920
其他人没有任何更新吗Peter Oh Steven对此没有任何帮助

00:12:36.920 --> 00:12:41.580
您之所以出色是因为您的完美材料会在不久的将来发布

00:12:41.580 --> 00:12:48.840
您有任何需要修复的已知问题，请不要这样做

00:12:48.840 --> 00:12:53.370
包括进出口没有合并，它可能会合并

00:12:53.370 --> 00:13:01.790
包括进出口，是的，我们将确保将数据秘书关闭

00:13:01.790 --> 00:13:08.490
我会去很多，然后做一个简短的回顾，是的，是的，那里的想法

00:13:08.490 --> 00:13:13.800
就像我们希望在PowerPoint启动和下一个发行版中那样

00:13:13.800 --> 00:13:22.920
六个星期后就要出来了，是的，我实际上没有

00:13:22.920 --> 00:13:32.700
关键我没有打开BFS，但我会在更早的时候添加我们，我们需要说好吧，是的

00:13:32.700 --> 00:13:38.820
其他我想这是我们想要开会的时候的更新

00:13:38.820 --> 00:13:43.830
拥有相当广泛的受众，并且我们可以了解更多有关汽车用例的信息

00:13:43.830 --> 00:13:49.410
我说过的汽车档案用例似乎确实是我们不断追求的目标

00:13:49.410 --> 00:13:53.730
回到我们谈论功能的时候，我想使用它就可以了

00:13:53.730 --> 00:13:57.750
以及该功能的使用情况，当我想在这种情况下使用该功能时

00:13:57.750 --> 00:14:04.650
因此，最好了解一下汽车的用途范围

00:14:04.650 --> 00:14:11.850
我们打算将汽车用于什么，然后帮助定义v2功能

00:14:11.850 --> 00:14:20.730
设置，因为它可能是敞开的，那不是最大的事情，所以

00:14:20.730 --> 00:14:24.570
我们将尝试开会，希望本周能有所作为

00:14:24.570 --> 00:14:28.800
但我不知道这是否可以使我开展任何工作来组织他们尝试

00:14:28.800 --> 00:14:32.600
并在这里和其他地方吸引一些人

00:14:34.290 --> 00:14:39.449
很酷，我忘了更新，因为我当时也在会议上

00:14:39.449 --> 00:14:44.639
还有关于地理标准的信息，所以Stennis这个组织还不错，

00:14:44.639 --> 00:14:49.559
 OGC为开放式司法公正做标准，并且即将到来

00:14:49.559 --> 00:14:54.389
标准，这就像所有其他即将发表的声明的基础，因此

00:14:54.389 --> 00:15:00.449
他们用类似

00:15:00.449 --> 00:15:05.100
宁静的方法和JSON，以及目前的所有规范

00:15:05.100 --> 00:15:11.220
硬编码HTTP到规范中，我将打开一个问题，并提供一些支持

00:15:11.220 --> 00:15:17.429
其他人，至少他们说也允许其他协议，我

00:15:17.429 --> 00:15:21.720
想要进行更改，因为问题是我希望获得该提要

00:15:21.720 --> 00:15:27.479
这个新的标准就像十字架，在接下来的10 15年中，所有G

00:15:27.479 --> 00:15:32.759
诸如政府和机构之类的相关事物，等等，至少是开放的

00:15:32.759 --> 00:15:38.519
至少有一个穿好衣服的系统和请假的方式的门

00:15:38.519 --> 00:15:45.419
或非HTTP协议，所以我也将其打开，而且机会很大

00:15:45.419 --> 00:15:51.089
希望能有所改变，但我们会看到您可以在

00:15:51.089 --> 00:15:54.649
请注意一点，既然有兴趣，是的，是的，是的，我会

00:15:54.649 --> 00:15:59.639
是的，我们实际上在谈论一件事，这更多是为了

00:15:59.639 --> 00:16:04.829
Stephen和Peter的利益，但是他们的用例有点有趣，而且

00:16:04.829 --> 00:16:07.889
它们就像自定义文件格式，只是在其中有一堆协议缓冲区

00:16:07.889 --> 00:16:16.649
没关系，就像迈克尔被告知您知道这是唯一的对手

00:16:16.649 --> 00:16:24.049
是的，但它浮出水面的是

00:16:24.049 --> 00:16:28.109
甚至兔子也不会很好，因为其中有一些压缩数据

00:16:28.109 --> 00:16:33.029
那里会引入噪音，然后是指纹以及您实际想要的东西

00:16:33.029 --> 00:16:36.179
只是一个定制的Tumkur，可能有很多类似的案例

00:16:36.179 --> 00:16:39.449
自定义分块器实际上就是您要编写的内容，并且使用了大量

00:16:39.449 --> 00:16:43.589
时间，因此有了ApS，可以更轻松地提供自定义

00:16:43.589 --> 00:16:48.060
区块器可能会真的很棒，这很令人惊讶

00:16:48.060 --> 00:16:52.320
我碰到了多少个使用过的孩子，哦，这个众所周知的文件

00:16:52.320 --> 00:16:56.040
格式可以从另一个小丑中受益，就像哦，这个人不疯狂

00:16:56.040 --> 00:17:02.970
用例的需求实际上就来了Steven Hey Disney

00:17:02.970 --> 00:17:08.100
彼得的解决方案将非常适合小事，例如他的a或

00:17:08.100 --> 00:17:11.160
埃塞克斯（Essex）就像是无可挑剔的界限，这是一件非常普通的事情，

00:17:11.160 --> 00:17:16.620
你不得不喜欢你的黑线鳕普通人，我不知道这是不是很奇怪

00:17:16.620 --> 00:17:21.450
文件格式可以做到这一点，但就像tar一样，几乎所有内容都是这样

00:17:21.450 --> 00:17:26.700
这是一回事，而另一件事是我正在构建的工具

00:17:26.700 --> 00:17:30.510
将实际使用我们来与流媒体交流流密钥

00:17:30.510 --> 00:17:37.320
EFS接口编写一个称为另一个链接的分块器，并保持良好

00:17:37.320 --> 00:17:42.090
这样的东西对您来说是看不见的，所以很小，所以写一个自定义

00:17:42.090 --> 00:17:47.670
理想情况下，分块器将类似于20行代码，其他所有操作都将完成

00:17:47.670 --> 00:17:53.280
对你来说，是的，我的意思是像II一样需要有效地结束了

00:17:53.280 --> 00:17:57.000
为此大数据工作定制的分块器，所以我必须将其放在最上面

00:17:57.000 --> 00:18:01.140
是JSF EFS的一部分，实际上很难以这种方式来处理代码

00:18:01.140 --> 00:18:04.680
在那儿，然后是PRS，但现在实际上相当容易

00:18:04.680 --> 00:18:09.420
容易做到这一点，所以在一定程度上就像工具问题一样，但是嗯

00:18:09.420 --> 00:18:12.090
是的，我会说，所以高贵的东西肯定会帮助我

00:18:12.090 --> 00:18:15.870
特别是对于buff案件，但我在其他案件的午餐中感到担心

00:18:15.870 --> 00:18:19.590
您正在压缩任何东西，并通过凸轮使用新鲜的东西

00:18:19.590 --> 00:18:23.310
一旦使用某种形式的压缩，就会大范围地鼓励您

00:18:23.310 --> 00:18:27.270
搞砸了所有的指纹，它不再有用了，

00:18:27.270 --> 00:18:31.050
就像我之前遇到的情况实际上是javascript压缩

00:18:31.050 --> 00:18:35.640
就像你知道他们给它压缩一样，因为你只是吐出来

00:18:35.640 --> 00:18:38.970
像是最后的可用JavaScript，但事实证明，好像有一定程度的

00:18:38.970 --> 00:18:42.510
引入噪声的噪声，甚至在很小的情况下也会发生类似的突变

00:18:42.510 --> 00:18:46.980
变化，然后完全搞砸了，而不喜欢调低它

00:18:46.980 --> 00:18:51.240
基本上使块状炮手小于像您这样的哈希线

00:18:51.240 --> 00:19:01.680
真的不需要太多数据好问题

00:19:01.680 --> 00:19:07.500
是的，克里斯，您实际上与之相关的是一种二进制数据

00:19:07.500 --> 00:19:12.120
管理，因此在医学成像中，我们每天要处理的大部分时间

00:19:12.120 --> 00:19:17.030
是医学图像，并且可以用不同的方式解压缩，而我实际上

00:19:17.030 --> 00:19:23.070
从校园文件中移出进行存储的原因有很多，但其中一个只是

00:19:23.070 --> 00:19:26.490
就像我们说我们无法控制分块，所以我无法接受

00:19:26.490 --> 00:19:32.130
重复数据删除的优势使我得以继承，因此可以控制在哪里

00:19:32.130 --> 00:19:37.340
我的大块文件实际上可以使ipfs在我的用例中更好地工作

00:19:37.340 --> 00:19:43.860
这就是为什么我这样做的原因是我实际上一直在使用VIP LD存储二进制数据

00:19:43.860 --> 00:19:48.120
使用你们可能有点颤抖的原始编解码器，但我这样做的原因

00:19:48.120 --> 00:19:53.280
那是因为性能，所以它实际上是最快的存储和检索

00:19:53.280 --> 00:19:57.060
实际上，这是一种反馈点，您知道的是，

00:19:57.060 --> 00:20:02.040
确实是邪恶的或可以做的，因为它实际上只是一部分二进制数据

00:20:02.040 --> 00:20:07.170
在那里，但我实际上遇到的问题是，似乎有需要或

00:20:07.170 --> 00:20:12.300
可能有一个值，并且具有专门用于以下目的的单独模式

00:20:12.300 --> 00:20:17.280
blob，所以我们有了UNIX fSV-它使您知道它是一种文件权限

00:20:17.280 --> 00:20:19.440
您终于知道了，并且您拥有权限，还有其他一些东西

00:20:19.440 --> 00:20:23.220
但是，如果您只想存储一个Blob，就知道像我的情况一样，我不想

00:20:23.220 --> 00:20:29.610
实际将其存储为CT中的文件，我只想要一个多块Blob序列

00:20:29.610 --> 00:20:33.300
Seemeth将会是一个架构，最重要的是，他们甚至可能是UNIX FSB-

00:20:33.300 --> 00:20:39.210
可以用我想把这个想法扔出去，看看你们是怎么想的

00:20:39.210 --> 00:20:44.660
完全可以，这是我写的一个好主意

00:20:46.550 --> 00:20:52.710
是的，这叫我相信我们定居的最终名称就像

00:20:52.710 --> 00:21:00.240
是灵活的二进制列表，所以它只是任意长度的二进制文件，

00:21:00.240 --> 00:21:06.780
从任何内容扩展-从嵌入字节到仅一个链接字节-如

00:21:06.780 --> 00:21:14.430
这样嵌套，目标就这样，就像您不绑定布局算法一样

00:21:14.430 --> 00:21:17.249
芦苇的方法，所以你可以有一个共同的

00:21:17.249 --> 00:21:21.119
阅读，然后找出将来更好的布局，每个人仍然可以

00:21:21.119 --> 00:21:25.259
仍然读取旧数据，是的，我实际上是我的计划是实际推

00:21:25.259 --> 00:21:29.340
建立了一个dag DB，所以dag DB具有这样的方式，就像可以带特殊对象并

00:21:29.340 --> 00:21:33.600
然后基本上，当您将它们作为值传递给它时，它将创建

00:21:33.600 --> 00:21:37.769
另一个块，然后链接到它，因此该块基本上是一个要说的信号

00:21:37.769 --> 00:21:41.399
为此做一些特别的事情，所以我在达格尼（Dagny）中要做的一件事情

00:21:41.399 --> 00:21:46.049
B是您可以像在任何流中一样在流中传递它，或者实际上可以在棍子中传递它

00:21:46.049 --> 00:21:51.899
生成二进制文件的生成器，它将基本上使用该FTL代码二进制文件

00:21:51.899 --> 00:21:56.789
较少的代码将其编码为那样，然后当您从中读取它时

00:21:56.789 --> 00:22:00.090
数据库，您还将获得一个流对象，像这样的基础

00:22:00.090 --> 00:22:02.789
数据结构法则和其他一些内容，是的，我将向您发送一个链接到末尾

00:22:02.789 --> 00:22:09.239
很棒的模式，特别是这里的质量

00:22:09.239 --> 00:22:11.729
知道我是否真的可以贡献你们在我前面的东西

00:22:11.729 --> 00:22:15.210
是的，我会看的是因为你知道你有很多事情

00:22:15.210 --> 00:22:18.899
谈论那里就像麦特森，是的，有两种方法可以做到这一点

00:22:18.899 --> 00:22:21.749
好吧，鉴于这是另一个问题

00:22:21.749 --> 00:22:28.080
哦，是的，非常快，所以也许我实施了，您是否喜欢

00:22:28.080 --> 00:22:34.769
原始编解码器来存储二进制块，或者像Tibor甲板那样使用二进制编解码器，因此

00:22:34.769 --> 00:22:40.559
模式不是特定于编解码器的，因此您可以使用卡座JSON或卡座Ybor

00:22:40.559 --> 00:22:43.820
可能无法使用egg P，因为它与数据模型不兼容，但是像

00:22:43.820 --> 00:22:50.159
所以基本上我是您可以将二进制作为值嵌入，也可以链接

00:22:50.159 --> 00:22:55.739
到盒子上，所以如果它很小的话，基本上可以内联它，所以这个想法是

00:22:55.739 --> 00:22:58.619
就像您仍然拥有一种数据结构和一种读取方法一样

00:22:58.619 --> 00:23:02.399
即使您只是将它们嵌入字节，也不必这样做

00:23:02.399 --> 00:23:07.499
像Union一样，如果def代码像其他地方一样，是的

00:23:07.499 --> 00:23:10.979
然后是的，像这样对Rob进行了锁定管理

00:23:10.979 --> 00:23:15.029
基础数据不是它不会做旧事和鸡蛋PB

00:23:15.029 --> 00:23:18.179
可以用来做你喜欢的包装二进制文件并添加鸡蛋的地方

00:23:18.179 --> 00:23:23.869
每次因为我一直在问，就像将杆块原始存储

00:23:23.869 --> 00:23:29.370
编解码器犹太男人，这听起来很合理，在这种情况下还可以

00:23:29.370 --> 00:23:32.760
这是肯定的另一个方法，希望能有一个快速的问题

00:23:32.760 --> 00:23:36.930
这太快了，所以我去过图同步，我只是想从

00:23:36.930 --> 00:23:41.520
范围旨在替换某天的交换，我就像一个问题

00:23:41.520 --> 00:23:46.740
好吧，这是一件单独的事情，不是，它不会擅长某些事情

00:23:46.740 --> 00:23:50.760
而且在某些方面会更好，例如，如果您有很多同龄人

00:23:50.760 --> 00:23:54.840
有了数据，您就得到了一个非常宽的图形，最终将它更快地输出了出来。

00:23:54.840 --> 00:23:59.400
交换的一部分，因为您可以一次从多个对等点获取数据

00:23:59.400 --> 00:24:04.950
如果您看看BitTorrent的运作方式，那自然就是一种平衡

00:24:04.950 --> 00:24:08.330
有效地是真正的高需求洪流，它看起来很像位交换

00:24:08.330 --> 00:24:16.230
但是当你有一个像我们在区块链图中的线性链时，缘故就像

00:24:16.230 --> 00:24:19.860
就像您知道的那样，基于抓紧度，图形的深度快了几个数量级

00:24:19.860 --> 00:24:24.210
您基本上是在保存所有这些往返行程，因此只需添加一些链接

00:24:24.210 --> 00:24:32.360
为了在任何情况下都可以逆转

00:24:32.360 --> 00:24:36.420
坦率地说，即使您没有递归案例，但只有一个

00:24:36.420 --> 00:24:39.690
查看您的数据，您可能会从链接到的抓取中获得更高的性能

00:24:39.690 --> 00:24:43.650
因为即使是1peter，您来回的次数也较少

00:24:43.650 --> 00:24:48.900
真的不像所有这样的人都非常适合

00:24:48.900 --> 00:24:51.900
您同时从中提取数据，因为您必须这样做

00:24:51.900 --> 00:24:56.100
像您自己和您自己的逻辑那样的平衡和并行性，

00:24:56.100 --> 00:25:01.080
那么你就知道弄清楚是什么将其发送给其他人，然后再根据

00:25:01.080 --> 00:25:05.850
只是谁是一个优秀的资源团队或另一个讨论手工艺的团队？

00:25:05.850 --> 00:25:11.100
我应该去学习更多有关这的内容取决于哪一部分，所以如果

00:25:11.100 --> 00:25:15.560
您想知道像Eric和Tim这样的选择器部分

00:25:15.560 --> 00:25:23.100
协议部分可能是汉娜（Hannah）和史蒂芬（Steven）是的，因为

00:25:23.100 --> 00:25:28.290
有线协议由汉娜（Hannah）编写，由史蒂文（Steven）设计，我们没事了

00:25:28.290 --> 00:25:37.950
而且没有任何JavaScript版本，但是没有，但是用不了多久

00:25:37.950 --> 00:25:40.830
蒂姆（Tim）将编写选择器，部分地，然后就可以了。

00:25:40.830 --> 00:25:45.330
协议的工作，我对此没有足够深入的了解

00:25:45.330 --> 00:25:48.170
知道那是多少工作

00:25:49.310 --> 00:25:55.920
目前，手工制作的线材格式也使用了部分

00:25:55.920 --> 00:26:00.690
对我们，我认为我们每个参与的人都同意我们希望离开

00:26:00.690 --> 00:26:07.020
从昨天开始，但是需要完成，所以我的意思是它实际上使用了AG

00:26:07.020 --> 00:26:11.940
 P啤酒不只是留下原始缓冲区，他完全为我们感到骄傲，所以我

00:26:11.940 --> 00:26:16.560
是的，是的，这有点像我的意思，如果您使用的是默认值

00:26:16.560 --> 00:26:19.950
阻止API，那么您无论如何都包含de PB，所以您会喜欢

00:26:19.950 --> 00:26:22.920
来自buff图书管理员的信息，因此实际上并不会增加捆绑包的大小

00:26:22.920 --> 00:26:26.520
并且JavaScript支持调用，但我们不必处理dag

00:26:26.520 --> 00:26:30.570
我们喜欢的PB编解码器之类的东西就是使用一个配额buff库

00:26:30.570 --> 00:26:37.920
合理，我想是的，它确实很烂，我们会有点痛苦

00:26:37.920 --> 00:26:44.220
应该只考虑在Seaborn中写作，因为我认为每个人都很漂亮

00:26:44.220 --> 00:26:54.900
无论如何，我想我们可能实际上更容易做到这一点

00:26:54.900 --> 00:26:58.500
我们说过，当他们在设计时，我们说请使用dag

00:26:58.500 --> 00:27:06.240
查看更多是是，但我认为像早期一样，许多早期规格已经完成

00:27:06.240 --> 00:27:20.910
带有protobuf模式，所以我认为我有些神秘

00:27:20.910 --> 00:27:27.150
听说有人在一年之内捍卫了原型缓冲区，所以我想来

00:27:27.150 --> 00:27:35.130
回答几个问题，亲爱的保持奇怪或其他人听

00:27:35.130 --> 00:27:39.090
谁可能以前没有听说过这些关键字，所以您问了如何

00:27:39.090 --> 00:27:44.160
处理大量的二进制数据Chris和Michael谈了一点

00:27:44.160 --> 00:27:51.180
关于他的灵活字节列表，是的，我认为这是

00:27:51.180 --> 00:27:56.590
很酷的布局哦，这是一个特定的实例

00:27:56.590 --> 00:28:01.629
我们称为高级实验室的最佳解决方案类别，以获取最佳数据

00:28:01.629 --> 00:28:05.799
布局或简称ADL，我不知道您是否偶然发现了该术语

00:28:05.799 --> 00:28:13.629
但这就是整个事物的名称，主要是

00:28:13.629 --> 00:28:18.879
用于解决跨多个块的拆分数据，但另一个统一

00:28:18.879 --> 00:28:25.419
这里的特点是我们默契地理解，需要编写一些代码

00:28:25.419 --> 00:28:30.129
写作中的阅读感，所以通常这与

00:28:30.129 --> 00:28:33.999
将东西分成多个块，但例如也可以使用

00:28:33.999 --> 00:28:37.269
对于加密，在这种情况下，我们有一个假设

00:28:37.269 --> 00:28:41.759
证明，但这已经被讨论为一个很酷的主意

00:28:41.759 --> 00:28:47.259
至少我不知道，也许是因为他们不知道

00:28:47.259 --> 00:28:52.809
所以这是您可以编写自己的自定义代码来执行的常规功能

00:28:52.809 --> 00:28:57.490
您自己的自定义图表可能适合ADL的一般概念，

00:28:57.490 --> 00:29:03.220
通过上市使之变得灵活的事情只是我们已经做过的事情之一

00:29:03.220 --> 00:29:08.289
从拓扑上听起来像什么，然后发出斑点或苏马，然后

00:29:08.289 --> 00:29:13.059
您只需要在顶部添加一些代码即可读取或编写它，等等

00:29:13.059 --> 00:29:17.080
我们希望那会成为您的想法，因为您还认为这是一种非常可重用的

00:29:17.080 --> 00:29:22.119
东西，我们也可能会尝试将其放入Unix FSB的中间，并且

00:29:22.119 --> 00:29:25.119
希望对您的独立字节需求足够有用

00:29:25.119 --> 00:29:29.559
我们将要执行五个系统，是的，我认为这里的优势是

00:29:29.559 --> 00:29:34.029
就像数据模型中的所有内容都可以与任何类型的IP库一起使用一样

00:29:34.029 --> 00:29:39.249
您可以序列化，反序列化并读取字节，并在您完成所有操作后

00:29:39.249 --> 00:29:42.850
击中这些更高级的用例，例如我有大量的二进制文件被拆分

00:29:42.850 --> 00:29:46.659
一棵树，你现在在土地上，好吧，你需要我感觉到，加上一些

00:29:46.659 --> 00:29:51.730
其他代码，基本上就是我们一直在指的是

00:29:51.730 --> 00:29:54.639
先进的布局，其中只有我们的产品之外

00:29:54.639 --> 00:29:57.070
现成的，我觉得图书馆如果你能做到的话

00:29:57.070 --> 00:30:00.789
我们仍在研究如何最好地标准化所有这些东西，但是

00:30:00.789 --> 00:30:03.399
我们至少要标准化架构

00:30:03.399 --> 00:30:06.700
为他们，然后链接到可以去拉的几个实现

00:30:06.700 --> 00:30:09.360
但是下来

00:30:12.120 --> 00:30:23.140
好吧，我们已经准备好半小时了，所以我想今天就是这样，然后

00:30:23.140 --> 00:30:29.730
再见大家，下周再见

