WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:03.529
在本地比上课的情况下无法正常工作

00:00:03.529 --> 00:00:13.250
好的，欢迎大家，但您仍在开始哦，是的，但是

00:00:13.250 --> 00:00:22.050
好了，欢迎大家参加本周的IP LD会议，通常是

00:00:22.050 --> 00:00:27.960
在2019年第七次是IP LT每周同步一次

00:00:27.960 --> 00:00:38.640
工作组，让我们看看加密板上的内容，然后将URL粘贴到

00:00:38.640 --> 00:00:47.039
如果有人不在船员期间，是的，我们需要一个记笔记的人

00:00:47.039 --> 00:00:51.989
志愿者本周记笔记可能很容易，因为那里

00:00:51.989 --> 00:01:00.530
我想不是那么多，所以这里的任何人

00:01:01.190 --> 00:01:07.890
如果不是，我可以等，但是其他人必须主持会议，因为两者

00:01:07.890 --> 00:01:21.270
确实不是那种情况，您是要让他们开会还是参加

00:01:21.270 --> 00:01:28.049
笔记我能接受得足够多了，是的，非常令人信服，谢谢

00:01:28.049 --> 00:01:35.610
所以我在聊天中发布的这个脚本非常感谢，所以请放

00:01:35.610 --> 00:01:45.950
如果您参加的话，您的名字会出现在“废纸rap”的与会者列表中

00:01:45.950 --> 00:01:52.590
亚当，我们经历了过去两周的工作，所以我开始

00:01:52.590 --> 00:02:05.250
与埃里克（Eric）在一起时，他打了招呼，就像我们大多数人都成为亚洲人一样，但是

00:02:05.250 --> 00:02:12.360
非常有成效的假期CCC有很多很棒的关于大脑的对话，所以一个

00:02:12.360 --> 00:02:15.430
我花了很多时间在思考的事情是开放与

00:02:15.430 --> 00:02:20.440
封闭的枚举，并与人们对此争论不休，所以我

00:02:20.440 --> 00:02:26.410
尝试将我学到的内容简化为一些关于改进开放性的方法的注意事项

00:02:26.410 --> 00:02:32.470
与将枚举类型的封闭式二分法转换成类似或生产性的结果一样

00:02:32.470 --> 00:02:36.010
是一种行为治疗，可以解决我们在遇到问题时想要做的事情

00:02:36.010 --> 00:02:42.130
密闭，所以是的，我一直在尝试对此做一些写作，

00:02:42.130 --> 00:02:45.970
准备好共享的东西不确定它是否存在，但也许很快

00:02:45.970 --> 00:02:52.060
因此，展望未来，我将尽力完成一些准备工作

00:02:52.060 --> 00:02:56.080
分享，然后在旅途中拨出更多实施

00:02:56.080 --> 00:03:15.640
它是danijon，所以我的体重超赞，我看到了CCC图片，期待看到

00:03:15.640 --> 00:03:26.799
所有对话的笔记我的问题是我相信，但是我，我，我，我

00:03:26.799 --> 00:03:36.549
不知道我是否了解OH进行首次公开​​募股（IPO）的方式，例如构建或

00:03:36.549 --> 00:03:43.750
对不起，我不确定我是否知道我会去，我剥开了脚掌，似乎我

00:03:43.750 --> 00:03:49.959
剥去我们一直在思考的关于图形着墨的难题，然后我杀死了

00:03:49.959 --> 00:03:56.290
API和经过修改的ipfs等，您可以像like的快速描述一样

00:03:56.290 --> 00:04:02.040
IPO的价格是多少，是翻新的整个过程，是的

00:04:02.040 --> 00:04:06.579
好的，所以从核心API到HTTP

00:04:06.579 --> 00:04:16.030
这是一个用于使用的go库，我觉得它是对象

00:04:16.030 --> 00:04:23.349
更多特定于能力，而不像我们一半的人有我在建设，所以喜欢

00:04:23.349 --> 00:04:26.980
据我所知，它还提供了有效的

00:04:26.980 --> 00:04:32.020
用于流对象和多样性对象之类的东西

00:04:32.020 --> 00:04:38.890
因为我们是当前的API，所以我是人们在精神上使用的API，

00:04:38.890 --> 00:04:44.380
实际上去了完全相同的地方，这是一个新的仓库，所以我可以写新的

00:04:44.380 --> 00:04:48.490
代码与现有项目没有冲突，具体取决于当前

00:04:48.490 --> 00:04:52.120
接口，在某些情况下，当前接口是错误的，并且有几个

00:04:52.120 --> 00:04:57.250
事情需要一次全部调整，就像各种各样的事情一样

00:04:57.250 --> 00:05:01.300
在现有存储库中有很好的记录，例如链接有另外两个部分

00:05:01.300 --> 00:05:04.390
没人使用过的元数据的集合，它们在实践中以及所有

00:05:04.390 --> 00:05:10.390
实现只是简单地跳过了这些事情，所以在某些情况下

00:05:10.390 --> 00:05:14.290
将“是”指向问题并进行聊天，它将取代当前的状态，我认为

00:05:14.290 --> 00:05:23.020
实现，但我的具体问题可能要过一会儿

00:05:23.020 --> 00:05:27.400
它触及HDTV的一部分是因为Jeff的标志一直像

00:05:27.400 --> 00:05:33.150
在使用do ipfs时就像在处理IPL一样挣扎

00:05:33.150 --> 00:05:38.820
因为现在就像api一样，它的工作方式就像是对Jason进行所有灭菌处理

00:05:38.820 --> 00:05:46.360
因此制作客户端库一直很费劲，因为API要

00:05:46.360 --> 00:05:51.190
使用DFS的Dagger API来解决这个问题，因为

00:05:51.190 --> 00:05:54.730
必须使用块API并在客户端反序列化事物

00:05:54.730 --> 00:05:58.690
并解决客户端的问题，以使其正常工作

00:05:58.690 --> 00:06:02.710
因为我们不能直接走，否则走会弄乱类型

00:06:02.710 --> 00:06:07.870
通过将所有东西都消毒给杰森，很酷，好吧，我知道现在不是

00:06:07.870 --> 00:06:14.080
接触这部分是的解决方案仍然要发送回

00:06:14.080 --> 00:06:18.580
我的数据，并且有一个像我的客户ID这样的老师，因为我们不喜欢给

00:06:18.580 --> 00:06:23.590
我们不在乎的任意对象，我们可以将其转换为杰森，但我们

00:06:23.590 --> 00:06:29.470
至少应该像Mable一样填充到Jason API或不喜欢

00:06:29.470 --> 00:06:34.090
就像以某种方式避免0我认为是的，但那是一个棘手的问题

00:06:34.090 --> 00:06:39.220
问题和史蒂文，我以为你有一些聪明的想法，我们在

00:06:39.220 --> 00:06:44.830
伦敦希望在数据中提供更多详细信息

00:06:44.830 --> 00:06:51.220
规范的模型层，关于我们如何显式地转换使

00:06:51.220 --> 00:06:54.730
在C boy中感觉很像字节到规范中更昂贵的JSON对象中

00:06:54.730 --> 00:06:59.590
我们可以的方式，但是在某个时候，您总是会遇到我们想要的问题

00:06:59.590 --> 00:07:03.100
只是您无法转换某些格式而已，就像我们应该

00:07:03.100 --> 00:07:08.500
完全尝试使转换成为可能，但是如果您想

00:07:08.500 --> 00:07:12.580
完全像基本上一样，如果您像常春藤联盟图书馆那样使用它

00:07:12.580 --> 00:07:16.180
在本地实现Sarah实用程序服务，然后获取原始字节

00:07:16.180 --> 00:07:21.400
而不是像尝试以格式工作，但这只是我的观点

00:07:21.400 --> 00:07:34.150
没关系，还有其他问题吗

00:07:34.150 --> 00:07:44.440
所以接下来我是我的工作重点，所以我仍然在JavaScript方面

00:07:44.440 --> 00:07:50.980
我基本上是API，因为我还没有听说过有关新API的任何不良情况

00:07:50.980 --> 00:07:53.380
刚开始实施它，看看它是否真的有效

00:07:53.380 --> 00:07:57.700
到目前为止看起来还不错，我希望能真的把它包装成一两个

00:07:57.700 --> 00:08:07.690
几周后，您将看到在那里，我们可以开始正确集成，是的，下一个，是的

00:08:07.690 --> 00:08:21.790
关于这个问题的任何问题，例如还是我，如果应用了

00:08:21.790 --> 00:08:24.970
这里要说的不只是您要做的事情，因为那已经

00:08:24.970 --> 00:08:27.040
一会儿，人们不了解当前的情况

00:08:27.040 --> 00:08:31.870
像您刚才描述的状态，就像我们没有写任务一样

00:08:31.870 --> 00:08:37.720
这就是为什么您认为完成基本实施需要大约两周的时间

00:08:37.720 --> 00:08:41.260
然后将其集成到其余的代码中，但这就像是什么

00:08:41.260 --> 00:08:46.030
IP LD模块上需要花费两个工作的大部分工作

00:08:46.030 --> 00:08:51.310
几周的时间，我们有什么可以帮助您早日实现的目标？

00:08:51.310 --> 00:08:54.130
就像很多事情在等那些学生

00:08:54.130 --> 00:09:00.490
集成是很大的一部分，所以它已经完成了，但是显然很忙的是追逐APF

00:09:00.490 --> 00:09:05.470
 ipfs完全失败，因此可能像一个小时的工作，或者可能是两个小时

00:09:05.470 --> 00:09:15.100
几周我不知道我是否在说-是的，好吧，好吧，

00:09:15.100 --> 00:09:21.520
但是还是这样，所以我将编辑到我的笔记中，到目前为止看起来还不错，

00:09:21.520 --> 00:09:28.750
基本上，调优FS部分可与新API配合使用，这很有希望

00:09:28.750 --> 00:09:33.880
因为这是其中很大一部分，所以这可能是Chase ipfs中最大的用户

00:09:33.880 --> 00:09:40.030
是五个Cody是调音最安全的部分，已经工作了，所以另一部分

00:09:40.030 --> 00:09:47.950
希望应该是简单的政策好吧，好吧，下一个是谁

00:09:47.950 --> 00:09:53.590
我仍然很困惑，因为我按时发帖，现在我匆忙完成了

00:09:53.590 --> 00:10:01.720
我为那件事感到抱歉的所有事情接下来的事情甚至是我大部分时间都上车

00:10:01.720 --> 00:10:04.740
我相信上周的评论讨论

00:10:04.740 --> 00:10:12.850
互动约束文件，下一个相同，并希望处理

00:10:12.850 --> 00:10:19.840
除基于评论的所有评论地下室修复文档外，其他工作

00:10:19.840 --> 00:10:25.570
是的，可能会在定义中发表评论，我不确定是否可以

00:10:25.570 --> 00:10:39.340
了解我使用詹妮（Jenny）的法语技巧的问题

00:10:39.340 --> 00:10:50.650
我也喜欢问问题，即使我注意到我在日历场景中也是如此

00:10:50.650 --> 00:10:55.420
下周的讨论是否有该讨论的准备读物，所以

00:10:55.420 --> 00:11:04.350
我们都准备好了，是的，阅读了B和C的会议的图形提案。

00:11:05.620 --> 00:11:09.100
是的，所以我们要求每个人的三件事

00:11:09.100 --> 00:11:17.080
准备好理解我们的联系，那里的上帝我通常会正确的

00:11:17.080 --> 00:11:23.310
会得到你们打电话的足够谢谢

00:11:24.899 --> 00:11:36.579
好吧，下一个是艾登，我是的，所以术语实际上是在做一些事情，只是尝试

00:11:36.579 --> 00:11:39.760
你知道习惯使用杀人日，所以我切换了我正在使用的东西

00:11:39.760 --> 00:11:43.810
挑逗杀死D而不是使用protobufs，生活在右边

00:11:43.810 --> 00:11:50.200
指导，如果有需要，我很高兴成为IPL D原始豚鼠

00:11:50.200 --> 00:11:53.920
就像另一双眼睛，如果它真的不会影响任何人

00:11:53.920 --> 00:12:01.990
休息一下，然后我只说了几个问题，我要么让别人

00:12:01.990 --> 00:12:06.100
的想法，或者我只是从对这一点有更多想法的人那里得到反馈

00:12:06.100 --> 00:12:13.930
我有两个问题，一个是我正在尝试同步一组提交

00:12:13.930 --> 00:12:20.529
基本上，为了能够做到这一点，您需要有一条共享路线

00:12:20.529 --> 00:12:25.000
您实际上可以将两个图同步并组合在一起，并且

00:12:25.000 --> 00:12:31.750
绘制路线图可能只是一个名称，但名称实际上并不是您应该使用的名称

00:12:31.750 --> 00:12:36.130
像提交一样乱扔，所以我不确定是否有人想了很多

00:12:36.130 --> 00:12:41.230
关于这个或者你是否知道这些事情是如何工作的，我有一些东西

00:12:41.230 --> 00:12:43.899
确实可行，他们只是对城市的猜测进行排序，但任何反馈都会

00:12:43.899 --> 00:12:56.560
感谢史蒂文，据我所知正确的方式

00:12:56.560 --> 00:13:02.230
这样做基本上有父链接，就像有根对象一样

00:13:02.230 --> 00:13:06.640
看起来像不是屋顶，就像是根根对象

00:13:06.640 --> 00:13:09.760
提交对象，它指向上一次提交的贝克汉姆，它指向父母，并且

00:13:09.760 --> 00:13:13.449
父母和父母，他们都指向不同的根源，然后就像你会

00:13:13.449 --> 00:13:18.670
像开始扎根一样开始它，或者说如果您要提交的话回去

00:13:18.670 --> 00:13:21.160
所以你找到一个共同的提交，然后尝试

00:13:21.160 --> 00:13:26.230
一些婴儿会做gif会做到这一点，至少我要做的就是答案

00:13:26.230 --> 00:13:33.190
您的问题是完全不完全是因为嗯，我想也许是在想

00:13:33.190 --> 00:13:36.310
每次启动新的get repo和github时都是这样

00:13:36.310 --> 00:13:41.770
他们就像有一个空对象一样，这意味着

00:13:41.770 --> 00:13:48.250
理论上每个对象上的每个对象github上的每个存储库都具有相同的父对象

00:13:48.250 --> 00:13:52.780
其实不是，只是因为他们正确地抛弃了，因为

00:13:52.780 --> 00:13:57.430
就像一个区分他们的名字我不知道他们是怎么做到的

00:13:57.430 --> 00:14:00.430
不要以为他们实际上有相同的空对象，我想当你

00:14:00.430 --> 00:14:06.520
开始你没有任何提交，然后我喜欢创意的第一个提交

00:14:06.520 --> 00:14:13.930
对象哦，是的，我想是的，肯定也一样，如果你是

00:14:13.930 --> 00:14:19.240
只是提交一个，你知道每个人都像空白的自述文件一样提交，如果我得到的话

00:14:19.240 --> 00:14:23.380
正确地做，那么所有这些都将是相同的，我们相信

00:14:23.380 --> 00:14:29.980
提交对象具有与其他标头用户名之类的日期一样的日期

00:14:29.980 --> 00:14:33.310
认为可能还有其他我不知道的随机事物

00:14:33.310 --> 00:14:39.640
布兰登（Brendan）似乎对这件事了解得更多，是的，是的，没有学生会

00:14:39.640 --> 00:14:43.720
对那些提交相同内容的人的支持，因为提交消息

00:14:43.720 --> 00:14:47.500
它本身包括时间戳，即使您是同一个人，您也可以写上确切的时间戳

00:14:47.500 --> 00:14:50.890
在不同的时间点执行相同的提交，您将获得不同的结果

00:14:50.890 --> 00:14:55.930
提交哈希，因此它们将不会是相同的操作，因此任何获取提交引用

00:14:55.930 --> 00:15:01.180
树的根，即实际的文件层次结构，将是相同的，请参见

00:15:01.180 --> 00:15:05.590
您可以使用获取管道工具实际拉出该图的基础

00:15:05.590 --> 00:15:09.790
工具包可以做比较工作，但是有一个单独的部分包含

00:15:09.790 --> 00:15:14.920
这类信息将始终更改，因此当尝试获取

00:15:14.920 --> 00:15:18.340
解决，这就是获取命名系统到位的地方，

00:15:18.340 --> 00:15:22.270
那就是您看到的地方，例如老鼠和裁判都只是要提交的指针

00:15:22.270 --> 00:15:27.220
哈希，就像史蒂文一直在讲的几乎所有版本历史

00:15:27.220 --> 00:15:31.720
是通过参考他们的先前条目构建的，因此当您尝试时，您可以

00:15:31.720 --> 00:15:34.960
理论上将没有共同历史的两件事合并在一起

00:15:34.960 --> 00:15:38.020
而且我认为这就是您对这种想法的理解

00:15:38.020 --> 00:15:41.140
不像是在某种程度上没有任何理论上的零点

00:15:41.140 --> 00:15:46.210
提交，这有点像两个根本不匹配的历史

00:15:46.210 --> 00:15:50.020
如果可以组合，则为零，但实际上并没有什么意义

00:15:50.020 --> 00:15:54.520
试图同步两个不同历史的意义

00:15:54.520 --> 00:16:00.370
要成为一个合理的历史分歧，你需要一个共同的祖先，所以我想

00:16:00.370 --> 00:16:03.190
区别在于我们没有其他品牌的熵，就像我们没有

00:16:03.190 --> 00:16:07.080
你可能不会总是喜欢像我这样的约会对象

00:16:07.080 --> 00:16:11.200
认为你可能是这是试图做的事情之一，但我认为

00:16:11.200 --> 00:16:13.899
就像您将其变为想法和ASCII之类的东西一样，实际上是有意义的

00:16:13.899 --> 00:16:17.709
像根对象一样，我认为所有分支都这样说

00:16:17.709 --> 00:16:22.420
底部的东西就像大猩猩会注意到，是的，我可以保留它

00:16:22.420 --> 00:16:27.850
它描述了一些政策，该如何应对紧急情况以及如何反对

00:16:27.850 --> 00:16:34.839
想要表现出这实际上是一条合理的路线，但是是的，我的意思是

00:16:34.839 --> 00:16:38.380
我现在所做的就是我使用的是ASCII或类似的内容

00:16:38.380 --> 00:16:43.570
只是让它运作的缘故，是这样的，实际上是因为

00:16:43.570 --> 00:16:47.110
有理智的人，我会有一个更复杂的对象，像你这样描述

00:16:47.110 --> 00:16:51.700
甚至可以命名它或任何您想要的名称，例如我以某种方式命名的名称

00:16:51.700 --> 00:16:54.610
这个东西，然后你把它绑起来，有点像名字一样的怪异

00:16:54.610 --> 00:16:58.050
没有指向任何东西，而是指向名称的所有东西，但是我

00:16:58.050 --> 00:17:02.860
认为它真的很旧，它也变得效率低下，因为

00:17:02.860 --> 00:17:06.189
遍历这些结构的方式，因此您要保持

00:17:06.189 --> 00:17:11.079
头和名字在另一边，但然后你遇到一个耶，你也会

00:17:11.079 --> 00:17:14.890
洗河，因为它实际上必须是一条路线，就像你一样

00:17:14.890 --> 00:17:19.630
之所以这样，是因为最底层的人实际上并没有沉浸在最底层的条目中

00:17:19.630 --> 00:17:24.910
没有父母，只是没有父母，但在每次提交中都可以

00:17:24.910 --> 00:17:28.750
指向相同的名称，而母狗意味着每个对象都像

00:17:28.750 --> 00:17:32.860
这样好吧好吧，就像我是这个宇宙的一部分，那可以保证你拥有

00:17:32.860 --> 00:17:37.990
可爱，很可爱，但这确实会影响您回到我所难过的地方

00:17:37.990 --> 00:17:40.600
当您回到问题（例如，如果更改了

00:17:40.600 --> 00:17:43.270
参考，那么当您失去可比性时，您会得到不同的东西

00:17:43.270 --> 00:17:47.320
是的，是的，您需要拥有一件永远不会改变的东西，如果有的话

00:17:47.320 --> 00:17:49.220
就像一个描述一样，这是一个很好的

00:17:49.220 --> 00:17:53.270
我会听到的完全是这样，只要您对这个假设还可以

00:17:53.270 --> 00:17:57.049
像很多用户一样，用户体验方面的事情想要更改名称，而您

00:17:57.049 --> 00:18:05.390
绝对不能完全改变对不起，这是一件好事，这让我感动

00:18:05.390 --> 00:18:12.980
一点点，所以他们接下来的问题是关于什么的任何想法

00:18:12.980 --> 00:18:19.520
当我们想要断开链接时发生这种情况，例如

00:18:19.520 --> 00:18:25.130
如果我想将之前的一百次提交压缩为一个状态

00:18:25.130 --> 00:18:31.309
我可能应该允许提供两个选项，例如说链接在这里

00:18:31.309 --> 00:18:37.040
如果您想验证它，但是像II一样想想II保证您就是这样

00:18:37.040 --> 00:18:42.350
东西-是的，您可以同时检查两个，就像我有一个特别的经历

00:18:42.350 --> 00:18:48.770
壁球分钟，它指向像逻辑父级，然后像壁球

00:18:48.770 --> 00:18:52.669
树，然后在新的State Route之后，以便您可以遵循

00:18:52.669 --> 00:18:58.850
就像你可以跟随你的路径秒听起来像一个值得信赖的家伙

00:18:58.850 --> 00:19:04.070
壁球提交为您做到这一点，还有其他关于它的事情

00:19:04.070 --> 00:19:08.059
我不知道正确的做法，是的，我只是在思考

00:19:08.059 --> 00:19:13.340
检查点的上下文，并且您还知道如果您想要一个旧的会发生什么

00:19:13.340 --> 00:19:19.580
哈希算法变坏了，您需要一个新算法，但是人们听到了新的窍门

00:19:19.580 --> 00:19:25.220
我认为哈希算法就像我们有大表一样

00:19:25.220 --> 00:19:30.020
最后，您可以做的最后一件事，或者基本上有了一个大的受信任的表

00:19:30.020 --> 00:19:33.620
并不是绝对的-我希望我们不再需要新的哈希，但是有了

00:19:33.620 --> 00:19:43.910
Collinsville总有一天最终我们可以稍后再做，是的，感谢您的快速反应

00:19:43.910 --> 00:19:48.350
提到将内容压缩到检查点中，我不知道您是否听说过

00:19:48.350 --> 00:19:54.620
Google万亿项目的一部分，但它们有一些非常漂亮的短白

00:19:54.620 --> 00:20:01.070
关于它们的面向日志的映射数据结构的论文，例如

00:20:01.070 --> 00:20:06.140
区块链，我不记得技术术语

00:20:06.140 --> 00:20:10.240
但是他们有一些很好的方法来写有边界的检查点

00:20:10.240 --> 00:20:15.050
重新检查时间，您可能会在其中放入一些很好的参考资料

00:20:15.050 --> 00:20:22.970
名称中没有文件yeah当然，谢谢，我的意思是，这总是一个蛇

00:20:22.970 --> 00:20:25.780
会整天去埃迪

00:20:28.570 --> 00:20:31.960
好的，真的谢谢

00:20:33.940 --> 00:20:41.570
好吧，其他人也想分享任何更新或有任何疑问吗

00:20:41.570 --> 00:20:54.260
或评论不，那太好了，我们甚至都可以按时上班，或者即使我迟到了，

00:20:54.260 --> 00:20:58.130
太好了，是的，我们会再次见面

00:20:58.130 --> 00:21:11.110
再过两周，很高兴见到你，然后再见再见

