WEBVTT
Kind: captions
Language: zh-Hans

00:00:17.600 --> 00:00:23.119
欢迎大家参加本周的ipld同步会议

00:00:23.119 --> 00:00:28.800
2020年12月7日

00:00:28.800 --> 00:00:33.200
过去一周我们一直在努力

00:00:33.200 --> 00:00:38.079
讨论我们接下来要处理的东西，然后讨论我们所使用的任何古老物品

00:00:38.079 --> 00:00:44.640
也许有，我从我自己开始，那是我没有

00:00:44.640 --> 00:00:50.079
大部分的更新我仍然可以在我的博客上工作

00:00:50.079 --> 00:00:53.120
存储内容地址数据的东西

00:00:53.120 --> 00:00:57.840
目前主要是可卡因，所以令人振奋的消息是现在

00:00:57.840 --> 00:01:00.160
实际可行，因此如果您转到存储库，则可以

00:01:00.160 --> 00:01:04.000
尝试一下并使用它，因为我现在已经用它进行了验证

00:01:04.000 --> 00:01:08.000
嗯，那是一个汽车文件的转储，来自

00:01:08.000 --> 00:01:16.159
大约750 GB的鱼苗硬币，我能够重新创建文件

00:01:16.159 --> 00:01:20.799
基于我的索引um，也喜欢我拥有那种工具

00:01:20.799 --> 00:01:24.640
打印出其中的内容，就像现在看起来的声音一样

00:01:24.640 --> 00:01:29.439
这听起来是正确的，因为像起初一样，它太好了，难以置信，而实际上

00:01:29.439 --> 00:01:34.560
太好了，难以置信，但现在看起来很明智，所以嗯

00:01:34.560 --> 00:01:37.840
因此，请检查源代码，目前，这项工作已进入

00:01:37.840 --> 00:01:43.840
我现在做的ffi，例如um星期五，我们致力于进行装订

00:01:43.840 --> 00:01:48.320
因此我们可以使用Lotus的基准测试套件来尝试

00:01:48.320 --> 00:01:52.840
看看um与其他相比有多快

00:01:52.840 --> 00:01:58.479
商店，所以我很高兴看到那里的结果

00:01:58.479 --> 00:02:03.200
是的，但是嗯，如果有人在看这个，那不是

00:02:03.200 --> 00:02:08.239
filecoin实际上就像存储基于内容的数据一样，因此它也可以

00:02:08.239 --> 00:02:11.200
用于ipld甚至ipfs，所以这肯定是

00:02:11.200 --> 00:02:13.840
如果可以的话，我也会研究

00:02:13.840 --> 00:02:20.840
我将在清单上接下来使用的所有用例有多好？

00:02:20.840 --> 00:02:27.760
丹妮尔（Danielle）酷嗯，所以我们开始

00:02:27.760 --> 00:02:32.000
上周是ipld prime的重大重构，

00:02:32.000 --> 00:02:35.599
向后兼容的更改第一个是删除错误返回

00:02:35.599 --> 00:02:38.400
从像字符串一样的布尔值等等

00:02:38.400 --> 00:02:41.440
方法嗯，我实际上已经走得很远了

00:02:41.440 --> 00:02:45.200
因为我们想自动化所有实时下游的更改

00:02:45.200 --> 00:02:49.120
所有使用ipl d的库，但在与eric交谈之后

00:02:49.120 --> 00:02:52.160
有一阵子，我们意识到我们确实想

00:02:52.160 --> 00:02:55.440
仍然保持错误返回，我不知道你是否想谈

00:02:55.440 --> 00:02:58.000
那以后，但我不打算详细介绍

00:02:58.000 --> 00:03:03.519
现在，但要点是adls adls确实想使用这些错误并

00:03:03.519 --> 00:03:07.920
从adl中删除错误是一个坏主意，所以现在

00:03:07.920 --> 00:03:11.760
第二个0.7重大更改是使用n64

00:03:11.760 --> 00:03:15.360
尺寸，因为在很多地方，它们只是整数

00:03:15.360 --> 00:03:21.200
这将是糟糕的，在32位um上，我还与Martin合作

00:03:21.200 --> 00:03:26.799
相当多的词，因为他有点领导努力

00:03:26.799 --> 00:03:30.000
使我们对github动作的使用更加一致

00:03:30.000 --> 00:03:33.440
这与我所想的相符

00:03:33.440 --> 00:03:36.480
定义ci for go的最佳实践是什么

00:03:36.480 --> 00:03:40.720
所以我正在帮助他审查和测试这些东西，我们将ipld工作用作

00:03:40.720 --> 00:03:44.400
这种东西的豚鼠

00:03:44.799 --> 00:03:48.480
我还帮助他快速回顾了一堆公关，这不是我真正的

00:03:48.480 --> 00:03:51.840
地区，但我碰巧注意到他的一堆公关卡住了

00:03:51.840 --> 00:03:54.080
仅仅因为

00:03:54.080 --> 00:03:57.760
快速执行此刻确实很忙，许多更改都很漂亮

00:03:57.760 --> 00:04:02.000
简单的去玩的东西，所以我仍然能够查看它们

00:04:02.000 --> 00:04:05.439
所以如果他需要的话，我可能会继续用更复杂的东西来做

00:04:05.439 --> 00:04:09.439
我花的时间不多，还有一个建议

00:04:09.439 --> 00:04:13.280
我两周前开始的一项草案建议

00:04:13.280 --> 00:04:17.759
嗯，源于我认为是ipfs开发人员的东西

00:04:17.759 --> 00:04:23.040
对他们在um中遇到的一个常见错误不满意

00:04:23.199 --> 00:04:26.400
类型断言和地图索引图

00:04:26.400 --> 00:04:30.479
所以这是hackmd上的链接，如果有人想看看，我仍然认为

00:04:30.479 --> 00:04:33.680
这是一种棘手的情况，使

00:04:33.680 --> 00:04:37.040
代码令人困惑，我不太喜欢com，现在我不太相信，它应该是

00:04:37.040 --> 00:04:41.040
改变围棋语言，所以我想也许我应该提出来

00:04:41.040 --> 00:04:46.000
作为某种静态分析，请在兽医或其他方面进行检查

00:04:46.000 --> 00:04:49.040
像静态检查一样，但我觉得他们都会说

00:04:49.040 --> 00:04:52.080
我不，所以我有点不确定

00:04:52.080 --> 00:04:56.639
无论如何都要做，最后一件事是我发生了

00:04:56.639 --> 00:04:59.440
我碰巧在ipfs如何使用渠道

00:04:59.440 --> 00:05:03.919
对于迭代器，我对此真的不满意，所以我

00:05:03.919 --> 00:05:09.199
给他们留下了很好的评论，解释了我认为他们可以做得更好

00:05:09.199 --> 00:05:13.039
因为可以使用通道并在api中公开它们，但是

00:05:13.039 --> 00:05:15.759
这很棘手，我认为应该避免

00:05:15.759 --> 00:05:19.280
嗯，他们这样做的方式只是避免写一些样板

00:05:19.280 --> 00:05:21.840
我认为应该做出错误的权衡吗

00:05:21.840 --> 00:05:26.320
goei apfs，您知道很多用户，仅此而已

00:05:26.320 --> 00:05:28.479
我

00:05:29.440 --> 00:05:41.759
谢谢，下一个是eric是，嗯，我们尝试做一些

00:05:41.759 --> 00:05:45.759
api在本周发生了变化，正如丹尼尔（daniel）所说，

00:05:45.759 --> 00:05:51.600
当我们接近它时，我退缩了，我想他已经把它总结得很漂亮了。

00:05:51.600 --> 00:05:54.479
好吧，我们正试图消除一堆错误

00:05:54.479 --> 00:05:58.080
从新的go库中的核心节点接口开始，因为

00:05:58.080 --> 00:06:03.919
错误令人沮丧，事实证明我们真的不能

00:06:03.919 --> 00:06:09.120
主要用于adls的用例，我们

00:06:09.120 --> 00:06:12.960
甚至都在调情，好吧，也许

00:06:12.960 --> 00:06:18.800
也许adls可能会恐慌并将其用作错误处理途径，但就像

00:06:18.800 --> 00:06:22.000
否，如果我们要节点接口的整体契约

00:06:22.000 --> 00:06:26.160
包含adl的内容可以透明地操作，而您不必

00:06:26.160 --> 00:06:29.840
需要知道那是您在做什么，那么我们就不想拥有

00:06:29.840 --> 00:06:32.720
功能检测，我们不想有不同的错误处理

00:06:32.720 --> 00:06:36.560
他们的策略，所以我们仍然坚持返回

00:06:36.560 --> 00:06:40.400
来自核心节点接口的错误，因此我们将不得不查找更多信息

00:06:40.400 --> 00:06:46.319
围绕它构建帮助程序库和便利功能的方法

00:06:46.319 --> 00:06:50.800
因此，没有任何改变真的能打消我的乐观情绪，我希望我们

00:06:50.800 --> 00:06:54.319
能够做到这一点

00:06:56.720 --> 00:07:01.759
不能在um上继续前进，所以我们仍在准备做一个

00:07:01.759 --> 00:07:06.240
几个其他较小的api的更改比那个um我的更改小得多

00:07:06.240 --> 00:07:09.120
更新了自上次以来发生的所有事情的更改日志

00:07:09.120 --> 00:07:12.720
我们在该仓库中标记或发布了一段时间

00:07:12.720 --> 00:07:16.880
嗯，我发现周围有一些未完成的工作

00:07:16.880 --> 00:07:22.080
codegen结构类型尚未完成对所有必填字段的验证

00:07:22.080 --> 00:07:26.080
存在，所以现在它确实会完成

00:07:26.080 --> 00:07:28.319
关于表示的一些工作

00:07:28.319 --> 00:07:32.160
但是我们还没有在类型级别做到这一点，所以我也把它放在那里

00:07:32.160 --> 00:07:35.599
可能错误消息很好地告诉您缺少字段名称

00:07:35.599 --> 00:07:39.440
以及序列号（如果它们不同）

00:07:39.440 --> 00:07:41.680
嗯

00:07:42.479 --> 00:07:47.039
花很多时间做切线的东西，而不是ipld，

00:07:47.039 --> 00:07:50.800
我的电脑处于奇怪的状态，

00:07:50.800 --> 00:07:58.960
由于Qt链接错误，先前的ide无法正常工作

00:07:58.960 --> 00:08:02.960
电脑有时

00:08:04.479 --> 00:08:09.440
所以我在那个过程中尝试了很多新方法

00:08:09.440 --> 00:08:14.240
我现在可能是golan用户，所以我有点大步向前

00:08:14.240 --> 00:08:17.919
当我习惯它时，可能会在事情上有点慢，但似乎

00:08:17.919 --> 00:08:22.160
很好，这是非常可配置的，我很乐观

00:08:22.160 --> 00:08:26.720
嗯，所以在ipld prime中，我认为我们已经准备好将0.6标记为

00:08:26.720 --> 00:08:32.320
大概在那之后，我们将开始进行有趣的更改

00:08:32.320 --> 00:08:37.279
嗯，我在想，除非其他人没有其他直接的

00:08:37.279 --> 00:08:39.279
反馈我可能会继续努力

00:08:39.279 --> 00:08:42.880
在一些新的编解码器工作上，并努力朝着这个方向发展

00:08:42.880 --> 00:08:46.320
重构链接api，这是一个长期目标

00:08:46.320 --> 00:08:50.000
并尝试在本周余下的时间里取得一些进展，我希望

00:08:50.000 --> 00:08:56.080
这将是一月份的事情，但我们会看到我可能会

00:08:56.080 --> 00:08:58.000
想要确保我们做正确的事，

00:08:58.000 --> 00:09:03.680
在这个方面有很多基准，所以像时间是待定

00:09:03.680 --> 00:09:08.160
就是这样，我开始审查杆的凉爽性，但是我没有太多

00:09:08.160 --> 00:09:11.920
但很抱歉我很慢

00:09:12.560 --> 00:09:17.839
谢谢，嗯，接下来是抢

00:09:18.800 --> 00:09:22.080
嗯，对我来说只是些小事，还有一点

00:09:22.080 --> 00:09:27.279
休息一会儿，所以大部分时间都在反思

00:09:27.279 --> 00:09:32.240
一周中，几乎没有什么维护工作，可帮助修复错误

00:09:32.240 --> 00:09:36.080
前往cid和与ipfs um相关的其他地方

00:09:36.080 --> 00:09:40.959
参加与档案硬币演员人们有关竖琴和耳放的讨论

00:09:40.959 --> 00:09:45.279
算法，数据布局和内容，所以一件有趣的事情冒出来了

00:09:45.279 --> 00:09:51.040
为了提高认识，演员第三版将拥有

00:09:51.040 --> 00:09:57.839
um实现了一种联合，并删除了键联合，这是

00:09:57.839 --> 00:10:01.760
很好，因为它可以节省我认为我认为我算出来的是96

00:10:01.760 --> 00:10:07.040
手和um上每个完整节点的字节数，并且摆脱了

00:10:07.040 --> 00:10:12.240
在Falcoin的dioxibor中使用地图的唯一地方

00:10:12.240 --> 00:10:16.800
嗯，但这带来了其他问题，我们将

00:10:16.800 --> 00:10:20.399
在会议的晚些时候讨论有关um adls的问题，因为现在有两种不同的方法

00:10:20.399 --> 00:10:24.240
双手的格式还有两种不同的格式

00:10:24.240 --> 00:10:30.000
如此类似的问题

00:10:30.839 --> 00:10:36.640
哦，是的，我已经清理了我一直在做的工作

00:10:36.640 --> 00:10:42.320
嗯，工作时间太长了，所以这个标签铅和去的东西，我打扫了

00:10:42.320 --> 00:10:45.360
那个ipld前端可以解决这个问题，我说去iply

00:10:45.360 --> 00:10:50.720
素数前端和um，它用作编解码器um

00:10:50.720 --> 00:10:53.839
它不是很满意，它确实有效，但是

00:10:53.839 --> 00:10:58.560
我正在考虑重新安排削减

00:10:58.560 --> 00:11:01.519
只是为了使它更令人愉快，因为它有点复杂

00:11:01.519 --> 00:11:05.839
以它试图构建其抽象内部抽象的方式

00:11:05.839 --> 00:11:09.200
嗯，但是在那里，嗯，读写

00:11:09.200 --> 00:11:15.040
dagpb对我来说就是这样

00:11:15.040 --> 00:11:18.959
谢谢，下一个是pedo

00:11:21.519 --> 00:11:28.640
嗨，伙计们，呃，所以我离我不远

00:11:28.640 --> 00:11:33.680
在类型上，您将决定我们离手印变得更近

00:11:33.680 --> 00:11:37.680
终于成为一件事情了，我们已经进行了一些测试交易

00:11:37.680 --> 00:11:41.200
通过正确的人正在获得他们的力量呃

00:11:41.200 --> 00:11:47.440
增加，所以事情正在进行，还有更多工作要做

00:11:47.440 --> 00:11:51.440
试图弄清楚我们想要如何

00:11:51.440 --> 00:11:56.880
我的意思是我要如何以这种方式存储链条

00:11:56.880 --> 00:12:02.639
基本上将允许此事物增长到至少100 TB，而无需

00:12:02.639 --> 00:12:08.959
不重新安排任何东西，我想我有最后的方案

00:12:08.959 --> 00:12:12.160
现在就可以了，它捕获了所有

00:12:12.160 --> 00:12:20.639
我们需要来自多个呃工作流，因此两者都能够拉出呃

00:12:20.639 --> 00:12:24.000
一捆积木，基本上就像

00:12:24.000 --> 00:12:28.560
迷你uh迷你选择器，直接具有固定的信号源深度

00:12:28.560 --> 00:12:31.680
直接在数据库级别增加

00:12:31.680 --> 00:12:38.240
能够浏览链本身而无需进入

00:12:38.240 --> 00:12:42.560
进入身份的宽度等等，等等，能够

00:12:42.560 --> 00:12:46.959
嗯，几乎直接从数据库中进行实际的链出口

00:12:46.959 --> 00:12:54.800
嗯，所有这一切最终都很好地单击了，

00:12:55.839 --> 00:12:59.279
只需要正确布线一些缓存，

00:12:59.279 --> 00:13:03.120
希望这将是该产品的生产版本

00:13:03.120 --> 00:13:08.560
嗯，我是否会在呃中删除指向初步架构的链接

00:13:08.560 --> 00:13:12.639
在分析通道中填写um，所以

00:13:12.639 --> 00:13:19.279
它也张贴在那里，是的，除了我去过的那个

00:13:19.279 --> 00:13:24.480
与呃在基地周围有一个到多个呃工作流

00:13:24.480 --> 00:13:26.959
峰值和诸如此类的消息传递

00:13:26.959 --> 00:13:30.800
嗯，这花了很长的时间

00:13:30.800 --> 00:13:34.800
是的，这就是我所拥有的几乎所有东西，我有一个议程项目

00:13:34.800 --> 00:13:43.760
稍后，是的，谢谢，下一个是um ii会清理graphql的东西

00:13:43.760 --> 00:13:47.440
那是在ipld的回购中，或者我应该和马丁和安谈论如何获得

00:13:47.440 --> 00:13:50.800
所有这些花哨的github动作和工作流程检查

00:13:50.800 --> 00:13:54.880
在那个仓库上启用了我看到了github仓库，我想我需要

00:13:54.880 --> 00:13:58.399
去那里做它的行动

00:13:58.399 --> 00:14:05.120
将prs提交到我的仓库中，这样我就可以完成该工作

00:14:05.120 --> 00:14:09.600
测试那个um的策略

00:14:09.600 --> 00:14:13.920
除了那个前端东西，可以保持服务

00:14:13.920 --> 00:14:20.800
我想一点点，嗯，我是从周围的设计码头开始的

00:14:20.800 --> 00:14:23.199
我们如何处理消息之类的东西

00:14:23.199 --> 00:14:26.480
彼得一直在做，红外线方面的人都非常

00:14:26.480 --> 00:14:29.839
对于这种存在的存在感到很兴奋，所以很多尝试去干扰

00:14:29.839 --> 00:14:34.320
让我们在等待时不建造其他东西

00:14:34.320 --> 00:14:39.920
好的，谢谢，我可以看到克里斯没有

00:14:39.920 --> 00:14:45.120
更新，感谢您让我知道um和

00:14:45.120 --> 00:14:51.920
所以我们来讨论议程项目，第一个是gohan adl问题

00:14:51.920 --> 00:14:58.560
哦，好几个问题，无论是谁张贴的，请

00:14:58.560 --> 00:15:04.959
告诉我这个人的丹尼尔，然后我向小组提出问题，我

00:15:04.959 --> 00:15:07.760
认为意志力很强，可以帮助回答这些问题

00:15:07.760 --> 00:15:11.199
所以我们现在有了，所以我们专注于障碍

00:15:11.199 --> 00:15:14.959
但是，如果我们到达那里，同样的问题也将适用于AMT

00:15:14.959 --> 00:15:18.720
丹尼尔（Daniel）为Gopd Iple Prime建立ADL，我们现在有两个

00:15:18.720 --> 00:15:25.760
汉普特四档硬币的版本，这些问题只是关于

00:15:25.760 --> 00:15:29.440
支持所有版本的价值

00:15:29.440 --> 00:15:34.880
文件硬币数据布局或针对最新版本

00:15:34.880 --> 00:15:41.040
嗯，我想，如果我们想要的话，这里有两个目标，那就是

00:15:41.040 --> 00:15:44.079
你知道要出演角色并说嘿你应该

00:15:44.079 --> 00:15:47.519
能够在您的工作中使用iple prime，这是一个好方法

00:15:47.519 --> 00:15:51.040
adls通过树的导航方式解决了所有这些问题，所以让我们

00:15:51.040 --> 00:15:54.639
只需将它放在适当的位置，它就可以工作，然后

00:15:54.639 --> 00:15:58.480
另一个是能够读取旧数据，因此

00:15:58.480 --> 00:16:03.440
我们只想讨论这些不同的价值

00:16:03.440 --> 00:16:08.320
事情，并试图获得价值的心理映射

00:16:08.320 --> 00:16:11.360
那就是那件事

00:16:15.040 --> 00:16:21.519
所以从我的角度来看，我的意思是状态路由是版本控制的

00:16:21.519 --> 00:16:24.000
我很容易拥有不同的架构类型

00:16:24.000 --> 00:16:28.000
嗯，在那些不同的状态路线上，

00:16:28.000 --> 00:16:31.040
锁定时代，因此使用当前

00:16:31.040 --> 00:16:35.360
功放的实现，然后才切换到adl功放

00:16:35.360 --> 00:16:39.839
当过渡到参与者v3时，

00:16:39.839 --> 00:16:44.639
我不认为分析方面的工作量真的会有

00:16:44.639 --> 00:16:48.320
对他们的任何特殊反对仅支持新

00:16:48.320 --> 00:16:53.040
风格的手，这可能是

00:16:53.680 --> 00:16:57.279
我的简短版本

00:16:57.360 --> 00:17:01.120
那是一件好事吗？

00:17:02.160 --> 00:17:06.720
嗯，至少我是这么认为的，因为我认为支持两个版本

00:17:06.720 --> 00:17:09.760
抱歉同时支持两个模式

00:17:09.760 --> 00:17:13.520
如果它们只有很小的差异是合理的

00:17:13.520 --> 00:17:17.199
就它仍然主要是一个单一的ADL

00:17:17.199 --> 00:17:20.400
或至少共享很多代码，但是如果存在三个版本，

00:17:20.400 --> 00:17:22.959
最老的有很大的变化，那就是

00:17:22.959 --> 00:17:26.480
我认为要困难得多

00:17:28.319 --> 00:17:32.000
好吧公平，这是有帮助的，我有一个问题

00:17:32.000 --> 00:17:35.360
因为就像我不完全理解我们在说什么

00:17:35.360 --> 00:17:40.080
就像这基本上意味着您针对不同的代码拥有不同的代码库

00:17:40.080 --> 00:17:42.799
版本的手，这是个问题

00:17:42.799 --> 00:17:47.120
基本上没关系，他们有不同的代码库

00:17:47.120 --> 00:17:51.120
演员的不同版本，以便您和您可以一起观看

00:17:51.120 --> 00:17:53.919
莲花，您可以看到它实际上链接到了不同的分支

00:17:53.919 --> 00:17:57.520
规范演员，以便当您到达链中的某个特定点时

00:17:57.520 --> 00:18:00.720
您正在使用完全不同的代码库进行导航

00:18:00.720 --> 00:18:07.120
嗯，我能不能有一天会变得一发不可收拾

00:18:07.120 --> 00:18:10.080
我们有什么版本，以及多少个不同的代码库，然后

00:18:10.080 --> 00:18:17.280
维护所有这些代码，我什至只是像

00:18:17.280 --> 00:18:21.120
go的新版本，我们需要修复所有旧内容以进行编译

00:18:21.120 --> 00:18:25.760
新版本的go like yeah

00:18:26.320 --> 00:18:30.880
嗯，在那一堆中还有另外一件事

00:18:30.880 --> 00:18:37.120
猎鹰大麻的位域um使用大端，

00:18:37.120 --> 00:18:42.480
那不是我们要做或想要支持的通用诱因

00:18:42.480 --> 00:18:46.080
嗯，我确实尝试过在主网之前解决此问题，但是

00:18:46.080 --> 00:18:49.760
为时已晚，然后讨论了针对v3进行此操作，但是

00:18:49.760 --> 00:18:53.280
只是我的利益还不够大而无法打扰

00:18:53.280 --> 00:18:56.960
在文件硬币中，所以我们有点卡在这个古怪的地方

00:18:56.960 --> 00:19:00.400
我们不想支持通用的普通硬币位中的位域

00:19:00.400 --> 00:19:04.000
阻碍，所以存在关于分歧的问题

00:19:04.000 --> 00:19:09.520
关于多个代码库，是的

00:19:09.520 --> 00:19:13.679
我想我对丹尼尔和指导有一些看法

00:19:13.679 --> 00:19:16.720
有用的指导将更多地是关于什么是

00:19:16.720 --> 00:19:20.080
这里最有用的发展目标是什么

00:19:20.080 --> 00:19:28.080
是否正在开发适用于规格演员v3的adl，可用于

00:19:28.080 --> 00:19:35.039
查看当前的呃链，并可能将其提供给规格

00:19:35.039 --> 00:19:39.120
演员团队作为临时替代者

00:19:39.120 --> 00:19:44.240
还是在我们可以提供的更通用的更好的东西上工作

00:19:44.240 --> 00:19:50.000
他们为他们的v4 um还是可以在较旧的东西上工作

00:19:50.000 --> 00:19:53.760
较旧的版本，所以我们可以预期这是一个较旧的工作

00:19:53.760 --> 00:19:57.520
这是一个问题，呃，你知道最大的问题

00:19:57.520 --> 00:20:01.440
我没有很好的工作价值最大

00:20:01.440 --> 00:20:05.679
回答我的意思是我可以说我的意思是第三个是

00:20:05.679 --> 00:20:11.919
从我的角度来看，不是价值最大的那个

00:20:11.919 --> 00:20:17.200
一旦我们得到一个兼容的真实ipld节点，它就是

00:20:17.200 --> 00:20:20.799
被用作使我的生活更轻松的障碍

00:20:20.799 --> 00:20:23.919
意味着我们可以进行ipld样式遍历和

00:20:23.919 --> 00:20:28.240
这样的事情，这使我们受益匪浅

00:20:28.240 --> 00:20:32.320
这样做的好处是，我们一开始就可以进行后续处理

00:20:32.320 --> 00:20:35.600
满足那些我们不必考虑的um接口

00:20:35.600 --> 00:20:40.000
关于后续版本的控制相当糟糕，或者变得稍微差一些吧

00:20:40.000 --> 00:20:42.880
如果我仍然可以通过障碍

00:20:42.880 --> 00:20:47.520
嗯，它的adl级别很棒，而且如果没有完全优化的话

00:20:47.520 --> 00:20:50.000
我们不得不做出一些妥协，并以其他方式解决这些问题

00:20:50.000 --> 00:20:52.960
以后的版本，只要我仍然可以通过

00:20:52.960 --> 00:20:56.559
通过它的工作原理，我们已经保存了自己

00:20:56.559 --> 00:21:02.240
必须重写分析代码，所以我认为这是我要说的

00:21:02.240 --> 00:21:06.640
善而不是完美，并得到它

00:21:06.640 --> 00:21:10.799
在我看来是最高的价值

00:21:11.360 --> 00:21:14.799
我也有一种感觉

00:21:15.840 --> 00:21:18.960
嗯，规格演员团队不会采取

00:21:18.960 --> 00:21:23.200
从主要版本升级到任何主要版本，即使相同

00:21:23.200 --> 00:21:27.360
格式嗯，我想我对

00:21:27.360 --> 00:21:31.200
他们工作的方式是一旦他们提交了一个版本，它

00:21:31.200 --> 00:21:34.640
推出该代码库实际上只是在

00:21:34.640 --> 00:21:36.960
维护和固定的东西，否则他们

00:21:36.960 --> 00:21:41.520
由于所有这些气体计算，请勿尝试尝试触摸太多

00:21:41.520 --> 00:21:46.240
而其余的在开发一个

00:21:46.240 --> 00:21:51.760
当前版本的adl有意义，我认为我们不应该去

00:21:51.760 --> 00:21:53.919
期望他们会

00:21:53.919 --> 00:21:57.120
用adl和ipld prime替换其当前版本

00:21:57.120 --> 00:22:01.280
在主要版本升级中更有可能发生某些事情

00:22:01.280 --> 00:22:06.159
所以我不知道那是什么意思，我的意思是那的确意味着那里有

00:22:06.159 --> 00:22:08.000
实际更改格式的范围

00:22:08.000 --> 00:22:14.320
和架构，但这并不意味着我们应该这样做

00:22:14.320 --> 00:22:18.480
是的，即使是主要版本升级，我的意思是同时

00:22:18.480 --> 00:22:21.919
有线数据格式很可能是兼容的，并且

00:22:21.919 --> 00:22:25.679
当他们可以进行升级以保持

00:22:25.679 --> 00:22:29.919
是的，我们确实做了一些有关更改位的讨论

00:22:29.919 --> 00:22:33.679
场ii ii拉进来um他叫什么名字

00:22:33.679 --> 00:22:35.360
来自生锈的Chainsafe

00:22:35.360 --> 00:22:38.640
只是因为您拥有这些替代信息

00:22:38.640 --> 00:22:44.080
那里的实现，就像我现在正在编写代码以阅读

00:22:44.080 --> 00:22:48.960
在javascript中进行链接并使其不断变化是

00:22:48.960 --> 00:22:54.400
烦人，所以最小的变化是好的，是的

00:22:54.400 --> 00:22:59.679
所以我的预感是最大的价值，这是我对位领域的另一种想法

00:22:59.679 --> 00:23:03.600
特别是现实情况是，如果您在进行任何类型的链分析

00:23:03.600 --> 00:23:06.320
您重新实现了go bit字段的任何语言

00:23:06.320 --> 00:23:09.840
嗯，因为它不仅出现在那里，而且出现在很多地方

00:23:09.840 --> 00:23:13.360
因此您已经拥有了其中之一，因此使用它并不会太麻烦

00:23:13.360 --> 00:23:16.240
是的，那也是我的意思

00:23:16.240 --> 00:23:19.919
除了在特定的地方使用

00:23:19.919 --> 00:23:23.679
一种非常新颖的方式来访问它的各个位，因此您

00:23:23.679 --> 00:23:27.120
实际需要实现的go位域比您阅读的更多

00:23:27.120 --> 00:23:29.840
他们读和写他们嗯，但是那是

00:23:29.840 --> 00:23:33.679
那是的，当我正在做的时候

00:23:33.679 --> 00:23:36.799
我一开始没有意识到的链模式

00:23:36.799 --> 00:23:40.880
使用了多少大整数，并且它在任何地方都使用过

00:23:40.880 --> 00:23:44.640
因此，如果您正在编写，如果您正在编写falcoin的代码，

00:23:44.640 --> 00:23:48.799
您可以使用源语言中的任何其他语言链接来确定

00:23:48.799 --> 00:23:54.720
它在做什么，所以我的预感是最好的

00:23:54.720 --> 00:24:00.559
最好的选择是在规格演员v3格式上工作，这是

00:24:00.559 --> 00:24:08.880
一种联合，然后在此之后添加其他任何内容

00:24:11.360 --> 00:24:15.679
是的，我同意um，所以本质上只是在最初支持该架构，

00:24:15.679 --> 00:24:20.240
一旦运作良好，我就可以考虑该怎么做以支持

00:24:20.240 --> 00:24:25.039
某种适当的新模式，例如单独的程序包或

00:24:25.039 --> 00:24:29.679
只是为了让我了解这是演员v3

00:24:29.679 --> 00:24:33.440
下一个版本，还是当前版本，是的下一个版本

00:24:33.440 --> 00:24:38.320
当前是v2嗯，所以v2 v2拥有街机游戏

00:24:38.320 --> 00:24:40.960
工会v3将具有我所不具备的那种工会

00:24:40.960 --> 00:24:44.960
知道我认为一月份的时间将推出，但它已经合并了

00:24:44.960 --> 00:24:48.320
现在在那一刻，所以它将使

00:24:48.320 --> 00:24:51.440
它进入所有测试代码以及​​所有内容的方式

00:24:51.440 --> 00:24:56.320
哦，即使v3是下一个um，也可能为时已晚

00:24:56.320 --> 00:24:58.840
建议此时替换实施

00:24:58.840 --> 00:25:02.320
是的

00:25:04.080 --> 00:25:07.039
我想这回答了我所有关于大麻的问题，我不知道你是否有

00:25:07.039 --> 00:25:13.200
其他任何权利，否iii

00:25:13.200 --> 00:25:16.320
哦，我想这周我可能再和怀亚特说话，所以我可能

00:25:16.320 --> 00:25:20.640
和他一起提出来，但你知道我们这里有冲突，

00:25:20.640 --> 00:25:24.480
接近他们非常是产品团队的地方，而我们不是

00:25:24.480 --> 00:25:29.520
和嗯，所以我们不能喜欢他们的目标是短期的，他们是非常非常的

00:25:29.520 --> 00:25:31.600
死板的，因为他们需要得到这些东西

00:25:31.600 --> 00:25:35.200
在特定的时间范围内，所以我们将很难解决

00:25:35.200 --> 00:25:39.360
他们有什么用，所以v3几乎被锁定了

00:25:39.360 --> 00:25:43.360
就他们对代码的计划而言，这是石头，所以我不认为我们

00:25:43.360 --> 00:25:45.360
应该打扰尝试从中得到任何东西，但是

00:25:45.360 --> 00:25:48.400
值得与他们讨论

00:25:48.400 --> 00:25:51.440
使ipld prime进入这些地方的步骤

00:25:51.440 --> 00:25:54.640
对于v4

00:25:55.760 --> 00:25:59.200
一个关于东西被插入的问题，我想

00:25:59.200 --> 00:26:06.720
适应amt变更的事情今天就结束了

00:26:07.440 --> 00:26:12.720
在汉普顿或山上有一个麻

00:26:12.720 --> 00:26:16.799
嗯，这是我可能会想念的，记住，是的，这可能是

00:26:16.799 --> 00:26:20.400
因为在那之前，那不是我们要做的，是的，那里是那里

00:26:20.400 --> 00:26:22.799
也许我不知道我是否认为有适合amt的人

00:26:22.799 --> 00:26:27.279
因为它也改变了位宽，但是火腿硬币被合并了，但是

00:26:27.279 --> 00:26:29.679
在合并所有代码的同时被合并，因此

00:26:29.679 --> 00:26:32.960
所有这些都做完了，好吧，是的

00:26:32.960 --> 00:26:38.559
没关系，我是我，我在穿越无线，没关系

00:26:38.559 --> 00:26:46.080
好吧，那么我们进入议程上的下一个任务项目，即

00:26:46.080 --> 00:26:52.320
嗯，身份证的东西是的，不是我，我不确定谁改变了

00:26:52.320 --> 00:26:55.279
谁改变了主题，不是

00:26:55.279 --> 00:26:58.480
谁改变了这个问题，呃，这不只是关于想法的问题

00:26:58.480 --> 00:27:03.279
基本上，一般人都在合作

00:27:03.279 --> 00:27:07.600
给你，问她我们是什么样的人

00:27:07.600 --> 00:27:11.919
如您所知，我们的指导是什么？

00:27:11.919 --> 00:27:15.919
更高级的东西，以及是否有东西

00:27:15.919 --> 00:27:19.360
一些模式或类似的东西，我们可以

00:27:19.360 --> 00:27:25.520
如果存在不专门用于此目的的人，请在此链接到

00:27:25.520 --> 00:27:29.679
ids ids只是例子之一

00:27:33.679 --> 00:27:36.880
iii不知道决策者的答案，所以我知道

00:27:36.880 --> 00:27:42.080
呃，罗德·埃里克，我想这将适合你们

00:27:42.080 --> 00:27:46.559
是的，我们知道了，我必须假设这是来自

00:27:46.559 --> 00:27:51.760
从ava到谁在做伟大的事情，好，谁拥有很好的联系

00:27:51.760 --> 00:27:56.320
与生态系统有关，但这是非常依赖语言的

00:27:56.320 --> 00:28:01.919
不幸的是，如果您正在做某事，那么

00:28:01.919 --> 00:28:08.000
我们的建议对于推动人们迈向ipld prime的每件事都是非常重要的

00:28:08.000 --> 00:28:13.840
嗯，她的问题是一个更基本的层面，而不是

00:28:13.840 --> 00:28:17.039
就像我如何为我的语言设计一些东西，但是

00:28:17.039 --> 00:28:24.720
我们如何让人们仅仅通过建立默克尔森林

00:28:24.720 --> 00:28:29.120
应用一套通用的东西，所以它显然不依赖于语言

00:28:29.120 --> 00:28:34.080
但更像人们应该做什么，以便其他人可以互操作

00:28:34.080 --> 00:28:37.279
以后再和他们在一起

00:28:39.279 --> 00:28:45.279
我们需要更多的文档工作，我想很奇怪，我想我们可能有一些

00:28:45.279 --> 00:28:49.120
文档是不错的，但可能不是

00:28:49.120 --> 00:28:54.480
很容易发现，就像我认为有底漆文档一样

00:28:54.480 --> 00:28:58.000
我是在丹尼尔加入我们的那段时间写的，我认为那仍然是真的

00:28:58.000 --> 00:29:01.520
很好，当他加入我们时，我们对此做了很多编辑工作

00:29:01.520 --> 00:29:06.880
这真的很有用，我们还没有登陆

00:29:06.880 --> 00:29:11.840
任何地方，否则我会责怪自己，我没有将其推入我们的文档或我们的文档中

00:29:11.840 --> 00:29:16.880
规格回购部分是因为我不知道应该回购哪个回购

00:29:17.039 --> 00:29:19.840
我们应该从那里得到更多这些东西，并确保它们

00:29:19.840 --> 00:29:24.480
如果有人的话，实际上是可以到达的

00:29:24.480 --> 00:29:27.919
为我们提供了关于不是哪些文档的良好反馈

00:29:27.919 --> 00:29:30.960
发现我们应该真的感谢他们的反馈

00:29:30.960 --> 00:29:35.600
并确保我们注意它，然后

00:29:35.600 --> 00:29:39.120
回去问他们是否可以找到该文件

00:29:39.120 --> 00:29:43.760
在我们更新一些链接之后，因为我们应该

00:29:43.760 --> 00:29:47.760
我们应该确保可以从ipld dot io和

00:29:47.760 --> 00:29:51.679
现在最多点击三次，他们可能在某处，但

00:29:51.679 --> 00:29:55.600
它确定不存在，并且确定不存在以及该点击次数

00:29:55.600 --> 00:30:00.480
这是关于呃的问题吗，那么问题的最后一部分是

00:30:00.480 --> 00:30:03.919
让我觉得这是关于什么是现成的组件

00:30:03.919 --> 00:30:07.679
对于我可以采用而不必从头开始构建的数据结构是

00:30:07.679 --> 00:30:10.559
那就是它的意义

00:30:11.120 --> 00:30:17.440
这些还不错，就像问题是

00:30:17.440 --> 00:30:20.840
穿过多层，所以很难

00:30:20.840 --> 00:30:24.480
嗯，但是得到了确切的答案

00:30:24.480 --> 00:30:27.520
会议，我们将要有明天，其中一些可能会出现

00:30:27.520 --> 00:30:31.039
嗯，与以太坊一起，而不是与叙利亚人民一起，

00:30:31.039 --> 00:30:36.799
嗯，有组织，我想是的，他们可能会有

00:30:36.799 --> 00:30:41.520
就呃而言，类似的东西需要……但是

00:30:41.520 --> 00:30:46.320
是的，就像喜欢的东西一样，

00:30:46.480 --> 00:30:52.480
一般，因为您想将它们应用于

00:30:53.520 --> 00:30:57.760
各种各样的东西，所以这就是为什么

00:30:57.760 --> 00:31:01.600
作为一个小例子而提出

00:31:03.279 --> 00:31:06.000
我的理解是这个问题，就像你们为什么没有

00:31:06.000 --> 00:31:11.440
当然是这种模式，是的，是的，我想我的答案

00:31:11.440 --> 00:31:14.880
会是这样，但我仍然认为这里有一种与语言有关的东西

00:31:14.880 --> 00:31:17.919
因为到期日不匹配

00:31:17.919 --> 00:31:20.480
根据您使用的语言，答案会有所不同

00:31:20.480 --> 00:31:23.039
因为我们可以为您提供现成的东西

00:31:23.039 --> 00:31:26.480
嗯，我们可以向您展示一些模式工作

00:31:26.480 --> 00:31:32.480
我认为也许最好的答案是回避说什么时候人们有这些

00:31:32.480 --> 00:31:35.919
问题链接将其发送给我们，让我们来

00:31:35.919 --> 00:31:39.279
讨论，因为我们需要更好地了解差距

00:31:39.279 --> 00:31:42.480
这样我们就可以知道要填充什么，因为

00:31:42.480 --> 00:31:46.559
这样的问题是为什么我们没有答案

00:31:46.559 --> 00:31:49.760
似乎我们确实有答案，但他们没有答案

00:31:49.760 --> 00:31:54.799
足够有条理，可以在这里这么说

00:31:54.799 --> 00:31:58.080
也许如果也许一旦这些事情出现

00:31:58.080 --> 00:32:02.000
嗯，让我们回想起ii认为电子邮件可能是最简单的方式

00:32:02.000 --> 00:32:05.279
只需通过电子邮件获取我们中的一两个人，然后

00:32:05.279 --> 00:32:11.039
我们会喜欢我最近和一些区块链人一起做的

00:32:11.039 --> 00:32:14.080
与教务长进行了一些卓有成效的讨论

00:32:14.080 --> 00:32:20.480
和其他一些人有关um各种ipfs的相关内容，但

00:32:20.480 --> 00:32:23.600
是的，我想将它们发送给我们，让我们

00:32:23.600 --> 00:32:26.559
讨论，然后我们可以了解需求以及我们遗漏的内容，

00:32:26.559 --> 00:32:29.840
然后做那些事

00:32:29.919 --> 00:32:33.120
嗯，让我们开始吧，我会很好地联系我

00:32:33.120 --> 00:32:37.360
我会把录音指向自己

00:32:37.679 --> 00:32:43.840
好吧，让我们看看

00:32:44.320 --> 00:32:47.679
我没有在议程上看到任何其他项目

00:32:47.679 --> 00:32:52.720
嗯，还有其他人吗

00:32:54.480 --> 00:32:58.480
不，那么谢谢大家的参与和观看

00:32:58.480 --> 00:33:06.799
下周再见

