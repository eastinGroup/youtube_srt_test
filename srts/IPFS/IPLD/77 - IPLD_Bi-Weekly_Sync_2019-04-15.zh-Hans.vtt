WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.429 --> 00:00:13.219
欢迎大家，这是IPL D团队每周将其称为2019年4月15日

00:00:15.289 --> 00:00:22.109
首先，我要求每个人都在婴儿床头上贴上他或她的名字

00:00:22.109 --> 00:00:31.830
在飞机上，以防有人在你L之后不认识我，我需要一个记笔记的人

00:00:31.830 --> 00:00:38.899
志愿者做笔记感谢棒

00:00:39.079 --> 00:00:44.789
好吧，如果您还没有放入婴儿床，请M这样做

00:00:44.789 --> 00:00:54.329
或任何其他特工物品，是的，是的，是的，因为我是第一个

00:00:54.329 --> 00:00:58.980
清单我从我开始，我从事的工作很短，因为我只是

00:00:58.980 --> 00:01:05.909
致力于JavaScript IP LD格式的工作，希望我能完成

00:01:05.909 --> 00:01:11.159
一个星期，然后我们在JavaScript会议中没有无休止的讨论

00:01:11.159 --> 00:01:18.119
为什么为什么我没有完成它，但希望我会完成它，然后我

00:01:18.119 --> 00:01:24.110
可能会在本季度的其他时段上工作

00:01:24.110 --> 00:01:37.939
除此之外，我认为我没有任何新闻，所以名单上的下一个是

00:01:38.329 --> 00:01:50.220
是的，所以我确实在IP LD规范回购中提取了请求编号110，所以我做了一些

00:01:50.220 --> 00:01:56.759
在一些主要的标准库中进行调查，以查看馆藏和

00:01:56.759 --> 00:02:00.899
看到一些共同点，我们的一些分组

00:02:00.899 --> 00:02:04.890
可以将这些东西组合在一起，然后建立一些初始框架

00:02:04.890 --> 00:02:12.030
在拉取请求方面的想法，所以这个想法是拉取请求

00:02:12.030 --> 00:02:20.400
它创建了一个停靠目录，该目录被称为数据结构

00:02:20.400 --> 00:02:22.710
好吧，已经有一种被称为数据结构了

00:02:22.710 --> 00:02:29.160
在这种情况下，然后主文档称为实用程序集合，我已经

00:02:29.160 --> 00:02:38.310
改变了一些依赖图和堆栈图片只是为了概括

00:02:38.310 --> 00:02:42.900
集合作为我们构建的基础数据事物的想法

00:02:42.900 --> 00:02:46.560
的顶部，因此该文档有很多

00:02:46.560 --> 00:02:50.790
考虑这些集合将是什么以及如何分类

00:02:50.790 --> 00:02:56.940
将它们分为单数与关联之类的东西，因此列表与地图以及

00:02:56.940 --> 00:03:01.560
有序的自称是无序的，然后是

00:03:01.560 --> 00:03:07.010
在编程语言中很常见，因为它们很有用，并且其中一些

00:03:07.010 --> 00:03:13.530
他们通常希望如此操作的目录很快就会成为

00:03:13.530 --> 00:03:19.200
填写有关建立在其上的各种数据结构的规范

00:03:19.200 --> 00:03:26.880
无论如何，这些想法是一回事，另一件事是埃里克（Eric）谈论

00:03:26.880 --> 00:03:31.739
关于他一直在做的架构工作我也一直在做

00:03:31.739 --> 00:03:39.660
试图把它变成实际上可用的东西，只是为了证明它

00:03:39.660 --> 00:03:47.850
实用程序确实是最初的目标，所以我编写了一个语法以使其通过或

00:03:47.850 --> 00:03:51.630
当前版本还很原始，因此您可能需要更改，但是

00:03:51.630 --> 00:03:56.790
这个想法是要能够快速地去做一些可以做一些基本的事情

00:03:56.790 --> 00:04:00.900
读取和写入块，因此读取块会将其转换为

00:04:00.900 --> 00:04:04.800
在模式中对此进行描述并对其进行处理

00:04:04.800 --> 00:04:09.870
而当它连接时，它连接到此收集逻辑，以便当您

00:04:09.870 --> 00:04:14.760
读取一个块，其中有一些指示符，表示我是这种人

00:04:14.760 --> 00:04:22.650
收集，您需要转到此位置以获取逻辑，然后执行

00:04:22.650 --> 00:04:30.240
用这种逻辑跳一点舞蹈，以顺应逻辑前进

00:04:30.240 --> 00:04:33.270
收集，并且可能会有来回的地方

00:04:33.270 --> 00:04:37.349
逻辑还可以，我已经完成了此模块，我需要一个新的模块

00:04:37.349 --> 00:04:40.740
对我来说，等你回来后再回到我身边

00:04:40.740 --> 00:04:45.330
来回，所以我想尝试并获得至少相当原始的东西

00:04:45.330 --> 00:04:50.159
很快就可以了，以免我们不知道纺车轮太久了

00:04:50.159 --> 00:04:56.159
计划者的学术思想，而且无论如何，事实证明它都是有用的

00:04:56.159 --> 00:05:05.009
关于架构的问题，是的，我猜它们现在已经存在了，因为我们

00:05:05.009 --> 00:05:10.080
上周开始认真谈论他们，我一直在浪费一些

00:05:10.080 --> 00:05:16.979
最后，我认为TRS进入规格回购

00:05:16.979 --> 00:05:20.490
写作，但尝试按照规范去按顺序整理东西

00:05:20.490 --> 00:05:26.909
经常发生，感谢你们对该解析器的所有评论

00:05:26.909 --> 00:05:38.339
真的很酷，她很高兴见到如此，是的，我

00:05:38.339 --> 00:05:41.699
认为我们已经进行了很多有趣的对话

00:05:41.699 --> 00:05:48.750
从广义上讲，我不知道这将是最令人高兴的

00:05:48.750 --> 00:05:53.699
导航一些公关，因为这对于任何人来说都是超级超级容易

00:05:53.699 --> 00:05:57.689
有关数据模型规范或架构的讨论

00:05:57.689 --> 00:06:01.979
就像在某个时候需要指定一些整体的东西一样

00:06:01.979 --> 00:06:08.699
对的，我只是不知道该如何保持如何喜欢分裂

00:06:08.699 --> 00:06:12.289
分流的一部分在Matic github问题中分离，就像

00:06:12.289 --> 00:06:19.319
就我而言，这需要魔术，但到目前为止进展顺利

00:06:19.319 --> 00:06:24.419
我不知道关于此的一些元讨论可能会有所帮助

00:06:24.419 --> 00:06:28.409
但我只是不知道它会变成什么样子，所以我真的很兴奋

00:06:28.409 --> 00:06:35.490
无论如何，进展，是的，我想所有这些东西都是我要报告的，所以

00:06:35.490 --> 00:06:39.199
几乎是我们的，你知道我在做什么

00:06:45.800 --> 00:07:00.340
非常感谢，名单上的下一个是Dean是的，所以我们

00:07:00.340 --> 00:07:05.979
看着你撒一些笔记的循环，并看到一些重复出现的循环

00:07:05.979 --> 00:07:10.930
基本上是我们想要集中化的问题

00:07:10.930 --> 00:07:14.499
让他们现在工作，但我们不想以后再束缚自己，

00:07:14.499 --> 00:07:20.250
似乎有四个或五个问题基本上都是这样

00:07:20.250 --> 00:07:24.969
包括一个看起来像迈克尔的人，正在做一些工作，所以我在

00:07:24.969 --> 00:07:31.210
迈克尔也看了您的问题，并对您的问题更感兴趣

00:07:31.210 --> 00:07:41.860
在考虑并决定对ACL类型的行为进行微动以进行dag同步

00:07:41.860 --> 00:07:47.439
因为那会比我现在需要更多的时间

00:07:47.439 --> 00:07:52.810
我想做到这一点，所以只要按通常的方式就可以得到一个，就可以得到一个

00:07:52.810 --> 00:07:55.719
一个名称数据结构的ACL，并称之为一天

00:07:55.719 --> 00:07:59.740
就像IPS目前正在做的一样，我们会在接下来的工作中找出下一个

00:07:59.740 --> 00:08:07.779
嗯，我将在一两周后再尝试使用IPL D Prime，看看效果如何

00:08:07.779 --> 00:08:24.759
接下来会很酷的迈克尔是，是的，我有很多东西清单，是的，是的

00:08:24.759 --> 00:08:29.379
让我让我克服这个困扰，所以发生了很多事情

00:08:29.379 --> 00:08:35.320
在上周我剥离了e堆栈的JavaScript中，所以我的浏览器动态性受到限制

00:08:35.320 --> 00:08:39.430
浏览器获取编解码器，因此其想法是，将来，如果您只是

00:08:39.430 --> 00:08:43.510
使用Web Pack编译这些内容，实际上没有任何编解码器在

00:08:43.510 --> 00:08:47.649
默认包，除了像原始编解码器的行，然后是所有

00:08:47.649 --> 00:08:51.730
编解码器将根据您的需要动态加入，这应该真的很

00:08:51.730 --> 00:08:56.170
帮助将来打包，将来不会，现在

00:08:56.170 --> 00:09:00.430
在IVF中的工作原理是，用户必须先决定所需的编解码器

00:09:00.430 --> 00:09:05.440
并发送给他们，因为他们无法摆脱任何

00:09:05.440 --> 00:09:10.120
默认编解码器，还有一点Lyndon，我将所有

00:09:10.120 --> 00:09:14.350
块中不必要的异步操作这里的想法是我正在开始

00:09:14.350 --> 00:09:18.010
实施我们所说的一系列性能改进

00:09:18.010 --> 00:09:21.190
即将确保我们拥有的API模型实际上支持所有

00:09:21.190 --> 00:09:27.610
这些，这样一个很酷，你可以看看这个，我迁移了

00:09:27.610 --> 00:09:32.080
dag Jason的实现移到了这个新堆栈上，这导致了巨大的损失

00:09:32.080 --> 00:09:37.090
删除代码绝对是对我们所做工作的认可

00:09:37.090 --> 00:09:43.330
为了简化编解码器的开发，在本周的新界面中，我将

00:09:43.330 --> 00:09:49.030
将下一个52位所有人转移到ILD堆栈中，然后我也要

00:09:49.030 --> 00:09:52.060
实施选择资源的内联，以便我们可以实际证明

00:09:52.060 --> 00:09:56.890
展示出来，然后展示那是如何工作的，唯一会等待的是

00:09:56.890 --> 00:10:02.200
然后是汉普顿排列，以便像UNIX 52一样向前发展

00:10:02.200 --> 00:10:06.730
这是我们唯一需要将其交给ipfs进行集成的方法

00:10:06.730 --> 00:10:10.690
除了火腿的东西，大部分都将是完整的

00:10:10.690 --> 00:10:15.760
好吧，在柏林的首脑会议上，我们已经完成了T恤的定稿，然后使用

00:10:15.760 --> 00:10:19.180
这一周都在一起我要把一堆议程整理在一起

00:10:19.180 --> 00:10:23.890
前两天在Google文档中已有的内容还不够

00:10:23.890 --> 00:10:27.790
绘制了其余的图，但是上周您在好之前做了​​我们的工作

00:10:27.790 --> 00:10:34.720
希望你得分，看到了并同意你的分数，我觉得地球如此

00:10:34.720 --> 00:10:38.920
这已经很多了，就像我们需要某种永久性云一样

00:10:38.920 --> 00:10:44.800
存储非常简单的IP LD块，可以代表

00:10:44.800 --> 00:10:48.880
人们以一种经过验证的方式决定只写一些真实的东西

00:10:48.880 --> 00:10:53.020
使用lambda，所以我为其注册了一个名为我的TLD的域

00:10:53.020 --> 00:11:00.190
我们现在有一个仅用于IP LD项目的AWS账户，这很酷，是的，

00:11:00.190 --> 00:11:03.730
立即发现标记出了我们用于与之交互的工具

00:11:03.730 --> 00:11:08.620
lambda不能正确支持二进制体输入，因此可以提供保护

00:11:08.620 --> 00:11:11.350
在周末固定下来，应该继续并在今天发布，我

00:11:11.350 --> 00:11:14.770
应该能够取得更大的进步，我感觉到地球，然后我不知道

00:11:14.770 --> 00:11:19.630
相当不错，我本周将在哪里进行项目，好酷的任何项目

00:11:19.630 --> 00:11:27.310
其他问题或M有关于如何动态加载的问题

00:11:27.310 --> 00:11:29.680
在浏览器中的工作方式就像它来自哪里

00:11:29.680 --> 00:11:35.350
那么您是否将我们的I / O传递给了我们，就像这样，不，不，不，不，所以

00:11:35.350 --> 00:11:39.579
我的作品是使用导入功能，就像您曾经使用过导入一样

00:11:39.579 --> 00:11:43.329
像在Web pack中一样，或者像任何项目编译器一样会对其进行攻击

00:11:43.329 --> 00:11:48.160
基本上，它使您对模块有一个承诺，然后在

00:11:48.160 --> 00:11:54.100
引擎盖会把外套拆开，哦，克里斯蒂安·忙着就像我用一个

00:11:54.100 --> 00:11:58.120
我的代码中的格式会自动与选择捆绑在一起

00:11:58.120 --> 00:12:07.600
捆绑的重点是，所以这就是发生的事情，就像

00:12:07.600 --> 00:12:11.410
这些大的如果死亡在那里，所以我们必须为每个编解码器进行一次if盗窃

00:12:11.410 --> 00:12:15.610
就像我们现在一样，这是永远可能的，因此获取模块代码

00:12:15.610 --> 00:12:19.329
最终就像拥有您所知道的导入功能语句一样，并且

00:12:19.329 --> 00:12:23.500
那么Web Pack的作用是可以，我需要它，但是我

00:12:23.500 --> 00:12:27.640
将其分解成一个单独的文件并异步加载它，那么

00:12:27.640 --> 00:12:30.519
Web Pack发生的情况知道这些都是这些编解码器

00:12:30.519 --> 00:12:33.130
将来可能会用到，但默认情况下不会出现

00:12:33.130 --> 00:12:37.269
捆绑发生的事情是，它们中的大多数都是通过HTTP动态生成的，

00:12:37.269 --> 00:12:41.560
像基于哈希的文件名一样，但是基本上，如果您构建

00:12:41.560 --> 00:12:46.029
带有Web钉的东西，您会像正常方式那样指向

00:12:46.029 --> 00:13:06.550
是的，很好的是，就像导入功能一样

00:13:06.550 --> 00:13:10.720
标准化，以便最终甚至可以在节点上工作，或者

00:13:10.720 --> 00:13:13.510
与异步回溯功能不太一样，您不需要任何东西

00:13:13.510 --> 00:13:16.420
需要注意，但这只是意味着像我们最终无法

00:13:16.420 --> 00:13:23.199
有两个入口点，是的，很酷的事情，是的，我有一个问题，我

00:13:23.199 --> 00:13:28.350
没意识到有一个标准化的竖琴将是一个

00:13:28.350 --> 00:13:34.329
获得独特的fSV的必要性-我认为是MF

00:13:34.329 --> 00:13:39.009
东西会像今天一样存在，所以我们基本上是在这里重新创建MF。

00:13:39.009 --> 00:13:43.839
通过正确地处理手柄，不，它不仅像任何时候一样在电影节上

00:13:43.839 --> 00:13:47.139
您创建的目录包含大量的文件，您将需要

00:13:47.139 --> 00:13:50.949
髋关节，实际上它实际上就像是支持UNIX的一部分，而不是

00:13:50.949 --> 00:13:54.040
这么快的一部分，以及在辅助工具中起作用的方式是

00:13:54.040 --> 00:13:57.579
就像一次过的汉普顿专业鸟羽，所以好像不是真的

00:13:57.579 --> 00:14:02.559
标准化的，因此我们需要在数据之上盖印Windows Internet

00:14:02.559 --> 00:14:07.509
模型，因为因为就像您知道的那样，它适用于数据模型中的任何编解码器，所以

00:14:07.509 --> 00:14:12.790
从理论上讲，您应该能够创建dag JSON或Dex Ybor之类的图形

00:14:12.790 --> 00:14:18.639
是的，所以我们需要在UNIX上更通用的汉普顿

00:14:18.639 --> 00:14:22.809
并非如此，所以将其发布是一个障碍，但我们实际上可以

00:14:22.809 --> 00:14:25.269
可能在我们拥有此功能之前就开始集成工作，因为

00:14:25.269 --> 00:14:29.499
从该库侧来看，来自UNIX的接口看起来是否相同

00:14:29.499 --> 00:14:32.709
还是不使用竖琴，因为它的工作方式就是

00:14:32.709 --> 00:14:35.589
一个异步生成器，为您提供所需的所有块

00:14:35.589 --> 00:14:39.970
图，所以最终它会为您提供所有中间部分的更多娃哈

00:14:39.970 --> 00:14:44.110
像这样的未来汉普顿队，这种支持应该或多或少地发生

00:14:44.110 --> 00:14:48.370
透明地进行，因此我们可以在ipfs中开始集成

00:14:48.370 --> 00:14:55.809
完成，但这确实使紧急获得火腿的东西是的，是的，很好

00:14:55.809 --> 00:15:12.069
想要在季度末基本可行的任何东西

00:15:12.069 --> 00:15:19.010
其他议程，然后再继续讨论其他我不喜欢的事情

00:15:19.010 --> 00:15:28.190
所以随便跟他们继续前进好吧，是的，所以上个星期我们

00:15:28.190 --> 00:15:33.170
这个模式的讨论，我们也做了一个小演示，就像我说过的

00:15:33.170 --> 00:15:38.060
感觉到D Prime和造型团队的选择者，他们俩都去了

00:15:38.060 --> 00:15:40.550
好吧，我觉得这给了我们很多

00:15:40.550 --> 00:15:43.579
对这些项目的反馈和可见度非常好，我们有一堆

00:15:43.579 --> 00:15:46.279
现在其他东西掉下来了，就像我们

00:15:46.279 --> 00:15:49.639
完成并准备好进行交接，否则将获得更多反馈

00:15:49.639 --> 00:15:53.240
所以我想把它变成更多普通的事情，所以我在想

00:15:53.240 --> 00:15:59.990
是我们在下周的某个非工作周每隔一周举行一次会议

00:15:59.990 --> 00:16:03.589
不是星期一，我想在节目表的日历上放一些东西，

00:16:03.589 --> 00:16:06.350
告诉我们，无论什么项目准备就绪，我们都会填写

00:16:06.350 --> 00:16:09.470
每隔一周，但我们至少应该在本季度末

00:16:09.470 --> 00:16:14.180
我们想要收集反馈的足够多的新事物以使用该广告位，并且

00:16:14.180 --> 00:16:17.000
一个出现，我们应该主动邀请我们需要的所有合适的人

00:16:17.000 --> 00:16:20.329
来复习这种东西，所以对于JavaScript来说，我们应该得到

00:16:20.329 --> 00:16:24.170
喜欢爵士乐的人，如果这是一件好事，我们应该去

00:16:24.170 --> 00:16:31.310
等等，所以您的意思是说有一个通用的Show and Tell插槽，然后安排一个

00:16:31.310 --> 00:16:35.660
像推荐参加者这样的实际参与者可能会正确地掩盖您，我们甚至

00:16:35.660 --> 00:16:38.750
必须稍微调整时间以适应那些与会者，具体取决于

00:16:38.750 --> 00:16:53.889
他们的时区使其他任何令人担忧的问题降温，而莫莉则是第一位

00:16:53.889 --> 00:17:04.699
你在屏幕上指着我，所以我不知道怎么办，我很快

00:17:04.699 --> 00:17:11.089
要求在六月即将到来的ipfs营地上，而Michael和我

00:17:11.089 --> 00:17:13.910
一直在聊一些关于出勤和诸如此类的事情

00:17:13.910 --> 00:17:18.620
知道这不是人们必需的活动，但是我们正在创造很多

00:17:18.620 --> 00:17:23.540
很棒的新内容，意味着喜欢直播活动，所以就像

00:17:23.540 --> 00:17:27.740
要做的目标是使每个人都像在校园里一样升级

00:17:27.740 --> 00:17:31.790
即将来临的人们将参与其中，但将来也会有这样的经历

00:17:31.790 --> 00:17:35.210
原始学校里生活的东西就像更多可以被捕的东西

00:17:35.210 --> 00:17:38.330
社区以及将在许多其他研讨会中使用的东西，

00:17:38.330 --> 00:17:43.760
教程是一种，我们计划有四门主要课程

00:17:43.760 --> 00:17:47.900
创建并让每个人走进ipfs营地，其中之一就是

00:17:47.900 --> 00:17:53.600
就像对ipfs如何处理文件和标签的核心理解一样，我们所有人

00:17:53.600 --> 00:17:59.059
七个，所以如果sv1不是v2，这是UNIX造成的，因为sv1不是

00:17:59.059 --> 00:18:05.960
仍然存在，但目前有一些人可以帮助我们发展

00:18:05.960 --> 00:18:09.590
那个课程当然是艾伦和史蒂文，我们当时以为

00:18:09.590 --> 00:18:14.000
与来自IP LD的某人组成的三人一组真的很有用

00:18:14.000 --> 00:18:18.350
从过时的模型角度来看我们如何处理文件

00:18:18.350 --> 00:18:23.300
因此，取决于是否有人对IPL B有兴趣

00:18:23.300 --> 00:18:30.650
谁想帮助我们创建本课程，很有帮助，所以我可以

00:18:30.650 --> 00:18:35.480
在github上问一个问题，或者我们也想不一定要宣传

00:18:35.480 --> 00:18:39.980
我们提前创建的所有内容，以便所有与会者都已经知道

00:18:39.980 --> 00:18:44.030
在他们出现之前我们正在做的事情会有点像你

00:18:44.030 --> 00:18:49.670
知道不是那么令人兴奋和令人惊讶，而是对我身上某人的要求

00:18:49.670 --> 00:18:54.260
现场决定谁有带宽与Alan和Steven合作

00:18:54.260 --> 00:19:01.160
创建他的类似文件级别的研讨会，以考虑您是否愿意

00:19:01.160 --> 00:19:07.460
对这样做感兴趣，我的意思是我可能可以帮忙，我认为问题是

00:19:07.460 --> 00:19:10.820
我实际上对UNIX se1不太了解

00:19:10.820 --> 00:19:15.350
就像我将所有时间都投入新的时间一样，我说我实际上并不十分了解

00:19:15.350 --> 00:19:19.730
就像如何使用便携式物品一样，这将是唯一的问题，但是

00:19:19.730 --> 00:19:25.130
我知道协议的工作原理真的很好，我可以为其他人提供更多帮助

00:19:25.130 --> 00:19:31.880
熟悉的人，您是否非常熟悉，我知道，也许我知道

00:19:31.880 --> 00:19:38.690
像最低的水平，基本上也没有用，所以我想念

00:19:38.690 --> 00:19:44.330
中间的东西，但是我可以像帮助命令一样显示

00:19:44.330 --> 00:19:49.040
那里有一些低级的问题，但是我不知道我是不是真的

00:19:49.040 --> 00:19:55.370
比Ellen知道的更多，但是是的，我看到的是文件问题，或者问我或

00:19:55.370 --> 00:20:02.060
我不知道自己的能力如何，所以我想我应该是迈克尔

00:20:02.060 --> 00:20:05.420
可能只是将其拆分给我们，这样您就可以进行高级操作，如果您有

00:20:05.420 --> 00:20:15.770
你刚刚回到我身边的问题是迈克尔·德里斯（Michael Dris）从你那里来

00:20:15.770 --> 00:20:21.679
透视图作为ITIL交易中人类的信息传递者并为您提供帮助

00:20:21.679 --> 00:20:26.390
传播得还不错，您并不是说我是整个事情的直接倡导者

00:20:26.390 --> 00:20:34.130
对，你只需要你，艾伦和史蒂芬，你就是我的战场

00:20:34.130 --> 00:20:43.280
该小组中的代表非常感谢，如果我们有时间的话，迈克尔

00:20:43.280 --> 00:20:47.990
即使我尝试从中提取很多信息，例如网络种子

00:20:47.990 --> 00:20:53.090
是的，是的，我的意思是我的一般问题是

00:20:53.090 --> 00:20:58.250
这也是洪流的问题，那就是您有一个部分

00:20:58.250 --> 00:21:02.330
需求非常高的数据，因此有很多同龄人

00:21:02.330 --> 00:21:05.540
来提供这些内容，那么您将拥有如此长的数据尾巴，几乎没有

00:21:05.540 --> 00:21:08.810
曾经访问过，所以几乎没有同行，就像

00:21:08.810 --> 00:21:12.410
运行BitTorrent的费用非常高，不，它一直是

00:21:12.410 --> 00:21:15.260
这类数据每个月只能访问一次，所以他们做到了

00:21:15.260 --> 00:21:18.679
该系统称为网络种子，您基本上可以像

00:21:18.679 --> 00:21:22.669
跟踪器对，所以您就像每个跟踪器一样，然后您也可以说

00:21:22.669 --> 00:21:25.820
好吧，这是伯爵，基本上是不得已而为之，所以如果你

00:21:25.820 --> 00:21:30.890
找不到像通过这些轨道中的任何一个或在任何这些轨道上的同伴一样的文件

00:21:30.890 --> 00:21:35.120
追踪器，然后退回到这个位置，它真的很好用，这就是

00:21:35.120 --> 00:21:39.110
就像大多数网络旅游一样，人们在放置我的内容和东西时会用

00:21:39.110 --> 00:21:43.520
这样，它就大大减少了他们的带宽费用，但是

00:21:43.520 --> 00:21:46.790
你不知道改变他们的存储如此明显，因为仍然在存储

00:21:46.790 --> 00:21:50.750
永久存在于某个地方，但是是的，它运作良好，我们也遇到类似的问题

00:21:50.750 --> 00:21:54.320
与我们在DFS系列中与之交谈过的一些合作伙伴

00:21:54.320 --> 00:21:57.860
所以就像我真的很想看到类似的东西，我们有一个明显的优势

00:21:57.860 --> 00:22:02.660
因为我们不必说哦，这是我们实际可以说的内容的URL

00:22:02.660 --> 00:22:06.710
这是框的URL，因为您可以像对待其他任何框一样处理它

00:22:06.710 --> 00:22:11.030
像您尝试做的机制III根本不是很规范

00:22:11.030 --> 00:22:15.710
就像我们如何启用它的机制一样

00:22:15.710 --> 00:22:19.790
就像我不，我不在乎，我的意思是，如果

00:22:19.790 --> 00:22:24.050
有人可以构建一个应用程序并说好，我要把我的数据放在这里试试

00:22:24.050 --> 00:22:27.530
将其从对等网络中删除，但如果没有，则解决

00:22:27.530 --> 00:22:31.610
事故，那很好，所以您的建议完全可以解决这个问题，但是您

00:22:31.610 --> 00:22:35.480
可以看到一些讨论，可能其他任何人都很好

00:22:35.480 --> 00:22:45.280
信标问题是的，因为据我了解，目前的计划是

00:22:45.280 --> 00:22:50.540
在将来的星号或将替换所有提供的记录是

00:22:50.540 --> 00:22:59.980
无论如何都在寻找多种哈希，所以是的，我对此感到担忧，因为

00:22:59.980 --> 00:23:07.580
因此，在这种情况下，您只需执行多播的基数32，而不是

00:23:07.580 --> 00:23:14.900
这个想法的奥秘，我认为我们希望它成为CID，因为如果我已经

00:23:14.900 --> 00:23:17.510
可以肯定，因为我们正在建立这种感觉，我感到很荣幸我曾经做过的事情

00:23:17.510 --> 00:23:22.070
开始考虑拥有一项服务的样子

00:23:22.070 --> 00:23:25.400
代表成千上万的人提供区块，可能数以百万计的人

00:23:25.400 --> 00:23:27.680
的人是如此喜欢数十亿个块，以至于成千上万的核心

00:23:27.680 --> 00:23:31.580
一个对您有很大帮助的非常重要的信息是

00:23:31.580 --> 00:23:36.140
可以查找CID并知道您是否已经存储了整个图形

00:23:36.140 --> 00:23:40.490
在它下面，如果不是，那么每次执行时都会下沉，或者您像嘿一样问

00:23:40.490 --> 00:23:43.790
您是否有此信息，您必须分析整个图并按照

00:23:43.790 --> 00:23:48.080
整个图表，这样的服务，甚至说实话最终像常规的一样

00:23:48.080 --> 00:23:51.320
他们想要做的节点是存储一点缺陷数据

00:23:51.320 --> 00:23:57.500
在CID旁边说哦，是的，我也喜欢这样，在某个时候，我们会

00:23:57.500 --> 00:24:00.980
可能想在位网络方面进行协议调整，例如

00:24:00.980 --> 00:24:04.790
就像嘿，您是否在此CID下拥有所有数据，并公开相同的数据？

00:24:04.790 --> 00:24:08.120
这样的事情，如果我们通过HTTP进行同样的事情，我们会想要

00:24:08.120 --> 00:24:12.920
处于某种标题正确的位置，但是为了做到这一点，您必须

00:24:12.920 --> 00:24:16.100
在谈论CID的另一种多重哈希权限，因为您不知道

00:24:16.100 --> 00:24:18.860
多重编解码器是什么，实际上您无法分辨是否拥有全部

00:24:18.860 --> 00:24:23.030
数据所有数据对不起图中所有链接的数据，是的，所以

00:24:23.030 --> 00:24:26.720
这就是为什么我说要使用CID，然后基数32就像我们

00:24:26.720 --> 00:24:32.870
必须选择一种编码，您可以将其放入其中哦，是的，我想我听到了我的声音

00:24:32.870 --> 00:24:41.510
当时以为我们已经有了萨姆·韦尔克（Sam Welker），这就是为什么为什么需要

00:24:41.510 --> 00:24:48.260
编解码器，而不只是像哈希这样的哈希表，为什么您需要完整的CD

00:24:48.260 --> 00:24:54.700
信息和编解码器，您是否也不想，甚至我也看不到

00:24:54.700 --> 00:25:02.720
如果您的CID下是否有一棵树，则否之间的关系取决于

00:25:02.720 --> 00:25:07.640
CN只是个哈希，所以我不太了解，因为

00:25:07.640 --> 00:25:12.260
只是一个多哈希，你不知道如何向它询问链接，所以你会如何

00:25:12.260 --> 00:25:16.400
能够确定您是否存储了所有数据哦，然后获取数据库

00:25:16.400 --> 00:25:20.630
只是服务于哈希，但是然后您不知道它实际上是什么

00:25:20.630 --> 00:25:29.290
好的，你知道我猜我在想的是DHT目前

00:25:29.290 --> 00:25:34.910
使用诸如纯信息记录（对等ID和一组）之类的纯信息记录来响应您

00:25:34.910 --> 00:25:39.590
就像模仿和多地址一样，如果对等ID就像

00:25:39.590 --> 00:25:48.140
null，您会没事的，因为多地址可能只是一个URL，对不对

00:25:48.140 --> 00:25:52.400
对，嗯，这不需要真的

00:25:52.400 --> 00:25:57.350
当前正在运行节点的任何其他人更改软件都只是意味着

00:25:57.350 --> 00:26:01.880
当您读取数据时不需要界面的人

00:26:01.880 --> 00:26:07.750
返回一个配对信息对象，这是我认为这是当前正在执行的操作

00:26:07.750 --> 00:26:13.040
正确，但不是，您必须这样做，只是说这是一个多地址是

00:26:13.040 --> 00:26:17.840
可能还不够，因为您会需要它，因为

00:26:17.840 --> 00:26:21.560
地球还是你只是在说那还好

00:26:21.560 --> 00:26:27.410
这些仔细记录的目的，如果您得到一个多地址，您就是

00:26:27.410 --> 00:26:33.140
期望对看到的ID进行编码并将其附加到并像将其附加到它一样

00:26:33.140 --> 00:26:38.090
不像当时考虑的那样，好吧，有件事

00:26:38.090 --> 00:26:43.670
史蒂文提到在添加像元数据一样的地方

00:26:43.670 --> 00:26:47.750
得到其余的块或文件的结构是什么，但我

00:26:47.750 --> 00:26:54.080
猜想这个主意是你知道我经营了一个广告，嘿，这个街区是可用的

00:26:54.080 --> 00:27:00.200
在这个URL哦，一切都好，是的，然后您可以

00:27:00.200 --> 00:27:05.840
好吧，我认为在我们这边，我们在想像您一样

00:27:05.840 --> 00:27:08.720
其实根本没有牙齿做过DHT

00:27:08.720 --> 00:27:13.190
因此，在某个节点上，您会说想在DST中查找此内容，如果不能

00:27:13.190 --> 00:27:17.000
找到它回退到此URL，这里有一点不同，因为这是

00:27:17.000 --> 00:27:22.970
实际上是DHT中的记录，这是有道理的，是的，这有点

00:27:22.970 --> 00:27:28.280
更少，这需要多走一趟，因为您实际上仍然需要进行一次

00:27:28.280 --> 00:27:34.040
DHT请求并且不能直接击中您知道的s3存储桶，但它仍然

00:27:34.040 --> 00:27:37.760
允许所有它不会使您不得不像硬叉一样

00:27:37.760 --> 00:27:46.220
集中化的世界，您会自然地接近，是的，我的意思是

00:27:46.220 --> 00:27:50.900
至少我想他真的像这样减轻了李的层次感

00:27:50.900 --> 00:27:53.900
的服务，但是如果我拿回唱片的话，你会喜欢哦

00:27:53.900 --> 00:27:59.410
里面没有任何内容，我只是要将记录添加到此URL中，然后尝试

00:27:59.410 --> 00:28:07.550
我们有时间，所以我们有40个半小时，所以我想请您

00:28:07.550 --> 00:28:18.700
凯特（Kate offline）是的，还有其他我想讨论的事情，或者我什么也看不到

00:28:18.700 --> 00:28:24.850
然后我结束会议，两周后再见

00:28:24.850 --> 00:28:28.090
再见了，大家

