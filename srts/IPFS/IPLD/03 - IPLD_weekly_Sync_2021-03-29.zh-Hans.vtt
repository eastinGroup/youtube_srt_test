WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.000 --> 00:00:12.320
[音乐]

00:00:12.559 --> 00:00:17.359
欢迎大家参加本周的同步会议

00:00:17.359 --> 00:00:24.720
是2021年3月29日，每周我们都会浏览

00:00:24.720 --> 00:00:31.840
在过去一周中我们一直在努力，然后讨论所有未完成的议程项目

00:00:31.840 --> 00:00:35.840
嗯，我从我自己开始，而更新只是

00:00:35.840 --> 00:00:40.160
像过去几周的每周一样无聊

00:00:40.160 --> 00:00:43.520
但我仍在努力将js智能性能集成到

00:00:43.520 --> 00:00:51.280
js ipfs unixfs和js ipfs我已经将prs链接到了prs草案中

00:00:51.280 --> 00:00:57.760
在会议节点上，是的，我仍然希望得到

00:00:57.760 --> 00:01:02.239
至少本季度完成了unix fs部分，这并不是很多

00:01:02.239 --> 00:01:06.479
剩下的日子，我们将会看到

00:01:06.479 --> 00:01:10.799
但是有趣的是，这里也发生了变化

00:01:10.799 --> 00:01:17.119
或者我建议对js多种格式进行更改，

00:01:17.119 --> 00:01:20.720
这很有趣，因为嗯，对于那些不是

00:01:20.720 --> 00:01:26.240
对javascript的深入了解，但对人们而言，对javascript而言很有趣

00:01:26.240 --> 00:01:30.000
因此有两种加载模块的方法

00:01:30.000 --> 00:01:34.479
节点方式，并且有新的es6模块加载方式

00:01:34.479 --> 00:01:38.799
因此，对于js多种格式的东西和新的ipodle东西

00:01:38.799 --> 00:01:42.799
迈克尔，我也和他一起读过，使用新模块很有意义

00:01:42.799 --> 00:01:46.320
因为这样人们将来会用到，但是我们

00:01:46.320 --> 00:01:49.600
当然需要与旧版本兼容，因为例如

00:01:49.600 --> 00:01:53.680
js ipfs正在使用什么，然后我们当然在

00:01:53.680 --> 00:01:57.840
添加了打字稿打字的js ipfs

00:01:57.840 --> 00:02:01.280
所以问题是我们让它与

00:02:01.280 --> 00:02:06.799
新模块中的旧模块格式编码，就像将其编译为旧模块一样

00:02:06.799 --> 00:02:11.599
但现在您还需要确保打字稿类型有效

00:02:11.599 --> 00:02:15.120
但是问题是，要让他们与

00:02:15.120 --> 00:02:20.080
新的东西以及旧的东西um，所以我们在这些方面遇到了问题

00:02:20.080 --> 00:02:24.160
事情，我们现在最终得到的是

00:02:24.160 --> 00:02:28.400
那个在模块系统中，你有类似

00:02:28.400 --> 00:02:32.800
这称为默认导出，这意味着单个文件导出单个内容，然后

00:02:32.800 --> 00:02:37.200
没有很多东西，通常你很乐意使用这个

00:02:37.200 --> 00:02:41.120
但在我们的案例中，结果证明它不适用于打字和

00:02:41.120 --> 00:02:44.239
一切都是安拉最简单的解决方案

00:02:44.239 --> 00:02:47.360
建议的只是不使用默认导出，而只是

00:02:47.360 --> 00:02:50.480
通过名称将其导出，因此有点像技术细节

00:02:50.480 --> 00:02:52.879
就像如果您随后导入东西，那有点

00:02:52.879 --> 00:02:58.720
差异不同，也许不是很好的输入，但我认为这是完全

00:02:58.720 --> 00:03:02.400
可行，我也发现了，所以当我从博客文章中进行类似的研究时

00:03:02.400 --> 00:03:04.640
人们很好，您不应该使用默认值

00:03:04.640 --> 00:03:08.080
根本没有出口，所以也有这类人

00:03:08.080 --> 00:03:10.080
有点像可以使用

00:03:10.080 --> 00:03:14.800
所谓的出口就是我们现在要做的，现在的好消息是

00:03:14.800 --> 00:03:20.000
在带有奇数模块系统的新模型系统中使用它真的很顺利

00:03:20.000 --> 00:03:23.840
以及打字稿类型

00:03:23.840 --> 00:03:27.200
而且您不会收到任何您不理解的奇怪错误消息

00:03:27.200 --> 00:03:31.360
因此，这将与有关命名的一些讨论合并，因此

00:03:31.360 --> 00:03:36.000
上，但希望此js多种格式pr可以合并

00:03:36.000 --> 00:03:40.560
今天或明天，因为我有点需要我的工作

00:03:40.560 --> 00:03:44.159
我认为向前迈进，我们可能会使用

00:03:44.159 --> 00:03:49.360
或者我建议我们将我们的json模块始终使用export，因为

00:03:49.360 --> 00:03:53.280
只是比较平滑，所以我不是在说

00:03:53.280 --> 00:03:56.480
默认导出是不可能的，但这只是

00:03:56.480 --> 00:04:00.080
我们需要某种方式使其以某种方式起作用

00:04:00.080 --> 00:04:04.720
然后可能会破坏其他地方，这只是我认为更清洁的方法

00:04:04.720 --> 00:04:08.560
到目前为止，它似乎仍然可以正常工作

00:04:08.560 --> 00:04:12.480
如果您使用一些捆扎机，会使情况更加复杂

00:04:12.480 --> 00:04:15.760
事情，所以这取决于是否使用网页或

00:04:15.760 --> 00:04:18.400
包裹或其他包裹，是的

00:04:18.400 --> 00:04:21.120
真的很复杂，我认为现在我们处在一个阶段

00:04:21.120 --> 00:04:25.759
我认为这是对我们所有事物的一种工作

00:04:25.759 --> 00:04:30.000
试穿了，嗯

00:04:30.000 --> 00:04:35.840
是的，其他类型的输入以及测试都通过了

00:04:35.840 --> 00:04:38.560
看起来很有希望

00:04:39.120 --> 00:04:46.400
不错，这就是我的全部，所以我的清单上的下一个

00:04:46.400 --> 00:04:49.120
埃里克

00:04:52.400 --> 00:04:57.759
你好，所以我这周没有太多更新，但是

00:04:57.759 --> 00:05:03.120
几个很好的小版本um遗留下来的ipld

00:05:03.120 --> 00:05:06.960
格式存储库终于有了状态文本

00:05:06.960 --> 00:05:10.160
在他们的自述文件的一小部分，打个招呼的方式是

00:05:10.160 --> 00:05:14.400
更新的替代品，并指出一个链接，所以将开始公关

00:05:14.400 --> 00:05:17.280
为此，我在上方添加了一些差异

00:05:17.280 --> 00:05:21.840
我也想尝试一下

00:05:21.840 --> 00:05:24.880
出去，所以如果有人有喜欢的感觉

00:05:24.880 --> 00:05:27.360
这并想稍后发表评论，请这样做

00:05:27.360 --> 00:05:32.160
嗯，我们没有为其他回购做这件事，以回应我们应该聊天的问题

00:05:32.160 --> 00:05:35.919
嗯，因为我们有很多回购品，可能需要某种

00:05:35.919 --> 00:05:42.400
更新他们的状态文本，我正在尝试也许我们应该

00:05:42.400 --> 00:05:46.720
在这些中添加一些大胆的关键字

00:05:46.720 --> 00:05:51.680
文本区域，否则会选择自由文本，因为我想尝试使此文本

00:05:51.680 --> 00:05:53.919
过度的结构可能会崩溃并烧毁

00:05:53.919 --> 00:05:58.560
由于开销太高，但我将尝试选择一些大胆的方法

00:05:58.560 --> 00:06:02.720
像这样的词有其他可用的选择，并用粗体和标记标记

00:06:02.720 --> 00:06:06.400
下来，也许是一些宽松的约定

00:06:06.400 --> 00:06:11.520
将来将有助于我们清楚地谈论这一点

00:06:11.520 --> 00:06:15.919
在我最疯狂的梦想中，也许我们会写一个通过回购协议的小脚本

00:06:15.919 --> 00:06:19.759
并检查谁拥有这些粗体文本标签

00:06:19.759 --> 00:06:23.919
然后我们可以建立仪表板，这周不做，但这是

00:06:23.919 --> 00:06:30.479
这个主意还好，谢谢您的参与。

00:06:30.479 --> 00:06:34.240
有一个问题在旅途中打开，我杀了关于

00:06:34.240 --> 00:06:38.240
链接上下文抽象um

00:06:38.240 --> 00:06:41.360
如果有人对此感兴趣并且对它的摩擦有意见或

00:06:41.360 --> 00:06:44.319
已经遇到了它，特别是在性能分析中

00:06:44.319 --> 00:06:46.960
有趣的是要获得更多的信息，否则

00:06:46.960 --> 00:06:54.479
也许我们稍后再恢复这个想法，我想从一件事中

00:06:54.479 --> 00:06:58.319
通话中不存在的其他人，但我知道他们在做一些很棒的事情

00:06:58.319 --> 00:07:03.280
嗯，这是我在过去的几周中不断提及的unix fs节点回购协议

00:07:03.280 --> 00:07:07.360
我相信这将使团队进一步发展

00:07:07.360 --> 00:07:10.720
致力于升级一堆ipfs内部组件go

00:07:10.720 --> 00:07:13.599
 ipfs内部

00:07:14.000 --> 00:07:19.039
他们意识到升级ipfs内部的路线图要求

00:07:19.039 --> 00:07:22.319
他们使它成为s节点库的unix

00:07:22.319 --> 00:07:28.960
嗯，至少我认为能够读取sv1启动目录的unix，所以

00:07:28.960 --> 00:07:33.599
我认为该功能旨在使其成为adl土地

00:07:33.599 --> 00:07:40.880
很快，非常令人兴奋，是的

00:07:43.120 --> 00:07:48.400
谢谢，接下来是丹尼尔

00:07:49.759 --> 00:07:57.120
很酷，嗯，我的标签在哪里，所以我会很简短，我还是

00:07:57.120 --> 00:08:01.360
我一直在做dac pb um的工作，所以从规范的角度来看，我们仍然看起来不错

00:08:01.360 --> 00:08:06.319
我曾在松弛中简短地提到过，有一项测试失败了，

00:08:06.319 --> 00:08:10.800
事实证明，有些人确实编写了自己的pro buff编码器

00:08:10.800 --> 00:08:15.039
和pb节点的解码器，它们使用了不同的顺序，所以我们

00:08:15.039 --> 00:08:20.479
最终同意仍然需要规范格式

00:08:20.479 --> 00:08:22.720
但是在解码方面要宽一些

00:08:22.720 --> 00:08:26.960
我们实际上保持了与ipfs数据的向后兼容性

00:08:26.960 --> 00:08:30.400
所以规格改变在那里，我也更新了代码

00:08:30.400 --> 00:08:33.839
还有我笔记本电脑上的那个设置，因为我还有另一个公关，我不想

00:08:33.839 --> 00:08:38.479
与我自己发生冲突，我们不生活在一个我可以

00:08:38.479 --> 00:08:45.360
不幸的是，推了一连串的pr um导致了这个问题

00:08:45.360 --> 00:08:48.560
链是一堆性能改进

00:08:48.560 --> 00:08:53.120
在gokodectpd um中，它实际上大致就是

00:08:53.120 --> 00:08:57.760
旧的protobuf对不起stackpb编码器和解码器是

00:08:57.760 --> 00:09:01.519
代码生成，并且直接在字节上工作，而

00:09:01.519 --> 00:09:04.640
新的尝试与读者做花哨的东西，

00:09:04.640 --> 00:09:08.720
作家，这很好，但它也很慢，所以我

00:09:08.720 --> 00:09:12.560
我做了一些厚颜无耻的事情，那就是使用一个叫做proto wire的包

00:09:12.560 --> 00:09:15.040
图书馆上方的新专业人士，一切都很好

00:09:15.040 --> 00:09:17.200
优化，它有一些原始

00:09:17.200 --> 00:09:20.399
编码变体并使用变体和类似的东西

00:09:20.399 --> 00:09:23.600
所以我能够删除一堆代码

00:09:23.600 --> 00:09:27.200
它更快，所以现在开销几乎是

00:09:27.200 --> 00:09:30.480
没什么，这仍然是一点点开销，因为

00:09:30.480 --> 00:09:33.680
ipld prime仍然有一些开销，我将在此进行讨论

00:09:33.680 --> 00:09:37.600
以后，但是现在几乎不存在了

00:09:37.600 --> 00:09:42.800
嗯，这对转编解码器甲板pv上的co是一个额外的依赖，但我认为那是

00:09:42.800 --> 00:09:45.920
很好，因为如果有人正在进口悟空套牌PB

00:09:45.920 --> 00:09:49.200
我认为导入图书馆产品是合理的

00:09:49.200 --> 00:09:52.959
如果有人认为不是这种情况，请大喊

00:09:52.959 --> 00:09:59.120
um，最后是ipld prime um

00:09:59.120 --> 00:10:03.600
性能很好，我想我发现最后一个

00:10:03.600 --> 00:10:07.839
我无法获得的20的性能基本上是alux

00:10:07.839 --> 00:10:12.320
因此，您查看cpu配置文件，仅前20位只是运行时函数

00:10:12.320 --> 00:10:15.680
而且基本上就是我无法摆脱的分配

00:10:15.680 --> 00:10:18.720
嗯，这有点可悲，因为他们真的

00:10:18.720 --> 00:10:22.000
小分配，也许我们可以摆脱一个

00:10:22.000 --> 00:10:28.560
例如，嗯，架构中的每个pb链接都有一个也许是字符串

00:10:28.560 --> 00:10:32.560
作为名称，还有很多其他可选字段

00:10:32.560 --> 00:10:35.600
据我所知，每一个都分配给它

00:10:35.600 --> 00:10:39.279
分配我正在考虑的整数

00:10:39.279 --> 00:10:43.440
字符串，它们是如此之小，我们真的需要指针吗？

00:10:43.440 --> 00:10:47.040
不知道感觉就像我们可以直接将它们粘在父级中

00:10:47.040 --> 00:10:50.720
我看到eric实际上有一个功能

00:10:50.720 --> 00:10:53.519
在代码生成器中已经对此进行了可怕的记录，但是在您的某个地方

00:10:53.519 --> 00:10:57.200
在地图上放置一个魔术串，它将要做到这一点

00:10:57.200 --> 00:11:02.240
重新弄清楚魔术弦是什么，即使我不记得我很抱歉

00:11:02.240 --> 00:11:05.279
足够公平，所以是的，如果我能将其打开

00:11:05.279 --> 00:11:08.959
我认为我将能够像另外百分之几一样刮掉下一个

00:11:08.959 --> 00:11:13.040
嗯，但是是的，否则，我为merkle dag编写了一个基准

00:11:13.040 --> 00:11:16.560
将旧的编码和解码往返行程与

00:11:16.560 --> 00:11:21.519
新的，我们过去总体上慢了20微米，这基本上是

00:11:21.519 --> 00:11:26.240
新的编解码器，现在我们基本上处于噪音之中

00:11:26.240 --> 00:11:30.959
阈值，所以实际上和以前一样好

00:11:30.959 --> 00:11:34.160
嗯，就是我了

00:11:34.959 --> 00:11:42.160
谢谢做，尤其是当我什么时候放入ipfs

00:11:42.160 --> 00:11:47.279
使用uh dan的dagp优化版本的集成测试现在更快

00:11:47.279 --> 00:11:50.959
比我们的基准

00:11:54.839 --> 00:12:00.720
可以说很酷，还有其他人吗

00:12:00.720 --> 00:12:03.519
任何更新

00:12:04.480 --> 00:12:09.279
我的更新很短，我实际上是在和我们聊天的时候花了一些时间

00:12:09.279 --> 00:12:14.160
我简短地遇到了一些消息

00:12:14.160 --> 00:12:20.000
星期五有火山喷发的呃，他们有很多问题

00:12:20.000 --> 00:12:24.079
关于呃事情，他们从这个开始

00:12:24.079 --> 00:12:27.279
粉丝误解腕骨到底是什么

00:12:27.279 --> 00:12:33.360
嗯，我为你们中的一些人加了标签，例如关于我们做什么的各种问题

00:12:33.360 --> 00:12:36.320
为你做比特币的想法对不起猎鹰

00:12:36.320 --> 00:12:40.880
adl对于实际的情况，无论我们是否

00:12:40.880 --> 00:12:46.959
选择器就像一个简单的块列表一样的东西

00:12:46.959 --> 00:12:50.560
是的，如果我们能在一周之内回答类似的问题

00:12:50.560 --> 00:12:53.839
不错

00:12:55.920 --> 00:13:00.320
嗯，好吧[音乐]

00:13:00.320 --> 00:13:07.839
还要别的吗

00:13:08.880 --> 00:13:12.720
我对Dan会获得的那些性能结果感到非常兴奋

00:13:12.720 --> 00:13:19.600
嗯，如果你们也可以快照您的一些东西

00:13:19.600 --> 00:13:22.639
实际上，如果您愿意或喜欢，p会描述整个情况

00:13:22.639 --> 00:13:27.839
就像东西的PNG出口一样，我希望拥有一些像

00:13:27.839 --> 00:13:30.800
随机快照伪像没有浮动，我可以

00:13:30.800 --> 00:13:36.399
看看他们不必像我知道是否必须进行配置

00:13:36.399 --> 00:13:39.279
我自己要去做的任何事情，都必须做一堆工作才能

00:13:39.279 --> 00:13:44.639
变得像一个互动的妻子，但只有一些快照可以像

00:13:44.639 --> 00:13:48.240
球场印象真的很有帮助

00:13:48.240 --> 00:13:51.839
我的意思是从Dan的小型替补席上脱颖而出

00:13:51.839 --> 00:13:54.959
非常可行，我认为这就是dan一直在使用的

00:13:54.959 --> 00:13:58.639
作为对汉娜发布的更广泛调查的一部分

00:13:58.639 --> 00:14:04.240
在我们的频道中，我们将在频道中对ping进行更多讨论

00:14:04.240 --> 00:14:06.800
这些正在作为较大的集成测试进行测试运行

00:14:06.800 --> 00:14:11.519
我不知道一个人神奇地唤起p个道具退出测试的方式

00:14:11.519 --> 00:14:16.480
当前，我听说有足够的容量，但这并不容易

00:14:16.480 --> 00:14:23.279
问，嗯，甚至有些像只是拍张照片

00:14:23.279 --> 00:14:26.959
低分辨率的东西，就像我们可以找到它的地方

00:14:26.959 --> 00:14:29.199
实时我不需要特别高分辨率的数据

00:14:29.199 --> 00:14:32.720
举例来说，另一个问题真是太好了

00:14:32.720 --> 00:14:35.839
打开询问哦，链接上下文是一个巨大的问题，因为

00:14:35.839 --> 00:14:38.639
它正在做像yadda yadda这样的删除副本

00:14:38.639 --> 00:14:43.040
我敢打赌不是，但是我没有数据，其他人也没有打开

00:14:43.040 --> 00:14:46.959
像最细微的低分辨率数据这样的问题将是

00:14:46.959 --> 00:14:50.079
就像方便

00:14:51.279 --> 00:14:54.320
但我也应该说，这取决于您在做什么，因为

00:14:54.320 --> 00:14:58.000
至少对于我们的用例，我们必须在原型节点之间进行转换

00:14:58.000 --> 00:15:02.800
以及每次迭代中的dac pb节点，所以它不是真的

00:15:02.800 --> 00:15:06.399
代表某人做正确的事

00:15:06.399 --> 00:15:13.839
也许也是如此，但综合基准也可以是

00:15:13.839 --> 00:15:26.079
我会喜欢拥有随机的真实世界数据

00:15:26.079 --> 00:15:32.160
好吧，嗯，我有一件事，呃，我有一个

00:15:32.160 --> 00:15:37.279
下周一的公众假期，所以我不会在这里，所以我只想像谁会跑

00:15:37.279 --> 00:15:42.399
会议，我知道Rod拥有一切接触的机会

00:15:42.399 --> 00:15:45.759
来运行会议并进行流式传输

00:15:45.759 --> 00:15:49.680
下周你会在那儿吗还是我应该给喜欢的人

00:15:49.680 --> 00:15:54.800
就像尝试为他人获取访问权限一样

00:15:54.800 --> 00:15:58.399
是的，你也应该把它给别人，以防万一

00:15:58.399 --> 00:16:00.399
刚从较晚的会议出来

00:16:00.399 --> 00:16:05.519
就像有一个快速的跳跃，所以谁可以

00:16:05.519 --> 00:16:11.040
谁想要谁想要志愿

00:16:16.320 --> 00:16:20.800
对不起，什么不，不，不，不

00:16:22.720 --> 00:16:26.160
彼得不得在任何事情上自愿承担更多责任

00:16:26.160 --> 00:16:30.480
那只是一个规则，所以and and而且还等一等

00:16:30.480 --> 00:16:34.079
也像彼得一样，彼得也是公共假期

00:16:34.079 --> 00:16:37.360
只是提一提，所以他不应该在那里

00:16:37.360 --> 00:16:42.399
所以彼得所以彼得无法做到，因为他不会去那里，这是一个公共假期

00:16:42.399 --> 00:16:51.279
所以嗯，所以我想我应该

00:16:51.279 --> 00:16:55.839
你能坐起来吗，我想我会遇到技术困难

00:16:55.839 --> 00:17:01.120
我提前知道这一点，我至少可以像我给你的exes那样吗？

00:17:01.120 --> 00:17:04.880
您至少可以成为主持人，就像至少有人必须成为主持人一样

00:17:04.880 --> 00:17:08.240
做事情是的，你不必对你

00:17:08.240 --> 00:17:11.280
不必广播，您可以将其录制好，然后我的意思是我们可以

00:17:11.280 --> 00:17:15.919
稍后再讨论这个问题，但总的来说，实际上我一直在

00:17:15.919 --> 00:17:19.120
考虑长大，我们想每周做一次吗？

00:17:19.120 --> 00:17:21.839
如果是这样的话，这次会议会足够有用吗？

00:17:21.839 --> 00:17:24.559
隔周

00:17:25.199 --> 00:17:30.480
我想我会和Will的团队一起缩减工作量

00:17:30.480 --> 00:17:34.080
可能会少谈论我不

00:17:34.080 --> 00:17:37.120
知道我有基础，我有很多工作要做

00:17:37.120 --> 00:17:43.120
在本周的js.pld上，它不是很有趣，但我只是

00:17:43.120 --> 00:17:45.679
不要以为会有很多新闻

00:17:45.679 --> 00:17:52.559
参加每周一次的会议，所以我会像本季度末一样

00:17:52.559 --> 00:17:55.120
这个星期，所以下周我会全职

00:17:55.120 --> 00:18:02.480
加密计算机实验室，所以我可能不会做任何超相关的工作

00:18:02.480 --> 00:18:05.760
喜欢一些附带的东西，但不喜欢真正的喜欢

00:18:05.760 --> 00:18:09.200
就像我真正做的是我做一半时间真的很喜欢

00:18:09.200 --> 00:18:12.240
js motherfucker我的东西，所以我不会那样做

00:18:12.240 --> 00:18:17.360
我想让它们回到我们以前使用的旧格式是很有意义的

00:18:17.360 --> 00:18:22.000
一开始我想每两周做一次

00:18:22.320 --> 00:18:27.679
嗯，是的，是的，我想我想我想这个时隙

00:18:27.679 --> 00:18:32.400
下周对我来说也更尴尬了，这是早上7点

00:18:32.400 --> 00:18:36.080
但我必须在早上6点前参加每周一次的会议，所以

00:18:36.080 --> 00:18:40.720
ii为了录音，我不知道我要做什么

00:18:40.720 --> 00:18:44.480
决定这个异步是否还有其他您想要的东西

00:18:44.480 --> 00:18:48.080
讨论人们实际上想听的话题

00:18:49.440 --> 00:18:54.480
是的，我们可以，嗯，但是我们基本上可以说我们有

00:18:54.480 --> 00:18:58.559
肯定下周我们开会，因为忙碌的人们在看

00:18:58.559 --> 00:19:03.280
现在，无论他们是否开会或

00:19:03.280 --> 00:19:07.360
我们是否应该在下周跳过然后从那里走，我想是什么样的

00:19:07.360 --> 00:19:10.320
我认为我们至少应该对

00:19:10.320 --> 00:19:14.559
让我们跳过下周吧，投票支持跳过下周跳过

00:19:14.559 --> 00:19:20.000
我要走了，我们可以，所以我们下周跳过，然后我会回来

00:19:20.000 --> 00:19:22.880
所以我们不必处理任何事情

00:19:22.880 --> 00:19:27.039
事情，然后我们可以讨论它的工作方式或是否有人

00:19:27.039 --> 00:19:31.760
评论可以和我们聊天，给我们发电子邮件，是的

00:19:31.760 --> 00:19:35.679
因此，如果您与其他尝试过的人交谈，也请喜欢

00:19:35.679 --> 00:19:38.160
过去只是让他们知道

00:19:38.160 --> 00:19:41.520
发生了一些事情，我们可能每周都不这样做

00:19:41.520 --> 00:19:47.280
很好，我也把它放在会议记录中

00:19:47.280 --> 00:19:55.679
很好，还有其他不好的事情吗，谢谢大家

00:19:55.679 --> 00:20:01.919
参加，两周后再见

