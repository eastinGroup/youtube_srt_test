WEBVTT
Kind: captions
Language: zh-Hans

00:00:20.710 --> 00:00:30.350
欢迎大家参加本周的2020年5月25日IPL取消同步会议，

00:00:30.350 --> 00:00:35.239
每周我们都会回顾上周完成的工作以及

00:00:35.239 --> 00:00:43.550
可能在下周工作，然后讨论我们今天可能拥有的所有未完成项目

00:00:43.550 --> 00:00:48.830
这可能不是一个拥挤的会议，因为在美国有一个假期，但是

00:00:48.830 --> 00:00:55.100
它并不能阻止我们获胜，所以我开始了自己，但我仍然

00:00:55.100 --> 00:01:03.170
使用Blog API并将其与该API相结合，我想确保

00:01:03.170 --> 00:01:06.800
IP LD的内容在编码表上是通用的

00:01:06.800 --> 00:01:10.520
我认为我们在以前的会议中已经讨论了很多，而且非常

00:01:10.520 --> 00:01:14.660
重要的是我们可以通过您的自定义编码电缆，并且我们不会捆绑

00:01:14.660 --> 00:01:25.940
em带有实现的巨大表，而我被困在一个小问题上，那就是

00:01:25.940 --> 00:01:33.289
基于这样的代码获得类似H的编解码器实现

00:01:33.289 --> 00:01:39.050
想拥有Ybor，而只有整数值进入

00:01:39.050 --> 00:01:42.649
实际的编解码器似乎很简单，如果您考虑一下

00:01:42.649 --> 00:01:46.630
其他实现，但与当前实现不同的是，它不是

00:01:46.630 --> 00:01:55.970
今天不太可能在一天结束时我找到了一个解决方案，我认为是的

00:01:55.970 --> 00:02:01.910
正是您，我认为我对Blog API的需求不如一般

00:02:01.910 --> 00:02:05.869
可能是这样，但一般情况下确实无法按事物的方式工作

00:02:05.869 --> 00:02:11.420
已实施，但事情的实施方式我认为是有道理的，

00:02:11.420 --> 00:02:17.989
很好，是的，我使用了这种特殊情况，我可能会说

00:02:17.989 --> 00:02:22.280
如果我真的发现事情确实有效，那么下周再说吧

00:02:22.280 --> 00:02:25.760
因为毫无意义地谈论最后的事情

00:02:25.760 --> 00:02:30.950
别担心工作有时是有重点的，但是我不认为在这种情况下

00:02:30.950 --> 00:02:36.170
是的，那么，是的，我还没有做任何事情

00:02:36.170 --> 00:02:40.420
其他我上周我身上的东西我认为[音乐]

00:02:40.420 --> 00:02:45.700
我名单上的下一个是埃里克（Eric）

00:02:47.090 --> 00:02:53.880
拍摄我做得不好我还在打字我本周大部分时间都做了很多事情

00:02:53.880 --> 00:03:00.000
我可能忘记了，今晚很少想起你的诗，可是科根去了

00:03:00.000 --> 00:03:07.100
本周列表和地图的一些重大进展现在都可以完全递归地进行，并且

00:03:07.100 --> 00:03:12.150
好吧，这不是新闻，而是什么，包括递归以及何时递归

00:03:12.150 --> 00:03:17.280
代表书，所以以前如果他是

00:03:17.280 --> 00:03:21.630
在递归结构上遍历，您可以启动一些表示模式

00:03:21.630 --> 00:03:25.290
但是当你走进他的孩子们时，他们会忘记，但是他们是

00:03:25.290 --> 00:03:30.180
在表示模式下，这样您就可以进入结构的中间，就像

00:03:30.180 --> 00:03:35.910
也许这张地图里面的结构应该是字符串连接

00:03:35.910 --> 00:03:41.250
结构或某物的表示形式，您将遍历此结构，然后您

00:03:41.250 --> 00:03:44.069
会忘记您处于我们的演示模式，因此该节点

00:03:44.069 --> 00:03:47.970
您返回的界面继续像地图一样工作，而您真正想要的是

00:03:47.970 --> 00:03:52.590
长的行为就像结构正确的字符串一样，所以它们现在做错了

00:03:52.590 --> 00:03:57.090
长话短说，这样做是正确的，因此，如果您可以通过某些节点值

00:03:57.090 --> 00:04:00.709
然后您就可以得到表示形式，这是一些大数据树的优点

00:04:00.709 --> 00:04:07.200
如果您现在将该节点传递给喜欢的任何常规遍历对象，或者

00:04:07.200 --> 00:04:12.359
常规编解码器封送处理示例，它将透明地做正确的事情

00:04:12.359 --> 00:04:17.250
因为所有递归都将停留在降水Mogens如此连接的地方

00:04:17.250 --> 00:04:25.910
现在已经父母了解代码生成的类型序列化很酷

00:04:25.979 --> 00:04:30.750
更多的文档也出现在我的go代码生成器中

00:04:30.750 --> 00:04:35.490
看一下纯粹的大小超过100 KB的自述文件

00:04:35.490 --> 00:04:38.780
和hackney文件，现在有很多设计选择需要

00:04:38.780 --> 00:04:44.490
录制在那里，所以很有趣，对不起

00:04:44.490 --> 00:04:49.860
最近在github上有一个有趣的讨论，有人问

00:04:49.860 --> 00:04:55.169
我们是否有用于字节权重的选择器，所以答案是否定的，但我们这么说

00:04:55.169 --> 00:04:59.449
有一个非常好的讨论正在进行，我结束了

00:04:59.449 --> 00:05:03.770
只是说我从海报中得到了心脏电影的反应，所以我觉得我

00:05:03.770 --> 00:05:09.710
赢得了互联网，我赢得了它们，谢谢随机的互联网陌生人

00:05:09.710 --> 00:05:12.370
小事真的可以改变一切

00:05:12.370 --> 00:05:18.979
上了雨，所以我可能还有其他事情，但我却忘记了

00:05:18.979 --> 00:05:37.639
休息他们的东西好吧，我有一个，我们坦率地说，我看到了本·比特币

00:05:37.639 --> 00:05:47.930
变得完全不舒服，但我现在大部分时间都加入其中，我只想列出

00:05:47.930 --> 00:05:57.529
通过枪支启动的过程，所以我现在已经处理了整个区块链

00:05:57.529 --> 00:06:07.219
以我需要的方式，并且我有工具和代码可以在此之前展示

00:06:07.219 --> 00:06:18.490
在后垫的笔记中列出内容主要是IPL d中的速度

00:06:18.490 --> 00:06:26.810
org JSI PLD比特币池请求编号63是我最后一对夫妇的大部分

00:06:26.810 --> 00:06:34.240
数周之内，我们打算将其拉长一秒钟，因为

00:06:34.240 --> 00:06:41.330
它基本上是对JSA PLD比特币代码的完全重写，所以它

00:06:41.330 --> 00:06:44.360
它不是与旧版本不兼容，而是与新版本相比

00:06:44.360 --> 00:06:49.249
多页脚多种格式都可以使用，所以我们可能要购买新的新回购协议

00:06:49.249 --> 00:06:52.550
发布者使用不同的名称，然后他们打破了过去，然后

00:06:52.550 --> 00:07:00.189
在这里说新的东西我仍在处理文档的所有东西

00:07:00.189 --> 00:07:08.419
我正在努力获取API文档，而不仅仅是

00:07:08.419 --> 00:07:15.440
我的孩子几乎完成了多大的比特币区块编码工作

00:07:15.440 --> 00:07:22.610
和比特币格式的解码工作所需要的几乎没有

00:07:22.610 --> 00:07:27.949
在过去的几周中，由于我遇到了这些独角兽豪华版，

00:07:27.949 --> 00:07:32.750
并在区块链中调用它们只是阻止和意外

00:07:32.750 --> 00:07:40.630
功能，您知道我认为我们上周正在谈论

00:07:40.630 --> 00:07:46.370
有一种新颖的财务激励措施可以改变，并且那

00:07:46.370 --> 00:07:52.460
使得这些独角兽街区的案例研究变得非常有趣

00:07:52.460 --> 00:07:58.699
一堆他们可以我的测试夹具现在列出了这些独角兽块

00:07:58.699 --> 00:08:03.590
我可以辨认出其中的一堆，并说出它们的独特之处

00:08:03.590 --> 00:08:09.220
他们脱颖而出，但在整个区块链上，所以我发现

00:08:09.220 --> 00:08:13.940
在我的github中还有另一个仓库称为J的比特币提取，它只是一个

00:08:13.940 --> 00:08:23.870
一堆实用程序，从比特币核心中提取数据以验证为IP或

00:08:23.870 --> 00:08:29.900
定义，并且还验证了合并中与之相反的方式

00:08:29.900 --> 00:08:37.789
一个重要的小牛文件，这是该项目的目标，然后我也有

00:08:37.789 --> 00:08:44.630
另一个验证那些硬币演出汽车文件可以重新序列化的实用程序

00:08:44.630 --> 00:08:50.779
回到原始的二进制格式，实际上我一直认为

00:08:50.779 --> 00:08:52.870
运行我已经在我的机器上运行的任何东西

00:08:52.870 --> 00:08:58.220
是的，它只是在进行验证，这似乎很好，没有问题

00:08:58.220 --> 00:09:06.380
在那里，最后有一个拉取请求，在库里的多重库里克

00:09:06.380 --> 00:09:11.600
用于新的多编解码器表的多格式斜杠modacrylic存储库，以添加一个

00:09:11.600 --> 00:09:19.160
用于比特币的更多多编解码器称为比特币，这一承诺是

00:09:19.160 --> 00:09:26.070
代码b2，这是针对这一新的小数据结构的

00:09:26.070 --> 00:09:33.810
将其全部消除，所以我们现在有三个用于比特币的编解码器，

00:09:33.810 --> 00:09:36.110
足够的

00:09:36.270 --> 00:09:44.100
但我的计划是继续前进到其他区块链，我认为

00:09:44.100 --> 00:09:50.370
此刻不适合他们，但是我已经开始寻找比特币现金了，我

00:09:50.370 --> 00:09:55.980
也可能在SB之间做同样的事情，因为这些是区块链的重点

00:09:55.980 --> 00:10:02.400
这意味着他们的代码与原始比特币代码非常接近

00:10:02.400 --> 00:10:08.880
今天我可以从四个点开始处理，所以我没有

00:10:08.880 --> 00:10:13.230
整个学说直到那时我才有了，因为我已经

00:10:13.230 --> 00:10:18.780
已经完成了区块链之间的其余工作，因此可能是

00:10:18.780 --> 00:10:23.760
有需要的人可能很容易做到，但是其他的选择

00:10:23.760 --> 00:10:31.860
比特币代码叉有很多，所以选择一些流行的，但是

00:10:31.860 --> 00:10:35.550
这项工作正在获得T，所以我想我必须撒些神话

00:10:35.550 --> 00:10:43.130
妈妈做一些其他的工作，包括回到我的JavaScript Siebel负鼠

00:10:43.130 --> 00:10:49.440
抱歉，C球编码器或解码器非常接近所有功能

00:10:49.440 --> 00:10:55.020
基本功能枪，我不介意回到那个问题，但我确实有

00:10:55.020 --> 00:11:00.600
一堆其他东西在我的盘子上我最整洁的洁牙机在那里，但只是为了

00:11:00.600 --> 00:11:06.210
一直说我认为我需要专注于这100％，因为

00:11:06.210 --> 00:11:14.420
是的，这很消耗我发现无论如何是我

00:11:14.420 --> 00:11:23.010
谢谢彼得，您真的有任何更新或要分享的内容吗？

00:11:23.010 --> 00:11:30.150
有趣的是，他的新事物是36基地现在正在成为一件事

00:11:30.150 --> 00:11:38.540
在ipfs土地上，因为我们基本上没有足够的空间

00:11:38.540 --> 00:11:46.710
这是要击败子域中的密钥，如果我们对投入六和地铁的股票进行编码

00:11:46.710 --> 00:11:51.080
完全正确地执行步骤

00:11:51.410 --> 00:11:58.790
不同，您知道文本表示形式可能会开始飞来飞去，但听不到

00:11:58.790 --> 00:12:03.560
除此之外，我还没有开始

00:12:03.560 --> 00:12:12.540
在我的流处理器工具上工作，或多或少的代码，所以在那里，但仍然

00:12:12.540 --> 00:12:17.550
您必须充分记录这些概念，因为事实证明

00:12:17.550 --> 00:12:23.700
变得比我想要的还要复杂，希望我会与您分享

00:12:23.700 --> 00:12:29.460
伙同们在下周一提供实际示例和类似内容，但

00:12:29.460 --> 00:12:38.940
最重要的是，很可能会很容易地将其重新构建为UNIX sp2

00:12:38.940 --> 00:12:46.230
或其他任何基于Siebel的工作作为测试，因为它确实会

00:12:46.230 --> 00:12:50.600
汽车，你知道我基本上可以与其他所有东西互操作

00:12:50.600 --> 00:12:56.390
与无损代码，所以是的下周一

00:12:58.190 --> 00:13:05.269
您能否再解释一下基础36的上下文，因为我只是简单地数一下

00:13:05.269 --> 00:13:08.839
突然之间，我没有说出我们为什么这样做的逻辑背景

00:13:08.839 --> 00:13:11.199
它

00:13:11.680 --> 00:13:17.800
因为我刚提到它，因为它可以占用我整个周末的整个时间

00:13:17.800 --> 00:13:25.279
弄清楚如何有效地编码基数36

00:13:25.279 --> 00:13:32.569
一旦找到它，但最重要的是有一些用例

00:13:32.569 --> 00:13:43.160
我们想使用易于结束的2295键是对等的一部分

00:13:43.160 --> 00:13:50.360
ID作为子域的一部分，以及我们目前对Lippe进行编码的方式

00:13:50.360 --> 00:13:59.750
基于rt2编码的密钥及其周围的所有开销为65个字节

00:13:59.750 --> 00:14:07.930
long，比DNS子部分长2个字节，我们不在乎

00:14:07.930 --> 00:14:15.610
关于DNS，当它解析偶数甚至松弛时，那里的所有内容

00:14:15.610 --> 00:14:23.680
以文本形式解析URL，它将以63个字节的形式进行剪切，因此无论何时您

00:14:23.680 --> 00:14:28.210
做一些看起来像URI的事情，您必须拥有安全的每个部分

00:14:28.210 --> 00:14:36.490
URI的部分最多为60个字节，这就是为什么我们要引入

00:14:36.490 --> 00:14:44.740
支持生态边缘的基数3 6，因为那么一切都适合

00:14:44.740 --> 00:14:51.490
我们所使用的限制存在讨论，我们是否愿意

00:14:51.490 --> 00:14:59.430
将所有内容切换为以36为基数，或仅在URL中的基本使用基数36

00:14:59.430 --> 00:15:07.990
但是，是的，可以的工作习惯，所以这就是D的全部

00:15:07.990 --> 00:15:17.320
小写的我虾，那有什么主要区别

00:15:17.320 --> 00:15:24.190
看起来是从5:30到8，我们还在添加其他字符哦

00:15:24.190 --> 00:15:37.720
哦，所以我们决定将K作为实际前缀，将其作为实际前缀，就像B

00:15:37.720 --> 00:15:50.890
是针对32的基数，而ze是针对58的比特币基数的，因此不区分大小写

00:15:50.890 --> 00:16:00.850
0到9以及从A到Z的情况下，任何情况下的混合都将正确进行，就是这样

00:16:00.850 --> 00:16:07.200
我将在稍后链接实际的测试用例

00:16:07.960 --> 00:16:25.910
做得好好吗，还有其他任何人想谈的话吗？

00:16:25.910 --> 00:16:33.230
可以知道这次会议是很短的一次，所以谢谢大家

00:16:33.230 --> 00:16:39.730
时间，下周再见

