WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:07.200
大家好，现在开始录制一点云，所以我们应该很好

00:00:07.200 --> 00:00:14.130
好吧，我很快就开始

00:00:14.130 --> 00:00:18.080
检查每个人的位置以及我们在做什么

00:00:18.080 --> 00:00:25.170
我刚刚从巴塞罗那恢复过来，我想我们还没有真正做完

00:00:25.170 --> 00:00:29.070
尽管其中之一是因为巴塞罗那开始，所以很多东西转移了

00:00:29.070 --> 00:00:36.360
在巴塞罗那，不一定是因为那里有任何活动，而是

00:00:36.360 --> 00:00:39.840
主要是因为像我和埃里克（Eric）有一些时间要同步，而我有一些时间要

00:00:39.840 --> 00:00:44.489
与其他人一起思考，从而将其纳入计划中

00:00:44.489 --> 00:00:53.730
现在，但其中的TLDR种类将是大学将使用的复合材料

00:00:53.730 --> 00:00:59.699
更改了我们需要进行综合处理的时间表，以及许多

00:00:59.699 --> 00:01:06.500
这意味着将一些资源转移到rust和webassembly

00:01:06.500 --> 00:01:13.110
在今年剩下的时间里，这是很大的变化

00:01:13.110 --> 00:01:19.369
哦，是的，汉娜（Hannah）过来做选定的事情以及图形同步

00:01:19.369 --> 00:01:26.070
协议的工作可以释放出更多的时间来花更多的时间在架构和

00:01:26.070 --> 00:01:29.630
一般而言，水泥的优先级就像颠簸的方式一样

00:01:29.630 --> 00:01:36.630
因此，如果模式在一个较大的红色球中对Jen进行编码，则在Prior中会被撞到

00:01:36.630 --> 00:01:53.240
我的更新Eric基本上是这样，所以看起来我们真的很酷

00:01:53.240 --> 00:02:06.210
积极反馈该架构的一些最新草案

00:02:06.210 --> 00:02:11.970
选择器系统已被抛弃在社区的人们面前。

00:02:11.970 --> 00:02:14.829
 ipfs阵营，这些影响是基于

00:02:14.829 --> 00:02:20.290
学生系统，也有人可以查看该系统的最新草案

00:02:20.290 --> 00:02:27.840
选择器PR现在并以其示意图的形式理解它

00:02:27.840 --> 00:02:32.560
老实说就像以最积极的方式完全迷住了我

00:02:32.560 --> 00:02:36.969
可能我实际上并不认为这很平易近人，而且显然

00:02:36.969 --> 00:02:40.180
是因为在接下来的几个小时里，那个人带着我回到了我身边

00:02:40.180 --> 00:02:44.650
我想这是一个宫廷电器吗？

00:02:44.650 --> 00:02:51.120
是的，在整个区域的小方块的情况下，是的

00:02:51.120 --> 00:02:56.500
所以这真的很酷，我认为选择器规格有点像

00:02:56.500 --> 00:03:05.019
这些反馈形式的结果，我认为其他一些人喜欢

00:03:05.019 --> 00:03:09.939
肮脏的硬币家伙似乎正在看着做一堆硬币

00:03:09.939 --> 00:03:15.310
在接下来的几周里，我的能力计划就开始了，所以很多

00:03:15.310 --> 00:03:21.489
注意是这样，这有点令人兴奋，他将投入很多

00:03:21.489 --> 00:03:26.919
迫使我们喜欢交付事物并在下一次实现用户目标方面取得成功

00:03:26.919 --> 00:03:34.269
我不知道时间T，是的，我对此感到非常兴奋，而且确实如此

00:03:34.269 --> 00:03:36.720
进食

00:03:57.810 --> 00:04:12.359
好吧，所以我又看到了，所以我主要是从事规范方面的工作

00:04:12.359 --> 00:04:20.340
数据结构规范工作中，我有一个针对向量类型的第二个拉取请求

00:04:21.150 --> 00:04:32.070
确实需要对reshma III进行一些更改，但实际上并没有

00:04:32.070 --> 00:04:40.740
牧师着陆了这些东西，看来他们需要更多的参与才能真正

00:04:40.740 --> 00:04:55.650
让他们降落，但我想我可以和他们坐在一起没事，但我觉得

00:04:55.650 --> 00:05:00.150
一位亲戚登陆的哈希图，你把一个孩子藏了一点

00:05:00.150 --> 00:05:06.150
一些上周杰里米发表了一些评论，需要一些评论

00:05:06.150 --> 00:05:15.210
如此尝试，然后mmm也是关于上下文的对话

00:05:15.210 --> 00:05:22.890
和参数，只是让我对这次谈话感到沮丧

00:05:22.890 --> 00:05:30.330
因为我知道我想我了解它背后的欲望，但这是

00:05:30.330 --> 00:05:35.340
就像我们现在没有工具来做这些事情，我只是想做我想做的

00:05:35.340 --> 00:05:41.310
用这些数据结构做事，你知道我不能用它们做事

00:05:41.310 --> 00:05:46.290
理想化的版本，说明当我们

00:05:46.290 --> 00:05:51.780
没什么可以做的，那对我来说仍然是这样，所以

00:05:51.780 --> 00:05:55.290
我只是那些不会以某种方式获得结果的讨论之一

00:05:55.290 --> 00:06:04.470
我可以告诉我如何最好地使用这些东西，所以通过我的参数可以知道

00:06:04.470 --> 00:06:08.370
表示它们被编码为根锁的参数或它们被编码的参数

00:06:08.370 --> 00:06:17.550
都很好地通过了，因为杰里米的评论是关于

00:06:17.550 --> 00:06:23.220
参数根本不存在，那就是您所进行的对话

00:06:23.220 --> 00:06:28.130
一半的人因为我提到了你正在做的工作而陷入困境，但是

00:06:28.130 --> 00:06:32.940
如果我对评论的解释正确，那就是我们不需要

00:06:32.940 --> 00:06:37.110
根块中的所有参数，因为那应该是在上下文中

00:06:37.110 --> 00:06:40.690
你需要这个东西，你应该知道事实吗

00:06:40.690 --> 00:06:45.250
那你到这里应该意味着你应该知道这东西是不，不，不，

00:06:45.250 --> 00:06:50.770
是的，我认为两种不同的东西在这里变得混乱，所以如果

00:06:50.770 --> 00:06:54.760
一件事就像数据结构的定义是

00:06:54.760 --> 00:06:58.780
对于这些哈希表中的每一个，实际上都像同一件事

00:06:58.780 --> 00:07:03.520
这些参数是正确的所以这就像嘿，这是名称

00:07:03.520 --> 00:07:06.430
这个东西，你知道在将来的某个时候，就像网络

00:07:06.430 --> 00:07:11.639
现在的汇编函数从字面上看这是一件很特别的事情

00:07:11.639 --> 00:07:18.010
就像实际算法的参数一样

00:07:18.010 --> 00:07:23.650
总是很好地被编码到路由块中，我的意思是看起来不是那样

00:07:23.650 --> 00:07:26.620
对我的评论听起来不像，所以您需要回头看看

00:07:26.620 --> 00:07:31.870
发表评论，因为那不是我从那里没有听到的内容

00:07:31.870 --> 00:07:41.320
没有对变化的具体评估，我就不能坚持下去

00:07:41.320 --> 00:07:45.280
所以我认为我们在三个喜欢的人之间达成了共识

00:07:45.280 --> 00:07:50.200
参数应像算法一样在路径块右对中编码

00:07:50.200 --> 00:07:59.430
参数正确的harakiri也许我想我了解

00:07:59.490 --> 00:08:16.690
至少我只是想知道是否有沟通错误，因为就像我想

00:08:16.690 --> 00:08:21.270
以草稿形式合并规范，然后对这个特定问题进行迭代

00:08:21.270 --> 00:08:27.880
完全同意，即使我们只是喜欢添加说明

00:08:27.880 --> 00:08:32.200
就像嘿，正在讨论的部分，或者我要添加的很多东西

00:08:32.200 --> 00:08:38.260
就像我们仍在积极讨论等等一样

00:08:38.260 --> 00:08:42.550
我们可以得到类似的东西，因为理想情况下，我只想

00:08:42.550 --> 00:08:47.079
将其合并，以便我们可以将这些讨论作为单独的公关而不是

00:08:47.079 --> 00:08:52.300
像这个大公关一样，也变得毛茸茸，无法真正度过难关

00:08:52.300 --> 00:08:57.850
是的，所以就像您知道您所做的实施

00:08:57.850 --> 00:09:00.250
有参数并进入障碍

00:09:00.250 --> 00:09:04.570
我只是在规范中放一个注释，就像嘿，我们正在讨论这个

00:09:04.570 --> 00:09:09.130
静止然后合并它，然后如果Jeremy特别想要一种不

00:09:09.130 --> 00:09:13.570
编码参数并选择推断某种默认行为，然后像

00:09:13.570 --> 00:09:17.529
他可以为此开始公关，或者有人可以为此在这里开始

00:09:17.529 --> 00:09:22.810
以这种方式进行讨论将是我对此的理想解决方案，是的，我的意思是

00:09:22.810 --> 00:09:28.720
好吧，我的意思是，如果有人使用该语言，那会很好，因为

00:09:28.720 --> 00:09:34.060
其他否则我们正在讨论这个问题，但我什至不

00:09:34.060 --> 00:09:39.459
甚至完全理解我们为什么要讨论它，但事实并非如此

00:09:39.459 --> 00:09:49.930
但是无论如何，我看到我也开始对使用这些东西感兴趣

00:09:49.930 --> 00:09:54.940
做一些实用的东西，我看着那上面的最后一句话

00:09:54.940 --> 00:10:01.450
其实在昨天以及看临时维修的问题是

00:10:01.450 --> 00:10:04.779
当您使用这些东西并进行听力变异时，您知道自己

00:10:04.779 --> 00:10:09.459
创建很多您会扔掉的中间块，

00:10:09.459 --> 00:10:13.029
可能具有非常大的数据结构，因此您可能有一个

00:10:13.029 --> 00:10:19.300
这些东西很多时候我在看块存储的问题

00:10:19.300 --> 00:10:25.440
做这些突变，这样您就可以扔掉并收集以后的状态

00:10:25.440 --> 00:10:30.790
高效地看起来像什么，所以只是您知道

00:10:30.790 --> 00:10:35.949
这个难题的小部分，看看是否有明显的明显

00:10:35.949 --> 00:10:42.730
这样做的有效方法，因为我想开始将它们用于某些用途

00:10:42.730 --> 00:10:48.550
的想法，但是是的，这是一个兔子洞，我想把它弄得太远了，因为

00:10:48.550 --> 00:10:55.269
有一个容易的地方，有一个我们可以使用的简单版本

00:10:55.269 --> 00:11:04.000
但无论如何，另一件事是我盘子里有两个要花

00:11:04.000 --> 00:11:09.610
多花些时间去做，这实际上是我的主要任务

00:11:09.610 --> 00:11:20.220
我想现在这就是我你的做法

00:11:20.220 --> 00:11:23.490
大家好

00:11:23.890 --> 00:11:29.070
好，好，您有任何特定的问题或反馈

00:11:29.070 --> 00:11:34.000
不，大多数情况下，我只是潜伏着，我一直在与dod规范一起工作

00:11:34.000 --> 00:11:37.900
所以dige分散的标识符，我们使用了很多矩阵

00:11:37.900 --> 00:11:44.830
参数，并且由于我的IP ID解决方案基于IP LD构建，因此有很多IP LD

00:11:44.830 --> 00:11:52.630
选择器，这些选择器将被抽象并用于这些矩阵的解引用

00:11:52.630 --> 00:11:59.110
URL语法中的参数实际上最终将被我杀死

00:11:59.110 --> 00:12:03.730
下方的选择器，所以我将其一直保持在靠近地面的位置

00:12:03.730 --> 00:12:07.320
您知道了你们的前进方向，所以我可以将其抽象为

00:12:07.320 --> 00:12:17.890
可以与其他挖掘方法互操作的标准不错，是您推动的Eric还是

00:12:17.890 --> 00:12:23.070
还是很酷的要求，例如最近对选择器进行一些更改

00:12:23.460 --> 00:12:34.480
是的，最新的选择器功能是我认为在规格中的ER

00:12:34.480 --> 00:12:41.880
选择器之一，因为这大概是我来自的版本号

00:12:41.880 --> 00:12:58.570
无论如何，大多数情况下都是零皮耶打开的是最新的，是的，我认为我们

00:12:58.570 --> 00:13:01.600
在巴塞罗那玩有关将其抽象为基本上一个

00:13:01.600 --> 00:13:08.320
基于CID的CID并未扩展JSON中的所有dexplex编辑器

00:13:08.320 --> 00:13:13.720
但实际上它被保存在正确格式的URL中，以将其分开

00:13:13.720 --> 00:13:19.780
矩阵参数保留名称等于CID

00:13:19.780 --> 00:13:23.050
而且这使得它可以互操作，我给你，我想这是一个例子

00:13:23.050 --> 00:13:28.480
我们正在使用dig方法进行的研究让我们看看也许我需要转向

00:13:28.480 --> 00:13:43.360
离开我的IP estest节点，以便实际上是分号

00:13:43.360 --> 00:13:46.960
蒂姆·伯纳斯·李最初确定为矩阵参数的东西

00:13:46.960 --> 00:13:52.210
而且您实际上可以有多个分号，所以在这里，您

00:13:52.210 --> 00:13:59.830
那是前三个部分，它之间用全冒号隔开，所以

00:13:59.830 --> 00:14:07.120
例子，并做标识符，所以用分号来做，然后

00:14:07.120 --> 00:14:12.270
矩阵参数确定内容后，返回到

00:14:12.270 --> 00:14:18.580
肿瘤性李在1990年代的博客文章，其中可能有多个

00:14:18.580 --> 00:14:24.190
分隔矩阵参数的分号，您说的是cid

00:14:24.190 --> 00:14:31.089
您要使用的选择器将被编码为块中的选择器

00:14:31.089 --> 00:14:37.030
只会是网址，因此完全正确的网址会在这里，实际上为您提供了

00:14:37.030 --> 00:14:56.770
例如，让我给你找到我的演示文稿，这只是一种方法

00:14:56.770 --> 00:15:04.630
对其进行抽象，然后将它们发送到Jason（即IP LD选择器）发送的JSON

00:15:04.630 --> 00:15:09.850
会被cebe或序列化并变成一个cid，然后基本死掉

00:15:09.850 --> 00:15:22.990
将是您在等号后输入的值，就像您可以做的那样

00:15:22.990 --> 00:15:29.280
我对这是一个好主意还是对我是否漠不关心

00:15:29.880 --> 00:15:37.089
我花了布兰森（Branson）的东西，最近才开始，主要是让我们做

00:15:37.089 --> 00:15:40.209
确保选择啤酒的方向朝着

00:15:40.209 --> 00:15:42.790
不可能做到这一点，这主要是由

00:15:42.790 --> 00:15:47.079
图和东西，所以它是完全不同的用例，因此请确保

00:15:47.079 --> 00:16:03.279
它们是数字的，但我认为您需要一些指向它的指针的元数据

00:16:03.279 --> 00:16:10.540
知道这是一个执行选择器，所以您宁愿放那条腿

00:16:10.540 --> 00:16:15.940
要么是D ID伯爵表，上面写着，就像您知道选择器等于

00:16:15.940 --> 00:16:22.420
CID或它必须是带有一些元数据的CID，就像我们已经

00:16:22.420 --> 00:16:30.670
一直在跟一个沙井交谈，如果语义上的话，选择整个上下文

00:16:30.670 --> 00:16:36.550
D ID的上下文表示此位置的哈希字符串是

00:16:36.550 --> 00:16:44.470
选择器，然后是对，是的，这也会起作用

00:16:44.470 --> 00:16:48.430
吓人的，通常不是可升级的

00:16:48.430 --> 00:16:53.709
就像，但是是的，我们拥有该服务类型，您将在其中进行服务

00:16:53.709 --> 00:16:58.180
看起来像这样，就知道您是否在D ID中具有这些其他参数

00:16:58.180 --> 00:17:07.419
你可能会想说你知道当你有这不是一个选择杆好吗

00:17:07.419 --> 00:17:11.380
没关系，我需要开始

00:17:11.380 --> 00:17:32.950
关于指针的讨论开始就可以了，很好，很好，我很好

00:17:32.950 --> 00:17:35.440
其他任何人在过去八年中都有想要谈论的话题

00:17:35.440 --> 00:17:39.580
分钟，在你还好之前，我想我一直在做的另一件事

00:17:39.580 --> 00:17:45.820
正在工作的是在JSON模式中为did方法工作的，我认为是什么

00:17:45.820 --> 00:17:49.750
如果我们提出了一个很好的问题，可能真的很有帮助

00:17:49.750 --> 00:17:58.390
可以获取以I形式提交的IP LD，作为有效格式的有效格式名称

00:17:58.390 --> 00:18:04.120
URI，然后您就可以对架构做一些非常酷的事情，所以实际上就像您一样

00:18:04.120 --> 00:18:13.840
可以在没有权限的情况下自我描述架构，所以我给

00:18:13.840 --> 00:18:20.370
你是爱斯基摩人的榜样

00:19:07.990 --> 00:19:26.780
你怎么能看到一切都很好，对不起，我有一种感觉

00:19:26.780 --> 00:19:30.460
与这种思路平行的是，我们将要谈论更多关于

00:19:30.460 --> 00:19:35.630
上下文概念也是如此，因为这似乎已经成为

00:19:35.630 --> 00:19:44.060
她最近的功能，所以可以联系到json-ld上下文，或者可以联系

00:19:44.060 --> 00:19:48.760
是的，我不知道这表示上下文已经讨论过了

00:19:48.760 --> 00:19:54.500
基本上是PR 130，还有一些火腿的规格，这就是我们所说的

00:19:54.500 --> 00:19:58.490
最近在一些讨论中并没有达成共识

00:19:58.490 --> 00:20:02.380
关于其含义的完全共识

00:20:04.330 --> 00:20:08.990
是的，好像有一些单独的联系人，就像

00:20:08.990 --> 00:20:16.490
嗯，嘿，我已经从某处知道这东西是什么

00:20:16.490 --> 00:20:21.170
否则，就像讨论的重点一样，但即使如此

00:20:21.170 --> 00:20:25.880
在讨论中，当您像中间节点一样点击时，您便具有上下文

00:20:25.880 --> 00:20:32.200
您从先前的节点继承而来的

00:20:32.740 --> 00:20:37.640
是的，我不知道这些地图是否都在JSON附近附近的任何地方留下了

00:20:37.640 --> 00:20:40.660
好吧，好吧

00:20:46.809 --> 00:20:51.799
是的，所以这个例子只是可验证凭证的json模式

00:20:51.799 --> 00:20:59.480
东西，在ID中实际上是它可能是格式化的IP LD语法，然后

00:20:59.480 --> 00:21:07.549
实际上是你，即使这是当你不存在的时候

00:21:07.549 --> 00:21:22.220
取消引用它并实际上从IP LD获得它至少可以解决

00:21:22.220 --> 00:21:34.669
模式推断任何形式的传输都没有Jason应用程序JSON，所以很抱歉

00:21:34.669 --> 00:21:41.929
在mime类型中只是是，否，所以这实际上是身份的ID

00:21:41.929 --> 00:21:47.900
字段并不一定意味着它是可解决的，所以这是一个我可以给它一个

00:21:47.900 --> 00:21:55.659
随机数是UUID，但基本上是因为我的意思是这可以解决dag

00:21:55.659 --> 00:22:01.850
 Tibor对其本身进行描述以json进行灭菌处理，并说这是

00:22:01.850 --> 00:22:06.140
这个东西的想法，所以当您进行定义和

00:22:06.140 --> 00:22:13.130
所以下面是我在这里引用的，是的，所以在

00:22:13.130 --> 00:22:18.890
参考部分，这里我指的是上面和jason中的定义

00:22:18.890 --> 00:22:24.049
指针哈希符号引用了此文档，但是没有理由

00:22:24.049 --> 00:22:42.350
不能为任何值或uri，所以现在json模式的版本7使用

00:22:42.350 --> 00:22:49.549
语法，但是如果IP LT实际上是方案中的有效i

00:22:49.549 --> 00:22:56.000
名称，那将是一个，而不是这里有此ID，您实际上可以

00:22:56.000 --> 00:23:02.680
有你的任何我只是我想要的唯一的东西

00:23:02.680 --> 00:23:09.100
奇怪的是，与其他方案名称不同，它没有推断出任何运输方式

00:23:09.100 --> 00:23:14.050
IPL B就像它是一个标识符，但不一定告诉您如何获取

00:23:14.050 --> 00:23:19.060
它，而我能想到的大多数方案都暗示着您的前进方式，

00:23:19.060 --> 00:23:24.400
像这样获取数据，是的，该方案实际上

00:23:24.400 --> 00:23:30.370
为您提供了有关如何获取它的背景信息-就像

00:23:30.370 --> 00:23:41.230
考虑一下ipfs实际作用在哪里的区别

00:23:41.230 --> 00:23:49.930
一组运输去查理解析mmm，但就像在杰森模式

00:23:49.930 --> 00:23:53.650
这个想法不是你不应该一定能够解决它，所以一个

00:23:53.650 --> 00:23:57.340
实际上，很多人确实可以解决它，如果您将Jason模式放在

00:23:57.340 --> 00:24:05.830
这与Microsoft程式码的视觉程式码确实尝试出门并前往http

00:24:05.830 --> 00:24:19.570
资源并实际下载它们，但从技术上讲，它们不是

00:24:19.570 --> 00:24:23.710
应该是您拥有所有架构，并且可以引用您的

00:24:23.710 --> 00:24:26.580
如果您将它们放在同一个文件夹中，实际上会有很多不同的模式

00:24:26.580 --> 00:24:35.140
他们应该用相对命名解决您知道的问题，但我认为使用

00:24:35.140 --> 00:24:40.600
该IP LD解决方案可能更优雅，更简单且具有自我描述性

00:24:40.600 --> 00:24:45.160
在没有Thorat ativ信号源的情况下独立运行，听起来像IPL

00:24:45.160 --> 00:24:51.270
这个其他模式系统内部的低级分解系统将表现良好

00:24:51.270 --> 00:24:57.420
但这将是一个系统内部的好角色，该系统既允许良好行为，又允许

00:24:57.420 --> 00:25:02.800
在同一个系统中，可笑的滑稽演员毫无用处，毫无用处，我有点

00:25:02.800 --> 00:25:11.950
不知道我为什么要多久考虑一次

00:25:11.950 --> 00:25:15.310
所以我知道一些Seema系统实际上正在解决所有这些问题

00:25:15.310 --> 00:25:20.320
年纪大了，就像您说的，Jason LD身上的任何东西我的肌肉都没有，但是当我回来时

00:25:20.320 --> 00:25:25.030
实际上试图做一些RTF的东西，它到了你会

00:25:25.030 --> 00:25:27.730
使用它们作为字符串标识符，您实际上不会尝试解析

00:25:27.730 --> 00:25:31.290
完成四种不同的架构后，任何一个URL

00:25:31.290 --> 00:25:35.050
在大多数时候，Jason Aldean仍然是这种情况，人们实际上并没有

00:25:35.050 --> 00:25:40.090
出去得到歧视，所以是的，所以URI就像在这里

00:25:40.090 --> 00:25:47.440
其他窗口，因此可以解决此问题或G凭证v1，但

00:25:47.440 --> 00:25:57.250
如果您只是得到它，它是可以解决的，是的，实际上我认为我有它或卷曲

00:25:57.250 --> 00:26:07.510
它是W3C标题实际上是错误的

00:26:07.510 --> 00:26:16.840
除非他们将其修复，否则标头就像八位字节八位字节街是的，所以内容

00:26:16.840 --> 00:26:24.760
在该流中键入，因此不是JSON，如果是应用程序JSON，则

00:26:24.760 --> 00:26:31.480
Jason LD解析器对此很满意，但这只是原始的八位位组流还可以

00:26:31.480 --> 00:26:39.730
因此Jason LD的参考架构无法正确实现自己

00:26:39.730 --> 00:26:57.510
w3.org很棒，太好了，好了，我现在要停止录制

