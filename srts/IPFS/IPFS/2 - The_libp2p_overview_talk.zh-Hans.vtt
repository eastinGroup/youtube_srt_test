WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.410 --> 00:00:05.910
大声笑哦，我是哔哔声-我是杰西卡（Jessica）TFS，是对等技术

00:00:05.910 --> 00:00:11.070
领导，我欢迎您进入第一次睡眠，您的同行概述是这样

00:00:11.070 --> 00:00:15.240
实际上是一种预览，但是应该使所有循环更加清晰

00:00:15.240 --> 00:00:21.240
您的同行贡献者用户和利益相关者，我欢迎各种

00:00:21.240 --> 00:00:25.980
反馈我的目标是进行一次演讲，我们将很自豪地在技术上发表演讲

00:00:25.980 --> 00:00:34.200
会议，所以让我们开始吧，议程很简单，我将从

00:00:34.200 --> 00:00:39.620
解释动机以及为什么我们需要考虑2018年的联网

00:00:39.620 --> 00:00:44.300
之后，我将立即跳入液体中，看看它是什么，它是什么

00:00:44.300 --> 00:00:49.350
接下来是进度报告，最后但并非最不重要的一点是，我将讨论

00:00:49.350 --> 00:00:54.449
如果您一直遵循TFS进行

00:00:54.449 --> 00:00:58.739
尽管您可能已经听说过我们将所有网络描述为我们喜欢的平台

00:00:58.739 --> 00:01:03.799
并学会依靠它非常脆弱，并且存在一些设计问题

00:01:03.799 --> 00:01:08.310
其中大部分来自位置寻址，现在的解决方案是

00:01:08.310 --> 00:01:14.070
转向内容寻址模型，但是SEM并不能完全解决

00:01:14.070 --> 00:01:18.509
是为了给网站提供内容编址属性

00:01:18.509 --> 00:01:23.310
必须更深入地进入网络堆栈并克服许多

00:01:23.310 --> 00:01:27.119
当前Internet基础架构提出的挑战

00:01:27.119 --> 00:01:31.680
适用于限制性过滤器的防火墙垫，可将每个过滤器的对等体绑定在一起

00:01:31.680 --> 00:01:37.470
其他我已经看到过使体验缓慢的网络

00:01:37.470 --> 00:01:39.770
只是不可靠而不断失败

00:01:39.770 --> 00:01:44.310
缺乏跨不同类型网络的移动寻址，并且

00:01:44.310 --> 00:01:50.340
协议，这也称为漫游事实，即存在政府的

00:01:50.340 --> 00:01:54.390
完全可以完全关闭整个国家/地区的互联网

00:01:54.390 --> 00:01:57.719
和很多设备有很大的不同

00:01:57.719 --> 00:02:02.579
连接属性迫使开发人员真正努力工作

00:02:02.579 --> 00:02:04.590
彼此联系的局限性

00:02:04.590 --> 00:02:10.200
很多时候，他们只是根本无法真正地变得很重要

00:02:10.200 --> 00:02:14.989
使用Carlo进行网络领域的创新需要花费多年的时间才能制定出新的协议，

00:02:14.989 --> 00:02:20.239
进入OSI堆栈并进行大规模部署，甚至包括大型Oryx

00:02:20.239 --> 00:02:25.099
大量的资金可能仍需要数年甚至数十年的时间才能部署出新的

00:02:25.099 --> 00:02:30.260
互联网结构的构想，以便建立ipfs对等文件

00:02:30.260 --> 00:02:34.700
系统，我们不得不想出一些方法来解决这些局限性

00:02:34.700 --> 00:02:40.040
需要从头开始重新设计作品的有趣事实是ipfs

00:02:40.040 --> 00:02:44.180
不是第一个对等协议，实际上有多个项目，并且

00:02:44.180 --> 00:02:48.469
如果您在互联网上浏览过一段，则有些已经存在数十年了

00:02:48.469 --> 00:02:51.919
您可能还记得Skype最初启动时

00:02:51.919 --> 00:02:57.379
对等语音服务项目，例如Nutella，作为Amul BitTorrent的另一个

00:02:57.379 --> 00:03:01.879
以对等方式启用文件共享时，存在很多氯胺酮

00:03:01.879 --> 00:03:09.169
在卡帕阿（Kapaa）进行的研究（其中一些已实施而其他人没有实施）

00:03:09.169 --> 00:03:14.180
尽管这些项目在真正难以真正利用之前就已经存在

00:03:14.180 --> 00:03:18.739
过去大多数项目中完成的工作都使用经典软件

00:03:18.739 --> 00:03:23.870
可见性问题，例如缺少寡妇突变或根本没有获得许可

00:03:23.870 --> 00:03:27.049
限制太严格，无处可寻

00:03:27.049 --> 00:03:31.310
这些项目很旧，其中一些真的很旧，最后一次更新超过

00:03:31.310 --> 00:03:36.259
十年后，他们根本无法使用现代OSS或现代语言

00:03:36.259 --> 00:03:42.620
旨在查看运行时gnome的源已关闭或源未关闭

00:03:42.620 --> 00:03:46.669
现在已经存在了，这在学术界很普遍，那里的来源不被视为

00:03:46.669 --> 00:03:49.879
有价值的东西，通常在纸张拿到后就被扔掉了

00:03:49.879 --> 00:03:55.549
发布规范丢失，实现没有

00:03:55.549 --> 00:04:00.169
公开一个非常友好的API，该API易于使用，并且可以与大多数API一起使用

00:04:00.169 --> 00:04:03.949
项目紧密结合特定用途，因此很难做到这一点

00:04:03.949 --> 00:04:06.560
这是我们今天仍然看到的东西

00:04:06.560 --> 00:04:10.280
一个示例是在哪里查看Web的对等传输

00:04:10.280 --> 00:04:12.859
平台，无论这是多么难以置信的人

00:04:12.859 --> 00:04:16.669
五个以上的开源黑客和/或公司团队在一起

00:04:16.669 --> 00:04:22.159
ID之后，然后继续尝试从Chrome浏览器中提取源代码

00:04:22.159 --> 00:04:26.960
直到今天，我们仍将其打包到其他运行时中

00:04:26.960 --> 00:04:31.639
实现很麻烦，它们维护得不好，根本就没有

00:04:31.639 --> 00:04:36.409
在过去的这些项目中，另一个可靠的常见模式是

00:04:36.409 --> 00:04:40.520
可能不是为了产品而做出的很多假设

00:04:40.520 --> 00:04:44.599
一次但现在让他们真的很难做到，所以必须有一个更好的选择

00:04:44.599 --> 00:04:51.620
方式，我知道您在想标准故事中著名的XT CD 97的想法

00:04:51.620 --> 00:04:56.930
但是不要想，如果不是像创建一个新的标准和新的那样

00:04:56.930 --> 00:05:00.469
与旧项目竞争的项目我们实际上创建了一个项目

00:05:00.469 --> 00:05:04.849
这是一个框架，其中包含可集成所有先前版本的选项的工具箱

00:05:04.849 --> 00:05:06.979
并希望将来存在

00:05:06.979 --> 00:05:13.849
很好地进入点对点，我们点对点是一个模块模块网络堆栈

00:05:13.849 --> 00:05:18.860
专为解决该问题的现代问题而设计，并且是面向未来的自由主义者

00:05:18.860 --> 00:05:25.580
看来是PFS的网络心理，但提取出来使ipfs成为其中之一

00:05:25.580 --> 00:05:29.479
它的依赖性并为其他许多项目使用创新技术开辟了空间

00:05:29.479 --> 00:05:34.639
试点使液体成为头等舱项目，这意味着它有自己的

00:05:34.639 --> 00:05:40.419
生态系统的生态系统目标和优先事项团队以及利益相关者a

00:05:40.419 --> 00:05:45.650
与您的同龄人一起思考的一种简单方法是，PFS是否带来了内容寻址

00:05:45.650 --> 00:05:50.479
向点对点带来流程寻址的方法以找到连接的世界

00:05:50.479 --> 00:05:53.870
并对流程进行身份验证，以便我们知道我们可以信任连接

00:05:53.870 --> 00:05:59.870
我们准备的端到端是一组构建模块，它们暴露了

00:05:59.870 --> 00:06:05.529
定义明确的文档和经过测试的界面，使它们保持和平

00:06:05.529 --> 00:06:12.800
可组合交换和可升级的另一种我喜欢的方式

00:06:12.800 --> 00:06:17.689
通过描述它来描述它，我们抓住了OSI垂直层系统并将其制成

00:06:17.689 --> 00:06:22.669
只是在每个人的脑海中翻阅OSI层系统的方式

00:06:22.669 --> 00:06:25.939
在许多网络课程中仍然有人教这个，但实际上并没有

00:06:25.939 --> 00:06:30.439
表示所有互联网工作的地方tcp / ip已在全球范围内部署，因此

00:06:30.439 --> 00:06:34.310
这是一个模型，可以更好地表示两者

00:06:34.310 --> 00:06:39.110
在概念上和实践上，它们确实存在诸如多重动作之类的缺点

00:06:39.110 --> 00:06:43.040
我重复了许多重复工作和浪费的工作

00:06:43.040 --> 00:06:47.680
资源信息甚至丢失了重大的机会

00:06:47.680 --> 00:06:52.340
如果您是这个想法的新手，我会建议您进行优化

00:06:52.340 --> 00:06:58.400
通过关于互联网架构原理的RFC 1958和IRC 34:39

00:06:58.400 --> 00:07:04.040
指南，以提高他们的理解摘要是什么

00:07:04.040 --> 00:07:08.960
今天发生的事情是Internet协议分布在多个领域，

00:07:08.960 --> 00:07:14.420
事物在内部紧密耦合，难以更改和创新

00:07:14.420 --> 00:07:17.690
点对点改变了这一点，只为您提供了一个框架，其中所有这些协议

00:07:17.690 --> 00:07:23.510
可以共存和合作，您可以选择自己的液体出现配方，如果我愿意

00:07:23.510 --> 00:07:26.930
您想更改的时间只需更改顶层配方

00:07:26.930 --> 00:07:31.520
API到PAPR的链接保持不变，因此您的应用无需更改

00:07:31.520 --> 00:07:36.830
在实践中，一个很好的例子是我们的PMS在node.js和

00:07:36.830 --> 00:07:45.620
在这里的浏览器中，您可以看到每个配方的不同之处在于，两个运行时都位于

00:07:45.620 --> 00:07:50.540
不同的能力，不同的运输方式，因此随着我们的发展，它们将为您提供能量

00:07:50.540 --> 00:07:54.710
为了在浏览器中很好地使用TCP和WebSockets，我们使用WebSockets，我知道

00:07:54.710 --> 00:08:00.860
我们希望看到更多关于这些部件及其工作原理的信息。

00:08:00.860 --> 00:08:04.730
以及它们如何组合在一起，您可以查看非常全面的教程建议

00:08:04.730 --> 00:08:08.270
我们将同伴回购的这些回溯解释与您的代码示例一起放入

00:08:08.270 --> 00:08:12.530
可以自己尝试，所以这是点对点

00:08:12.530 --> 00:08:17.540
关于进展，到目前为止，我们已经有了三种语言

00:08:17.540 --> 00:08:23.000
局限性之一是休息，另一种是JavaScript，另一种则是缓慢

00:08:23.000 --> 00:08:27.560
由社区成员以c-sharp的形式工作，并在其他多个项目中构建了许多作品

00:08:27.560 --> 00:08:31.700
战利品格式带来的各种语言可以自我描述关于以下数据类型的信息：

00:08:31.700 --> 00:08:36.350
随着社区的广泛使用，点对点社区得到了快速发展

00:08:36.350 --> 00:08:40.430
70个致力于点对点的贡献者和一千多人

00:08:40.430 --> 00:08:44.750
他以某种方式参与了该项目

00:08:44.750 --> 00:08:48.830
浏览器上的线程，这是对was年的考验，

00:08:48.830 --> 00:08:51.710
在Division中，它也可以在移动浏览器上运行

00:08:51.710 --> 00:08:57.110
超级令人兴奋的是，由于启用了协作式摘要等应用程序，

00:08:57.110 --> 00:09:01.820
我们早期演示的用于实时通信的p2p发布/订阅API

00:09:01.820 --> 00:09:06.170
点对点连接，将笔记记录到正在运行的电视电影

00:09:06.170 --> 00:09:09.290
使用液体的浏览器似乎是从中庭运送积木

00:09:09.290 --> 00:09:14.570
链中还有一些新产品可以使用

00:09:14.570 --> 00:09:18.380
点对点和我们Mathematica的朋友在

00:09:18.380 --> 00:09:22.760
奥拓旅行过后，对他们的巨型用户来说，Libre出现的速度更快

00:09:22.760 --> 00:09:27.590
网络，当然任何使用IP FS的项目都使用对等网络

00:09:27.590 --> 00:09:32.390
根据设计，将来任何将使用文件硬币的项目也将使用

00:09:32.390 --> 00:09:37.160
同行另一个令人振奋的消息是威慑项目正在积极进行。

00:09:37.160 --> 00:09:40.820
探索同时迁移到我们对等网络堆栈

00:09:40.820 --> 00:09:44.840
通常致力于点对点的时间波尔卡圆点，并已取得重大成就

00:09:44.840 --> 00:09:49.400
进步，并取得令人兴奋的结果，将浏览器连接到他们的

00:09:49.400 --> 00:09:54.350
网络充满活力地点对点，当然不要忘了我们净化

00:09:54.350 --> 00:10:00.260
作为华丽的网站徽标，对于网络项目而言，这是非常罕见的，因此

00:10:00.260 --> 00:10:04.160
让我们谈谈时间轴，并免除时间轴的高度

00:10:04.160 --> 00:10:08.300
投机性是可能与我们最大希望之间的混合

00:10:08.300 --> 00:10:14.450
并梦想着它只是为了提供一些方向的概念，因此使用

00:10:14.450 --> 00:10:21.020
在接下来的三个月中与法蒂玛一起在某个地方进行工作，重点是支持

00:10:21.020 --> 00:10:25.010
三个语言团队，并通过强大的功能帮助他们实现功能优先

00:10:25.010 --> 00:10:29.570
集成和互操作性测试，应该在整个项目中进行规划

00:10:29.570 --> 00:10:35.390
日期规范的出现也会改善调试的可能性

00:10:35.390 --> 00:10:41.180
我们想要的能力和整体兴奋性，以一种可视化不同的方式

00:10:41.180 --> 00:10:45.200
网络拓扑结构对于促进网络拓扑结构的建立也必不可少

00:10:45.200 --> 00:10:50.120
在六个月的创新中，我们看到良好的采用将开始

00:10:50.120 --> 00:10:53.810
我们希望看到新的限制语言，甚至更好的语言将会出现

00:10:53.810 --> 00:10:57.680
似乎有时会获得某种语言的打包服务，因此每种语言都可以使用

00:10:57.680 --> 00:11:03.050
一个开发人员，我们今天也想拥有一个数据包交换API，所有想法

00:11:03.050 --> 00:11:07.170
基于流，我们很适合今天出现的用例，但是

00:11:07.170 --> 00:11:15.269
爱荷华州可以在低带宽连接中看到并且确实可靠

00:11:15.269 --> 00:11:19.800
连接数据包交换可以显着改善

00:11:19.800 --> 00:11:27.899
通常是点对点用户的体验，是的，我们也希望获得

00:11:27.899 --> 00:11:33.480
一些新的传输方式，例如将来启动更多，我们希望使我们做好准备

00:11:33.480 --> 00:11:39.360
我们希望促进大量创新的OS级服务和内核模块

00:11:39.360 --> 00:11:44.279
网络连接到大学网络课程的研究人员和实验室并提供帮助

00:11:44.279 --> 00:11:49.529
他们对其进行了深入的探索，并在此基础上进一步发展，我们也想去

00:11:49.529 --> 00:11:54.930
广播并使用所有最新和最出色的软件定义的广播软件

00:11:54.930 --> 00:12:02.069
为口耳相传的同行创建无线电模块，长期目标是

00:12:02.069 --> 00:12:06.420
使人们出现在点对点和网络堆栈中并说服

00:12:06.420 --> 00:12:10.500
世界上不需要客户端和服务器模型及其所有

00:12:10.500 --> 00:12:13.949
局限性基础架构在使用时更加可靠

00:12:13.949 --> 00:12:17.759
使用完全分布式的协议构建，可以适应许多协议

00:12:17.759 --> 00:12:23.189
网络场景中仍有很多工作要做，但我们可以做些

00:12:23.189 --> 00:12:27.589
在一起非常感谢您的宝贵时间，我希望这次演讲非常有价值

00:12:27.589 --> 00:12:34.610
请将您的反馈意见发送给协议AI的David，非常感谢

