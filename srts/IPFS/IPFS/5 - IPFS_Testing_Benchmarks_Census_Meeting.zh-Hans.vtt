WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.220 --> 00:00:06.270
好的，把它拿走吧，我们可以给你的哥们说个生日快乐吗？

00:00:06.270 --> 00:00:18.060
当我们录制时，您可以给我唱生日快乐，这三个基准是您的

00:00:18.060 --> 00:00:25.939
挑战一天，让它变得很棒谢谢谢谢谢谢嗯

00:00:25.939 --> 00:00:31.170
艾伦（Alan），如果您想与它上的漂亮图片分享尖叫声，是的，如果

00:00:31.170 --> 00:00:35.760
是的，好吧，我没想到要从这张照片开始，为什么不让我们做呢

00:00:35.760 --> 00:00:48.120
你建议我做的很好，我是我自己最大的敌人，分享这个屏幕，很好

00:00:48.120 --> 00:00:54.570
让我们尝试将这东西移开一点好吗，大家好吗

00:00:54.570 --> 00:00:59.930
现在查看我的屏幕，是的，很好，我设法重新启动并运行

00:00:59.930 --> 00:01:04.680
只是由于某些服务器而已，但是我们开始了，有一个

00:01:04.680 --> 00:01:11.100
它的未设置为自动重新启动的组件，因此

00:01:11.100 --> 00:01:17.340
不幸的是，基准的收集出现了问题

00:01:17.340 --> 00:01:23.240
统计数据，但我们仍然有历史基准可供参考

00:01:23.240 --> 00:01:28.080
让我们快速为您介绍一下，所以这是一个像

00:01:28.080 --> 00:01:32.250
仪表板中，我们可以查看过去的绩效指标的结果

00:01:32.250 --> 00:01:38.640
运行和收集，并按照现在的设置运行这些性能指标

00:01:38.640 --> 00:01:46.470
在每晚的基础上，JSI PFS仓库会再次更新

00:01:46.470 --> 00:01:51.990
因此我们每天晚上都会获得新的新代码，然后获得这些性能指标

00:01:51.990 --> 00:01:56.430
完成它是非常艰巨的，我们这里有很多测试，但是

00:01:56.430 --> 00:02:05.100
我们可以过滤它们，将它们过滤到我们关心的事情上

00:02:05.100 --> 00:02:09.179
使它减少一些艰巨的任务，并使其更易于检查，然后

00:02:09.179 --> 00:02:12.300
您显然可以更改标准中的日期和磅数

00:02:12.300 --> 00:02:17.220
曲线图上如此认为，所以我们要测试什么

00:02:17.220 --> 00:02:23.340
我用我们要测试的东西组成的这个大矩阵，所以他们

00:02:23.340 --> 00:02:32.550
就像添加文件，剪切文件一样，是的，还有FS东西，

00:02:32.550 --> 00:02:40.080
在浏览器中发布/订阅事物和测试，但这也是

00:02:40.080 --> 00:02:54.989
像是呆呆的策略，也喜欢变体，所以这完全是

00:02:54.989 --> 00:03:03.300
通常我坐在厨房里是因为无论如何，所以是像甲板一样的变化

00:03:03.300 --> 00:03:06.510
策略，就像我们在多路复用器中使用的传输

00:03:06.510 --> 00:03:11.580
使用以及是否使用CIO

00:03:11.580 --> 00:03:15.630
所以它的变化在于节点类型的变化

00:03:15.630 --> 00:03:19.320
使用以及我们正在使用的节点数，所以我们有了这样的想法

00:03:19.320 --> 00:03:25.290
仅用于一个节点的测试，例如添加仅用于测试的文件

00:03:25.290 --> 00:03:30.090
它到一个特定的节点，如零到零，但我们有零

00:03:30.090 --> 00:03:33.750
到一个就像从一个节点到另一个节点，它们是这两个J的节点

00:03:33.750 --> 00:03:40.049
情况，然后我们喜欢J，然后我们有五个js节点

00:03:40.049 --> 00:03:44.070
节点，然后我们有了这个旧的测试矩阵

00:03:44.070 --> 00:03:47.670
就像看到绿色的苹果是存在的一样，红色的苹果是

00:03:47.670 --> 00:03:52.680
不太明显的那些，我们就像一堆不可点击的测试

00:03:52.680 --> 00:04:03.420
但是是的，所以我们接下来要介绍如何添加测试，它只是一个JavaScript

00:04:03.420 --> 00:04:09.840
文件中还有其他一些内容，但我相信我们将确保

00:04:09.840 --> 00:04:14.370
有一种执行此操作的适当教程的方法，基本上，您会得到一些

00:04:14.370 --> 00:04:20.549
同伴，您会得到一些随机生成的文件进行测试，然后您将

00:04:20.549 --> 00:04:29.610
测试的时间花费了最终结果的时间，仅此而已

00:04:29.610 --> 00:04:36.860
这样做的好处是，您编辑或添加的所有测试

00:04:36.860 --> 00:04:43.500
当他们合并以掌握时，在此仓库上运行的测试

00:04:43.500 --> 00:04:48.389
运行起来，如果他们成功了，那么它将被实际部署到

00:04:48.389 --> 00:04:53.090
基准测试或ipfs IO，因此您的测试将自动开始运行

00:04:53.090 --> 00:05:00.240
反对每夜发生或我们没有遇到的其他触发因素

00:05:00.240 --> 00:05:04.770
谈到了这是什么样子，所以在基础设施方面，这是一种善意

00:05:04.770 --> 00:05:10.740
两个两个节点中的一个控制器节点，这是这块东西，这是

00:05:10.740 --> 00:05:14.370
比这要复杂的多，您需要真正了解如何

00:05:14.370 --> 00:05:17.610
有趣的是，有两个两个

00:05:17.610 --> 00:05:24.620
机器是控制器，因此它负责接收以下事实：

00:05:24.770 --> 00:05:30.000
需要运行基准测试，并在其中实际安排并获取

00:05:30.000 --> 00:05:34.770
运行并记录结果，将结果放在ipfs上，然后

00:05:34.770 --> 00:05:40.919
另一台负责实际运行这些设备的裸机

00:05:40.919 --> 00:05:48.089
基准，然后一旦完成，它将使用这些临床工具

00:05:48.089 --> 00:05:55.279
这些是一堆工具，这些工具几乎是成立这个公司的公司

00:05:55.580 --> 00:06:03.930
这些基准并创建以帮助我们进行DP调试，了解什么

00:06:03.930 --> 00:06:06.710
发生在此模块期间，所以这很酷

00:06:06.710 --> 00:06:12.719
是的，所以这里有趣的部分是有一个HTTP端点，一个触发器和一个

00:06:12.719 --> 00:06:16.949
我们在机器上有一个每天晚上做的定时工作，每天晚上

00:06:16.949 --> 00:06:21.990
将触发基准测试，控制器将在那里运行基准测试

00:06:21.990 --> 00:06:29.849
也是这个，所以这可能不存在，但是触发器可以由CI使用

00:06:29.849 --> 00:06:35.190
运行特定提交的基准

00:06:35.190 --> 00:06:40.920
D和配置有一个大摇大摆的终点，

00:06:40.920 --> 00:06:46.740
像年轻人一样需要一个API密钥，您必须了解如何

00:06:46.740 --> 00:06:52.140
触发它们，所以我们就在那，好吧，这些是其中的一些

00:06:52.140 --> 00:06:55.770
关于基准的有趣的事情，所以这只是一个

00:06:55.770 --> 00:07:01.230
像我们这样的例子是在我们的M flex标记和

00:07:01.230 --> 00:07:06.690
快速打蜡机，我们可以在这里看到有趣的东西，那是什么

00:07:06.690 --> 00:07:10.970
这些基准测试很酷，就像查看

00:07:10.970 --> 00:07:17.040
捕获的数据，我们都相当公平，没有什么大不了的

00:07:17.040 --> 00:07:21.560
从这些中可以观察到性能下降，这让人放心

00:07:21.560 --> 00:07:30.300
以某种方式，我猜是这样，所以那是你知道的大事

00:07:30.300 --> 00:07:34.560
我们可以用您知道的基准来查看，因为我们可以看到

00:07:34.560 --> 00:07:39.300
如果有通宵降落的情况，可在四个月内立即下降

00:07:39.300 --> 00:07:41.910
一项特定的测试，所以我们要么做得很好

00:07:41.910 --> 00:07:46.470
否则我们没有正确的测试，所以很有趣，所以这只是一个

00:07:46.470 --> 00:07:52.350
其中我们在FX和快速之间的变化天数，看起来就像快速

00:07:52.350 --> 00:07:57.030
迫不及待，M Plex的左侧效果再好不过

00:07:57.030 --> 00:08:04.980
y轴是进行此测试的时间（以毫秒为单位），因此

00:08:04.980 --> 00:08:12.060
那只是jst J是的，我们可以在这看到的是，我们已经在其中添加了一个文件

00:08:12.060 --> 00:08:17.940
我们要添加一个64 Meg的文件，然后走，是的，我不知道该如何摆脱它

00:08:17.940 --> 00:08:24.990
从下往上看，我们可以看到走走更快一点，就像三个

00:08:24.990 --> 00:08:31.740
秒和2秒，这很酷，然后像我们可以更改

00:08:31.740 --> 00:08:36.060
我们有不同类型的文件，但是有四个兆字节的文件

00:08:36.060 --> 00:08:45.770
我们离200毫秒的距离还差一点

00:08:45.770 --> 00:08:50.690
其他的我们在这里有不同的传输方式，因此TCP和

00:08:50.690 --> 00:08:56.870
这些是WebSocket，我们可以在这里看到，您实际上知道了

00:08:56.870 --> 00:09:00.340
里面没有很多东西，而且它们很快，然后有点

00:09:00.340 --> 00:09:07.250
有趣的是，WebSocket似乎比预期的要快一些

00:09:07.250 --> 00:09:10.340
是的，所以另一个关于基准的有趣的事情

00:09:10.340 --> 00:09:14.870
就是我们也有这种能力来使用我所说的诊所

00:09:14.870 --> 00:09:19.490
这些临床工具的基础设施中的早期版本，所以这里发生了什么

00:09:19.490 --> 00:09:27.710
是，一旦运行基准测试，这些工具就会越过调试的种类

00:09:27.710 --> 00:09:32.180
文件将保存在Detroiter文件中，或进行任何挑选

00:09:32.180 --> 00:09:37.490
有趣的东西，并向我们展示细长图形和事物，所以我需要

00:09:37.490 --> 00:09:41.330
探究为什么我们没有适合所有人的东西，我不知道他们是否

00:09:41.330 --> 00:09:45.650
打算在那里进行我们曾经做过的所有测试，但是我知道

00:09:45.650 --> 00:09:51.800
摇摇欲坠的端点触发它们，你可以告诉诊所启用

00:09:51.800 --> 00:09:56.330
您可以告诉它在此特定和基准上满足临床需求，所以我不

00:09:56.330 --> 00:10:01.940
我需要弄清楚，但是就像我说的那样，只是您已经运行了这一步，所以

00:10:01.940 --> 00:10:07.790
是的，但是是的，所以我应该可以点击这个人，这样我们就可以看到所有

00:10:07.790 --> 00:10:12.950
我们在这里进行的测试和社会提取，所以这是本地提取

00:10:12.950 --> 00:10:16.760
因为就像已经将文件添加到您的节点，这是花费时间

00:10:16.760 --> 00:10:22.130
将其归还给您，然后只在本地给您，这样就不会涉及任何形式的

00:10:22.130 --> 00:10:26.839
网络，但我们已经掌握了这三件事，我们可以拉起火焰图

00:10:26.839 --> 00:10:32.589
这样，我们就可以得到一种很好的可视化效果，就像节点在做什么一样

00:10:32.589 --> 00:10:37.160
在发生这种情况的同时，我们可以深入研究热点和

00:10:37.160 --> 00:10:47.510
事物在哪里，这就是我所知道的一切，它需要它们

00:10:47.510 --> 00:10:53.900
需要一些工作，但是是的，就像基准测试一样快速拍摄

00:10:53.900 --> 00:10:57.800
主页之类的东西，因为您展示了很多非常漂亮的页面，而我

00:10:57.800 --> 00:11:01.230
就像嗯，我想我在这里登录会很困惑

00:11:01.230 --> 00:11:06.990
我如何找到艾伦展示给我的那些漂亮的页面，所以如果有这样的行

00:11:06.990 --> 00:11:16.350
索引是的，所以当您第一次到达那里时，您将到达的只是您

00:11:16.350 --> 00:11:21.120
将会到达这里没有数据点，因为我们持续了7天

00:11:21.120 --> 00:11:27.270
尚未运行，但我们可以更改视频，以使其不受干扰

00:11:27.270 --> 00:11:32.790
我们可以将其更改为最近90天，然后您可以查看所有数据

00:11:32.790 --> 00:11:35.940
被收集，然后在赠款的下面，让我们扩展

00:11:35.940 --> 00:11:39.540
这只是在高背草上，这些都是存在的测试

00:11:39.540 --> 00:11:45.720
所以这些都是图表上的所有线条，因此您可以单击一个或多个

00:11:45.720 --> 00:11:57.000
这些只是显示此特定的特定测试，然后是的，您可以

00:11:57.000 --> 00:12:02.370
您可以在特定日期范围内拖动以放大该日期范围，因此

00:12:02.370 --> 00:12:08.280
如果您发现其中一张图表与其他图表相比有很大的下降

00:12:08.280 --> 00:12:14.610
那么您可以深入了解一下，实际上只有一页

00:12:14.610 --> 00:12:23.160
可配置以查看结果，但您可以喜欢我喜欢的东西

00:12:23.160 --> 00:12:28.290
通常所做的就像更改了用于查看是否具有

00:12:28.290 --> 00:12:33.660
不同的性能特征，但我们还记录了CPU和

00:12:33.660 --> 00:12:39.330
内存以及迭代测试，这很酷，是的，您可以

00:12:39.330 --> 00:12:43.100
按特定条件过滤和

00:12:43.290 --> 00:12:48.480
是的，这里有一个真实的页面-很棒

00:12:48.480 --> 00:12:52.620
谢谢，是的，我们也可能不知道有什么方法可以使用此功能

00:12:52.620 --> 00:12:56.760
看起来像但希望能够放置一些默认图

00:12:56.760 --> 00:13:00.870
我们想随着时间的推移不断跟踪默认情况下，否则需要

00:13:00.870 --> 00:13:07.380
就像五次鼠标单击一样，希望每个人都重新检查一次谢谢你，我觉得雨果

00:13:07.380 --> 00:13:11.730
进去，他们会有所不同，你可以像这样创建草

00:13:11.730 --> 00:13:15.660
Johannes就像这种用于绘制事物的通用工具，因此您可以

00:13:15.660 --> 00:13:24.320
创建不同的仪表板并以管理员身份登录，这确实是有可能的

00:13:24.320 --> 00:13:33.870
是的，我有一个错误的问题，是的，我需要通用的半径行走

00:13:33.870 --> 00:13:38.550
看看基准波动，我可以看到某种理论方面

00:13:38.550 --> 00:13:43.380
真的，就像我们甚至得到的，看到你知道这真是太好了

00:13:43.380 --> 00:13:48.060
在一个测试和一个测试之间有很多涂油

00:13:48.060 --> 00:13:52.920
测试和生产我们正在从事的设计以及正在发生的变化

00:13:52.920 --> 00:13:57.360
组件和这个特定的系统，就像一天结束时一样

00:13:57.360 --> 00:14:00.600
知道您何时在做Penta fire游戏，就像您知道大多数系统都不会运行一样

00:14:00.600 --> 00:14:03.870
或他们将要关注的同一场比赛

00:14:03.870 --> 00:14:09.090
正确的时间，所以最好还是收集确认信息，我认为是钱Bree

00:14:09.090 --> 00:14:12.780
说，就像基本上嘿获得访问权限，就像我们不想有一个

00:14:12.780 --> 00:14:19.500
那里有无数的工具，我们需要逐一检查以了解如何

00:14:19.500 --> 00:14:23.940
理想情况下，事情将全面进行

00:14:23.940 --> 00:14:29.580
仪表板可为工程师和工程师提供统一的入口点和经验

00:14:29.580 --> 00:14:35.870
但是有了我们为测试概念化的架构

00:14:35.870 --> 00:14:42.870
运行它，所以它有一个前端，并且有正确的地图，所以

00:14:42.870 --> 00:14:48.030
艾伦与我们或您的协调员一起向我们展示了架构图

00:14:48.030 --> 00:14:51.990
我记得我们把它放在中间的类似组件中，然后

00:14:51.990 --> 00:14:54.390
奴才，这有点像小包，这

00:14:54.390 --> 00:14:57.440
贫穷是由API驱动的，因此我们有可能

00:14:57.440 --> 00:15:03.510
将此测试基础架构集成到更广泛的测试中

00:15:03.510 --> 00:15:08.580
ipfs的管道，以便每当我们在JSI BFS中检测到提交时，

00:15:08.580 --> 00:15:14.700
像触发器那样通过所有特定的封装调用API

00:15:14.700 --> 00:15:19.800
这些调用和包装中，您知道该作业在

00:15:19.800 --> 00:15:24.150
在测试运行程序下运行此基础架构，因为我们拥有将成为

00:15:24.150 --> 00:15:28.140
建立可插拔测试运行器的概念，而您却无法从中受益

00:15:28.140 --> 00:15:33.810
测试是测试我的防御代码的一种策略，但是Jas IVF

00:15:33.810 --> 00:15:37.980
基准测试可能是另一次测试，因此潜在地我们将触发

00:15:37.980 --> 00:15:42.510
工作，然后测试跑步者有一个输入，并产生输出，其中

00:15:42.510 --> 00:15:47.610
输出基本上是一堆指标，而这些指标位于

00:15:47.610 --> 00:15:50.910
特定的数据模型，这样我们可以做的就是从

00:15:50.910 --> 00:15:53.850
祖父，如果他们被普罗米修斯（Prometheus）感到抱歉，如果他们被张贴在那里

00:15:53.850 --> 00:15:57.900
或者我记得在flux TV中，我认为这是是否将其张贴在那里，然后

00:15:57.900 --> 00:16:04.680
您知道让他们将其导入到已识别的指标数据库中

00:16:04.680 --> 00:16:10.070
测试管道，以便您知道实际上是集成的一种方法

00:16:10.070 --> 00:16:15.000
这部分正在准备中，因为这是您知道我们正在构建的

00:16:15.000 --> 00:16:18.810
总是要去建造真的是一个锅，就像它是统一的观点

00:16:18.810 --> 00:16:23.400
流水线，嘿，事情发生了变化，分数的想法发生了

00:16:23.400 --> 00:16:29.490
基本的人或BFS一个，所以你可能会去J是的，我们想看看

00:16:29.490 --> 00:16:34.650
事物正在相互协作，以执行基本的边坡测试是否在运行

00:16:34.650 --> 00:16:37.950
他们在生命网中的表现如何私下里的表现

00:16:37.950 --> 00:16:41.610
您知道在具有特定组成的专用网络中

00:16:41.610 --> 00:16:50.220
模仿公共网络，所以您知道很多有意义的事情，甚至

00:16:50.220 --> 00:16:52.670
有一个问题

00:16:53.450 --> 00:16:58.130
关于动物区系的好问题，您能像每个人的时间一样看到这张桌子吗？

00:16:58.130 --> 00:17:04.459
运行，然后我按文件上传a是否有可能像在表格中

00:17:04.459 --> 00:17:09.800
就像这里是所有您知道的闻起来一样，这里是所有不同指标

00:17:09.800 --> 00:17:13.339
有，然后一堆时间流逝，然后像细胞一样，个体

00:17:13.339 --> 00:17:16.910
我们从他们那里得到的统计数据就像我们可以轻松浏览所有

00:17:16.910 --> 00:17:22.070
基准测试是我在这里的关注，就像试图找到喜欢的对象一样

00:17:22.070 --> 00:17:24.290
这是美敦力公司这里是与此相关的所有部门

00:17:24.290 --> 00:17:29.180
在这些时间的这段时间基准测试中，很难理解

00:17:29.180 --> 00:17:33.490
只是我不知道我是否要回家-不，这很容易做到

00:17:34.120 --> 00:17:39.850
是的，我是我不知道，但我可能会发现我不是，我不是

00:17:39.850 --> 00:17:45.670
知道格里芬（Griffin）或其他任何东西，但我在尝试说话时才开始使用它

00:17:45.670 --> 00:17:49.720
在仪表板上为其他图形玩这个游戏，因为我试图获取

00:17:49.720 --> 00:17:56.170
有用的指标（如度量标准增量）之类的东西，并且喜欢随着时间的推移而发生的变化，

00:17:56.170 --> 00:18:01.570
聚合，这非常困难，我不得不将其导出到CSV，但是我

00:18:01.570 --> 00:18:05.800
也可能是菜鸟，与此链接无关，我们可以

00:18:05.800 --> 00:18:10.450
真正改变它，而不必进入我们喜欢的后端

00:18:10.450 --> 00:18:16.570
当前世界关闭的集合，我们将有一个固定的UI，是的，我们有

00:18:16.570 --> 00:18:19.930
上的图形，但就像我们不会得到这种精彩的互动一样

00:18:19.930 --> 00:18:24.820
我们在这里拥有的查询系统，我认为这实际上可能就像

00:18:24.820 --> 00:18:28.330
我们所需要的一切，大部分的狗，最终作者都有工作

00:18:28.330 --> 00:18:33.190
对于按钮就像我们可以注入任意HTML一样，我们可以这样做

00:18:33.190 --> 00:18:39.430
甚至喜欢触发测试或喜欢看各种事物，所以我认为

00:18:39.430 --> 00:18:43.810
这就像嘿，这就是为什么我要看它的原因

00:18:43.810 --> 00:18:46.810
基本上，如何在这里创建我们的系统？

00:18:46.810 --> 00:18:52.210
尽可能多的工作，然后使其尽可能地互动，是的。

00:18:52.210 --> 00:18:59.170
所以我认为Breanna是向下钻取的好工具，但是当您需要该顶部时

00:18:59.170 --> 00:19:05.950
水平视图鸟瞰视图，我们绝对需要一个经过精心设计的UI

00:19:05.950 --> 00:19:11.710
准确地消化我们需要显示在

00:19:11.710 --> 00:19:19.960
比较时尚，所以我的意思是我肯定会看到您知道很多链接

00:19:19.960 --> 00:19:23.920
可以将您转到特定个人资料的特定仪表板

00:19:23.920 --> 00:19:27.850
用一小段时间进行实例制作或您预先选择的内容或任何允许的时间

00:19:27.850 --> 00:19:33.580
您喜欢零零碎碎的某个特定事件，而您知道该事件是从

00:19:33.580 --> 00:19:39.350
就像顶级摘要视图一样，我想知道我们是否只能做到这一点

00:19:39.350 --> 00:19:45.559
在这里，我们似乎无法完全确定，因为如果我们

00:19:45.559 --> 00:19:50.120
已经有一个简单时期的仪表板，现在我们想要的是某种

00:19:50.120 --> 00:19:54.080
仪表板很好，所以我们在这里缺少的外观就像我一样，是或否

00:19:54.080 --> 00:19:58.309
像他们这样在咳嗽的临界点恢复中跑得更快，我认为

00:19:58.309 --> 00:20:02.000
这和是的一样好，这很好，我想建模会非常棘手

00:20:02.000 --> 00:20:05.240
这是一个剖析器，因为在一天结束时，我们确实希望能够

00:20:05.240 --> 00:20:11.120
选择一个我们想要比较的特定基准，您知道特定的指标

00:20:11.120 --> 00:20:16.670
反对和在斧头上的图形真的很好显示以显示您知道的时间序列

00:20:16.670 --> 00:20:24.380
随时间变化的一系列时间类型的数据点，但就像我不认为那是

00:20:24.380 --> 00:20:27.740
我认为这与我们可能会有的点击非常相似，例如每一行

00:20:27.740 --> 00:20:33.860
基准，然后每个类似的列将是每个基准的一次运行，

00:20:33.860 --> 00:20:36.770
为此，我们可以像在屏幕上遍历图形一样

00:20:36.770 --> 00:20:41.900
对于每个基准，我希望每个点都有一个不同的地方

00:20:41.900 --> 00:20:45.830
事情发生了，我们可以使用条形图，以便他们可以清楚地看到像

00:20:45.830 --> 00:20:49.730
这是这次奔跑，我们可以一直放大，所以我就是

00:20:49.730 --> 00:20:53.059
像这样的好事在想，就是我们变得如此好，我们可以

00:20:53.059 --> 00:20:56.750
自己弄乱东西或像我们建造的东西会给你

00:20:56.750 --> 00:20:59.929
概述，但是如果您想告知您必须跳至Kohana

00:20:59.929 --> 00:21:03.650
我担心这样会花费更多的精力，或者如果我们一切顺利的话

00:21:03.650 --> 00:21:10.370
已经很有趣了，就像他们在想

00:21:10.370 --> 00:21:16.700
我开始有点喜欢的地方，所以我想让我们回到话题

00:21:16.700 --> 00:21:21.500
这次任务的整体内容非常感谢Alan提出的建议

00:21:21.500 --> 00:21:29.230
向前伸出一只手-好的，您可以要求我们的双手伸向重要的双手

00:21:29.230 --> 00:21:37.910
我只想说我认为我们可以像高级模型一样建模-相当不错

00:21:37.910 --> 00:21:43.010
好吧，如果可以执行查询，那么一切都取决于后端数据库

00:21:43.010 --> 00:21:50.690
我们需要您可以在文件中对其进行建模-这完全取决于您保存文件的位置

00:21:50.690 --> 00:21:54.620
数据是的，只是最后一句话

00:21:54.620 --> 00:21:58.370
里哈那（Rehana）很棒，这是一个连续的时期

00:21:58.370 --> 00:22:03.049
切片，但是当您有多个独立发展的分支时

00:22:03.049 --> 00:22:06.740
并且您想要像对一个进行比较一样对一个进行测试，并且

00:22:06.740 --> 00:22:12.169
像这样的另一场雪，并行发生着不同的时间表

00:22:12.169 --> 00:22:16.549
要根据我从谁那里来的图来建模图形将非常困难

00:22:16.549 --> 00:22:22.280
握住地球的经验，这也许是你知道可能已经改变了我们

00:22:22.280 --> 00:22:26.960
可以用主人或其他类似的东西标记其中的每一个

00:22:26.960 --> 00:22:30.559
这些图可以显示它更快或更晚，或任何其他时间，然后像我们可以

00:22:30.559 --> 00:22:34.340
像一个单独的清单，例如男性跑步，我认为这很重要

00:22:34.340 --> 00:22:38.720
像这样的人讨论业务技能，人们工作，所以我想要一个像我们这样的人

00:22:38.720 --> 00:22:41.780
只会使用围栏动物，还是我们想在顶部的系统上建立它

00:22:41.780 --> 00:22:45.740
我们将重用javascript正在使用的相同数据库

00:22:45.740 --> 00:22:52.850
这里是Dean正在使用，还是我们要建立一个新的系统，例如

00:22:52.850 --> 00:23:04.669
他会取代这个a，所以我想让嗯，这样潜在客户会很不错

00:23:04.669 --> 00:23:10.910
在我看来，如何思考这些事情的一个关键点

00:23:10.910 --> 00:23:14.299
考虑到我们有真正的问题焦点小组，需要能够

00:23:14.299 --> 00:23:19.100
向前冲刺阻止这些任务的特定任务

00:23:19.100 --> 00:23:25.400
不同的项目是在可能的情况下尝试消除交叉依赖，因此，如果

00:23:25.400 --> 00:23:32.480
如果有什么事情会阻碍该团队的进步，并且

00:23:32.480 --> 00:23:36.710
否则对于MVP最高的下一阶段开发至关重要

00:23:36.710 --> 00:23:42.380
对其他组具有零阻塞依赖关系的那个阶段的超级

00:23:42.380 --> 00:23:46.400
重要的是，否则我们将不可避免地在一群人的地方结束

00:23:46.400 --> 00:23:50.030
阻挡对方比阻挡自己更重要

00:23:50.030 --> 00:23:53.600
另一组，我们坐在那里旋转车轮，因为一组

00:23:53.600 --> 00:23:56.600
不能再谈另一件事了，MVP并不意味着我们最终不会

00:23:56.600 --> 00:24:01.400
希望所有这些事情都在同一个地方结束，我认为我们做到了，但是那

00:24:01.400 --> 00:24:04.540
可能就像您知道一个拥有

00:24:04.540 --> 00:24:08.260
不同的网络用户界面是，您知道繁荣时期

00:24:08.260 --> 00:24:11.410
我们将它们全部嵌入到一个母版页中的方式您可以非常轻松地喜欢

00:24:11.410 --> 00:24:15.310
在他们之间点击，就像我们生活在一个美好的世界中

00:24:15.310 --> 00:24:19.570
使其真正可访问，并且不会像检查那样增加开发人员的开销

00:24:19.570 --> 00:24:23.830
就像现在看起来像同一页一样深，但最初是这样

00:24:23.830 --> 00:24:27.370
当我们第一次开始移除这个十字架时，三只分开的眼睛

00:24:27.370 --> 00:24:32.350
跨循环的依赖关系，所以我认为这是非常重要的方法

00:24:32.350 --> 00:24:38.410
比减少像重叠这样重要的多，如果我们有一定数量的

00:24:38.410 --> 00:24:45.010
重叠，只要我们最终使用，我们以后就可以进行某种程度的重用

00:24:45.010 --> 00:24:49.090
现在我们真的很明智地到达某个地方，那就像

00:24:49.090 --> 00:24:53.560
我关于我们如何做出这些决定的观点是

00:24:53.560 --> 00:24:57.310
减少建立新系统的时间和精力将是很好的，所以我不想

00:24:57.310 --> 00:25:03.700
建立第二个仪表板，如果我们要拥有一些东西，您可以使用yeah和

00:25:03.700 --> 00:25:07.630
例如Ethier已经在这里进行了测试Orchestrator，似乎可以

00:25:07.630 --> 00:25:12.190
我们需要做的很多事情都已经完成了，所以这不像我们在做

00:25:12.190 --> 00:25:15.550
等待其他人，所以我在想我们是否可以

00:25:15.550 --> 00:25:19.150
打开测试团队，然后开始构建可能存在的内容

00:25:19.150 --> 00:25:23.140
现在快一点，可能会慢一点，因为就像没事，就像我们没有

00:25:23.140 --> 00:25:24.790
在这种情况下，我们应该拥有它

00:25:24.790 --> 00:25:34.360
但是，让我们重用我所缺少的信息，是否还有所有这些

00:25:34.360 --> 00:25:39.070
不同的项目，我真的不知道为什么他们来了为什么他们死了

00:25:39.070 --> 00:25:44.080
例如为什么在以前的项目出现时，新项目就开始了

00:25:44.080 --> 00:25:51.730
是否不合适，所以我认为这就像我们构建时所拥有的良好信息一样

00:25:51.730 --> 00:25:59.440
另一个避免相同陷阱的人我认为很多人可能只是员工

00:25:59.440 --> 00:26:03.580
人员流失，甚至人员流失，甚至从一个项目转到另一个项目

00:26:03.580 --> 00:26:08.780
另一个是我猜是一个公平的评估

00:26:08.780 --> 00:26:13.310
你知道我认为这是已证实的联盟义务的受害者

00:26:13.310 --> 00:26:16.210
会死

00:26:17.690 --> 00:26:22.550
把手放在这个特定主题上，我是你的角色，实际上

00:26:22.550 --> 00:26:26.600
确实有两个系列，只是为了给您带来更美好的历史

00:26:26.600 --> 00:26:29.450
好吧，不，我在一年前有一家公司，

00:26:29.450 --> 00:26:34.280
这些努力中有许多是在我加入之前完成的，但是我们怎么样

00:26:34.280 --> 00:26:40.940
一个视图基本上就像创建您认识一个测试实验室的愿景一样，

00:26:40.940 --> 00:26:48.800
最初是否可以长期变形，我们想在其上进行IP投资项目

00:26:48.800 --> 00:26:55.070
就像地面愿景一样，是要创建一个动态系统，在公共场所

00:26:55.070 --> 00:27:00.770
人们可以从本质上插入计算能力，而基础架构和

00:27:00.770 --> 00:27:06.170
世界各地的节点，然后可以用来运行一系列

00:27:06.170 --> 00:27:11.840
在一个分散的网络上进行测试，就像一个愿景，然后在那里

00:27:11.840 --> 00:27:15.860
还有其他一些更受限制的愿景，更像是与

00:27:15.860 --> 00:27:20.720
超出适用性的类型表示我们要测试的ipfs以及是否

00:27:20.720 --> 00:27:24.950
这是失败的，还是在密闭性测试中知道密不透风

00:27:24.950 --> 00:27:29.390
部署，以便我们可以表征代码在

00:27:29.390 --> 00:27:32.420
可预测和可复制的环境

00:27:32.420 --> 00:27:37.340
就像导致诸如

00:27:37.340 --> 00:27:42.770
当前的测试实验室，然后例如Jas被挫败了

00:27:42.770 --> 00:27:46.850
对我所看到的方式进行基准测试，尤其是我所看到的方式

00:27:46.850 --> 00:27:51.650
史蒂文·史密斯（Steven）说，有点像描述J的范围很广的尝试，很漂亮

00:27:51.650 --> 00:27:56.510
正确并且可能在将来可以将它们与窗口释放配对，因此

00:27:56.510 --> 00:28:01.580
诸如此类的想法首先是一堆愿景

00:28:01.580 --> 00:28:09.130
哪些让您知道哪些随着时间的流逝而重复，而且您也知道

00:28:09.130 --> 00:28:14.510
创造了很长一段时间的各种努力，但后来也认为这就像

00:28:14.510 --> 00:28:19.850
面向微服务的组织权利人只是构建了以下工具

00:28:19.850 --> 00:28:23.450
他们需要他们需要的时间，所以这就是例如

00:28:23.450 --> 00:28:28.040
我看到J是基准，实际上我还没有意识到，但我不知道

00:28:28.040 --> 00:28:30.330
实际的历史是怎样的，但我可以看到

00:28:30.330 --> 00:28:33.530
你知道这是应用程序

00:28:35.220 --> 00:28:40.830
艾伦，您是下一个。是的，我只是想补充一下这些特殊内容

00:28:40.830 --> 00:28:45.540
基准，然后它真的死了大概有一个月了

00:28:45.540 --> 00:28:51.360
因为他们已经离开了，所以我们有历史数据证明了问题所在

00:28:51.360 --> 00:28:54.720
只是那里的机器重启了，什么都没回来

00:28:54.720 --> 00:28:59.820
当它回来的时候就起来了，所以像这个特殊的东西一样，它没有死

00:28:59.820 --> 00:29:05.100
以前有一个令人吃惊的基准测试，但是这个项目的灵感来自

00:29:05.100 --> 00:29:09.690
那不是基于它的，因为它是基于Web浏览器的，而我们

00:29:09.690 --> 00:29:16.020
希望能够运行go节点以及jeaious节点，以便我们

00:29:16.020 --> 00:29:20.370
可以在两个实现之间进行比较，就像我说的那样

00:29:20.370 --> 00:29:26.490
一段时间以来，这一直是一个想法的迭代，而另一件事是

00:29:26.490 --> 00:29:30.720
只是想很快地说出它就像乌鸦的动物，就像其中之一

00:29:30.720 --> 00:29:34.650
那些应用程序可以与您做任何事情，当我问的时候

00:29:34.650 --> 00:29:39.450
关于这些的时候，在伙计们上，是的，是的，基本上

00:29:39.450 --> 00:29:43.620
无论您想做什么，我们都可以做，虽然可能并不漂亮，但是可以做到

00:29:43.620 --> 00:29:49.790
与Gravano一起使用，但它有点笨拙，并且总体上并没有给您那么好的外观

00:29:49.790 --> 00:29:58.200
我认为您正在谈论的总体观点可以通过某种方式创建

00:29:58.200 --> 00:30:02.940
我认为这就是雨果（Hugo）最初试图与

00:30:02.940 --> 00:30:13.950
我曾经是仪表板，我很快就演示了，但实际上又是一个

00:30:13.950 --> 00:30:18.420
真的很抱歉，没有这个的事情，我们会

00:30:18.420 --> 00:30:22.440
需要，如果那里有90％，那么这对这件事是一件好事

00:30:22.440 --> 00:30:27.960
没有，就像每晚都要使用JSI VFS并更新JSON一样，

00:30:27.960 --> 00:30:32.010
在测试中使用该特定版本不会这样做

00:30:32.010 --> 00:30:37.320
要做的就是更改它，以便它可以被使用并重新构建并使用

00:30:37.320 --> 00:30:41.870
在测试中也是如此，那就是那里的三角洲

00:30:42.120 --> 00:30:49.669
只是我刚刚分享了我的屏幕，这是吉姆想出的一个模型，它是一个

00:30:49.669 --> 00:30:54.779
它的起点就像我们正在概念化的一样

00:30:54.779 --> 00:31:00.900
变成那种潜在的自上而下的视图，就像您知道那只鸟的

00:31:00.900 --> 00:31:05.520
眼图和我进行过测试的不同类型的词条

00:31:05.520 --> 00:31:09.809
案例和我们已注册的指标，例如这些指标

00:31:09.809 --> 00:31:15.480
例如Todd可能输入的时间，以此类推，以及指向未成年人的链接

00:31:15.480 --> 00:31:22.320
易用性和轮廓以及加热拇指等，您知道这将是原始的

00:31:22.320 --> 00:31:28.700
例如诊所正在这里为你们和后面分析的材料

00:31:28.700 --> 00:31:38.370
配置文件和转储的发布等等，我们可以进行测试

00:31:38.370 --> 00:31:42.840
测试管道也可能执行情报以提取您的信息

00:31:42.840 --> 00:31:47.490
从这些个人资料中了解感兴趣的指标，并将其发布到此处

00:31:47.490 --> 00:31:52.200
有点像你知道我们希望这是上帝，这会有点像

00:31:52.200 --> 00:31:56.220
我们一直在概念化它的观点非常像这样

00:31:56.220 --> 00:32:00.870
这既来自灵感，又来自于一些参考文献，

00:32:00.870 --> 00:32:06.270
他在一开始就给了我们，例如，如果您看着另一个

00:32:06.270 --> 00:32:11.429
chrome基准测试（如果您查看注释）意味着例如

00:32:11.429 --> 00:32:16.440
像矩阵一样，这就像是灵感的主要来源

00:32:16.440 --> 00:32:22.049
正确的是，我们想要一个矩阵，我们可以看到它表示黄色和红色，它变成

00:32:22.049 --> 00:32:26.610
显而易见，您知道我们应该把注意力放在哪里

00:32:26.610 --> 00:32:31.799
无需在解析时尝试正确地解析它，就像

00:32:31.799 --> 00:32:40.529
我可以想像对不起，我可以想像像是如果您对此模型进行建模或更好

00:32:40.529 --> 00:32:45.450
那么它可能看起来像一个巨大的图表，或者一个巨大的图表，带有一个

00:32:45.450 --> 00:32:50.970
很多行，所以您的信息会丢失，或者看起来像

00:32:50.970 --> 00:32:56.690
仪表板，您必须在其中上下滚动很多，所以我的意思是我不喜欢

00:32:56.690 --> 00:33:02.450
在天气图上可以100％售出Anna是正确的顶级视图，我认为我们

00:33:02.450 --> 00:33:06.440
需要拥有这种观点，因为它需要像我希望这个地方成为你

00:33:06.440 --> 00:33:11.330
知道一点，任何ipfs内存社区成员不一定

00:33:11.330 --> 00:33:16.220
经过精心设计，但任何社区成员都可以知道访问权限并查看其健康状况

00:33:16.220 --> 00:33:21.590
目标Inge的每一次承诺都意味着

00:33:21.590 --> 00:33:25.970
在公共网络上表现出色，并且在以下情况下表现出色：

00:33:25.970 --> 00:33:30.650
 1,000个节点，或者何时与另一个节点进行比较

00:33:30.650 --> 00:33:37.700
如果我们部署了一个

00:33:37.700 --> 00:33:42.230
特定版本，例如网关中的软版本或引导程序

00:33:42.230 --> 00:33:46.760
我们所捕获的正确的指标是看起来更好还是

00:33:46.760 --> 00:33:51.710
比昨天更糟，就像您知道这种统一的观点，从

00:33:51.710 --> 00:33:56.210
只要您了解维纳斯，就可以一目了然

00:33:56.210 --> 00:34:01.910
正确的例子是，你知道他一走就得到了

00:34:01.910 --> 00:34:09.010
他们可能会进一步混淆我一直在尝试的东西

00:34:09.670 --> 00:34:16.600
木星之类的科学笔记本，就像一次实验一样，

00:34:16.600 --> 00:34:23.000
我不喜欢那显然不是仪表板，但我想如果

00:34:23.000 --> 00:34:28.250
科学的笔记本探索，我想将其发布到某个地方

00:34:28.250 --> 00:34:33.980
可见的，所以我喜欢从仪表板链接它，所以我真的不知道如何

00:34:33.980 --> 00:34:40.720
可以工作，但希望在接下来的几个月中有一些原型

00:34:44.179 --> 00:34:51.379
嗯，我想继续努力将这些主题带到我们

00:34:51.379 --> 00:34:55.190
有关如何执行此操作的一般指导原则，因为我认为很多情况下

00:34:55.190 --> 00:34:58.940
这将比像特定决定一样重要

00:34:58.940 --> 00:35:03.440
我认为史蒂文斯（Stevens）指出，像这样，我们需要很多东西

00:35:03.440 --> 00:35:08.240
已经很棒了，让我们开始尝试

00:35:08.240 --> 00:35:14.000
对我们拥有的数据进行基准测试，并将其用作可以推送和尝试的地方

00:35:14.000 --> 00:35:17.059
并从不同方向拉动它，看看这不符合我们的要求

00:35:17.059 --> 00:35:20.990
需求，我们只要将事情搞定就可以得到很多反馈

00:35:20.990 --> 00:35:24.740
尽全力去了解它，并了解Crisanta所喜欢的地方并不能阻止我们前进

00:35:24.740 --> 00:35:28.099
我们想要用其他指标完成这一目标的方向

00:35:28.099 --> 00:35:31.220
就像我们会找到类似的点哦，我真的很想这样做

00:35:31.220 --> 00:35:35.299
东西和profunda不让我还是格里芬背后的数据形状啊

00:35:35.299 --> 00:35:41.450
不让我或类似的东西出现，但是它存在并且每晚运行

00:35:41.450 --> 00:35:45.410
您可以通过向其添加基准测试，例如在某处添加拉取请求，

00:35:45.410 --> 00:35:50.210
太好了，所以让我们尝试并利用它，而不是尝试发明一个新的

00:35:50.210 --> 00:35:56.809
系统开始这样做，这就是不阻碍努力的原则

00:35:56.809 --> 00:36:01.549
就像我在这个节点中看到很多价值一样绿色风格的东西

00:36:01.549 --> 00:36:06.619
也同意使其可访问，但在一定程度上我们可以拥有MVP

00:36:06.619 --> 00:36:10.490
像嘿一样的里程碑，让我们从将这些东西推到这个地方开始

00:36:10.490 --> 00:36:16.700
已经存在，嘿，很酷，我们也可以在

00:36:16.700 --> 00:36:22.490
同时，我们想获取我们的数据，并喜欢从那里获取数据

00:36:22.490 --> 00:36:25.760
进入其他途径，嘿，但同时我们要抓住所有这些

00:36:25.760 --> 00:36:29.960
已经存在的其他数据，这些数据也可以改善您的视线或事物

00:36:29.960 --> 00:36:36.829
像这样，我想我在这里提出我的要点是让我们尝试并削减我们的

00:36:36.829 --> 00:36:41.930
可交付成果下降到我们可以启动并运行某些东西的程度

00:36:41.930 --> 00:36:48.049
尽快，以便我们可以从中学到东西，并确保我们

00:36:48.049 --> 00:36:52.400
难道我们不会互相阻止这些努力，以使您知道

00:36:52.400 --> 00:36:55.700
好像很棒，我可以拿起这东西，但我也想做另一件事

00:36:55.700 --> 00:36:59.590
因为在这种测试中，它将是

00:36:59.590 --> 00:37:04.300
真的很关键，但是没有其他团队依赖我这样做

00:37:04.300 --> 00:37:09.310
将自己的东西添加到已经存在的东西中，所以我想我遇到了

00:37:09.310 --> 00:37:12.310
像这样的建议看起来真的很棒，让我们开始吧

00:37:12.310 --> 00:37:15.670
像使用它一样使用它，我很想去玩

00:37:15.670 --> 00:37:20.650
测试可视化效果是因为让它更易于访问，因为我们可以想象

00:37:20.650 --> 00:37:24.610
这是我们至少用于测试可视化的东西

00:37:24.610 --> 00:37:28.540
下个月，我们可能想要一些更好的东西，但是从现在开始的一个月后

00:37:28.540 --> 00:37:31.930
我们有一个更好的系统，我们也可以将这些数据导入到我认为

00:37:31.930 --> 00:37:38.320
宏大，而且我们可能都为这两者带来增值，所以这就是为什么我在

00:37:38.320 --> 00:37:43.270
我确实希望我们喜欢回到测试清单

00:37:43.270 --> 00:37:47.380
是的，其他人，继续吧，艾伦，是的，我认为我认为这是一个好主意，

00:37:47.380 --> 00:37:51.490
我可以为此付出最小的努力以使其更有用吗

00:37:51.490 --> 00:37:58.120
我给我们，与此同时，从其他人那里收集痛苦，然后使用

00:37:58.120 --> 00:38:05.740
告知正在进行的其他工作，这将使我们受益

00:38:05.740 --> 00:38:11.380
在某个地方，然后我们可以从最有用的地方迭代

00:38:11.380 --> 00:38:15.820
我们将可以运行测试或基准测试，例如帮助程序

00:38:15.820 --> 00:38:20.050
函数或仅是示例，我可以从程序中调用然后再调用一些

00:38:20.050 --> 00:38:22.690
这样的例子，您提取更多信息就像时间在奔波我

00:38:22.690 --> 00:38:29.860
而且所有的好东西都很棒，是的，我

00:38:29.860 --> 00:38:34.150
看着那里运行的机器，那完全是

00:38:34.150 --> 00:38:39.010
可以只在测试实验室内的冷测试实验室中运行这些东西

00:38:39.010 --> 00:38:42.430
环境，因为我们想扩大规模，因为我认为这最多只能达到5

00:38:42.430 --> 00:38:47.200
现在的节点，这就像我们想尝试更大的事情

00:38:47.200 --> 00:38:51.760
它设计的集群从未设计成像一千个

00:38:51.760 --> 00:38:57.580
是的，就像五岁的夫人，你知道我们会看到我们在哪里获得实验室的

00:38:57.580 --> 00:39:01.270
只要在其中运行Linux就可以，只要它在Linux上运行就可以

00:39:01.270 --> 00:39:03.600
在那里

00:39:08.490 --> 00:39:12.670
很酷，是的，听起来我们在此链接上还有一些后续步骤，特别是

00:39:12.670 --> 00:39:17.170
现在再次存在，非常感谢艾伦，测试四

00:39:17.170 --> 00:39:23.079
人们已经看过它，认为舞台上有一些像

00:39:23.079 --> 00:39:29.940
喜欢重叠和可访问性合并，但我们不会阻止

00:39:29.940 --> 00:39:34.480
我认为史蒂文斯（Stevens）指出，拥有这些东西是同一件事，

00:39:34.480 --> 00:39:39.700
评估角色的类型就像是否存在已经存在的工作是

00:39:39.700 --> 00:39:46.210
已经在这里完成，您可以窃取真正快速达到MVP的水平

00:39:46.210 --> 00:39:51.640
很棒，如果它不那么说爱的话，那真是太酷了，即使像

00:39:51.640 --> 00:39:56.260
一个可以帮助我们提前一个月取消阻止ipfs发行的系统

00:39:56.260 --> 00:40:01.660
非常感谢，可以回顾一下文档

00:40:01.660 --> 00:40:06.250
甚至是昨天创建的，这里有很多东西

00:40:06.250 --> 00:40:15.730
太好了，这是一次很棒的普查，我想看看这个以及我们如何

00:40:15.730 --> 00:40:19.359
通过它，我觉得其中有些东西是的，我认为

00:40:19.359 --> 00:40:25.900
我希望我们从覆盖面或其他令人困惑的内容开始

00:40:25.900 --> 00:40:28.690
对人或与人有疑问，因为这里有很多东西

00:40:28.690 --> 00:40:34.000
就像您知道集成基准测试或内部中断测试之类的

00:40:34.000 --> 00:40:36.640
我觉得不需要讨论的地方很好，它写的是

00:40:36.640 --> 00:40:44.140
下来，但没有像顶级问题或关于它的暗示线索

00:40:44.140 --> 00:40:47.740
并从更多的想象中开始，就像您知道我们实际思考的地方

00:40:47.740 --> 00:40:51.610
在本季度将进行战术上的工作，只是确保我们

00:40:51.610 --> 00:41:07.990
不要在这项工作上踩到对方的脚，所以我认为有一些

00:41:07.990 --> 00:41:12.730
就我在玩的实际测试用例而言，实在是太低了

00:41:12.730 --> 00:41:18.550
和我的三个可爱的小伙伴一起测试测试实验室模拟和游戏

00:41:18.550 --> 00:41:23.650
大约有点倾斜，我只能在三个同龄人之间说出喜欢拭子的感觉

00:41:23.650 --> 00:41:28.720
在做一些不好的事情，所以我认为这是一个显而易见的重点

00:41:28.720 --> 00:41:36.190
我认为您可能会像泪水一样好20 30％的加速将是

00:41:36.190 --> 00:41:42.070
如果我们修复了一些问题，可以期望能够看到像图形一样的移动

00:41:42.070 --> 00:41:45.760
问题是我认为问题的表现不尽相同

00:41:45.760 --> 00:41:52.840
您运行它的时间，并且发生了一些随机的事情，所以我们该怎么做，我们只是

00:41:52.840 --> 00:41:56.440
一遍又一遍地跑，平均和我认为女孩的数字

00:41:56.440 --> 00:42:00.030
想了很多

00:42:03.910 --> 00:42:07.510
是的，这是我认为这是我们需要经历的事情

00:42:07.510 --> 00:42:12.820
同步，因为一般来说这里有很多头脑风暴活动

00:42:12.820 --> 00:42:17.579
这是我们第一次对现有产品达成共识

00:42:17.579 --> 00:42:23.619
跨代码库，跨行业的人，就像您在其中的所有菜单一样

00:42:23.619 --> 00:42:28.359
在同一地点以及在集思广益期间，我们进行了什么样的测试

00:42:28.359 --> 00:42:32.740
想要与您知道的地方在同一地点，这列出了我们已经存在的更多工具

00:42:32.740 --> 00:42:38.079
我是否认为我们只是必须如此同步地进行这项工作，而我

00:42:38.079 --> 00:42:43.450
建议我们为每个人设置一个日期，以确保它使您知道

00:42:43.450 --> 00:42:49.410
每个人都可以做出我们认为应该进行的测试，

00:42:49.410 --> 00:42:56.970
其他任何人都有强制执行的最后期限，所以也许在本周末

00:42:59.490 --> 00:43:05.650
阅读本文档以完成本文档，并考虑您的第1版

00:43:05.650 --> 00:43:10.210
这份文件我有你知道的事，就是你的笔记不会开始

00:43:10.210 --> 00:43:15.000
关于我们想去哪里的北极星

00:43:17.810 --> 00:43:22.490
我认为这涉及某种形式的按摩

00:43:22.490 --> 00:43:26.060
从目前的这份文件中我认为这是一个非常好的人口普查，但是我

00:43:26.060 --> 00:43:31.670
不要以为这是优先列表或路线图，所以就像这里的东西

00:43:31.670 --> 00:43:34.640
就像愿望清单中的物品，我们不会给你这个

00:43:34.640 --> 00:43:37.280
对跟踪非常有用并且对我们非常重要的季度

00:43:37.280 --> 00:43:41.900
写下来，但是就像你知道的那样，最终不会出现在任何团队的任务列表上

00:43:41.900 --> 00:43:45.530
因为我们真正需要的是非常大的物品

00:43:45.530 --> 00:43:52.040
高优先级，因此我认为从此列表进行按摩实际上是

00:43:52.040 --> 00:43:58.100
到底发生了什么，以及由哪些类似团体组成，这才是真正的

00:43:58.100 --> 00:44:04.520
有用的部分，所以我实际上可能想喜欢我在那儿

00:44:04.520 --> 00:44:09.050
是上周四《 All Hands》中的话题

00:44:09.050 --> 00:44:17.570
嘿，等等，好像有些可能没有断开连接，但是好像缺少

00:44:17.570 --> 00:44:22.520
明确其他团体为成功而需要和正在做的事情，以及

00:44:22.520 --> 00:44:27.410
人们想知道这一点，因为您知道可能会有工作安排

00:44:27.410 --> 00:44:31.010
对于以后的里程碑，这将由另一个团队来完成，但是如果您

00:44:31.010 --> 00:44:35.570
不知道您不能重复使用或利用它，就像

00:44:35.570 --> 00:44:39.170
像这样的水平是该小组从测试中所做的事情

00:44:39.170 --> 00:44:43.790
透视并使所有其他组可见

00:44:43.790 --> 00:44:48.710
否则每个人都会像他们自己的单独线程一样继续前进，而不是

00:44:48.710 --> 00:44:52.609
会一直暴露到后来，那就是你知道了，嘿，我们一直在

00:44:52.609 --> 00:44:58.190
做重复的工作，是的，所以我认为这个特殊的范围

00:44:58.190 --> 00:45:04.340
该小组着重于OPR中定义的目标，因此这是一个

00:45:04.340 --> 00:45:10.910
生产金丝雀测试和不同级别的优先级专用网络

00:45:10.910 --> 00:45:17.660
测试，但是说这个蓝色正在为我所有的人构建测试

00:45:17.660 --> 00:45:23.330
BFS，这就是您知道我想从所有ipfs收集需求的地方

00:45:23.330 --> 00:45:27.560
对，因为我们无法建立可能发展的基础设施

00:45:27.560 --> 00:45:31.430
如果没有这个地方，我们可以为每个人工作

00:45:31.430 --> 00:45:36.020
每个人实际上是正确的，所以这就像我认为学校

00:45:36.020 --> 00:45:39.020
至少从我的角度来看，您知道正在进行的测试的范围

00:45:39.020 --> 00:45:42.470
您想推迟它，或者您认为我们应该专注于其他事情，我

00:45:42.470 --> 00:45:47.810
认为本季度测试欺诈的重点有点像密封和

00:45:47.810 --> 00:45:51.200
几周前提出的奥哈拉（O'Hara），我认为应该有

00:45:51.200 --> 00:45:56.240
如果您认为这应该适应该小组将要开展的工作

00:45:56.240 --> 00:46:02.450
不是这样的话，让我们谈谈我不知道要摆什么样的东西才有意义

00:46:02.450 --> 00:46:08.060
红外测试框架下的IPS基准测试项目

00:46:08.060 --> 00:46:13.640
只是为了澄清一下，就像我们试图在这里决定对接口的决定一样

00:46:13.640 --> 00:46:19.760
因此，就像在史蒂文斯小组中的岛屿一样运行此基准测试

00:46:19.760 --> 00:46:28.360
系统，然后Rho和我在Cole中建立另一个系统，

00:46:29.650 --> 00:46:36.910
从组织上看，我认为我对此和Kavya的警告似乎有点奇怪

00:46:36.910 --> 00:46:43.990
从我的观点来看，罗斯的观点是，我想让你们调试我的

00:46:43.990 --> 00:46:48.670
从我的角度来看，这里需要三方面的努力

00:46:48.670 --> 00:46:53.980
正在建立即席测试并确保在那里存在的项目

00:46:53.980 --> 00:47:00.130
是项目运营团队和包管理团队这两个团队中的一种

00:47:00.130 --> 00:47:04.630
他们正在编写他们关心的基准，以确保

00:47:04.630 --> 00:47:08.740
他们需要测试的东西，以便向前推进他们的工作并

00:47:08.740 --> 00:47:11.800
定期获取他们关心的反馈循环，以便进行

00:47:11.800 --> 00:47:16.330
编写他们需要的开发工作，然后在某个地方运行

00:47:16.330 --> 00:47:20.410
认为存在的东西是一个很好的起点，因为它

00:47:20.410 --> 00:47:24.280
存在，那很棒，您可以开始运行基准测试，所以我认为

00:47:24.280 --> 00:47:27.850
这应该是我们的默认设置，这是我们在事物存在后将其粘贴的位置，如果

00:47:27.850 --> 00:47:32.440
然后，您拿起那东西，将其放在测试中，放在奇妙的位置，并给予

00:47:32.440 --> 00:47:34.510
我们喜欢最神奇的东西

00:47:34.510 --> 00:47:38.770
但我想像史蒂芬·艾伦（Stephen Alan）一样畅通无阻，专注于

00:47:38.770 --> 00:47:42.400
安德鲁（Andrew）喜欢那些喜欢编写基准测试的人

00:47:42.400 --> 00:47:45.910
我不认为你们两个都有足够的带宽，所以写所有

00:47:45.910 --> 00:47:49.480
那些基准测试，我不认为我们希望四个团队进行的测试像

00:47:49.480 --> 00:47:52.990
负责整个项目的所有基准测试编写，我认为这是一个

00:47:52.990 --> 00:47:58.360
巨大的工作量，您将不会成为最好的团队，因此

00:47:58.360 --> 00:48:02.470
就像战术一样，这些是我们需要的基准，我认为需要

00:48:02.470 --> 00:48:08.350
发生在其他团队上，需要畅通无阻才能喜欢开始

00:48:08.350 --> 00:48:11.260
进步，因为您将编写一个基准，然后您将运行该基准，您将意识到

00:48:11.260 --> 00:48:14.230
您实际上可能是该基准的调整版本，并且您希望能够

00:48:14.230 --> 00:48:18.970
在您正在创建的新系统上进行迭代而不会被阻塞的情况下，

00:48:18.970 --> 00:48:22.840
然后有赫克特（Hector）正在从事的网关工作，就像嘿，我们

00:48:22.840 --> 00:48:27.280
应该有每晚的镜子，嘿，我们应该又像网关金丝雀

00:48:27.280 --> 00:48:33.160
就像测试部分一样，验证ipfs是否按预期执行，但是

00:48:33.160 --> 00:48:37.780
就像旋转网关节点并在其中运行网关基础结构

00:48:37.780 --> 00:48:43.210
我们可以做到的方式，这在基础设施配置中似乎也是如此，

00:48:43.210 --> 00:48:46.420
就像了解我们关心网关的指标一样，

00:48:46.420 --> 00:48:50.680
网关团队最适合这样做，如果有的话，再来一次

00:48:50.680 --> 00:48:54.370
消耗并放置在集中的测试基础架构中

00:48:54.370 --> 00:48:59.470
很棒，但是我不认为他们的第一个里程碑不应该要求进行测试

00:48:59.470 --> 00:49:03.220
从完成或需要测试，并为团队做一些事情

00:49:03.220 --> 00:49:06.730
他们可以开始从中获取价值，并利用它来反复进行

00:49:06.730 --> 00:49:10.180
网关生产准备就绪等，这就是我对以下方式的理解：

00:49:10.180 --> 00:49:13.480
吉姆（Jim）滚过手的世界，我要跑了

00:49:13.480 --> 00:49:16.870
这就是这些东西，这是上半部分在下半部分

00:49:16.870 --> 00:49:22.600
一半在上半部分是测试，就像输入团队我们正在测试作品

00:49:22.600 --> 00:49:29.560
在介绍中有测试的是开发人员，如果这是考虑它的好方法，那么

00:49:29.560 --> 00:49:35.140
让我，我想我明白你的意思，但我想的是另一种

00:49:35.140 --> 00:49:40.870
这里的范式和心理模型，我认为这是我认为的组织

00:49:40.870 --> 00:49:44.770
和企业，它正在建立我的食品杂货，但是我们已经和你一起

00:49:44.770 --> 00:49:48.460
我对康威有些了解，所以我们在这里看到的人们知道，您知道

00:49:48.460 --> 00:49:52.990
遗憾的是他们需要能够实现，您知道他们的目标并实现

00:49:52.990 --> 00:49:57.520
该小组的目标，所以实际上我们现在要说的是

00:49:57.520 --> 00:50:04.060
从这一点来说，这就像是因为我们有点像

00:50:04.060 --> 00:50:10.720
横向工作，可以对测试进行统一查看

00:50:10.720 --> 00:50:15.670
在IP FS之上发生的事情此时，我们要做的是开始参与

00:50:15.670 --> 00:50:19.990
与安德鲁斯（Andrews）小组的包装经理一起，开始参与来自

00:50:19.990 --> 00:50:25.120
没有你不知道只是对话不阻止不阻止

00:50:25.120 --> 00:50:29.380
我们的努力，因为我们确实不希望有适当的参考，但我们想告知

00:50:29.380 --> 00:50:33.760
或销毁这一项权利，我认为这是关键，就像我们不是

00:50:33.760 --> 00:50:37.630
不会像那样定义合同接口，但是我们想

00:50:37.630 --> 00:50:41.410
了解你们是如何建立那些测试的，尤其是在

00:50:41.410 --> 00:50:44.950
打包经理，因为我已经看到您已经在此方面取得了进展，所以

00:50:44.950 --> 00:50:48.700
了解高端您如何构建它们以及我们如何制造它们会很酷

00:50:48.700 --> 00:50:53.560
这时您很容易说我们正在将设计概念化为

00:50:53.560 --> 00:50:58.240
一旦我们有了相应的菜单，一旦我们有了这些菜单，就可以立即集成这些测试

00:50:58.240 --> 00:51:02.140
有一个容器，我们要如何继续才能看起来像

00:51:02.140 --> 00:51:08.079
他们能够进行市场测试，并且在网关方面

00:51:08.079 --> 00:51:13.299
就像我看到的同一件事是，该测试管道将

00:51:13.299 --> 00:51:17.859
协调器是正确的，所以1点将有一个提交，这将是一个夜晚

00:51:17.859 --> 00:51:23.470
我，这将是一个时间表，它将在empro的某处触发工作

00:51:23.470 --> 00:51:28.299
一旦承诺在特定的生命周期内就将部署

00:51:28.299 --> 00:51:33.430
无论我们想要什么，以及什么时候完成探测，都要花费48小时

00:51:33.430 --> 00:51:39.460
右边，我们提取所有指标，并在短划线右边显示它们，或者

00:51:39.460 --> 00:51:44.829
这是连续不断的，所以我的意思是我认为我们还有Z说钱了，我们

00:51:44.829 --> 00:51:48.579
有两个层面，我们应该已经开始进行对话，以便

00:51:48.579 --> 00:51:52.660
我们进行构建，以便您知道它们可以容纳的水平平台

00:51:52.660 --> 00:51:58.150
所有这些我们都在设计中考虑了我们，而没有妨碍这项权利

00:51:58.150 --> 00:52:05.380
所以您对此感觉如何我认为设计对话

00:52:05.380 --> 00:52:10.869
通知未来的迭代在像艾伦这样的情况下似乎真的很不错

00:52:10.869 --> 00:52:14.920
Stephen和true或包装经理团队中的其他人

00:52:14.920 --> 00:52:19.900
进行基准测试，或者像伟大的人物一样听取采访

00:52:19.900 --> 00:52:23.200
我们的需求和用例可能是雨果（Hugo）以及喜欢创建和

00:52:23.200 --> 00:52:27.339
已经在该工具中编写了基准测试，如果你们两个都在做

00:52:27.339 --> 00:52:31.509
进行面谈以告知设计工作很有意义，但是

00:52:31.509 --> 00:52:36.999
在战术上使用已经存在的现有基准基础架构

00:52:36.999 --> 00:52:40.630
跑步意味着要做到这一点，以便这些团体可以继续前进，而无需

00:52:40.630 --> 00:52:45.970
阻止你们，甚至对他们更好，他们不会投资我不

00:52:45.970 --> 00:52:50.319
在这一点上，要花很多时间来创造像你一样的眼睛和幻想者

00:52:50.319 --> 00:52:54.339
假设这个基准

00:52:54.339 --> 00:52:58.630
现在我们的用例已经足够好了，这听起来可以解决所有问题

00:52:58.630 --> 00:53:03.670
我们希望通过TBD了解基准的一些事情，无论格里芬

00:53:03.670 --> 00:53:07.269
会让我们尽可能轻松地做到这一点，那已经是

00:53:07.269 --> 00:53:12.039
以您可能喜欢的酷炫的格式，现在它也存在于这个奇妙的事物中

00:53:12.039 --> 00:53:18.010
统一的测试管道，节省了块依赖的工作

00:53:18.010 --> 00:53:26.760
这些努力达到了我的两个目标，总有iframe

00:53:26.760 --> 00:53:33.700
总是有iframe，是的，我一直向下按，所以

00:53:33.700 --> 00:53:40.810
阐明这两种类似的工作方式，即使用和适应

00:53:40.810 --> 00:53:47.349
并针对我们想要的用例采用Jas基准

00:53:47.349 --> 00:53:51.280
想要运行并尝试将EJ倡导者作为基准来覆盖

00:53:51.280 --> 00:53:57.190
最小的事情将变成一个块的想法，festivai DFS版本知道

00:53:57.190 --> 00:54:03.970
谁将领导这样的特殊努力，看起来就是这个艾伦

00:54:03.970 --> 00:54:09.970
你有带宽吗？或者是吉姆，我真的不建议

00:54:09.970 --> 00:54:14.050
有吸引力的基准测试是的，它们恰好也含着泪水运转

00:54:14.050 --> 00:54:21.460
亲爱的，我是说我打算在盘子上就像添加一堆

00:54:21.460 --> 00:54:27.310
基准，我想我正在做变焦，它变大了哦

00:54:27.310 --> 00:54:32.320
是的，所以我这次会议的收获是我会花一些时间

00:54:32.320 --> 00:54:38.680
时间使此less.js成为焦点，使更多的焦点成为焦点，但将其带到

00:54:38.680 --> 00:54:44.080
相同的级别，所以这不仅仅是Jess的事情，我可能需要一些帮助

00:54:44.080 --> 00:54:51.370
这样，是的，我喜欢我没有很多时间去做，甚至更少

00:54:51.370 --> 00:54:56.770
在这个特殊的时期，我有一个婴儿即将来临，我会继续

00:54:56.770 --> 00:55:04.240
陪产假，这也占用了我的大部分时间，所以我会做我会做的

00:55:04.240 --> 00:55:11.530
可以，但是就像我说的那样，可能会有一个很小的三角洲

00:55:11.530 --> 00:55:17.080
如果可以得到三角洲，这对去也很有用

00:55:17.080 --> 00:55:20.410
易于进行围棋测试，我可以使所有测试实际上都已经发生

00:55:20.410 --> 00:55:29.980
对我们采取行动，所以我也在看kubernetes

00:55:29.980 --> 00:55:34.240
 ipfs repo也有很多测试套件，他们编写了测试

00:55:34.240 --> 00:55:40.090
DSL中的套件是基于游戏的，我的意思是如果您做类似的事情

00:55:40.090 --> 00:55:43.480
不管是GS还是去cuz都不用写任何一个都没关系

00:55:43.480 --> 00:55:48.810
那些我想知道我不知道是否值得重复使用，但是像那样

00:55:48.810 --> 00:55:54.100
就像我知道的那样，我所谈论的角色是谈论一些DSL。

00:55:54.100 --> 00:55:58.690
以便更轻松地编写更高级别的测试，因此对于部署我

00:55:58.690 --> 00:56:02.350
认为在测试套件方面有意义，我们的大多数测试都是实际的

00:56:02.350 --> 00:56:06.730
无论如何，你们没什么关系，就像我们有

00:56:06.730 --> 00:56:11.760
我们的客户就像跟长官说话

00:56:15.050 --> 00:56:19.530
所以我在想某些安装在软件包上的测试将是shell脚本

00:56:19.530 --> 00:56:27.750
因为他们将拥有SAP并可能会导入一些真实数据

00:56:27.750 --> 00:56:33.030
可以用go编写它们，但是shell脚本感觉有点多，并且如果端口球

00:56:33.030 --> 00:56:39.360
可能会更长寿，或者至少会有更多人可以选择

00:56:39.360 --> 00:56:45.150
将它们安装起来并使用它们，但我认为测试没什么大不了

00:56:45.150 --> 00:56:50.700
环境可以是Linux，所以Jeske的运气可以称得上是您知道的Jeske年

00:56:50.700 --> 00:56:54.710
医院有称为球壳脚本的球菌

00:56:55.570 --> 00:57:00.290
而您只是Allen在

00:57:00.290 --> 00:57:04.760
开始，这使我的包管理器至少需要两种

00:57:04.760 --> 00:57:10.820
畅通运行诸如架构和种类之类的东西的迭代

00:57:10.820 --> 00:57:16.220
反馈循环，但实际上也可以在本地运行它们

00:57:16.220 --> 00:57:21.350
很有帮助，因为我们知道在我们喜欢的那一刻我们正在担心

00:57:21.350 --> 00:57:24.980
关于您的主人正在发生什么以及如何影响主人

00:57:24.980 --> 00:57:30.260
例如，当您了解此事是否需要半小时才能在计算机上运行时

00:57:30.260 --> 00:57:34.190
我想定期在分支上进行更改，看看正在做什么，因为

00:57:34.190 --> 00:57:39.080
对于开发人员来说，运行它并随后制作一个

00:57:39.080 --> 00:57:43.510
咖啡，如果我们现在有种东西

00:57:45.740 --> 00:57:52.790
我接到另一个电话，希望对您有帮助。

00:57:52.790 --> 00:57:57.290
演示人员感谢您的讨论，我想我们让我们想起我们的AI

00:57:57.290 --> 00:58:02.089
我们的目标是在本周末之前完善这份文件，以便我们继续

00:58:02.089 --> 00:58:06.530
用它作为基准的历史真相，我认为这

00:58:06.530 --> 00:58:11.810
对话可以访问，因此我想使其可以访问，并且

00:58:11.810 --> 00:58:15.859
可访问文档，因为它是非常有用的数据，因此我将尽力

00:58:15.859 --> 00:58:19.490
实际上，史蒂文·我意识到我已经不能再睁大眼睛了，因为我掉了

00:58:19.490 --> 00:58:24.109
他们史蒂文或艾伦，或者有人可以贴上这份文件的内容

00:58:24.109 --> 00:58:28.760
有用的地方和github，以便其他人可以找到它并添加到

00:58:28.760 --> 00:58:33.530
随着时间的流逝，也许是每到最后期限我们就要结束时，你们

00:58:33.530 --> 00:58:37.900
将Google文档纳入其中

00:58:40.320 --> 00:58:43.580
感谢你们

