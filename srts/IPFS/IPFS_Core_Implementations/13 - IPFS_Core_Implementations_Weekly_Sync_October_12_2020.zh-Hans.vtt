WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.799 --> 00:00:04.880
大家好，欢迎来到星期一每周同步的第一个核心实现

00:00:04.880 --> 00:00:08.800
2020年10月12日。呃，我是艾肯的大脑，我将成为您的房东

00:00:08.800 --> 00:00:12.000
我们将要通过我们的高优先级举措，现在其他

00:00:12.000 --> 00:00:15.120
倡议，然后问停车场质量保证

00:00:15.120 --> 00:00:19.359
所有这些好东西，所以让我们开始吧，我们将谈论即将到来的

00:00:19.359 --> 00:00:23.680
船舶发布，那么即将发生什么

00:00:29.599 --> 00:00:36.880
嗯，去ipfs仍在进行中rc rc还没有rc

00:00:36.880 --> 00:00:40.239
固定服务事物等即将出现

00:00:40.239 --> 00:00:46.719
接下来我们要谈论的是不可思议的

00:00:46.719 --> 00:00:53.039
一个json以前的版本，我现在想全职工作

00:00:53.039 --> 00:00:57.680
通过他的电话获得伊拉克的打字稿资料

00:00:57.680 --> 00:01:00.960
嗯，到那一刻结束，我们将发布一个发行版，其中包括

00:01:00.960 --> 00:01:05.199
弃用也不会消除世俗

00:01:05.199 --> 00:01:08.799
嗯，所以希望这个星期能起来

00:01:09.920 --> 00:01:17.200
列表上的下一个是固定服务，我们无法谈论，是的，嗯

00:01:17.200 --> 00:01:23.840
所以呃sharna的测试很有趣，但不是不是真的

00:01:23.840 --> 00:01:27.280
sharna对正在运行的容器的测试，您可以拥有其他docker容器

00:01:27.280 --> 00:01:30.400
跟他们说话，因为圈子不允许你

00:01:30.400 --> 00:01:36.479
在主要呃中运行Docker容器或让您附加到远程服务

00:01:36.479 --> 00:01:41.680
从主容器也很有趣，所以卡塔尔正在工作

00:01:41.680 --> 00:01:46.320
通过那个嗯，我们将得到这个平方

00:01:46.320 --> 00:01:51.680
这个星期以一种或另一种方式，例如，花费大量时间尝试

00:01:51.680 --> 00:01:55.360
使自动测试运行固定服务的东西仅仅是

00:01:55.360 --> 00:01:59.040
嗯，太累了，我们有其他事情要做

00:01:59.040 --> 00:02:04.960
嗯，我们开会开会讨论本地和

00:02:04.960 --> 00:02:09.360
像cli和http api这样的远程固定

00:02:09.360 --> 00:02:16.480
嗯，我在其中放置了一个链接，其中包含我对我所总结的结论的摘要

00:02:16.480 --> 00:02:19.920
我们的结论在哪里

00:02:19.920 --> 00:02:23.440
雅各布和莱特尔已经评论了，这非常有帮助

00:02:23.440 --> 00:02:27.040
我仍然必须对他们非常有帮助的评论做出回应

00:02:27.040 --> 00:02:33.760
呃，如果您对此有兴趣，那么这些新的pin api东西应该是什么

00:02:33.760 --> 00:02:38.480
看起来，以及我们将如何努力推动两者之间的趋同

00:02:38.480 --> 00:02:45.040
远程和本地api，请看一下um alex您的

00:02:45.040 --> 00:02:48.959
嗯，输入也将受到赞赏，因为js可能想做点什么

00:02:48.959 --> 00:02:54.570
类似的，这也将建立我们的

00:02:54.570 --> 00:02:59.680
[掌声]安德鲁开始工作时取得成功

00:02:59.680 --> 00:03:04.720
在数据存储中进行本地固定

00:03:04.720 --> 00:03:09.410
去ipfs以及如何使这一切更容易

00:03:09.410 --> 00:03:14.000
[音乐]，这是待处理的服务

00:03:14.640 --> 00:03:18.560
接下来是secio移除，我想我也可以接受

00:03:18.560 --> 00:03:22.400
嗯，雅各布博客帖子明天就出来了

00:03:22.400 --> 00:03:25.680
是的，我需要完成编写并竖起大拇指

00:03:25.680 --> 00:03:29.280
对于人们来说，也许是星期三早些时候，但肯定是的

00:03:29.280 --> 00:03:33.599
尝试为明天而努力

00:03:33.599 --> 00:03:37.599
然后，我们将对着弓箭开一枪

00:03:37.599 --> 00:03:40.879
就像在引导节点上关闭sekio一样

00:03:40.879 --> 00:03:44.879
看看是否有人没有读过他们的

00:03:44.879 --> 00:03:50.799
他们知道吗github twitter在我们去过的任何地方讨论

00:03:50.799 --> 00:03:55.120
对他们大喊大叫安全撤除，然后我们将遭受大量洪灾

00:03:55.120 --> 00:03:59.439
就像嘿，我的节点停止工作，然后我们会说声嗨，您的

00:03:59.439 --> 00:04:02.799
请注意，就像您认识一岁以上的孩子一样

00:04:02.799 --> 00:04:06.480
更新，我们发誓是有充分理由的

00:04:06.480 --> 00:04:10.400
这是一篇博客文章，其中说明了我们为什么要这样做

00:04:10.400 --> 00:04:14.319
然后像这样离开一两天后，我们将其旋转

00:04:14.319 --> 00:04:17.840
将其重新打开一会儿，以帮助那些

00:04:17.840 --> 00:04:23.440
你们知道的人能够进行较慢的更新

00:04:24.240 --> 00:04:30.960
嗯，我想与sec oil uh andrew nesbitt uh有关

00:04:30.960 --> 00:04:38.080
正在对dht做一些呃分析

00:04:38.080 --> 00:04:42.000
谁在运行这些旧节点，以便我们也许可以与它们通信

00:04:42.000 --> 00:04:48.479
并帮助找出帮助他们找出我们如何帮助他们升级

00:04:48.479 --> 00:04:53.840
那就是正在进行中，这使我们受益匪浅

00:04:53.840 --> 00:04:59.919
更好的dht爬行内容[音乐]

00:04:59.919 --> 00:05:03.919
我喜欢，也许我们可以运送我的覆盆子堆和

00:05:03.919 --> 00:05:08.960
接下来停止使用此旧软件是rust类型的反向主动

00:05:08.960 --> 00:05:14.320
我没有看到锈团队的任何人

00:05:15.840 --> 00:05:20.080
我认为我们要从清单中删除，因为其中不会有任何更新

00:05:20.080 --> 00:05:23.120
可预见的未来

00:05:23.520 --> 00:05:29.360
好吧，听起来不错，接下来是jsonpro的可发现性

00:05:29.360 --> 00:05:35.280
和连接性，是的，所以我打开的公关

00:05:35.280 --> 00:05:40.880
上周基本上已经合并了，现在我们可以找到远程实现

00:05:40.880 --> 00:05:48.479
在网络上使用内容路由uh，这正在合并0.30

00:05:48.479 --> 00:05:53.520
即将发布的版本以及完成外部中继内容的分支

00:05:53.520 --> 00:05:57.680
我本周将处理自定义宣布的过滤器功能

00:05:57.680 --> 00:06:01.199
还有一个分拣机，以便我们

00:06:01.199 --> 00:06:08.000
例如，订购拨号盘，我们要首先访问公用地址，然后

00:06:08.000 --> 00:06:10.479
在去私人餐厅之前先尝试一下

00:06:10.479 --> 00:06:14.639
我希望本周能完成该工作，因为

00:06:14.639 --> 00:06:21.840
下周我会出去的，是的

00:06:22.000 --> 00:06:26.400
甜蜜使我们走到了高潮的尽头

00:06:26.400 --> 00:06:29.440
优先计划转移到其他计划

00:06:29.440 --> 00:06:37.919
首先是改善Web ui文件，嗯，所以我在列表上没有

00:06:37.919 --> 00:06:40.240
笔记，但是呃，有一整堆

00:06:40.240 --> 00:06:46.080
嗯，要进来吧，我从亚历克斯那里得到了一些评论，我需要

00:06:46.080 --> 00:06:51.120
要继续跟进，我认为某些补丁需要升级，因为事情

00:06:51.120 --> 00:06:53.440
已经登陆，现在他们合并了冲突

00:06:53.440 --> 00:06:56.639
因为上周五所有的东西都是绿色的

00:06:56.639 --> 00:07:02.400
所以我想希望很快记住什么

00:07:02.400 --> 00:07:06.800
下一个也是我的，这是打字稿集成um

00:07:06.800 --> 00:07:10.880
所以上周我更新了所有的或者我猜一个拉请求

00:07:10.880 --> 00:07:16.560
呃，我从亚历克斯那里得到了另一条评论，我只是在跟进，所以之后

00:07:16.560 --> 00:07:18.960
这次电话，我将提交要求的更改

00:07:18.960 --> 00:07:22.479
所以希望我们很快就可以降落

00:07:22.479 --> 00:07:26.319
它是如此之近，如果您有一个

00:07:26.319 --> 00:07:29.120
通话后几分钟，这将对您有很大帮助

00:07:29.120 --> 00:07:33.360
同步一些尚不清楚的事情

00:07:33.360 --> 00:07:36.080
是的没问题

00:07:37.759 --> 00:07:40.880
恩，接下来将npn rpfs更新为最新的恩

00:07:40.880 --> 00:07:47.280
没有关于此update的更新以支持

00:07:47.919 --> 00:07:52.639
好的，所以我们网站上所有实际支持工作都已经完成了

00:07:52.639 --> 00:07:55.199
而不是确保我们已将依赖项更新为

00:07:55.199 --> 00:08:00.240
我们决定采用的解决方案以及我们需要的一些修复程序

00:08:00.240 --> 00:08:04.400
r尚未被发布到实际版本中，所以我们需要

00:08:04.400 --> 00:08:07.840
决定我们是否要等待发布，还是要与某人一起出去

00:08:07.840 --> 00:08:10.560
承诺，他们可能会有一些

00:08:10.560 --> 00:08:13.840
我们需要注意的其他重大更改

00:08:13.840 --> 00:08:19.440
嗯，基本上我们需要决定我们想要什么，什么时候想要

00:08:19.440 --> 00:08:22.960
否则要使用特定的badge版本

00:08:22.960 --> 00:08:25.199
我们很高兴被带入了另一件事

00:08:25.199 --> 00:08:28.960
r 2的更改是对批处理的支持，因此我们不再

00:08:28.960 --> 00:08:31.440
限于单笔交易的限制

00:08:31.440 --> 00:08:36.080
获得大量版权，这是我们会与之相处的

00:08:36.080 --> 00:08:42.640
此更新与badge 2支持并不特别相关，但

00:08:42.640 --> 00:08:48.560
它将同时出现在um和badge 2上。

00:08:53.279 --> 00:08:55.839
惊人的

00:08:57.200 --> 00:09:00.480
dns无法解决爵士乐是接下来的事情

00:09:00.480 --> 00:09:05.839
是的，所以michael正在尝试为Infra和js做一些不错的事情

00:09:05.839 --> 00:09:10.720
使得此操作变得更加困难，因为我们没有dns的分辨率

00:09:10.720 --> 00:09:14.720
然后那连串的事件简直糟透了

00:09:14.720 --> 00:09:18.959
所以通常我们的文本记录包含IP地址

00:09:18.959 --> 00:09:22.640
因此，如果您递归查找dns地址，您将获得的IP地址。

00:09:22.640 --> 00:09:25.760
 websockets出现问题的节点，以及

00:09:25.760 --> 00:09:29.040
webrtc之星，因为我们必须保留dns名称

00:09:29.040 --> 00:09:32.399
因此，我们需要修复大量记录

00:09:32.399 --> 00:09:36.959
因此dns加法器记录了michael的工作

00:09:36.959 --> 00:09:40.720
最终应该有快速的或我认为他们已经有快速的

00:09:40.720 --> 00:09:45.200
IP地址，然后最终将有websockets

00:09:45.200 --> 00:09:49.519
 websocket安全地址中的dns地址

00:09:49.519 --> 00:09:53.440
所以我们正在努力添加这些，然后boshko正在研究实际的

00:09:53.440 --> 00:09:57.440
解析器um，以便我们可以确保我们可以

00:09:57.440 --> 00:10:00.880
动态地只是指向bootstrap libidbio

00:10:00.880 --> 00:10:05.519
并获取引导程序地址，而不是对那里的那些人进行硬编码

00:10:05.519 --> 00:10:09.680
所以这是一个过程，但由于本周的所有工作，它正在本周发生

00:10:09.680 --> 00:10:12.959
foshko和michael在那

00:10:16.480 --> 00:10:20.079
就是其他倡议了，所以设计评审提案

00:10:20.079 --> 00:10:23.680
任何人都想把他们的想法放入股票中并拥有

00:10:23.680 --> 00:10:26.959
一分钟发霉的蔬菜

00:10:28.480 --> 00:10:35.360
我的意思是说，还不如那个好拦截器好问

00:10:36.800 --> 00:10:40.880
问题我有一个问题，谁控制数目

00:10:40.880 --> 00:10:48.160
特拉维斯赛跑者，我们确切地拥有任何人

00:10:48.160 --> 00:10:51.120
好吧，您也不必牺牲山羊，我也不想牺牲

00:10:51.120 --> 00:10:54.240
错误的神，这将是一场灾难，另外一些人将工作，这将是

00:10:54.240 --> 00:11:00.240
糟糕，我现在花了更快的速度

00:11:00.240 --> 00:11:03.519
最长的工作需要15分钟，并且所有内容并行运行

00:11:03.519 --> 00:11:07.920
嗯，所以如果我们可以全部运行它们，整个构建将花费15分钟

00:11:07.920 --> 00:11:10.240
同时需要更多的跑步者

00:11:10.240 --> 00:11:13.360
当您考虑不久前的jsi之前，这就是傻瓜

00:11:13.360 --> 00:11:17.600
建了两个小时，现在需要15分钟

00:11:17.600 --> 00:11:20.959
但是它需要更多的跑步者才能使它并行化

00:11:20.959 --> 00:11:24.959
你不是在嘲笑教务长，这就像在运行http一样，正在测试中

00:11:24.959 --> 00:11:27.440
客户反对，所以我们知道您何时突破我们

00:11:27.440 --> 00:11:34.959
通过http哦，是的，那是很长的时间

00:11:34.959 --> 00:11:38.640
是的，迈克是那个

00:11:38.959 --> 00:11:45.040
这是迈克尔·乌姆，不，不，不，乌姆，我只是想问问

00:11:45.040 --> 00:11:48.880
你需要并行吗？我的意思是说你想要多少负载

00:11:48.880 --> 00:11:52.639
运行正确，因为很明显，如果有人运行pr，那么它将运行的负载

00:11:52.639 --> 00:11:58.399
以及工作，我只是想知道我们是否可以

00:11:58.399 --> 00:12:00.880
得到一个，因为我们正在进行长时间的讨论

00:12:00.880 --> 00:12:03.920
在那个地方，那是不会很快结束的，但是基本上

00:12:03.920 --> 00:12:08.240
将所有内容都移到行动上，并尝试进一步标准化

00:12:08.240 --> 00:12:10.079
特别是构建和测试基础架构

00:12:10.079 --> 00:12:14.079
嗯，这就像长期的事情

00:12:14.079 --> 00:12:17.360
嗯，但这可能是我们研究过的东西，但是它会起作用，所以我

00:12:17.360 --> 00:12:19.360
我真的很想了解有多少个相似之处

00:12:19.360 --> 00:12:22.079
我们需要，因为那里免费提供的东西有限，但我认为

00:12:22.079 --> 00:12:23.920
我们可以给他们一些钱，然后我们将

00:12:23.920 --> 00:12:28.480
得到更多，所以我们通常只是在使travis工作

00:12:28.480 --> 00:12:31.120
它几乎可以正常工作，唯一不起作用的是

00:12:31.120 --> 00:12:33.200
它需要更多的跑步者，所以我宁愿

00:12:33.200 --> 00:12:36.240
只是增加跑步人数

00:12:37.120 --> 00:12:41.519
不，不，不，我不知道，是的，是的，现在我绝对是你应该做的

00:12:41.519 --> 00:12:44.399
只是说未来像我想了解

00:12:44.399 --> 00:12:47.519
您需要多少，以便我们进行重构时考虑到

00:12:47.519 --> 00:12:50.959
这是星期四的要求之一，我就像

00:12:50.959 --> 00:12:55.200
我的一周还没有那么痛苦，你知道我现在很忙

00:12:55.200 --> 00:12:57.760
抱歉

00:13:01.279 --> 00:13:06.000
烧伤，对不起，我可以看一看，这可能是安迪

00:13:06.000 --> 00:13:09.839
谁有权限，但我可以拉那个线，我会给你所有的

00:13:09.839 --> 00:13:14.639
跑步者，我可以在离线时实现惊人的效果，这非常棒

00:13:14.639 --> 00:13:20.160
嗯，还有其他问题吗？

00:13:20.160 --> 00:13:24.480
他在这里ipld上有任何二进制文件吗

00:13:24.480 --> 00:13:29.839
ipld团队拥有他们在ci中运行的任何二进制文件

00:13:30.880 --> 00:13:34.079
这是一个很好的问题，我不太了解答案

00:13:34.079 --> 00:13:37.760
嗯，可能很快就会改变，但我会问

00:13:37.760 --> 00:13:41.760
丹尼尔（daniel）和艾瑞克（eric），以及是否有任何特殊原因

00:13:41.760 --> 00:13:45.040
你为什么要问我也要浮出水面，以便他们可以确保

00:13:45.040 --> 00:13:48.160
最后是他们正在做的事情，实际上是在丹尼尔的盘子上

00:13:48.160 --> 00:13:50.240
认为这是他的一件事

00:13:50.240 --> 00:13:54.639
四分之一的工作，所以我问的原因主要是

00:13:54.639 --> 00:13:59.519
主要是因为我们的圈子ci

00:13:59.519 --> 00:14:06.880
 Orb在不使用ipfs的二进制文件中的播放效果不是很好

00:14:06.880 --> 00:14:11.440
um库都很好，但是因为插件周围有魔术般的恶作剧

00:14:11.440 --> 00:14:15.360
好像不是，这确实引起了一些问题

00:14:15.360 --> 00:14:19.199
ipfs二进制文件，虽然我可以，但我们可以修复

00:14:19.199 --> 00:14:24.160
并与之一起经历所有的

00:14:24.160 --> 00:14:30.079
所有bash脚本黑客都需要呃，如果我已经采取了一项行动，

00:14:30.079 --> 00:14:34.720
可以为现有的go部署ipa

00:14:34.720 --> 00:14:39.279
二进制文件会更容易哦，是的，这就像发生了

00:14:39.279 --> 00:14:42.880
嗯，我的意思是运行go的当前github动作

00:14:42.880 --> 00:14:45.680
丹尼尔（Daniel）撰写的程序就像在市场上一样

00:14:45.680 --> 00:14:50.160
他就像他实际上在github上和几个人在一起

00:14:50.160 --> 00:14:53.839
谁喜欢采取行动来解决他所有的围棋相关问题

00:14:53.839 --> 00:14:57.279
嗯，所以你知道在这口井结束时我们会得到什么

00:14:57.279 --> 00:15:00.399
我想象会是那样的简单和整合

00:15:00.399 --> 00:15:03.120
好酷

00:15:07.120 --> 00:15:12.000
在这种情况下，我们正在构建一个爬虫，该爬虫是一个二进制文件

00:15:12.000 --> 00:15:17.040
想要确保二进制文件能够生成，并且您知道该怎么做

00:15:17.040 --> 00:15:20.240
哦，你要在动作中运行爬虫吗

00:15:20.240 --> 00:15:24.639
不，我认为那太过分了，我的意思是那很酷，但我认为

00:15:24.639 --> 00:15:29.199
也太夸张了，跑皇冠真的很容易而且很有趣

00:15:29.199 --> 00:15:32.240
工作动作github就像为您付费运行

00:15:32.240 --> 00:15:41.839
云爬虫的工作真是太神奇了

00:15:42.079 --> 00:15:45.680
很酷，还有其他问题吗

00:15:48.320 --> 00:15:51.519
不，让我继续前进到停车场，呃，我看到了

00:15:51.519 --> 00:15:57.120
关于ipld的事情，我不再做okr了

00:15:58.720 --> 00:16:01.279
是的，我的意思是

00:16:02.650 --> 00:16:05.870
[音乐]

00:16:06.240 --> 00:16:10.240
那种很好的东西，所以我们借此机会思考

00:16:10.240 --> 00:16:14.880
就像总体上更适合我们的工作方式一样，

00:16:14.880 --> 00:16:19.360
展示我们所做的事情，所有这些都非常像okr

00:16:19.360 --> 00:16:23.120
过程有点像它的两个方面之一，那就是我们沟通的方式

00:16:23.120 --> 00:16:26.160
与组织的其余部分以及外部有关的一堆东西

00:16:26.160 --> 00:16:28.160
发生，然后这也是我们的方式

00:16:28.160 --> 00:16:31.920
规划，而ipld从未如此规划我们

00:16:31.920 --> 00:16:35.040
我们通常比正常流程更敏捷一些

00:16:35.040 --> 00:16:39.199
如果需要的话，我们会像每周一样改变优先级

00:16:39.199 --> 00:16:42.320
进来是高优先级的um，所以事情会稍微移动

00:16:42.320 --> 00:16:44.959
多一点，我们希望保持一点流畅

00:16:44.959 --> 00:16:48.399
嗯，是的，我们要做的是提出了本季度的主题

00:16:48.399 --> 00:16:51.600
这是针对项目的um协议，我们正在尝试

00:16:51.600 --> 00:16:54.720
比过去更多地关注协议方面

00:16:54.720 --> 00:16:57.759
嗯，所以在团队管理页面上有关于它的文章，但是

00:16:57.759 --> 00:17:00.240
现在每个人的这个非常酷的清单

00:17:00.240 --> 00:17:03.920
在我们的团队中，然后是他们的每个优先事项

00:17:03.920 --> 00:17:07.120
有一个季度，所以你知道他们正在做什么

00:17:07.120 --> 00:17:10.079
现在，如果有什么事情发生，我们将

00:17:10.079 --> 00:17:13.039
在那碰到的那一天，我们将碰碰它，我们会说为什么会碰到它

00:17:13.039 --> 00:17:15.919
碰碰碰碰，我们会说像现在这样的人正在为此工作，因为它

00:17:15.919 --> 00:17:20.400
优先级更高，还有一件我们决定要做的事情

00:17:20.400 --> 00:17:23.280
在周期的后期，我们开始进行所有维护

00:17:23.280 --> 00:17:26.480
每个人都有的负担，因为我们觉得那真的不是

00:17:26.480 --> 00:17:31.200
被很好地捕获了，不是很好，所以我们开始了

00:17:31.200 --> 00:17:34.160
加上人们有什么不同的项目

00:17:34.160 --> 00:17:38.400
我们希望像您知道的那样不经常维护，但是

00:17:38.400 --> 00:17:42.320
因此，他们在时间上的负担比较频繁，所以我

00:17:42.320 --> 00:17:44.320
现在不知道你对什么有所了解

00:17:44.320 --> 00:17:48.720
我们会每周更新一次，您可以在

00:17:48.720 --> 00:17:52.320
团队管理仓库中的自述文件，是的，如果

00:17:52.320 --> 00:17:54.880
这种格式，像um这样的人，我会鼓励您尝试

00:17:54.880 --> 00:17:58.240
如果你想要的话，类似的东西

00:17:58.720 --> 00:18:01.600
人们没有全面的流程和工作软件

00:18:01.600 --> 00:18:04.000
文档，我有一个清单，您可能想

00:18:04.000 --> 00:18:06.160
读

00:18:06.240 --> 00:18:09.760
所以q1是我们谈论的好时机

00:18:09.760 --> 00:18:17.120
刻录go ipldc战争，merkle dag和ipld格式

00:18:19.039 --> 00:18:24.080
您的刻录是什么意思？找到所有已安装的硬盘驱动器

00:18:24.080 --> 00:18:29.919
并擦拭它，可能会很棘手，因为您不只是循环

00:18:29.919 --> 00:18:34.160
就像2017年网络中的in ipfs实例一样。

00:18:34.160 --> 00:18:40.480
是的，是的，嗯，不，不，我想，就像

00:18:40.480 --> 00:18:45.520
看看何时您知道去脱皮的主要材料已经达到

00:18:45.520 --> 00:18:49.120
就像进入了一个成熟的新阶段一样，我们在上面做汉普顿adl的东西

00:18:49.120 --> 00:18:52.400
现在有一些文件硬币工作将要给我们

00:18:52.400 --> 00:18:55.760
大多数文件硬币数据结构的模式，因此我们将

00:18:55.760 --> 00:18:59.440
我们将在全球黄金市场拥有一个非常新的成熟水平

00:18:59.440 --> 00:19:02.160
就像这个季度，所以如果你那一刻

00:19:02.160 --> 00:19:05.120
迁移到它，我们可以停止维护旧的

00:19:05.120 --> 00:19:09.440
实际上，我们在um上封装了um和相同的东西，就像我们

00:19:09.440 --> 00:19:12.640
戈萨拉（Gozala）就像他的最后一轮修订一样完成了比赛，

00:19:12.640 --> 00:19:15.840
我刚刚结束了一些项目，以使用所有新的原语，以便

00:19:15.840 --> 00:19:18.480
我正在测试它们，并在之前进行一些调整

00:19:18.480 --> 00:19:22.480
提倡其他人使用它们，但我们真的很喜欢那边

00:19:22.480 --> 00:19:25.200
也可以只换掉

00:19:25.200 --> 00:19:29.200
现在，嗯，一旦您知道ipfs不再依赖旧版本

00:19:29.200 --> 00:19:32.240
api了，我们可以像我们一样弃用它们

00:19:32.240 --> 00:19:35.440
我们已经很不喜欢碰他们了，但是我们

00:19:35.440 --> 00:19:38.880
之所以这样做，是因为他们非常依赖

00:19:38.880 --> 00:19:42.240
但是，是的，我的意思是周期比起我们，我们更依赖于您，而不是依赖于我们

00:19:42.240 --> 00:19:45.120
我们的观点是，只要您使用它，我们就必须予以支持

00:19:45.120 --> 00:19:48.880
如果您停止使用它，那么这就是我们支持周期的终点

00:19:48.880 --> 00:19:53.919
我们很担心，我很乐意为您提供一些帮助

00:19:53.919 --> 00:19:57.200
对您的新api很有用，它

00:19:57.200 --> 00:20:01.919
这也意味着您可以停止支持自己的产品了，是的，嗯，

00:20:01.919 --> 00:20:06.080
还可以吧，深度树刚要走

00:20:06.080 --> 00:20:08.720
使您变得更小

00:20:08.720 --> 00:20:12.320
我的意思是，新的dag pb放弃了所有的protoboss

00:20:12.320 --> 00:20:15.520
就像我们实际上不再引入任何protobuf配音树一样

00:20:15.520 --> 00:20:20.080
嗯，实际上Rod正在研究native.js的新dagg海滨，所以

00:20:20.080 --> 00:20:22.640
这将做同样的事情，并删除所有这些本机工作库，

00:20:22.640 --> 00:20:26.080
一切都那么嗯，是的，将会有一个巨大的

00:20:26.080 --> 00:20:29.440
我知道有很多改进，就像罗克利（Rockley）一样，

00:20:29.440 --> 00:20:32.640
比我多得多，他在ipfs代码库中花费了更多时间，因为他

00:20:32.640 --> 00:20:35.600
通过所有这些工作，他需要进行许多此类升级，

00:20:35.600 --> 00:20:38.960
他的事情也发生了，所以我认为这只是三个中的一种

00:20:38.960 --> 00:20:40.799
我们当中的人应该协调并弄清楚

00:20:40.799 --> 00:20:43.440
就像那里有什么战略一样，因为是的，我们不介意

00:20:43.440 --> 00:20:46.640
参与其中，但又像我们对代码库的熟悉一样，

00:20:46.640 --> 00:20:48.960
有点低落，就像每次我必须跳进去一样

00:20:48.960 --> 00:20:55.280
我就像在哪里，所以这总是一个挑战

00:20:55.280 --> 00:21:02.159
是的，在旅途中像我一样快乐，一旦odot出去

00:21:02.159 --> 00:21:05.520
开始看起来有点像开始搬到一些

00:21:05.520 --> 00:21:11.760
较新的go ipld库，但是我最近与它们的交互

00:21:11.760 --> 00:21:16.559
仍然需要一点点了解事情的进展

00:21:16.559 --> 00:21:22.880
为了最佳地使用它们，如果我想交出

00:21:22.880 --> 00:21:26.799
就像这里的接口是必需的遍历接口

00:21:26.799 --> 00:21:31.280
这就是我需要从dagpb或您那里得到的东西，或者这就是我从

00:21:31.280 --> 00:21:35.919
Unix fs接口，并喜欢用

00:21:35.919 --> 00:21:39.840
无论你想要那样，我认为那将是

00:21:39.840 --> 00:21:43.520
强调类似接口的好方法是

00:21:43.520 --> 00:21:47.760
实际上是在做ipld库

00:21:47.760 --> 00:21:51.280
以他们希望他们可用的方式使用

00:21:51.280 --> 00:21:54.320
是的，我的意思是我认为我们将不得不

00:21:54.320 --> 00:21:58.720
在这里深入研究细节，因为

00:21:58.720 --> 00:22:01.120
我的意思是，当您使用它们时，可能没有

00:22:01.120 --> 00:22:04.400
文档要么很喜欢，但是您必须真正知道

00:22:04.400 --> 00:22:06.559
它们是如何工作的，您可能真的想像您一样仔细阅读了代码

00:22:06.559 --> 00:22:09.600
弄清楚如何使用它，就像那样，绝对是

00:22:09.600 --> 00:22:12.000
改变嗯，因为就像有另一个人一样

00:22:12.000 --> 00:22:14.960
在使用该代码的团队中，然后喜欢随时随地对其进行记录，然后

00:22:14.960 --> 00:22:17.919
改善事情，我们有更多的例子

00:22:17.919 --> 00:22:20.640
库现在也正在使用它们，因此您可以像其他代码一样

00:22:20.640 --> 00:22:26.320
看看使用它，我认为虽然api和界面的方式

00:22:26.320 --> 00:22:30.400
结构化与旧系统有很大不同

00:22:30.400 --> 00:22:32.640
因此，在某种程度上，如果您

00:22:32.640 --> 00:22:36.000
如果您要迁移，如果您要迁移而又不想

00:22:36.000 --> 00:22:39.520
进行某种较大的重构，使其与新版本更加一致

00:22:39.520 --> 00:22:42.159
界面样式可能实际上是

00:22:42.159 --> 00:22:45.600
很难做到这一点，我们可能想看看的就像

00:22:45.600 --> 00:22:48.559
是否有一些我们放在其中的库使它成为

00:22:48.559 --> 00:22:50.960
有点容易，有某种实用程序库

00:22:50.960 --> 00:22:55.440
我们使用的还是um存在于另一个重构中

00:22:55.440 --> 00:22:58.960
ipfs想做的一些事情

00:22:58.960 --> 00:23:02.480
因此，在该重构中，您只需使其与我们的库更加一致即可

00:23:02.480 --> 00:23:05.120
嗯，我们有很多选择，您将不得不

00:23:05.120 --> 00:23:09.760
一点点地在pe的早期就挖掘出我所知道的代码

00:23:09.760 --> 00:23:12.640
埃里克（Eric）已经开始经历这种情况，只是看一下深度

00:23:12.640 --> 00:23:15.679
树，所有ipld库在哪里，它们如何交互以及您

00:23:15.679 --> 00:23:17.919
将不得不开始将它们分开

00:23:17.919 --> 00:23:22.480
嗯，我到了这样的地步，好了，我们准备好了

00:23:22.480 --> 00:23:25.440
事情发生了，然后所有优先事项都转移了，所有这些都没有发生

00:23:25.440 --> 00:23:28.640
所以我们需要回到那个地方

00:23:28.640 --> 00:23:32.080
但是我的意思是我们比以前有一个更好的选择

00:23:32.080 --> 00:23:35.360
嗯，那真的是个好消息，如果你是

00:23:35.360 --> 00:23:38.640
你不是在说要真正做到这一点，直到第一季度

00:23:38.640 --> 00:23:42.400
甚至比嗯好多了，因为我们现在正在做很多事情

00:23:42.400 --> 00:23:45.279
嗯和他们在一起

00:23:45.520 --> 00:23:51.360
是的，这对了解谢谢非常有帮助

00:23:51.360 --> 00:23:55.440
我认为这几乎给我们带来了时间，谢谢大家的光临

00:23:55.440 --> 00:23:59.440
嗯，这是ipfs与您的对峙，在星期一12日与您同步

00:23:59.440 --> 00:24:04.320
2020年10月，请填写您的异步更新，有些人这样做

00:24:04.320 --> 00:24:07.360
读他们，我最近一直在做，我非常

00:24:07.360 --> 00:24:10.000
顽皮的，我要再次开始做这件事，因为

00:24:10.000 --> 00:24:13.039
亚历克斯坏亚历克斯反正谢谢你的光临。

00:24:13.039 --> 00:24:16.400
为了安全起见，不要触摸您的脸，仍然有大流行发生

00:24:16.400 --> 00:24:22.799
再见，再见

