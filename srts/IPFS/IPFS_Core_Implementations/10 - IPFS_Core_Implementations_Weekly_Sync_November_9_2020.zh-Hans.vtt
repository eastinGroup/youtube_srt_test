WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.799 --> 00:00:05.200
大家好，欢迎来到周一每周进行的ipfs评分方向同步

00:00:05.200 --> 00:00:09.360
2020年11月9日。我是大脑，我将成为您的主人，我们将参加比赛

00:00:09.360 --> 00:00:12.080
高优先级举措的游戏其他

00:00:12.080 --> 00:00:15.679
倡议停车场质量保证问题将是惊人的

00:00:15.679 --> 00:00:19.840
我们将会度过一个愉快的时光，所以让我们从高优先级开始

00:00:19.840 --> 00:00:25.199
主动行动，第一件事即将到来，并且船舶发布热销中

00:00:25.199 --> 00:00:30.160
媒体，我看到有一个js p2p谁可以

00:00:30.160 --> 00:00:33.520
这只是一个补丁，但我想提一下，因为

00:00:33.520 --> 00:00:38.079
我们曾说过我们将以某种分辨率运送dns，我的意思是我说

00:00:38.079 --> 00:00:42.000
就像去年um和vashko终于为我发货了

00:00:42.000 --> 00:00:45.680
嗯，是的，我们终于有了dns的解决方案

00:00:45.680 --> 00:00:51.840
在js中，所以是的，所有这些都在那里

00:00:52.719 --> 00:00:57.199
嗯，还有一个P2P版本

00:00:57.199 --> 00:01:03.600
即将到来的考虑了golo p2p核心

00:01:03.600 --> 00:01:08.960
更改了流接口，所以对于一直想知道为什么的所有人

00:01:08.960 --> 00:01:14.240
go get会导致编译错误，因为goget只能获取最新版本的

00:01:14.240 --> 00:01:18.320
一切都没有携带任何版本

00:01:18.320 --> 00:01:24.799
这将不再是问题，而且您将拥有更好的流关闭

00:01:25.280 --> 00:01:32.000
令人惊叹的呃也在大约20分钟前发货了嗯js ipfs 52

00:01:32.000 --> 00:01:36.720
恩出去了，所以会采取恩p2p dna分辨率的东西

00:01:36.720 --> 00:01:39.600
很棒，它就在每个人的手中

00:01:39.600 --> 00:01:44.560
现在，嗯，值得注意的是，我们剥夺了

00:01:44.560 --> 00:01:48.079
就像任何不是ipod Codex的东西一样

00:01:48.079 --> 00:01:52.840
到出租车板上道格嗯铅或或嗯原始

00:01:52.840 --> 00:01:56.560
嗯，因为它们不是很常用，所以像

00:01:56.560 --> 00:02:00.159
嗯，比特币和zed缓存之类的东西

00:02:00.159 --> 00:02:03.360
我们把所有的东西都捆绑在一起

00:02:03.360 --> 00:02:06.399
总是与安装的节点捆绑在一起，就像它不在浏览器捆绑中一样

00:02:06.399 --> 00:02:10.560
嗯，这并不是说浏览器捆绑软件变小了，而是ipvs core之类的东西

00:02:10.560 --> 00:02:14.080
现在更小，安装更快捷，因此

00:02:14.080 --> 00:02:18.879
您知道每个人的ci都会感谢我们，这很酷，而且还修复了一些错误

00:02:18.879 --> 00:02:24.480
围绕着一个Docker容器以及其他一些零碎的东西，嗯，

00:02:24.480 --> 00:02:28.959
很酷，那是副教授

00:02:30.080 --> 00:02:35.440
其他任何我们要跟踪的内容我们是否要跟踪

00:02:35.440 --> 00:02:39.680
对于RC，我们认为我们本周实际上能够解决这个问题吗，呃，我

00:02:39.680 --> 00:02:44.400
希望一切都在最后阶段

00:02:44.400 --> 00:02:49.040
审查的评论，我认为固定服务的东西就像

00:02:49.040 --> 00:02:54.160
基本上在那里，我可能想翻过去再翻一点

00:02:54.160 --> 00:02:56.480
卧床检查几件事，但我认为

00:02:56.480 --> 00:03:01.760
我们基本上已经完成了，最后我检查了一下，就像添加了一些测试

00:03:01.760 --> 00:03:05.920
我认为安德鲁的东西也很好

00:03:05.920 --> 00:03:12.560
也许有一些ci斗争，但据我所知，结果

00:03:12.560 --> 00:03:15.920
那然后是的，那只是你知道的

00:03:15.920 --> 00:03:19.280
只是做一些额外的眼睛来看看

00:03:19.280 --> 00:03:22.720
但嗯，一切看起来都不错

00:03:22.720 --> 00:03:27.519
现在固定将取消固定，速度会快得多

00:03:27.519 --> 00:03:33.840
嗯，所以有很多图钉的人们对此会感到非常高兴

00:03:36.080 --> 00:03:41.760
甜蜜的还有我不知道是否会

00:03:41.760 --> 00:03:46.560
必须按住rc，但要释放uh

00:03:46.560 --> 00:03:49.840
我们需要一个更新的Web ui版本

00:03:49.840 --> 00:03:56.640
如果钉子服务已经准备好，它将利用钉子服务um远程api呃

00:03:56.640 --> 00:03:59.360
我们准备发布的时间，如果没有，我们将其包括在内，我们将其用于

00:03:59.360 --> 00:04:02.799
下一个rc，但最终版本将是

00:04:02.799 --> 00:04:05.439
阻止了

00:04:13.040 --> 00:04:18.479
从下一次发布开始就是固定服务

00:04:18.479 --> 00:04:21.600
我认为我们只是涵盖了那个

00:04:22.960 --> 00:04:28.800
嗯，是的，几乎所有的移民都准备好了，我只是

00:04:28.800 --> 00:04:32.639
只是最后的审核，呃应该准备包括

00:04:32.639 --> 00:04:36.160
在发行版中，一旦事情合并起来，呃

00:04:36.160 --> 00:04:38.960
依赖关系，确保一切都经过仔细检查

00:04:38.960 --> 00:04:43.759
那但是呃，我们准备好了，那是为了当地的固定

00:04:43.759 --> 00:04:48.400
是更快，是的，那是很好，是的，我们也得到了

00:04:48.400 --> 00:04:52.639
就像一个大的呃拉请求，所有固定

00:04:52.639 --> 00:04:57.280
服务集成，准备好了，可以在Web ui端使用

00:04:57.280 --> 00:05:02.240
嗯，所以我们将协调它是否会降落在第一个rc或下一个rc中

00:05:02.240 --> 00:05:06.080
一个呃可能在下一个，所以它会

00:05:06.080 --> 00:05:12.320
以这种方式进行测试会更容易，无论哪种方式都将是一件好事

00:05:12.320 --> 00:05:15.759
嗯，早点拿出遥控车，这样我们就可以

00:05:15.759 --> 00:05:18.240
有些人像个亿万富翁

00:05:18.240 --> 00:05:22.880
使用新的东西，就像是的，它的速度更快，或者哦，天哪，你打破了

00:05:22.880 --> 00:05:26.400
一切请修复，然后我们可以在

00:05:26.400 --> 00:05:28.800
释放

00:05:30.740 --> 00:05:36.080
[音乐]我想如果我们能在以下其中一项上做到这一点

00:05:36.080 --> 00:05:38.960
我们的门户那将是很棒的，因为我们应该

00:05:38.960 --> 00:05:41.600
能够立即看到性能差异

00:05:41.600 --> 00:05:44.639
网关并没有真正的帮助，因为网关没有固定任何东西

00:05:44.639 --> 00:05:47.440
因为哦，他们是哦，他们就像垃圾一样收集所有东西

00:05:47.440 --> 00:05:50.320
进来，但像在皮纳塔的人一样

00:05:50.320 --> 00:05:53.840
东西会立即注意到这一点，好极了

00:05:53.840 --> 00:05:55.840
我们可以，那会做些什么

00:05:55.840 --> 00:06:01.039
测试这个规模，我认为这将是一个很好的示范

00:06:02.880 --> 00:06:09.759
我们可以在集群上运行它吗，尽管我们依靠集群是一个很好的选择

00:06:09.759 --> 00:06:14.000
问题um我会ping hector

00:06:14.000 --> 00:06:17.840
和下乡亲

00:06:19.039 --> 00:06:22.560
我的意思是我确定我们会在这里固定东西，但我只是不知道是否

00:06:22.560 --> 00:06:27.280
像是一个大问题，任何人都可以打扰任何人，是的，因为我

00:06:27.280 --> 00:06:35.840
我知道我们像本地的pin bot是我相信它已在集群中使用，因此

00:06:43.759 --> 00:06:48.880
下一个很酷的是秒空气去除，我们仍然需要看一下它，因为它

00:06:48.880 --> 00:06:53.199
没了，我想剩下的另一件事是

00:06:53.199 --> 00:06:57.280
我们的状态在闪烁我不认为我们在闪烁

00:06:57.280 --> 00:07:01.120
助推器不，我本周应该这样做

00:07:01.120 --> 00:07:07.199
是的，上周有点让人分心，但是

00:07:09.120 --> 00:07:12.000
完全合理

00:07:14.720 --> 00:07:19.440
继续使用js可以提高功能和连接性

00:07:19.440 --> 00:07:22.560
是的，所以我正在研究的自动中继示例

00:07:22.560 --> 00:07:26.880
上周现在已经准备好接受这样的观点，即公关还包括

00:07:26.880 --> 00:07:32.319
安装程序以运行针对node.js示例的测试，该测试随附了针对

00:07:32.319 --> 00:07:38.560
自动中继，但是新的应该容易添加到node.js中，我将

00:07:38.560 --> 00:07:41.759
作为后续操作，还要为浏览器进行设置

00:07:41.759 --> 00:07:46.319
通过目前仅一小时的浏览器测试，然后我们还可以轻松添加

00:07:46.319 --> 00:07:50.800
定制通知中的新字符斜杠排序

00:07:50.800 --> 00:07:55.280
地址前面，我刚刚创建了一个新的自定义公关

00:07:55.280 --> 00:07:58.160
在Web WebSocket中传输过滤器地址

00:07:58.160 --> 00:08:02.560
这基本上是呃，因为lib2 websockets允许

00:08:02.560 --> 00:08:08.720
tcp和dns解决了两个套件websocket都是安全的websockets

00:08:08.720 --> 00:08:13.199
拨打这导致了著名的浏览器

00:08:13.199 --> 00:08:16.319
尝试连接到不安全的websocket端点

00:08:16.319 --> 00:08:22.479
人们会增加一段时间的抱怨，所以基本上我们在改变

00:08:22.479 --> 00:08:27.680
默认仅允许拨打dns websockets安全地址

00:08:27.680 --> 00:08:31.360
在浏览器和dns websocket中确保我们更简单

00:08:31.360 --> 00:08:35.440
节点中的套接字，但也支持自定义功能

00:08:35.440 --> 00:08:39.200
覆盖此问题，因为例如我们需要进行本地测试

00:08:39.200 --> 00:08:46.160
或人们本周需要的其他方案，我计划进行研究

00:08:46.160 --> 00:08:50.720
提高我们在网络上做广告的能力

00:08:50.720 --> 00:08:54.880
我今天早些时候和雅各布见过面，我将继续工作

00:08:54.880 --> 00:08:58.000
基本上，我们希望对等路由子系统

00:08:58.000 --> 00:09:01.040
找到并连接到我们最近的同龄人

00:09:01.040 --> 00:09:05.200
随着时间的流逝知道，以便交换我们签署的同伴记录和

00:09:05.200 --> 00:09:08.880
使我们在网络中的可视性更好

00:09:08.880 --> 00:09:12.160
与此同时，我还将负责制作指南

00:09:12.160 --> 00:09:15.440
我们想要的在集合点的接力

00:09:15.440 --> 00:09:19.040
有很好的文档说明人们应该如何设置自己的信息

00:09:19.040 --> 00:09:22.959
在下一个飞跃发布时发布

00:09:22.959 --> 00:09:27.040
是的，仅此而已

00:09:30.800 --> 00:09:35.440
对，没有人的控制台充满了会很好

00:09:35.440 --> 00:09:38.959
有关连接网站的错误

00:09:39.600 --> 00:09:43.360
嗯接下来是我双向流和流错误

00:09:43.360 --> 00:09:46.720
浏览器，所以我就像一个基本的原型

00:09:46.720 --> 00:09:51.680
在websockets上用grpc做ipvs广告

00:09:51.680 --> 00:09:58.399
然后将一个示例（与示例）结合在一起进行测试，嗯，就可以了

00:09:58.399 --> 00:10:01.200
嗯，有很多性能调优

00:10:01.200 --> 00:10:03.519
要做的，现在唯一要做的就是

00:10:03.519 --> 00:10:09.120
双向呃grpc方法，所以没有像一元或

00:10:09.120 --> 00:10:11.920
像这样的东西，因为它会回落

00:10:11.920 --> 00:10:14.000
暂时转到http客户端

00:10:14.000 --> 00:10:18.240
流式响应um中的所有内容都会很糟糕

00:10:18.240 --> 00:10:21.760
所以工作正在进行中

00:10:22.160 --> 00:10:28.480
嗯，我听说过pr草案在其中的示例中已经实现了

00:10:28.480 --> 00:10:34.480
嗯嗯，那就是高音的尽头

00:10:34.480 --> 00:10:37.040
娱乐性的优先举措

00:10:37.040 --> 00:10:40.079
嗯，这就是高优先级计划的结尾

00:10:40.079 --> 00:10:44.480
继续进行其他举措，以改善Web ui文件

00:10:44.480 --> 00:10:47.839
然后继续

00:10:51.120 --> 00:10:54.399
嗯，如果可以的话，我在评论alex上被屏蔽了

00:10:54.399 --> 00:11:00.079
在某个时候对ipi utils包进行审查，这将非常有帮助

00:11:00.079 --> 00:11:07.440
一旦我们着陆，我们就可以做到这一点。

00:11:07.440 --> 00:11:11.519
我认为无论是否获得双向流媒体，我们都将需要

00:11:11.519 --> 00:11:15.040
同步您正在处理的内容，因为不是

00:11:15.040 --> 00:11:22.320
我们不会在ipfs上使用它，下一个也是我的

00:11:22.320 --> 00:11:29.040
嗯，那是打字稿，所以在

00:11:29.040 --> 00:11:33.120
注释中链接的pr会删除一些

00:11:33.120 --> 00:11:36.480
键入我们尝试解决的魔术

00:11:36.480 --> 00:11:44.079
api管理器通过删除api管理器来交换api和

00:11:44.079 --> 00:11:47.600
添加一堆其他类型我也花了一些时间

00:11:47.600 --> 00:11:50.880
调查结果证明是呃

00:11:50.880 --> 00:11:57.360
打字稿有，所以它确实省略了生成的类型参数

00:11:57.360 --> 00:12:02.880
呃类型不是很好，因为它变成了

00:12:02.880 --> 00:12:07.519
他们成任何人，否则人们会抱怨

00:12:07.519 --> 00:12:12.079
当人们在他们的项目中具有设置的结构时

00:12:12.079 --> 00:12:19.200
因为发出的类型在技术上不是有效的打字稿

00:12:19.920 --> 00:12:24.800
所以我不知道微软的团队似乎认识到这是一个问题

00:12:24.800 --> 00:12:29.519
但是呃，要修复它还需要一段时间，我正试着看看我是否可以

00:12:29.519 --> 00:12:34.399
修复它，这样我们就不必等待太多，但它并非不平凡，所以

00:12:34.399 --> 00:12:38.720
还有另一个问题与此交织在一起

00:12:38.720 --> 00:12:41.279
所以打字稿有接口的概念

00:12:41.279 --> 00:12:45.760
和类型，您可以在其中导入接口

00:12:45.760 --> 00:12:52.079
Typescript语法，但您只能以jazz doc语法导入类型

00:12:52.079 --> 00:12:55.600
但是你不能实现类型，反正可以实现接口

00:12:55.600 --> 00:13:01.760
嗯，对不起，我冒泡了，但是还有很多事情需要

00:13:01.760 --> 00:13:07.440
算了算了，我也把另一个项目是呃

00:13:07.440 --> 00:13:12.399
最近几周，人们一直对共享工作者表示兴趣

00:13:12.399 --> 00:13:17.519
服务人员内部的东西，促使我在那里做一些工作

00:13:17.519 --> 00:13:25.120
我写了一个示例，现在是js ipfs的公关

00:13:25.120 --> 00:13:28.639
试图锻炼所有这些东西并展示它们如何

00:13:28.639 --> 00:13:34.000
可以连线，有一些有趣的发现，我希望有两个

00:13:34.000 --> 00:13:37.440
写一些关于他们的博客文章的信息，包括他们的博客内容

00:13:37.440 --> 00:13:41.680
即共享工作者的工作方式有很多限制

00:13:41.680 --> 00:13:48.560
对不起服务人员的工作，我想我们可能不得不考虑更多

00:13:48.560 --> 00:13:53.040
关于我们如何在这些限制内工作

00:13:53.040 --> 00:13:57.519
而不是试图与他们战斗，但是是的，我想我会努力捕捉

00:13:57.519 --> 00:14:03.839
在其他地方分享

00:14:04.160 --> 00:14:08.480
不错，是的，我确实看过这个例子，很好，但是有一些提示

00:14:08.480 --> 00:14:12.720
错误只需要一点时间

00:14:14.959 --> 00:14:20.639
接下来是the 2支持，它已锁定在people人身上

00:14:20.639 --> 00:14:26.320
决定是否有a 3或不跳到v5

00:14:26.320 --> 00:14:30.320
 e5将会在这一点上令人赞叹

00:14:30.320 --> 00:14:33.519
嗯，是的，我们仍然在等待任何关于这个的任何信息，所以

00:14:33.519 --> 00:14:38.160
今天早上刚检查过，我还没有看到任何动作

00:14:40.880 --> 00:14:44.240
顺便说一句，我猜我猜有一个半公告的事

00:14:44.240 --> 00:14:48.720
我们以前经常会跳过

00:14:48.720 --> 00:14:54.880
嗯，unix fsd 1.5还有其他问题，有人选择了

00:14:54.880 --> 00:15:00.160
再次，嗯，所以我会做一些评论，

00:15:00.160 --> 00:15:04.959
看看它是如何工作的，如果可以的话，我们可以最终将它推到终点线

00:15:04.959 --> 00:15:08.079
并把它作为赏金被领走了

00:15:08.079 --> 00:15:13.199
是的，我可能会打扰一些熟悉此事的人

00:15:13.199 --> 00:15:16.639
就像alex一样，它是如何在js中实现的，因此我们可以

00:15:16.639 --> 00:15:20.639
确保我们在两个um之间互操作

00:15:20.639 --> 00:15:23.279
但是，是的

00:15:24.079 --> 00:15:27.440
我一直在对该线程发表评论，只是为了确保

00:15:27.440 --> 00:15:32.079
参数类型与您所知道的相同，因为我们不得不乏味

00:15:32.079 --> 00:15:36.399
由于浏览器API的某些限制，更改js中的某些内容

00:15:36.399 --> 00:15:40.639
反正很无聊很酷，是的，我卡住了

00:15:40.639 --> 00:15:45.199
记录到文档中，这样我们就可以每周获取更新，直到

00:15:45.199 --> 00:15:47.360
完毕

00:15:47.440 --> 00:15:51.519
接下来是我们解决的dns加法器解析ngs

00:15:51.519 --> 00:15:55.040
谈了一点，是的，基本上已经完成了

00:15:55.040 --> 00:16:01.839
在lipitp 29.3中发布的保证金以及

00:16:01.839 --> 00:16:06.880
我还更改了js ipfs的引导浏览器地址以利用新的

00:16:06.880 --> 00:16:14.480
dns其他，以便从长远来看信息可以删除旧的

00:16:14.480 --> 00:16:17.120
是的，就是这样

00:16:18.480 --> 00:16:25.519
很好，接下来不是遍历的，是的，所以Arsh又回到了胖乎乎的状态，

00:16:25.519 --> 00:16:29.680
致力于不遍历与主要问题相关的um的工作，

00:16:29.680 --> 00:16:34.399
在golo p2p中有很多这样的东西很多东西

00:16:34.399 --> 00:16:38.480
我们需要做的才能使这项工作适用于除

00:16:38.480 --> 00:16:42.160
现在开始专注于他正在研究的

00:16:42.160 --> 00:16:45.279
获取指标以弄清楚当前可拨号性的状态

00:16:45.279 --> 00:16:48.399
网络，以便我们有一个基准，然后从

00:16:48.399 --> 00:16:53.759
首先要讲的是快速打孔的故事，然后

00:16:53.759 --> 00:16:58.560
稍后，我们将研究类似tcp和webrtc的改进

00:16:58.560 --> 00:17:02.839
下线，但短期内

00:17:02.839 --> 00:17:05.839
快的

00:17:08.319 --> 00:17:13.839
嗯，我想我在该文档上留下了一些评论，但这是要使用的计划

00:17:13.839 --> 00:17:20.170
嗯，使用中继或最初不使用中继

00:17:20.170 --> 00:17:24.000
[音乐]好吧，无论如何，我们都必须使用继电器

00:17:24.000 --> 00:17:26.880
但是您在谈论像数据交换中继与

00:17:26.880 --> 00:17:30.160
是的，还是喜欢我们自己的东西

00:17:30.160 --> 00:17:33.360
是的，我想现在的首要任务是做

00:17:33.360 --> 00:17:38.480
数据中继并弄清楚，但是我们可以进行对话

00:17:38.480 --> 00:17:41.919
这周的更多内容真的可以解决这个问题

00:17:41.919 --> 00:17:48.160
是的，所以对于任何不清楚这是什么的人，我们

00:17:48.160 --> 00:17:52.960
只需通过继电器执行打孔策略，如果失败，您将继续

00:17:52.960 --> 00:17:59.120
只是通过中继交换数据，而不是让中继协调

00:17:59.120 --> 00:18:02.720
为您打孔，这样您实际上就不会运行

00:18:02.720 --> 00:18:05.200
与打孔无关的数据

00:18:05.200 --> 00:18:08.480
嗯，这就像是为中继节省带宽的事情，

00:18:08.480 --> 00:18:11.600
打孔继电器与类似数据交换继电器

00:18:11.600 --> 00:18:15.600
嗯，那里主要是具有成本效益的方案

00:18:15.600 --> 00:18:19.360
院长在问题中提到这两种策略的利弊

00:18:19.360 --> 00:18:26.400
我们将尽快弄清楚我们想做哪一个，但是

00:18:26.400 --> 00:18:31.440
是的，如果您有意见朝我的方向尖叫

00:18:36.400 --> 00:18:45.039
我们谈论的下一个激进的yinx 16.5是ipfs gc的改进

00:18:47.120 --> 00:18:50.720
是的，我目前正在为此工作，我有一个

00:18:50.720 --> 00:18:54.880
我今天要完成的提案，因为它涵盖了呃

00:18:54.880 --> 00:18:59.440
我们想在一般方法和某些算法方面做些什么

00:18:59.440 --> 00:19:04.799
我将要暗示我们建议我们为此聘用

00:19:04.799 --> 00:19:08.799
我现在正在做的是尝试收集一些实际统计数据

00:19:08.799 --> 00:19:12.559
嗯，这样我们就可以有一些实数来查看um

00:19:12.559 --> 00:19:16.080
所以我们可以将其合并到提案中，但是我可以

00:19:16.080 --> 00:19:20.400
我今天至少可以和你们中的一些人快速通行

00:19:20.400 --> 00:19:23.919
但是我要等到我前一天再久一点

00:19:23.919 --> 00:19:26.480
有实际数字，但我想发布

00:19:26.480 --> 00:19:28.960
我今天想在某个时候做提案

00:19:28.960 --> 00:19:32.720
那个星期五，但我还没准备好

00:19:37.360 --> 00:19:41.120
所以除了那个提议我没有别的了

00:19:41.120 --> 00:19:45.120
嗯，但是就像我说过的那样，我会发布

00:19:45.120 --> 00:19:49.039
嗯，今天和今天，任何问题，我们都可以

00:19:49.039 --> 00:19:53.840
我们可以将其作为提案的一部分进行处理

00:19:55.120 --> 00:20:00.400
听起来布宜诺斯艾利斯，谢谢

00:20:00.799 --> 00:20:05.120
好的，这是另一项计划的结尾

00:20:05.120 --> 00:20:09.280
最终移至四肢，因此设计审查建议

00:20:09.280 --> 00:20:14.320
有人有什么建议设计吗

00:20:15.440 --> 00:20:22.159
好吧，我今天应该，我不知道我们是否要这样做

00:20:22.159 --> 00:20:26.480
我会发布正式提案，作为其中的一部分

00:20:26.480 --> 00:20:30.320
一个特定的论坛，还是我们应该只与个人接触，

00:20:30.320 --> 00:20:35.760
并寻找对此的初步设计审查

00:20:35.760 --> 00:20:40.159
这样您就可以创建要查看的描述内容

00:20:40.159 --> 00:20:44.480
嗯，让人们放下他们的名字，然后找一个时间

00:20:44.480 --> 00:20:49.840
这样做还可以

00:20:53.840 --> 00:20:59.520
我想我不知道我是否会得到很多

00:20:59.520 --> 00:21:02.000
这个星期有很多时间，但是我想谈一谈

00:21:02.000 --> 00:21:09.919
关于um​​路由的一些提示嗯，因为它有点

00:21:09.919 --> 00:21:14.000
不断上升，我怀疑

00:21:14.799 --> 00:21:18.400
我怀疑这会不断弹出

00:21:18.400 --> 00:21:24.480
um路由提示的想法是，如果您为

00:21:24.480 --> 00:21:29.360
找到一些内容，要抬起头来会很好

00:21:29.360 --> 00:21:34.720
至于要寻找哪个系统，它不一定是您唯一的系统

00:21:34.720 --> 00:21:38.240
可以检查所有其他项目，但这暗示了它可能在哪里，因此您可以

00:21:38.240 --> 00:21:40.799
选择先进行优化以进行检查

00:21:40.799 --> 00:21:47.200
或稍后再检查，以了解该信息的工作方式是信息

00:21:47.200 --> 00:21:51.600
我们对某些数据有一些带外的了解

00:21:51.600 --> 00:21:55.520
我们可能想要一些传达它的方式

00:21:55.520 --> 00:22:00.400
嗯，所以我不认为这会是本周

00:22:00.400 --> 00:22:03.600
但也许如果人们对头脑风暴感兴趣

00:22:03.600 --> 00:22:06.640
然后我们可以在本周做一些github的事情，

00:22:06.640 --> 00:22:10.159
下周的设计审查

00:22:10.799 --> 00:22:14.400
是的，因为我知道我们就在11月，

00:22:14.400 --> 00:22:18.559
十二月即将来临，我想谨慎的一件事

00:22:18.559 --> 00:22:21.679
我们有很多事情要做吗

00:22:21.679 --> 00:22:24.960
在这里并行进行嗯，我知道我们吸引了很多人

00:22:24.960 --> 00:22:28.480
从档案硬币的努力中退缩，并希望加快发展步伐

00:22:28.480 --> 00:22:34.240
但是我们也应该花些时间放慢一些事情，

00:22:34.240 --> 00:22:38.000
运送ipfs.ed以及我们准备中的任何东西

00:22:38.000 --> 00:22:42.799
然后花一些时间um通过这些努力中的一些进行讨论

00:22:42.799 --> 00:22:47.600
并为明年的工作做准备，以便当我们得到更多的人时

00:22:47.600 --> 00:22:51.200
回来，我们可以有这些较小的共同努力来推动

00:22:51.200 --> 00:22:55.039
那东西，所以我宁愿青睐每个人青睐

00:22:55.039 --> 00:22:58.480
设计讨论，而不是试图推动太多事情

00:22:58.480 --> 00:23:01.039
在平行下

00:23:06.960 --> 00:23:12.480
恩，关于路由之王的恩恩恩，我想也是，我只是想

00:23:12.480 --> 00:23:16.880
指出，纺织业的战略确实沿着这些思路做了一些事情，因此

00:23:16.880 --> 00:23:20.799
看着他们并与他们交谈可能会更糟

00:23:20.799 --> 00:23:24.080
有特定的用例，是的，我

00:23:24.080 --> 00:23:28.720
记得如何线程的种类

00:23:28.720 --> 00:23:32.880
线程如何做到这一点，是的，就像其中一种选择

00:23:32.880 --> 00:23:39.280
它的一部分就像我们如何嵌入如何使用户可以访问它

00:23:39.280 --> 00:23:43.679
对，所以线程通过像线程一样引入来做到这一点

00:23:43.679 --> 00:23:48.159
结构或协议，所以我们有ipfs，它们有斜线

00:23:48.159 --> 00:23:51.360
并将信息嵌入其中

00:23:51.360 --> 00:23:54.640
也许这就是我们想要的，也许是另外一些

00:23:54.640 --> 00:23:58.320
这也可能与斯蒂芬的多路径有关

00:23:58.320 --> 00:24:02.960
一个星期左右才收到的提案

00:24:02.960 --> 00:24:07.039
嗯，是的，我认为这与我们如何互动有关

00:24:07.039 --> 00:24:11.200
以及基本上概括路径而不是

00:24:11.200 --> 00:24:14.400
多加法器，我们可以说是一台机器上的多加法器

00:24:14.400 --> 00:24:20.559
但是多路径可以指向像朋友这样的系统，是的，我只是想制作

00:24:20.559 --> 00:24:25.120
确保无论最终结果如何，我们都将启用

00:24:25.120 --> 00:24:29.120
我们实际上将概括一下纺织品目前在做什么

00:24:29.120 --> 00:24:33.840
无法捕捉到

00:24:36.159 --> 00:24:39.440
如果有人需要下车，我们有时会很酷

00:24:39.440 --> 00:24:44.799
下车，否则我们将只检查最后的物品

00:24:44.799 --> 00:24:48.640
所以阻止者问一下是谁阻止了下一个

00:24:48.640 --> 00:24:51.600
而你必须问

00:24:54.799 --> 00:25:01.840
任何人有任何问题

00:25:02.400 --> 00:25:06.559
停车场的东西哦，没办法

00:25:09.039 --> 00:25:15.840
没有停车或任何东西

00:25:16.000 --> 00:25:19.600
太神奇了，我想我们都完成了，谢谢大家的光临

00:25:19.600 --> 00:25:23.120
呃，这是2020年11月9日的更新。

00:25:23.120 --> 00:25:27.520
呃，如果可以的话，请填写您的异步评论

00:25:27.520 --> 00:25:31.360
太好了，非常感谢大家见到你们

00:25:31.360 --> 00:25:37.520
在互联网上再见

