WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.580 --> 00:00:07.649
录制好吧，大家好，每周欢迎来到ipfs核心实现

00:00:07.649 --> 00:00:10.830
如果您在这里，则同步到11月4日

00:00:10.830 --> 00:00:13.410
请将您的姓名添加到与会者列表中，我已经将链接添加到了

00:00:13.410 --> 00:00:20.640
聊天中的hackpad，如果您有时在这里，请添加您的每周

00:00:20.640 --> 00:00:23.730
更新以供异步审查到hackpad的底部

00:00:23.730 --> 00:00:28.590
我们不会在会议中进行讨论，但是人们可以查看它，看看会发生什么

00:00:28.590 --> 00:00:33.780
您过去一个星期一直在做这件事，并在发表评论时问您一些问题

00:00:33.780 --> 00:00:38.370
会议记录可以获取团队管理仓库的公关信息，因此，谢谢您，并且

00:00:38.370 --> 00:00:46.160
您的最新动态，如果您在这里，我们有一个笔记记录员Jacob非常感谢您，

00:00:46.160 --> 00:00:52.129
现在，我们将通过各项举措开始

00:00:52.900 --> 00:01:03.010
我们将从升级的发行流程开始，所以我不得不说

00:01:03.010 --> 00:01:09.340
想想上周我说0:39实际上被释放了，我们从0:40开始

00:01:09.340 --> 00:01:13.960
发布问题，但是我们还没有分支，我本来打算这样做的

00:01:13.960 --> 00:01:18.430
今天，但我没有这样做，但是下一个步骤中有几件事

00:01:18.430 --> 00:01:24.940
发布，这是一个回购迁移工具，我目前正在等待

00:01:24.940 --> 00:01:31.360
我猜是在请求请求时被阻止的，因为亚当正在为此亚当工作

00:01:31.360 --> 00:01:33.760
一个很棒的贡献者，他一直在做很多事情，但是他有

00:01:33.760 --> 00:01:39.310
一份工作，他并不总是有时间继续做事情，所以我可能不得不

00:01:39.310 --> 00:01:45.310
把它拉到那条线上，是的，那就是那件事的状态

00:01:45.310 --> 00:01:50.410
无论如何都会从此版本中删除，所以这是我唯一要说的

00:01:50.410 --> 00:01:54.850
关于您追逐第一个史蒂文的发布过程的信息

00:01:54.850 --> 00:01:58.619
ipfs发行中的任何内容

00:02:04.290 --> 00:02:12.860
冷静的任何问题都没有

00:02:12.860 --> 00:02:26.900
有谁在这里更新我们的测试基础，并处理您的斯蒂芬

00:02:26.900 --> 00:02:31.989
可能与许多试验场人员相邻

00:02:32.260 --> 00:02:43.810
是的，我的意思是我不知道这真的应该给这里，是的，我的意思是说

00:02:43.810 --> 00:02:53.840
让我们从上周开始进行更改，所以我们就像我认为这是我一直都保留的那样

00:02:53.840 --> 00:02:56.780
在她想获得尽可能多的音符的那一刻，她确实怀念她

00:02:56.780 --> 00:03:01.360
可以运行DHT测试，我需要您与我们一起

00:03:01.360 --> 00:03:06.980
今天今天试图做到这一点，基本上是想分拆，而我

00:03:06.980 --> 00:03:12.530
基本上自动工作，然后像一些基本网络一样

00:03:12.530 --> 00:03:18.760
像延迟这样的控件就是这样做的，这就是为什么它们没有自己的控件

00:03:18.760 --> 00:03:24.950
您知道Dirk的位交换和更改是否已经过测试吗？

00:03:24.950 --> 00:03:32.870
已经取得了进一步的进展，因此所有变更中最好的是有一个测试计划，该计划是

00:03:32.870 --> 00:03:37.609
只是愚蠢的测试他们还没有经过绝望的测试

00:03:37.609 --> 00:03:39.859
试图使实际的自动化，例如分拆机器和类似的东西

00:03:39.859 --> 00:03:46.639
所以现在即使在本地也只是您的旧机器，但是就像您不能

00:03:46.639 --> 00:03:50.569
不能在短时间内点燃灯，这意味着您不能做任何真正的事情

00:03:50.569 --> 00:03:56.720
世界测试，您不能设置任何限制，就不能像这样在EWS上设置限制，这就是

00:03:56.720 --> 00:04:09.620
哪里有其他人可以问的任何问题

00:04:09.620 --> 00:04:15.790
在这种情况下，让我们转到子域网关Lydell，这是怎么回事

00:04:15.790 --> 00:04:24.860
你是的，是的，我在这里闭嘴，就像我的更新一样，是一个PID

00:04:24.860 --> 00:04:31.370
主要来自djursland，对同龄人增加支持的要求不高

00:04:31.370 --> 00:04:41.090
代表了有关JSP ID的系列，我相信我已经解决了反馈问题，如果

00:04:41.090 --> 00:04:45.740
你有空余时间，艾伦（Allen）参加了决赛，我认为那只是一点点

00:04:45.740 --> 00:04:53.180
不久前，我希望那是完美的，我也当时

00:04:53.180 --> 00:04:59.000
意识到我们可以增加对我的支持，就像我在钢琴演奏家中看到ID

00:04:59.000 --> 00:05:05.270
我认为折射器不会像这样的路径被整个整体所阻挡

00:05:05.270 --> 00:05:09.979
冒充此PID更改，如果您查看第二个PR，基本上

00:05:09.979 --> 00:05:17.390
就像不需要任何第三方依赖项的一行更改

00:05:17.390 --> 00:05:23.150
颠簸，所以我想我们可以发货，并且我已经在PR中添加了

00:05:23.150 --> 00:05:30.650
最终切换到新版的PID，例如PR上的详细信息，但我觉得

00:05:30.650 --> 00:05:37.370
拥有它非常有用，因为我主要是在IP和IP上添加针对CID v1的测试，

00:05:37.370 --> 00:05:45.639
公园的实际变化只是一句话，我相信就是这样

00:05:45.639 --> 00:05:51.200
单独的主题单独的主题是切换到JSP ID的单个版本

00:05:51.200 --> 00:05:58.190
我有点像在我的机器上那样的更改，我觉得我喜欢提交

00:05:58.190 --> 00:06:04.490
它们作为单独的PR不会阻止此更改，因此我可能会将其提交为

00:06:04.490 --> 00:06:10.550
公关草稿，所以如果有人的话，最终会得到对等ID，因为我

00:06:10.550 --> 00:06:15.440
不知道如何在b2b端冒泡，但至少在J端，

00:06:15.440 --> 00:06:22.659
将会看到变更范围是什么，是的，我想就是这样

00:06:23.190 --> 00:06:29.080
酷，谢谢，我会的，我将看一下该公关，请务必提交

00:06:29.080 --> 00:06:33.460
如果有的话，另一个为结冰对等体ID

00:06:33.460 --> 00:06:46.949
让我看看乐于助人的酷Lydell现在正迅速前进

00:06:46.949 --> 00:06:50.310
我们的分布式信令仍处于搁置状态

00:06:50.310 --> 00:07:00.120
是的，是的，是的，您仍然没有持有IP NS Aiden和Hugo，他们忘记了我们

00:07:00.120 --> 00:07:11.249
至少没有听到，是的，所以发现了pub / sub PR的重大发现，

00:07:11.249 --> 00:07:19.229
已经发布了，所以接下来的Huzzah会将其集成到发布中

00:07:19.229 --> 00:07:26.460
子路由器，然后将其冒泡进入创意节，所以应该是

00:07:26.460 --> 00:07:29.789
之所以很快，是因为这些更改已经完成并恢复了，

00:07:29.789 --> 00:07:36.060
需要重做一次，是的，希望那应该是可用的，

00:07:36.060 --> 00:07:39.979
如果是马斯特森

00:07:42.180 --> 00:07:51.399
不错，听起来很棒，所以这是IP NS / pub / sub是的，是的，我们可以

00:07:51.399 --> 00:08:03.099
仍然使用IPS和我们的DNS规格的DNA来实现，就像两者都只是为了使

00:08:03.099 --> 00:08:06.909
我可以问得更好，但也可以帮助任何想做的人

00:08:06.909 --> 00:08:12.909
通过DNS进行发现，并且提供了更多类似Lippe的发现选项，而不是使用

00:08:12.909 --> 00:08:28.419
DHT很酷，有些新闻很酷，任何问题都可以

00:08:28.419 --> 00:08:33.149
在罐中增加性能

00:08:34.469 --> 00:08:42.130
是的，好吧，所以我们做了更多的事，就像环顾四周

00:08:42.130 --> 00:08:45.550
为了让我不喜欢为了使ID性能更快，我们基本上

00:08:45.550 --> 00:08:49.810
只需要有一个异步写入的数据库，而不是等待

00:08:49.810 --> 00:08:53.920
每次我们写东西要刷新到磁盘时，您都可以

00:08:53.920 --> 00:08:58.720
这是一个很好的声明，我们绝对不需要总是四处乱窜

00:08:58.720 --> 00:09:05.680
这只会使它变得更简单，所以我想这是我们的措辞问题

00:09:05.680 --> 00:09:09.250
绝对需要这个，您可以通过拥有一个数据库来做到这一点

00:09:09.250 --> 00:09:14.079
支持异步写入，或者您可以通过在

00:09:14.079 --> 00:09:18.310
同步数据库，有效地使其像

00:09:18.310 --> 00:09:23.440
在其中之一之间提供东西，例如轻按一下开关和and，然后

00:09:23.440 --> 00:09:33.250
另一个是使我们的API的缓冲区dag性能更好，您也可以

00:09:33.250 --> 00:09:38.949
您也可以尝试放入一个

00:09:38.949 --> 00:09:43.540
同步层之上的同步层，就像缓存所有内容一样

00:09:43.540 --> 00:09:48.699
交易并喜欢定期刷新它们，但感觉甚至

00:09:48.699 --> 00:09:55.600
比使缓冲区更好更好，所以我们要努力推动

00:09:55.600 --> 00:10:00.190
注释中的链接有指向制作数据的链接

00:10:00.190 --> 00:10:04.780
允许数据存储异步，我将继续尝试

00:10:04.780 --> 00:10:08.950
这个星期有些人看我们是否可以在那里移动，否则我猜

00:10:08.950 --> 00:10:12.610
好吧，我们只是要处理我们已经拥有的东西，那就是

00:10:12.610 --> 00:10:19.540
缓冲道格，但这样做会更具侵略性，我认为

00:10:19.540 --> 00:10:23.470
正确的计划是一般来说使完美的鸡蛋更好，因为那样会

00:10:23.470 --> 00:10:28.690
可能会帮助我们提出我们在这里所做的建议，同时尝试寻找帅哥

00:10:28.690 --> 00:10:35.470
对于您知道的疾病权阶段，基本上就像

00:10:35.470 --> 00:10:39.160
特伦特事件是我要是哪一天去的数据存储

00:10:39.160 --> 00:10:43.210
2os中期决定的异步权限将在OS有关内存的新闻中进行缓冲

00:10:43.210 --> 00:10:46.120
压力或即将到来的天空哦，还有所有类似的东西，所以

00:10:46.120 --> 00:10:53.290
另一方面，更好地安排更好的外部镇静剂，就像这样做

00:10:53.290 --> 00:10:58.930
在数据存储区之外，我们可以将呼叫退回给美国，这也可能

00:10:58.930 --> 00:11:03.550
帮助改善它几个月之久，就像不是完全没有，或者有点像

00:11:03.550 --> 00:11:08.140
我们将从异步中获得性能上的好处，我们可能会得到一些

00:11:08.140 --> 00:11:23.680
通过在应用程序中缓冲而受益，所以很好，其他任何人都可以

00:11:23.680 --> 00:11:34.210
问题是我们好吗，超级好，谢谢你们迁移到玛蒂娜（Martina）

00:11:34.210 --> 00:11:38.950
她在大商店中，这仍在等待中迁移器工具实际上

00:11:38.950 --> 00:11:45.130
被合并到ipfs repo中，拉取请求已经过审核，

00:11:45.130 --> 00:11:50.410
需要很好地完成更改，然后将其洗净并释放，然后

00:11:50.410 --> 00:11:55.950
那么我们很好地开始，它将创建执行此操作的迁移

00:11:55.950 --> 00:12:00.970
这项工作，我认为我们的要求实际上已经完成了

00:12:00.970 --> 00:12:06.760
但也需要对其进行审核，所以是的，该计划是

00:12:06.760 --> 00:12:12.640
迁移器具有迁移到下一个版本和实际版本的能力

00:12:12.640 --> 00:12:20.290
迁移到未来至少有41个或更多处于该状态的人

00:12:20.290 --> 00:12:22.680
那个

00:12:23.640 --> 00:12:33.460
任何问题都好，甜蜜，接下来我们要知道的是Mount

00:12:33.460 --> 00:12:44.310
我认为Dominic在这里，可以进行一些交换更新，我看到鸭子来了

00:12:44.310 --> 00:12:50.470
是的，我刚刚进行了一些代码审查，还想出了一个

00:12:50.470 --> 00:12:55.810
几项测试，针对其抽水测试场，制定了当前的测试计划，然后是史蒂文（Steven）

00:12:55.810 --> 00:13:02.470
好像您已获得有关平行路线的更新，是的，我们将其合并到

00:13:02.470 --> 00:13:06.610
花名师傅有些事情他做了改进

00:13:06.610 --> 00:13:11.920
我想进行的改革是我没有注意到针对个人集群的程序

00:13:11.920 --> 00:13:15.370
任何变化或好先生，我都没有注意到一些非常好的行为

00:13:15.370 --> 00:13:22.800
就像它缓慢，然后随着时间的流逝慢慢蔓延，直到快速

00:13:22.800 --> 00:13:28.360
我不确定是康卡斯特还是其他人，因为我在想哦

00:13:28.360 --> 00:13:33.160
是的，就像下载婴儿车要花一分钟的时间一样

00:13:33.160 --> 00:13:38.800
然后下降到几秒钟，所以快了一倍，所以我们知道这是

00:13:38.800 --> 00:13:42.520
可能速度太快，我认为实际上更多，我认为这是更好的选择

00:13:42.520 --> 00:13:57.200
偷了查理·克星（Charlie Buster），但我的智商非常感谢

00:13:57.200 --> 00:14:06.200
您的更新很好，请继续进行异步/等待重构，我没有

00:14:06.200 --> 00:14:13.820
认为我有任何消息，但Jetley p2p看起来像你在向前冲，是的

00:14:13.820 --> 00:14:20.120
因此，对于p2p和private而言，纯文本到内部加密重构

00:14:20.120 --> 00:14:23.410
网络已全部合并，因此很好

00:14:23.410 --> 00:14:29.390
Bosco目前正在对同伴店重构进行工作，因此这是一本纯书，

00:14:29.390 --> 00:14:34.370
然后将成为连接管理器一部分的注册器，那就是

00:14:34.370 --> 00:14:38.480
让我们注册像拓扑和自定义拓扑之类的东西

00:14:38.480 --> 00:14:45.620
会很好，然后pub / sub PRS也位于

00:14:45.620 --> 00:14:48.830
进度越来越近，他们只需要注册商的一些东西就可以了。

00:14:48.830 --> 00:14:54.050
同行商店，然后确定正在进行中的珊瑚礁行动者，其中还将包括

00:14:54.050 --> 00:14:59.090
尚不支持lupita嫉妒的确定推送，因此将在

00:14:59.090 --> 00:15:05.780
重构，然后大约中继和发现为此

00:15:05.780 --> 00:15:08.590
以及一周

00:15:10.090 --> 00:15:18.320
很好，我们剩下多少，然后在p2p中还有多少

00:15:18.320 --> 00:15:23.260
仓库和模块，我们正在接近终点线，某种形式还是另一种形式

00:15:23.260 --> 00:15:29.840
我们已经很接近了，就像剩下的主要内容是核心，然后是SEC

00:15:29.840 --> 00:15:36.200
 il，哪个mkg正在该重构的一部分上，我想很酷

00:15:36.200 --> 00:15:40.580
很大，但是您现在正在进行PR，是的，那就是

00:15:40.580 --> 00:15:44.960
就像一连串的PRS一样，Vasco正在弹出，然后

00:15:44.960 --> 00:15:53.720
bash但本周也将在DHT上工作，但是我们

00:15:53.720 --> 00:15:59.480
到达那里很酷非常令人兴奋的任何事情

00:15:59.480 --> 00:16:10.490
关于异步的任何问题都可以等待，很酷

00:16:10.490 --> 00:16:16.850
所以我们有了设计审查建议，上周我说我会

00:16:16.850 --> 00:16:22.670
发起一个将文件API统一的提案，而我一直在努力

00:16:22.670 --> 00:16:27.500
一直在写下很多单词，我在想很多事情，这还不完全是

00:16:27.500 --> 00:16:30.650
完成，我还没有提交拉取请求，但是

00:16:30.650 --> 00:16:35.840
有点接近，但这是一个建议，我想我把它说出来了

00:16:35.840 --> 00:16:44.390
今天在这里只是为了看看他们对人的看法如何

00:16:44.390 --> 00:16:50.000
感觉像是它不是入门者，还是它是我们所需要的东西

00:16:50.000 --> 00:16:59.450
如果您对此有很大的担忧，那感觉可能会起飞

00:16:59.450 --> 00:17:06.110
请喜欢与我取得联系，我知道，或者您知道松弛，或者其他什么，但是

00:17:06.110 --> 00:17:11.510
我可能会好起来的，我需要多次阅读它，

00:17:11.510 --> 00:17:15.320
看，有一个，但是我需要完成一些事情，

00:17:15.320 --> 00:17:23.770
添加，然后我将提交一份PR，并向其他人开放以进行浏览

00:17:23.770 --> 00:17:28.720
那里有很多背景信息以及

00:17:28.720 --> 00:17:34.220
识别问题是什么，或者我客观地将其视为

00:17:34.220 --> 00:17:40.760
可能的解决方案和一些建议，以尝试减轻一些

00:17:40.760 --> 00:17:45.770
正在发生的事情，并希望使事情变得更好，

00:17:45.770 --> 00:17:51.260
尝试维护某种方式时更易于使用

00:17:51.260 --> 00:17:56.140
[音乐]与什么相似

00:17:56.140 --> 00:18:01.030
已经在那里，而您却不知道改变它，以至于试图

00:18:01.030 --> 00:18:08.049
保持实际的增量变化，我们必须将变化做得尽可能小，但是

00:18:08.049 --> 00:18:10.960
我们认为可以做一些小事情来真正改善事情

00:18:10.960 --> 00:18:13.840
但是里面还有一些更大的东西，例如

00:18:13.840 --> 00:18:17.799
有兴趣的话请看一下，我将提交提案并

00:18:17.799 --> 00:18:22.630
我们可以像这样安排时间，也许下周我可以安排一样的时间

00:18:22.630 --> 00:18:25.809
开会，我们可以对它感兴趣的人可以去聊天

00:18:25.809 --> 00:18:33.159
应对某些变化，并让需要参与其中的每个人都参与进来

00:18:33.159 --> 00:18:37.990
之所以这样说，是因为我很明显这是文件API的四分之一

00:18:37.990 --> 00:18:41.470
ipfs是人们在大多数情况下都会与之互动的东西

00:18:41.470 --> 00:18:45.850
他们使用IP FS，所以它需要很好，它需要很低

00:18:45.850 --> 00:18:51.150
精简易用，我希望我们可以做得更好

00:18:51.150 --> 00:18:56.409
是的，那是我，然后亚历克斯有一个假释来改善

00:18:56.409 --> 00:18:59.820
您想与之交谈的是API代理

00:18:59.820 --> 00:19:07.500
是的，所以我们有了这个HTTP API，

00:19:07.500 --> 00:19:13.620
尊重以前从未见过的已知惯例

00:19:13.620 --> 00:19:18.690
如果您是新的贡献者，那么与之合作很有趣

00:19:18.690 --> 00:19:23.400
而且您已经习惯了其他系统具有的某些约定，

00:19:23.400 --> 00:19:27.300
等等，这总是很烦人，但是

00:19:27.300 --> 00:19:30.870
在后台，因为我们前面有这些API库

00:19:30.870 --> 00:19:35.220
意味着除了通知外，您无需与其直接互动

00:19:35.220 --> 00:19:41.190
不久前该错误不起作用，因为它使用HTTP预告片

00:19:41.190 --> 00:19:46.590
中继错误信息，因此，如果您具有流接口，那么所有

00:19:46.590 --> 00:19:49.170
这个异步/等待的东西，我们正在朝着流媒体的东西

00:19:49.170 --> 00:19:55.350
如果您在浏览器中的任何地方，您都知道浏览器支持HTTP预告片

00:19:55.350 --> 00:20:00.390
因此，如果您正在处理流，并且流错误，则该流只是

00:20:00.390 --> 00:20:05.250
结束，您不会收到错误消息或在节点中起作用的任何内容

00:20:05.250 --> 00:20:10.530
以前是因为不支持HTTP预告片，但由于我们正在移动

00:20:10.530 --> 00:20:17.160
一切使用获取它开始将浏览器语义带入节点和

00:20:17.160 --> 00:20:21.780
单词以及那些浏览器语义，这意味着不再有HTTP预告片，因此

00:20:21.780 --> 00:20:25.200
意味着我们在节点中的错误处理也不起作用

00:20:25.200 --> 00:20:30.600
这意味着如果您曾经使用过fetch或其他功能，则浏览器将永远无法正常工作

00:20:30.600 --> 00:20:37.080
一种流API，所以我看了一下HTTP API并说了很久以前

00:20:37.080 --> 00:20:41.010
当我第一次开始在这里工作时，我看着它，就像是为什么在里面

00:20:41.010 --> 00:20:46.190
弄乱它的包装纸，会使它生锈

00:20:46.190 --> 00:20:52.590
这样您就可以使用工具来做类似您知道的事情

00:20:52.590 --> 00:20:56.700
由此产生的文档，并提供可用于ping的工具

00:20:56.700 --> 00:21:01.350
API和所有此类东西会生成接受这种永不停止的客户端

00:21:01.350 --> 00:21:04.110
真的走到任何地方，但我确实做了很多思考

00:21:04.110 --> 00:21:11.010
在一起，这样就可以告知我正在提出的设计

00:21:11.010 --> 00:21:13.200
这个公关也起来了

00:21:13.200 --> 00:21:19.169
艾伦一直在努力的东西，以及他的统一文件API

00:21:19.169 --> 00:21:23.220
我们已经讨论了一段时间了，并采取了一些

00:21:23.220 --> 00:21:26.399
提出想法并将其放入HTTP API，这意味着我们将拥有一个

00:21:26.399 --> 00:21:31.169
较小的表面积会像

00:21:31.169 --> 00:21:35.250
您所处的打扰会变得很简单，这会改变一些

00:21:35.250 --> 00:21:39.840
客户端的复杂性，但是如果您不想这样做，那是有必要的

00:21:39.840 --> 00:21:45.029
必须做很多奇怪的事情，还有很多额外的参数，例如DHCP API

00:21:45.029 --> 00:21:50.730
可以继续进行建模，然后继续进行下去，可以根据CLI进行建模，因此您结束了

00:21:50.730 --> 00:21:56.490
有很多可能不需要暴露的行为

00:21:56.490 --> 00:22:04.320
通过HTTP之类的东西，例如，如果您采用路径，则有一个参数可以导入它

00:22:04.320 --> 00:22:08.940
递归的，这对HTTP API毫无意义，只是继续向我发送文件，例如

00:22:08.940 --> 00:22:12.330
在客户端上进行递归暂停，只是继续发送请求之类的东西

00:22:12.330 --> 00:22:16.409
他们正在尝试删除一些应该更简单的东西

00:22:16.409 --> 00:22:21.840
实现更易于理解和易于维护，是的

00:22:21.840 --> 00:22:29.320
全面审查前拉请求状态陈述的欢迎欢迎参与

00:22:29.320 --> 00:22:31.380
你

00:22:34.330 --> 00:22:41.480
听起来真的很令人兴奋，我们应该同步一下，看看我们在那儿提出的建议是什么

00:22:41.480 --> 00:22:48.860
将会变得困难或与我一直在努力的兼容

00:22:48.860 --> 00:22:51.850
核心阿迪

00:22:52.970 --> 00:22:55.830
年轻的飓风应该是我的意思是有大量的

00:22:55.830 --> 00:22:59.670
交叉可能是在考虑到我们已经发生的变化的情况下完成的

00:22:59.670 --> 00:23:06.200
即将到来，但是是的，我们可以绝对考虑一下

00:23:06.200 --> 00:23:15.810
好的，是的，请参与HTTP API的拉取请求，

00:23:15.810 --> 00:23:20.820
给它一次，如果您对这种事情感兴趣

00:23:20.820 --> 00:23:26.190
会很酷，因为有一点点会很高兴

00:23:26.190 --> 00:23:32.300
多说一些开发人员的期望，是的

00:23:32.300 --> 00:23:36.480
更好地为初学者处理错误，是的，这非常

00:23:36.480 --> 00:23:41.190
很酷，我希望可以向提交拉取请求，以解决我正在处理的问题

00:23:41.190 --> 00:23:46.650
统一文件API只是给您一种想法，这已经被要求

00:23:46.650 --> 00:23:51.210
因为我想我认为第一个问题是从2016年开始

00:23:51.210 --> 00:23:57.530
所以已经有一段时间了，是的，我们会做得更好，

00:23:57.530 --> 00:24:05.220
希望很快，但是是的，很酷，所以接下来我们在哪里，我还没有很多

00:24:05.220 --> 00:24:08.580
很多问题，努力阻止者评估没有阻止者，并询问是否存在

00:24:08.580 --> 00:24:14.100
任何人还有其他想放下的东西，或者说是

00:24:14.100 --> 00:24:24.320
被封锁，希望人们看到事物或任何事物

00:24:24.320 --> 00:24:34.899
随机的问题或评论或事物，我们所有人都感到非常激动

00:24:34.899 --> 00:24:43.070
激动人心的时刻还不错，停车场终于是停车场了

00:24:43.070 --> 00:24:45.759
还要别的吗

00:24:47.430 --> 00:24:53.550
我看到最近有一个问题，有人添加了一大堆

00:24:53.550 --> 00:25:00.900
没有哈希的数据，然后似乎有内存泄漏，我想知道是否是

00:25:00.900 --> 00:25:05.670
与我们已经知道的问题有关，我认为这是因为我们添加了

00:25:05.670 --> 00:25:11.430
带有内存黑客的文件保留了主页链接，我们可以做任何我们不做的内存

00:25:11.430 --> 00:25:18.060
实际上创建每个人都做的临时工，但是我们应该他们去

00:25:18.060 --> 00:25:21.990
正确完成查询后，我应该离开

00:25:21.990 --> 00:25:25.050
我不确定这些添加了什么，我以为他们添加了一个大的

00:25:25.050 --> 00:25:30.210
目录就是他们说要添加并添加的目录

00:25:30.210 --> 00:25:36.600
坠毁，我从来没有公平过，不，我认为那是

00:25:36.600 --> 00:25:40.830
就像我进行本地测试的倍数，只是增加了一百万次，

00:25:40.830 --> 00:25:44.340
您会看到它不断增长，然后您不等几分钟，然后

00:25:44.340 --> 00:25:50.130
它不清楚，我也不知道它是否与先前的问题有关，例如

00:25:50.130 --> 00:25:55.020
使用我们的模拟数据存储，而不是再花一点时间

00:25:55.020 --> 00:26:00.380
笨拙的，后来我想我猜我们有一些

00:26:00.380 --> 00:26:05.040
内部指针指向使事物保持开放的状态，例如

00:26:05.040 --> 00:26:09.480
你不会有很长的路要走一个有能力或有能力的团队

00:26:09.480 --> 00:26:14.820
我给我们的内存中的UM副本是对它的引用

00:26:14.820 --> 00:26:34.260
可以肯定地看到听起来像是正在发生的事情实际上起作用了

00:26:34.260 --> 00:26:39.330
似乎我们还是使用穿孔的，甚至当我们使用空数据时

00:26:39.330 --> 00:26:44.910
似乎有点尴尬，我们像记忆中的Pierce商店那样使用

00:26:44.910 --> 00:26:52.400
总是对所有东西都使用甚至修理，是的，可能我认为我们需要

00:26:52.400 --> 00:27:00.170
大概在做房子，基本上蛇像记忆一样大，实际上我

00:27:00.170 --> 00:27:06.410
以为我们巡回了哦，不，不，我们要加点奇怪的东西

00:27:06.410 --> 00:27:11.600
所以我们要创建一个生病的Rico的新节点，而不是一个新的内存，但没有Rico，

00:27:11.600 --> 00:27:17.900
应该丢掉它，所以是的，我们不确定内存泄漏的地方

00:27:17.900 --> 00:27:25.370
这是什么原因，可能是因为我们从来没有真正关闭过他们不知道的地方

00:27:25.370 --> 00:27:34.730
是的，无论实际上那些人永远不知道这就是我们刚刚进行调试的问题

00:27:34.730 --> 00:27:41.180
我喜欢它，以防万一因为我没有抓住它，但这就是

00:27:41.180 --> 00:27:51.260
仅当您使用唯一的哈希选项添加内容时，是的，不错

00:27:51.260 --> 00:27:57.170
PR很不错，谢谢大家的参与

00:27:57.170 --> 00:28:08.300
像往常一样，这周真的很有趣，这周过得很愉快，我会

00:28:08.300 --> 00:28:14.360
下次再见一些其他的核心实现操作，它将是

00:28:14.360 --> 00:28:22.360
更令人兴奋的是，今天就是这样，再见，大家下周见

