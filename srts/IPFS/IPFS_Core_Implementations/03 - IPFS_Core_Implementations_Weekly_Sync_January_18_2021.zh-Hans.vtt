WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.799 --> 00:00:04.319
大家好，欢迎来到我更喜欢每周同步的学校实施

00:00:04.319 --> 00:00:08.720
2020年1月18日，星期一。我要动脑子，我将成为您的房东

00:00:08.720 --> 00:00:12.960
我们要绕过房间谈论超级计划

00:00:12.960 --> 00:00:17.840
其他举措停车场qa您现在知道的演习

00:00:17.840 --> 00:00:23.039
呃今天的出席率略有下降，因为在美国的假期

00:00:23.039 --> 00:00:30.640
嗯，所以您知道节日快乐，人们请假对您有好处

00:00:30.640 --> 00:00:36.160
无论如何，让我们开始如此高优先级的计划

00:00:36.160 --> 00:00:39.360
第一件事即将来临，船会释放

00:00:39.360 --> 00:00:44.640
我可以谈论上周末运送的js ipfs uh 53，这是

00:00:44.640 --> 00:00:49.200
超级令人兴奋的是，它具有实验性的grpc Web服务器

00:00:49.200 --> 00:00:53.120
服务器Web rpc在那里grpc

00:00:53.120 --> 00:00:57.280
 Web over Web套接字服务器，这意味着我们现在有了

00:00:57.280 --> 00:01:01.600
真正的全双工双向流式传输rgfs广告

00:01:01.600 --> 00:01:05.360
令人兴奋的是，我们会将其推广到其他流式传输方法，例如

00:01:05.360 --> 00:01:10.400
我们可以尽快检查ipfs博客

00:01:10.400 --> 00:01:14.720
对于瘦的人，虽然该帖子尚未发布，但我们

00:01:14.720 --> 00:01:21.840
明天（19日）发行，它还带有呃p2p 0.30

00:01:21.840 --> 00:01:27.840
这非常令人兴奋，并且在那里有很多呃改进

00:01:28.560 --> 00:01:33.920
那就是其他即将发生的事情或狗屎

00:01:38.640 --> 00:01:43.600
从根本上发展固定服务

00:01:45.200 --> 00:01:51.840
是的，所以嗯，上周我打扰了我，

00:01:51.840 --> 00:01:57.600
在准备ipfs站点上拉请求合并节

00:01:57.600 --> 00:02:04.320
为准备0.8或释放候选者，还有一堆

00:02:04.320 --> 00:02:08.560
拉与固定服务有关的请求一堆

00:02:08.560 --> 00:02:13.200
播放与远程命令引脚远程命令有关的请求

00:02:13.200 --> 00:02:15.599
登陆

00:02:16.239 --> 00:02:24.160
或即将降落，我们正在致力于自动化

00:02:24.160 --> 00:02:30.400
固定的mfs单词

00:02:30.400 --> 00:02:35.680
替换命令如何工作之间的一些中断问题

00:02:35.680 --> 00:02:41.760
我们的ci测试如何工作以及pinata如何实际实现api

00:02:41.760 --> 00:02:45.599
因此，我们正在ci和端到端上对其进行测试

00:02:45.599 --> 00:02:51.920
与皮纳塔，我想我们已经找到了一种前进的方式

00:02:51.920 --> 00:02:56.800
呃，MFS钉住了，我知道彼得不是

00:02:56.800 --> 00:03:00.480
所以我不确定目前的计划是什么

00:03:00.480 --> 00:03:02.959
但我想如果要花太多时间

00:03:02.959 --> 00:03:08.319
稳定它，我们将它的范围，所以我们明天见

00:03:08.319 --> 00:03:15.519
我们每个人都回来了吗，我们是否包括在rc2中固定的mfs或

00:03:15.519 --> 00:03:20.159
别这样，请继续关注

00:03:25.920 --> 00:03:32.799
不错，接下来是本地固定，它说没有更新

00:03:32.799 --> 00:03:37.200
数据传输速度的提高团队还没有回来，所以没有

00:03:37.200 --> 00:03:40.640
在那里更新下一个是js改善可发现性

00:03:40.640 --> 00:03:45.440
和连接是的，所以上周完成了公关

00:03:45.440 --> 00:03:47.920
基准设置，还收集了一堆

00:03:47.920 --> 00:03:53.360
具有基本不同的网络方案和规模的指标

00:03:53.360 --> 00:03:57.360
结果似乎是合理的，并取决于网络的规模

00:03:57.360 --> 00:04:01.280
我们可能需要部署可再生服务器集群

00:04:01.280 --> 00:04:05.519
正如我们已经预料到的，所以我还创建了公关

00:04:05.519 --> 00:04:09.760
以在jslp2p中使用集合点为例

00:04:09.760 --> 00:04:13.280
现在，我将等待评论

00:04:13.280 --> 00:04:16.959
我将开始整体上进行连接管理器的工作

00:04:16.959 --> 00:04:21.199
嗯，我需要仔细检查以前的计划

00:04:21.199 --> 00:04:25.440
提出这仍然有意义，并开始着手研究

00:04:25.440 --> 00:04:31.040
是的，嗯之后，我可能会花一些时间在

00:04:31.040 --> 00:04:35.360
更改jsl p2p测试设置，因为我完成了所有操作，

00:04:35.360 --> 00:04:39.120
也是因为我们目前无法运行

00:04:39.120 --> 00:04:44.000
由于我们的方式在注释15上

00:04:44.000 --> 00:04:47.199
我们测试dht和pub sub uh等模块

00:04:47.199 --> 00:04:50.720
我们为此使用对等依赖项，现在已经安装了它们

00:04:50.720 --> 00:04:56.320
呃，音符15会自动出现，这会引起一些麻烦，所以我会尝试

00:04:56.320 --> 00:04:59.840
在这周也能得到

00:05:03.120 --> 00:05:07.120
npm喜欢让事情变得有趣

00:05:09.600 --> 00:05:13.360
嗯接下来是双向流媒体和工作室在浏览器中

00:05:13.360 --> 00:05:16.320
发货了，我们可以完全删除

00:05:16.320 --> 00:05:22.800
这从呃笔记向前看非常令人兴奋

00:05:22.800 --> 00:05:26.720
嗯javascript dht没有更新嗯我仍然需要

00:05:26.720 --> 00:05:32.120
回去看看关于公关的所有反馈

00:05:32.120 --> 00:05:36.960
[音乐]嗯螺母孔打孔

00:05:37.280 --> 00:05:41.039
但是我想这周我会很喜欢

00:05:41.039 --> 00:05:44.240
专心于帮助雨果和她

00:05:44.240 --> 00:05:48.080
将类型的东西拖到行上，以便我们可以

00:05:48.080 --> 00:05:56.160
停止只是停止类型，然后开始使用功能um

00:05:58.000 --> 00:06:02.080
这标志着高优先级计划的结束，接下来是另一个

00:06:02.080 --> 00:06:05.600
倡议谈到魔鬼，它应该出现打字稿

00:06:05.600 --> 00:06:09.840
谁可以谈论打字稿集成

00:06:09.840 --> 00:06:13.520
嗯，我可以谈谈可爱的ptp网站嗯，我们得到了

00:06:13.520 --> 00:06:19.919
在打字稿类型更新之后，我们的slp版本在上周五被破坏了

00:06:19.919 --> 00:06:23.199
对于事件发射器中的节点，我正在说我们

00:06:23.199 --> 00:06:26.720
去思考一下，在此期间我们能做些什么

00:06:26.720 --> 00:06:29.919
嗯，最终被固定在上游

00:06:29.919 --> 00:06:33.360
所以我们现在基本上有了事件发射器

00:06:33.360 --> 00:06:37.680
在gsl b2p中本地输入，我们已经发布了

00:06:37.680 --> 00:06:41.520
该构建不再被破坏，最终我们

00:06:41.520 --> 00:06:44.720
可能会考虑使用计量代替

00:06:44.720 --> 00:06:48.160
事件发射器，因为这也将是一个问题

00:06:48.160 --> 00:06:52.720
webpack 5，所以是的，我们可能会看一下

00:06:52.720 --> 00:06:55.599
移动到那个

00:06:57.840 --> 00:07:04.240
哦，我们还有数据存储区prs已全部更新到

00:07:04.240 --> 00:07:10.479
新的配置到新的天蓝色，一切从泡沫中冒出来

00:07:10.479 --> 00:07:16.400
彼此，呃，这也需要喜欢api设施，我认为是这样

00:07:16.400 --> 00:07:21.120
一切都是最新的，这是最终的评论，所以我们可以

00:07:21.120 --> 00:07:26.319
ipfs回购类型已完成

00:07:28.840 --> 00:07:31.840
最后

00:07:34.000 --> 00:07:37.680
是的，我一定一直在做评论，无非就是

00:07:37.680 --> 00:07:45.840
就打字稿而言

00:07:47.520 --> 00:07:53.919
哦，嗯，​​我们需要我以为我不知道是哪一个

00:07:53.919 --> 00:07:58.240
您的gonzalo或alex是空中代码的维护者

00:07:58.240 --> 00:08:04.160
但是我们有一个公关在等待中，我认为我们对此波纹有权限

00:08:04.160 --> 00:08:11.120
所以我们可以解除对那个公关的封锁，是的，所以我看到了那个公关，我回答了我

00:08:11.120 --> 00:08:13.840
很快就对它发表了一些评论

00:08:13.840 --> 00:08:20.639
打开了，但是什么都没听到哦，所以这是贡萨洛的错，我的意思是

00:08:20.639 --> 00:08:24.319
我们是一个团队，我一定很想念它，我来看看

00:08:24.319 --> 00:08:27.759
我们在一起成功，我们在一起失败没有没有没有

00:08:27.759 --> 00:08:32.319
会的人，没事

00:08:35.200 --> 00:08:40.320
你只是指着我屏幕上的笔记，这是笔记的错

00:08:40.320 --> 00:08:44.320
就像指向越位

00:08:44.560 --> 00:08:54.080
无论如何，这很好，我不知道我必须在那里做点什么，所以

00:08:54.080 --> 00:08:59.839
嗯接下来是badge二三不支持

00:09:02.080 --> 00:09:05.519
嗯，那里没有更新，只是等着看

00:09:05.519 --> 00:09:10.080
我们实际上想为此创建一个新的仓库

00:09:10.080 --> 00:09:14.240
嗯，我认为adeen正在寻找一些反馈

00:09:14.240 --> 00:09:22.000
在那里，但是嗯，我们还没做任何事情

00:09:22.000 --> 00:09:26.160
它只是在等待一些决定

00:09:27.360 --> 00:09:33.040
嗯，不是遍历，所以拱得到了概念证明

00:09:33.040 --> 00:09:36.959
像星期五一样在tcp打孔的同时工作

00:09:36.959 --> 00:09:43.360
连接并使用AWS ec2机器上的Live Pdp um

00:09:43.360 --> 00:09:48.959
在家中用笔记本电脑与他的节点聊天，这样可以正常工作，他将

00:09:48.959 --> 00:09:53.279
继续本周在快速方面的工作，并继续努力

00:09:53.279 --> 00:09:58.080
为此完成了多流1.0扩展，所以我认为他

00:09:58.080 --> 00:10:03.440
可能对stum的评论有所阻碍，因此我们将努力争取

00:10:03.440 --> 00:10:06.079
那里的评论

00:10:08.160 --> 00:10:14.800
酷，嗯，unix第一视图1.5英寸，不要认为这里有更新

00:10:16.959 --> 00:10:20.720
我自称gc有所改进

00:10:23.120 --> 00:10:30.480
嗯，我们继续在um上做一些工作，看来我们可以

00:10:30.640 --> 00:10:33.680
我们可以删除uh节点和uh而不会导致

00:10:33.680 --> 00:10:39.200
任何灾难性的破坏，所以性能我不是，呃，我们没有太多

00:10:39.200 --> 00:10:41.920
那里的新发展

00:10:41.920 --> 00:10:46.800
任何将要放进任何东西的东西，无论是任何发行版或呃公关

00:10:46.800 --> 00:10:52.079
很快就可以了，所以它只是继续，继续做下去的工作，

00:10:52.079 --> 00:10:56.880
看一下性能，但也许我们会看到一些结束

00:10:56.880 --> 00:10:59.920
这个星期，我期望

00:10:59.920 --> 00:11:02.480
原型

00:11:04.320 --> 00:11:11.600
很好，您是否直接进行脊医移植的返工

00:11:12.160 --> 00:11:19.040
哦，是的，移民已经准备好了。

00:11:19.040 --> 00:11:22.720
需要是嗯，那里有公关

00:11:22.720 --> 00:11:28.160
对他们来说，第一个需要完成的是对

00:11:28.160 --> 00:11:34.079
分布pr，因为其他一切都取决于分布

00:11:34.079 --> 00:11:38.240
以一种特殊的方式设置那些东西，然后其他所有东西

00:11:38.240 --> 00:11:40.480
如果假设这会贯穿一切

00:11:40.480 --> 00:11:43.279
否则此时将准备合并

00:11:43.279 --> 00:11:46.640
嗯，等待所有出现的问题并检查所有代码，因为

00:11:46.640 --> 00:11:49.200
他们已经彻底检修过，所以这些是

00:11:49.200 --> 00:11:53.200
一切准备就绪，这只是一个人有时间对其进行审查的问题

00:11:53.200 --> 00:11:57.839
因为它们现在的优先级较低

00:12:01.200 --> 00:12:06.880
足够公平，嗯，ibm的弹出式API改造了

00:12:07.600 --> 00:12:11.279
是的，所以这里的背景故事是呃Threebox有一个

00:12:11.279 --> 00:12:15.040
样式问题会在以下位置弹出订阅

00:12:15.040 --> 00:12:22.320
js ipfs http客户端，这是由于我提交的节点获取错误所致

00:12:22.320 --> 00:12:27.279
现在修复它的补丁，但也引发了讨论

00:12:27.279 --> 00:12:31.760
也许应该稍微修改一下api，以便说错误更难

00:12:31.760 --> 00:12:34.880
错过或连接关闭更难

00:12:34.880 --> 00:12:39.200
想我被批准的小姐

00:12:39.200 --> 00:12:44.160
实施，所以我一直在努力

00:12:44.160 --> 00:12:48.000
在实施过程中，我很快意识到我基本上是

00:12:48.000 --> 00:12:52.399
重新发明已有的网络可读流api设置，包括

00:12:52.399 --> 00:12:56.160
浏览器的程度更高，所以我略微旋转了一下

00:12:56.160 --> 00:13:00.880
填充可读流api电子节点

00:13:00.880 --> 00:13:07.839
并在浏览器中使用本机，也使用本机的扩展

00:13:07.839 --> 00:13:11.040
因为浏览器中的本机尚未完全实现堆栈

00:13:11.040 --> 00:13:15.040
嗯，特别是缺少s迭代和其他一些api

00:13:15.040 --> 00:13:18.880
但是这些很容易像可读流的子类一样添加

00:13:18.880 --> 00:13:21.920
注释中有一个指向此类库的链接

00:13:21.920 --> 00:13:26.720
将所有内容放在一起，并尝试为您提供跨

00:13:26.720 --> 00:13:31.120
板，这将被用来弹出

00:13:31.120 --> 00:13:37.760
api或弹出订阅api

00:13:41.680 --> 00:13:48.880
有趣，因为是的，走吧，我需要阅读它

00:13:48.880 --> 00:13:53.839
上次有人再次重写流时，我们最终遇到了拉流

00:13:53.839 --> 00:13:57.040
那个时候很好

00:13:57.120 --> 00:14:01.120
是的，所以想法是，它将是可读流，但您不必

00:14:01.120 --> 00:14:06.000
知道了，您可以将其视为高音，

00:14:06.000 --> 00:14:09.390
是的，如果您想离线，我们可以讨论更多

00:14:09.390 --> 00:14:15.279
[音乐]接下来是jsovs中的内存泄漏

00:14:15.279 --> 00:14:19.279
是的，这也是来自三个方框的反馈

00:14:19.279 --> 00:14:23.279
嗯他们提出了一个问题嗯他们正在谈论http客户端

00:14:23.279 --> 00:14:28.320
那是内存继续增长并关闭节点，他们需要

00:14:28.320 --> 00:14:33.199
重新启动等等，这不是HTTP服务器，而是

00:14:33.199 --> 00:14:40.000
可能是预加载或位交换，或者两者都有，所以我目前正在做更多研究

00:14:40.000 --> 00:14:44.079
我基本上是在建立一个可以更好控制的试验台

00:14:44.079 --> 00:14:47.120
um并触发两个音符之间的一点交换

00:14:47.120 --> 00:14:51.760
而不是仅仅像激活预加载一样依赖，然后

00:14:51.760 --> 00:14:58.320
交换开始用易碎的笔记做他的事

00:14:58.320 --> 00:15:03.680
我将在本周末结束前获得更多信息

00:15:04.480 --> 00:15:08.000
我不确定它是否相关或有用，但我记得

00:15:08.000 --> 00:15:12.240
在某一点上，我们添加了限制

00:15:12.240 --> 00:15:17.279
作为预加载的一部分可以执行多少个并发请求，以及

00:15:17.279 --> 00:15:21.120
代表们，但我不认为我们会像我们这样

00:15:21.120 --> 00:15:27.839
代码，我们为此使用一些库

00:15:28.639 --> 00:15:34.399
我的意思是，我们实际上知道这种内存泄漏是

00:15:34.399 --> 00:15:37.440
合法的，可能就是他们有

00:15:37.440 --> 00:15:42.399
如此多的提示请求看起来像是内存泄漏

00:15:42.399 --> 00:15:46.079
因为我们对预购电话有这些限制，

00:15:46.079 --> 00:15:49.120
在委托路由呼叫上，我想我认为

00:15:49.120 --> 00:15:55.120
三个盒子都在尝试两者，所以他们可能会有一堆像可爱的

00:15:55.120 --> 00:15:59.199
内存中的东西看起来好像不喜欢

00:15:59.199 --> 00:16:04.639
嗯，当我开始喜欢重新加载任何东西时，可能是

00:16:04.639 --> 00:16:09.279
小小的街区可能是大街区，可能是很多街区，我很容易

00:16:09.279 --> 00:16:12.800
可以达到1 GB的ram却永远无法获得

00:16:12.800 --> 00:16:15.040
背部

00:16:15.440 --> 00:16:19.279
如果我继续增加更多的区块，则其总增长会增长

00:16:19.279 --> 00:16:24.079
但它慢慢恢复到1 GB，但永不消失

00:16:24.079 --> 00:16:31.600
低于1 GB，是这样，也许是无关的，是的，是的

00:16:34.639 --> 00:16:38.720
那是其他倡议的结尾，有人能得到什么吗？

00:16:38.720 --> 00:16:42.320
设计师审查建议

00:16:46.240 --> 00:16:54.160
阻碍者并提出问题

00:16:56.800 --> 00:17:00.560
停车场里有一件事情，公共服务公告

00:17:00.560 --> 00:17:06.400
勇敢，是的，完全一样，呃，我想我上个星期提到过

00:17:06.400 --> 00:17:11.760
要求进行呃测试，所以对任何人来说这只是一个PSA

00:17:11.760 --> 00:17:17.280
看着这个勇敢的119这个星期会降落在稳定的频道中

00:17:17.280 --> 00:17:24.799
想想明天，那对我们来说是一个很酷的里程碑

00:17:24.799 --> 00:17:31.679
这将是对您眼睛的原生支持，这意味着您刚刚进入

00:17:31.679 --> 00:17:34.559
他们您不需要启用任何功能

00:17:34.559 --> 00:17:37.679
第一次使用uri时，您将能够

00:17:37.679 --> 00:17:39.679
选择要运行自己的节点

00:17:39.679 --> 00:17:43.840
并从ipfs加载内容或委托

00:17:43.840 --> 00:17:49.039
解析ipfs地址到某个受信任的公共网关，您可以

00:17:49.039 --> 00:18:01.360
自定义您正在使用的网关，这就是psa

00:18:01.360 --> 00:18:04.480
停车场的其他东西

00:18:06.720 --> 00:18:11.039
那么我们就完成了，非常感谢您的光临，请填写您的

00:18:11.039 --> 00:18:14.720
异步更新呃，让人们知道发生了什么事

00:18:14.720 --> 00:18:18.480
嗯，非常感谢，这是常春藤节实施的每周同步

00:18:18.480 --> 00:18:28.320
2021年1月18日，星期一，互联网上再见

