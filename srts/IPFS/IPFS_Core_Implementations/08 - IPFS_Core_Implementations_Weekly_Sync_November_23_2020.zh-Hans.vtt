WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.599 --> 00:00:05.440
大家好，欢迎来到周一每周进行的ipfs核心实现

00:00:05.440 --> 00:00:09.440
2020年11月23日，我们将进行高度优先的举措

00:00:09.440 --> 00:00:13.360
现在其他举措qa停车场提问时间答案

00:00:13.360 --> 00:00:15.280
时间所有有趣的事情将会发生

00:00:15.280 --> 00:00:20.080
事不宜迟，我们先从

00:00:20.080 --> 00:00:23.039
高优先级计划，因此即将发布和发布

00:00:23.039 --> 00:00:26.000
谁可以谈论这个

00:00:26.480 --> 00:00:33.680
是的，去ipfs 0.8的rc我们希望本周登陆它，但是

00:00:33.680 --> 00:00:36.960
美国假期将在本周晚些时候降落

00:00:36.960 --> 00:00:40.559
下周推到呃，我们只有几个

00:00:40.559 --> 00:00:43.680
我们需要完成的事情，我们将在短期内讨论固定

00:00:43.680 --> 00:00:46.160
服务

00:00:50.320 --> 00:00:52.800
惊人

00:00:53.680 --> 00:01:03.039
其他任何东西都可以发布打印服务

00:01:04.239 --> 00:01:11.760
嗯，我想说一下pin远程命令，就像是六个命令

00:01:11.760 --> 00:01:16.240
销，然后管理服务器清洁服务几乎已准备就绪

00:01:16.240 --> 00:01:20.880
这个候选人，所以当你们准备好了时，它应该不会受到阻碍

00:01:20.880 --> 00:01:29.119
嗯，我切了rc1嗯，我加了一个错误

00:01:29.119 --> 00:01:35.840
带有引脚数的服务ls，当您传递该参数时，它将

00:01:35.840 --> 00:01:39.920
测试端点并尝试获取每个端点中的多少个引脚

00:01:39.920 --> 00:01:44.640
你的状态就像呃排队钉油漆失败

00:01:44.640 --> 00:01:50.320
这样就可以快速验证您添加的服务

00:01:50.320 --> 00:01:54.880
而且在最终的端到端时，它也将由Web ui使用

00:01:54.880 --> 00:01:59.040
集成um ci仍然不是绿色，但

00:01:59.040 --> 00:02:04.079
我们正在努力修复固定服务

00:02:04.079 --> 00:02:09.599
我们在ci上使用的是绿色，因此希望它将与

00:02:09.599 --> 00:02:15.520
遥控飞机本周或下周登陆的计划

00:02:19.120 --> 00:02:26.160
以及Web ui和js使用的um http客户端

00:02:26.160 --> 00:02:29.760
登陆吧，它对销钉遥控器的新增支持

00:02:29.760 --> 00:02:33.120
命令正在工作，我相信伊拉克是

00:02:33.120 --> 00:02:39.760
攻击一个呃，是的，我只是发送物品

00:02:39.760 --> 00:02:46.800
嗯，所以我从事呃爵士爵士乐的模拟钉扎服务，因为

00:02:46.800 --> 00:02:50.800
让您将其集成到Go ipfs中，这样您就可以

00:02:50.800 --> 00:02:56.319
测试一下，我今天会发布它

00:02:56.319 --> 00:02:59.519
它的功能不完整，但大部分

00:02:59.519 --> 00:03:05.280
在那儿，我将发布对这些内容的一些更改

00:03:05.280 --> 00:03:09.360
JS http客户端提供的草稿prs

00:03:09.360 --> 00:03:13.840
而且有一次我今天和这个星期我会继续努力

00:03:13.840 --> 00:03:18.080
完成模拟服务器实施服务实现的功能

00:03:18.080 --> 00:03:22.400
完成，一旦它存在，我将尝试将其集成到

00:03:22.400 --> 00:03:27.840
gshtp客户端测试，因此我们可以对其进行测试

00:03:27.840 --> 00:03:30.799
希望本周

00:03:31.120 --> 00:03:35.680
就这样

00:03:35.840 --> 00:03:39.360
嗯，接下来是当地一分钱

00:03:40.159 --> 00:03:43.680
好吧，这几乎已经准备好遥控一号了

00:03:43.680 --> 00:03:47.360
嗯，我们等待的只是几个决策，次要实施决策

00:03:47.360 --> 00:03:50.480
关于编码是否使用多库还是使用多库

00:03:50.480 --> 00:03:54.239
不，所以只是要确保这是一个问题

00:03:54.239 --> 00:03:58.400
准备为将来的任何变化做好准备，我们是否需要为未来做任何事情

00:03:58.400 --> 00:04:01.519
证明它或它是好的，所以一旦这些决定有了

00:04:01.519 --> 00:04:06.080
已经做好了，那么一切都应该准备好了

00:04:06.080 --> 00:04:10.000
继续前进，以实现该实现

00:04:10.000 --> 00:04:14.879
并确保使用最新版本的co-ipfs对迁移进行测试

00:04:14.879 --> 00:04:18.239
嗯取决于适当的

00:04:18.239 --> 00:04:22.560
钉书机的版本，嗯，这就是我们在等待的一切

00:04:22.560 --> 00:04:33.600
这一点很酷，接下来是可以移动的

00:04:33.600 --> 00:04:38.320
是的，所以上周从引导记录中删除了，所以我们

00:04:38.320 --> 00:04:42.639
现在在网络上进行一些监视以了解情况

00:04:42.639 --> 00:04:46.320
嗯，要评估情况，但是我们在

00:04:46.320 --> 00:04:50.000
观看观看和观察模式

00:04:52.400 --> 00:04:55.440
到目前为止，一切都很好

00:04:55.600 --> 00:05:00.320
嗯接下来就是改善可发现性和连通性

00:05:00.320 --> 00:05:04.400
嗯是的，所以自动中继的例子在上周被合并了

00:05:04.400 --> 00:05:08.320
这样，所有自动继电器的工作就完成了

00:05:08.320 --> 00:05:13.840
恩在集合阵线恩我上周开始演讲

00:05:13.840 --> 00:05:18.800
雅各布的评论中，我们还打了一条电话，内容是关于

00:05:18.800 --> 00:05:23.280
检讨嗯，所以二已经做了一些

00:05:23.280 --> 00:05:26.400
我基本上我们决定分开的东西

00:05:26.400 --> 00:05:31.199
服务器中的客户端，因此我们旨在移动

00:05:31.199 --> 00:05:38.080
客户端部分到实时hp卡，然后我还添加了OS保护

00:05:38.080 --> 00:05:43.680
为注册，我目前正在与docker撰写设置

00:05:43.680 --> 00:05:47.520
也是我的sql所以

00:05:47.520 --> 00:05:52.160
基本上，我正在创建数据库模型和查询，以便我们

00:05:52.160 --> 00:05:56.160
没有所有的内存，我们基本上

00:05:56.160 --> 00:06:01.280
将所有内容存储在我的sql数据库中，这周我将继续进行操作，并且

00:06:01.280 --> 00:06:04.479
我也需要努力改善垃圾

00:06:04.479 --> 00:06:08.720
就像我将改变收藏家的方式一样

00:06:08.720 --> 00:06:14.639
当前正在处理数据，然后我们还需要对齐

00:06:14.639 --> 00:06:18.000
与库有关消息签名

00:06:18.000 --> 00:06:21.680
这是我和雅各布讨论并最终解决的问题之一

00:06:21.680 --> 00:06:25.039
以与我们相同的方式添加闪闪发光的消息是有意义的

00:06:25.039 --> 00:06:28.800
具有pub sub，但目前不属于规范的一部分

00:06:28.800 --> 00:06:32.160
所以是的，我也为此创建了一个问题

00:06:32.160 --> 00:06:35.680
旨在最终也获得签名消息

00:06:35.680 --> 00:06:38.479
就是这样

00:06:40.800 --> 00:06:45.199
接下来的好处是双向流式传输和流式传输中的错误

00:06:45.199 --> 00:06:48.160
浏览器um，所以我已将PR标记为已准备好

00:06:48.160 --> 00:06:52.240
审查，它有四个的实现

00:06:52.240 --> 00:06:56.880
不同类型的grpc网络消息，因此一元客户端流服务器

00:06:56.880 --> 00:07:01.840
流和双向流um我已经记录了协议

00:07:01.840 --> 00:07:07.199
之所以使用它，是因为它不是组成的，但它不是其中的一部分

00:07:07.199 --> 00:07:10.400
规范，因为该规范不允许使用网络套接字

00:07:10.400 --> 00:07:13.599
但这是基于其他人的实现

00:07:13.599 --> 00:07:16.639
无论如何，要凭空插上它，一切都已记录在案

00:07:16.639 --> 00:07:20.560
嗯，以及我们如何进入ipvs的粗略计划，所以我很乐意

00:07:20.560 --> 00:07:24.479
还有一些家伙们的眼球

00:07:24.479 --> 00:07:27.840
当所有人都去的时候，人们不只是男人

00:07:27.840 --> 00:07:33.599
嗯，我很喜欢整个生态系统中的人们的一些投入，因为最终

00:07:33.599 --> 00:07:38.479
这真的应该也放入ipfs中，这样我们就可以

00:07:38.479 --> 00:07:42.240
就像浏览器中发生的事情一样，带有适当的全双工流

00:07:42.240 --> 00:07:45.360
嗯，到处都是，我真的很有帮助

00:07:45.360 --> 00:07:48.800
列出我认为所有已做出的设计决策

00:07:48.800 --> 00:07:52.400
因此，如果人们完全被人致命地冒犯

00:07:52.400 --> 00:07:55.840
发生的事情请在PR中大喊大叫，我们可以

00:07:55.840 --> 00:08:00.639
达成某种协议是的

00:08:02.560 --> 00:08:06.400
接下来是图书馆计划，其他计划是

00:08:06.400 --> 00:08:13.840
因此在Web ui中文件添加进度不会自行更新

00:08:15.360 --> 00:08:22.240
嗯，是的，没有更新，您设法整合了

00:08:22.240 --> 00:08:27.680
进展的东西，那么它仍然是要做的我一直在做固定

00:08:27.680 --> 00:08:31.120
服务的东西好了，我完成后再说

00:08:31.120 --> 00:08:35.599
旋转服务很酷，很酷哦，我不知道静音

00:08:35.599 --> 00:08:37.680
是的，接下来是打字稿集成

00:08:37.680 --> 00:08:41.120
jsrfs我也会

00:08:42.640 --> 00:08:50.080
嗯，雨果也有更新，是的，所以我们现在支持

00:08:50.080 --> 00:08:55.920
亚洲的类型生成运行类型的类型

00:08:55.920 --> 00:08:59.920
检查器并建立文档um建筑物

00:08:59.920 --> 00:09:05.360
该文档仍处于实验性质，因为它使用了

00:09:05.360 --> 00:09:11.120
一种变通办法，主要在较小的波纹上起作用，但对较大的波纹

00:09:11.120 --> 00:09:16.160
像jsrpfs这样的东西很难获得一些有用的东西

00:09:16.160 --> 00:09:20.080
从中输出，但对于较小的则为false

00:09:20.080 --> 00:09:25.680
很好，关于多灰分激励器的一些公关已经

00:09:25.680 --> 00:09:33.760
准备好的CID也已经准备好，我正在使用旧的ts

00:09:33.760 --> 00:09:40.160
跟踪问题以跟踪这项新工作，嗯，也喜欢

00:09:40.160 --> 00:09:47.200
um monoreport js ibfs monorepo需要对我们拥有的类型进行一些工作

00:09:47.200 --> 00:09:51.120
新提案，嗯，那是写的呃

00:09:51.120 --> 00:09:56.959
基本上是um描述了我们一直在谈论的一堆东西

00:09:56.959 --> 00:10:01.519
嗯，是的，回购要稍微复杂一点，因为

00:10:01.519 --> 00:10:05.839
我们需要在多个多个包中重用类型，因此我们需要组织

00:10:05.839 --> 00:10:08.640
更好的东西，但您可以在其中阅读所有内容

00:10:08.640 --> 00:10:12.560
提案是的，就是这样

00:10:16.839 --> 00:10:21.200
很棒，接下来是共享节点的使用

00:10:21.200 --> 00:10:24.079
从服务人员那里

00:10:27.040 --> 00:10:30.160
正确的任何事情

00:10:30.640 --> 00:10:37.360
啊，抱歉，这是什么服务人员，哦，是的，我当时是

00:10:37.360 --> 00:10:40.959
实际上试图弄清楚我是否需​​要做任何事情，或者那是

00:10:40.959 --> 00:10:44.240
如果准备好了，但是似乎有一个问题

00:10:44.240 --> 00:10:49.600
如果我正确地阅读了公关，那就需要

00:10:49.600 --> 00:10:53.839
嗯是的，所以我将在本周尝试解决并希望运行它

00:10:53.839 --> 00:10:59.120
好的，我们可以得到呃badge 2支持

00:10:59.120 --> 00:11:06.160
没有更新，我的意思是扩展ii，请继续检查每个

00:11:06.160 --> 00:11:11.680
我每天刷新几次，不，不，我没有看到任何公告

00:11:11.680 --> 00:11:15.120
要么关于他们何时发布

00:11:15.120 --> 00:11:22.000
希望知道今年年底的事情，圣诞节快乐，好吧。

00:11:22.000 --> 00:11:31.920
不是遍历，是我，是的，所以arch正在运行

00:11:31.920 --> 00:11:37.680
改善我们的可拨号性统计数据，因此我们开始

00:11:37.680 --> 00:11:41.279
向水力节点添加一些东西，以便我们观察到

00:11:41.279 --> 00:11:44.079
通过的流量我们开始向人们发送信息，并试图

00:11:44.079 --> 00:11:48.399
更好地了解网络上的可拨号性，以便我们可以

00:11:48.399 --> 00:11:51.519
当我们使用它作为我们的成功标准时

00:11:51.519 --> 00:11:56.959
实施完全自然逆转，然后他正在努力改善一些

00:11:56.959 --> 00:12:01.440
关于autonat的问题有点

00:12:01.440 --> 00:12:05.680
观察到的地址，因此致力于稳定性

00:12:05.680 --> 00:12:11.839
对于打孔很重要

00:12:12.079 --> 00:12:18.399
下一步，更彻底的是Unix与v 1.5和ipfs的比较

00:12:18.399 --> 00:12:21.680
嗯，我认为自上周以来没有任何动静

00:12:21.680 --> 00:12:25.600
虽然我确实将演示回购放在一起，但让

00:12:25.600 --> 00:12:31.600
我们出色的贡献者，您运行了js ipfs接口测试套件

00:12:31.600 --> 00:12:34.959
um对抗任意go ipvs，而不必

00:12:34.959 --> 00:12:38.240
跳很多圈

00:12:40.160 --> 00:12:43.360
那应该在那里

00:12:43.920 --> 00:12:53.200
除此之外没有更新，接下来是ipfs gc的改进

00:12:53.200 --> 00:12:57.200
呃，仍然在设计上，我实际上进行了很多讨论

00:12:57.200 --> 00:12:59.200
关于我们如何可以使用一些

00:12:59.200 --> 00:13:01.760
现有的基础架构，可让您做得更聪明

00:13:01.760 --> 00:13:06.079
垃圾收集，我们有艺术缓存和bloom过滤器之类的东西

00:13:06.079 --> 00:13:10.240
我们不想重复，如果我们不需要

00:13:10.240 --> 00:13:14.880
有任何可以使用的功能

00:13:14.880 --> 00:13:17.680
现有，所以我只是想我们只是

00:13:17.680 --> 00:13:22.079
就目前而言，在讨论中还没有任何可靠的答案

00:13:22.079 --> 00:13:25.519
我们将如何处理这些

00:13:25.519 --> 00:13:29.519
我们的缓存，所以我们进入了设计讨论

00:13:29.519 --> 00:13:35.839
那是答案的短端

00:13:36.800 --> 00:13:40.639
好东西，使我们结束了其他计划

00:13:40.639 --> 00:13:45.120
嗯，接下来是设计审查提案吗？

00:13:45.120 --> 00:13:49.839
设计回顾

00:13:51.920 --> 00:13:58.320
我的意思是我想我以前在websocket上使用的是grpc web

00:13:58.320 --> 00:14:04.240
要做一些设计审查，所以如果您想参与其中，

00:14:04.240 --> 00:14:08.320
只是对公关发表评论，是的，告诉我你喜欢什么

00:14:08.320 --> 00:14:17.839
不喜欢那样的事情

00:14:17.839 --> 00:14:21.600
如果没有别的，这可能是一个好选择

00:14:21.600 --> 00:14:28.480
克里斯在图同步集成上的观点嘿，伙计们，我只是

00:14:28.480 --> 00:14:30.000
在里面放些东西，但是我一直在努力

00:14:30.000 --> 00:14:33.120
在呃，graphsync的javascript实现

00:14:33.120 --> 00:14:36.639
嗯，米哈伊尔·罗杰斯（Mikhail rogers）要求我加入这次电话讨论

00:14:36.639 --> 00:14:41.600
与js ipfs的可能集成点，因为我认为你们正在做一些

00:14:41.600 --> 00:14:44.880
明年的计划或什么，所以我在这里

00:14:44.880 --> 00:14:49.680
回答任何问题或进行讨论，只是不知道该如何进行

00:14:52.720 --> 00:14:59.839
是的回购链接

00:15:06.240 --> 00:15:11.920
它仍然在进行中，所以您很高兴或者也可以看看它

00:15:11.920 --> 00:15:16.240
嗯，但是仍然在做一些

00:15:16.240 --> 00:15:18.480
事情，所以我认为这更多的是关于获得

00:15:18.480 --> 00:15:23.440
从集成角度看未来的占位符只是

00:15:23.440 --> 00:15:26.000
我现在在哪里的快速摘要

00:15:26.000 --> 00:15:30.639
嗯，我可以向响应者发出请求吗

00:15:30.639 --> 00:15:36.079
而且我已经针对ipfs进行了验证

00:15:36.720 --> 00:15:41.680
我做了一个响应者的原型，所以我认为我一直在努力

00:15:41.680 --> 00:15:46.240
最近正在对返回的请求进行一些验证，以确保

00:15:46.240 --> 00:15:49.839
不好的演员反应者不会让我不好

00:15:49.839 --> 00:15:52.240
的东西，我想我越来越接近

00:15:52.240 --> 00:15:56.560
把所有这些放在一起，然后我将拿出原型

00:15:56.560 --> 00:15:59.279
受访者并将其归类为您的问题，我想我会做的很好

00:15:59.279 --> 00:16:02.639
十二月底的形状是什么

00:16:02.639 --> 00:16:06.959
我期望这是我们需要的东西

00:16:06.959 --> 00:16:10.000
根据节点检测某些对等点将具有图

00:16:10.000 --> 00:16:15.440
而其他人则没有，或者有什么可以替代

00:16:15.440 --> 00:16:21.360
当前的位交换在ipfs中很好

00:16:21.360 --> 00:16:25.519
他们打开了响应程序，但是没有任何东西可以使

00:16:25.519 --> 00:16:29.680
请求出去，所以在ipfs中有点

00:16:29.680 --> 00:16:33.600
如果您不能启用它来替换bitswap，那么您所能做的就是

00:16:33.600 --> 00:16:37.120
使响应者能够提供访问数据的新方式

00:16:37.120 --> 00:16:40.959
嗯，我想你知道我们是否接受了这个，我想一个大问题

00:16:40.959 --> 00:16:44.399
可以，如果我们与jsipfs um集成

00:16:44.399 --> 00:16:47.600
我们想做什么呢，就像go ipfs所做的一样，

00:16:47.600 --> 00:16:50.000
让它充当响应者，以防请求到来

00:16:50.000 --> 00:16:54.959
您是否想要一种可以让um实际发出请求的模式？

00:16:54.959 --> 00:16:57.440
其他节点就像您说的那样，进行位交换替换

00:16:57.440 --> 00:17:00.560
是正确的，因为诸如此类的问题是关于什么是确切的功能

00:17:00.560 --> 00:17:05.039
不知道go ipfs是否为图同步有一些路线图或计划

00:17:05.039 --> 00:17:07.760
那但嗯，是的，您可以创建的确切方法

00:17:07.760 --> 00:17:13.039
它是开放的，所以，谢谢你，汉娜和亚历克斯·克里克

00:17:13.039 --> 00:17:17.520
将于12月初返回ipfs

00:17:17.520 --> 00:17:20.720
嗯，他们正在看的一些东西是ipld

00:17:20.720 --> 00:17:24.240
进行主积分，然后进行图同步

00:17:24.240 --> 00:17:28.880
Go ipfs的位互换故事，所以我认为那真的很好

00:17:28.880 --> 00:17:34.480
嗯，你和亚历克斯放了CD，以便能够与他们同步

00:17:34.480 --> 00:17:38.640
嗯，在院长里，这样我们就可以协调并启动这些事情

00:17:38.640 --> 00:17:41.200
全部一起

00:17:41.520 --> 00:17:48.799
所以我会做一个记录，以确保我们保持同步

00:17:48.799 --> 00:17:53.200
大概在下个月的某个时候，所以我们可以弄清楚我们想要做什么

00:17:53.200 --> 00:18:01.840
q1听起来不错

00:18:08.880 --> 00:18:12.720
呃其他的设计建议

00:18:12.840 --> 00:18:15.840
部分

00:18:17.440 --> 00:18:28.320
任何被任何人阻挡的人都有任何要求

00:18:28.320 --> 00:18:33.440
高产量，最高生产率，非常好

00:18:34.320 --> 00:18:37.520
有人有任何问题

00:18:38.080 --> 00:18:44.400
是的，libya2p将简单的啤酒更新为

00:18:44.400 --> 00:18:49.760
这主要与缓冲区有关的最新版本

00:18:49.760 --> 00:18:54.840
事情，所以我们可以将webpack升级到

00:18:54.840 --> 00:19:00.799
我认为这是最后五个阻碍我们的人

00:19:00.799 --> 00:19:04.559
简单出现只是一个补丁发布，尽管正确

00:19:04.559 --> 00:19:09.600
嗯是的，但事实是，我们使用的是叉子

00:19:09.600 --> 00:19:13.120
因为亚历克斯不久前修好了一些东西，但我认为我们没有

00:19:13.120 --> 00:19:20.640
切换回去，我会看一看，然后是新的简单对等版本

00:19:20.640 --> 00:19:24.000
好吧，我认为明年我们可能要看的只是

00:19:24.000 --> 00:19:27.520
检修简单的对等设备并实际将其切换为使用

00:19:27.520 --> 00:19:32.720
像异步迭代器，而不是现在，它仍然是可读流

00:19:32.720 --> 00:19:36.840
在内部，所以我们正在失去一些美德

00:19:36.840 --> 00:19:41.679
是的，那会很好

00:19:44.320 --> 00:19:47.760
很酷，只是在发现问题或需要时对我执行ping操作

00:19:47.760 --> 00:19:53.840
任何帮助，以便我可以更新亚洲

00:19:59.679 --> 00:20:06.480
下一个很酷的地方是停车场没有覆盖的任何地方

00:20:06.480 --> 00:20:08.799
已经

00:20:13.520 --> 00:20:19.200
太不可思议了，我想就是这样了，谢谢大家的光临。

00:20:19.200 --> 00:20:21.520
填写您的异步更新，人们确实会阅读它们

00:20:21.520 --> 00:20:26.559
这是非常有用的呃，但是是的，我很想见到你，这一切都是

00:20:26.559 --> 00:20:30.480
核心专家，对不起，我宣布英菲尼迪23日每周同步

00:20:30.480 --> 00:20:34.720
11月的时候，请保管好外面的东西

00:20:34.720 --> 00:20:37.760
越来越好了，快到圣诞节了，再见

00:20:37.760 --> 00:20:40.799
互联网再见

00:20:40.840 --> 00:20:43.840
再见

