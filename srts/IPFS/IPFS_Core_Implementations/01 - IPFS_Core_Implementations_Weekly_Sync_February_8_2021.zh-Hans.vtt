WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.080 --> 00:00:04.720
再次嗨，大家好，我欢迎公司组织每周同步

00:00:04.720 --> 00:00:08.960
2021年2月8日，我有艾肯的大脑，我将成为您的

00:00:08.960 --> 00:00:12.240
主持人，我们将通过我们的高优先级计划，其他

00:00:12.240 --> 00:00:15.759
倡议问题口袋妖怪质量保证一切都好

00:00:15.759 --> 00:00:18.480
我正在寻找的东西会很棒

00:00:18.480 --> 00:00:23.680
向前转发它，最嗯，我们有一个笔记记录者，它是lidl我们

00:00:23.680 --> 00:00:25.760
可以从高优先级计划开始

00:00:25.760 --> 00:00:34.719
谁可以谈论发行版，呃，去ipfs，嗯

00:00:34.719 --> 00:00:42.960
rc2出来了，假设没有发现特定于bug的错误

00:00:42.960 --> 00:00:46.719
将变成最终版本的rc

00:00:46.719 --> 00:00:49.600
但是尝试一下，让我们知道是否有

00:00:49.600 --> 00:00:53.520
我们错过的事情还是我搞砸了

00:00:56.640 --> 00:01:01.600
这也将必须包括二进制发行版，例如

00:01:01.600 --> 00:01:08.000
嗯ipfs ds转换是因为它要求您在进行新操作时

00:01:08.000 --> 00:01:13.360
发布带有回购迁移的东西，这样就可以了

00:01:13.360 --> 00:01:16.240
当发布发布时

00:01:17.119 --> 00:01:22.560
嗯，上周发布了一个jsipfs，在hackweek的中间

00:01:22.560 --> 00:01:29.920
54已发布，其突出特点是可以遍历nat，因此，如果您有

00:01:29.920 --> 00:01:35.600
支持upnp的路由器将协商外部端口并转发

00:01:35.600 --> 00:01:38.880
它是适当的，所以您在外部很有价值，这是

00:01:38.880 --> 00:01:42.799
令人惊讶的是我不知道我们是否没有在外部有价值

00:01:42.799 --> 00:01:47.360
时间它是如何工作的，我的意思是无论如何都疯了，所以现在它做到了

00:01:47.360 --> 00:01:51.840
很好，嗯，还有其他很出色的东西

00:01:51.840 --> 00:01:55.360
值得一提的是，它升级了level.js

00:01:55.360 --> 00:01:59.280
在浏览器中，这是仅浏览器节点不受浏览器中的此节点的影响

00:01:59.280 --> 00:02:01.840
胸部升级到了最新版本

00:02:01.840 --> 00:02:05.520
呃，它改变了它存储密钥和值的方式

00:02:05.520 --> 00:02:09.520
现在仅缓冲，或者甚至只缓冲数组

00:02:09.520 --> 00:02:12.800
所以会有回购迁移

00:02:12.800 --> 00:02:19.360
当您首次在节点中的浏览器中运行jsipfs54时，不会进行迁移

00:02:19.360 --> 00:02:23.200
发生它是没有必要的，我说它将更改版本号

00:02:23.200 --> 00:02:26.560
回购，但不会做任何重要的工作

00:02:26.560 --> 00:02:29.599
嗯，这只会在浏览器中发生，所以要注意

00:02:29.599 --> 00:02:34.800
如果要在浏览器中部署js ivfs

00:02:35.040 --> 00:02:38.160
今天早些时候还有一个补丁版本，修复了

00:02:38.160 --> 00:02:44.000
呃中止控制器的问题嗯，我有一个问题

00:02:44.000 --> 00:02:48.720
如果您有兴趣，将在注释中链接，请务必阅读

00:02:48.720 --> 00:02:51.840
这就对了

00:02:52.480 --> 00:02:56.160
嗯，下一步是固定服务

00:02:57.519 --> 00:03:04.800
是的，所以在gui桌面和Web ui前面，我们正在接线

00:03:04.800 --> 00:03:08.959
文件屏幕和针对

00:03:08.959 --> 00:03:16.400
希望发生的来自pinata的测试端点

00:03:16.400 --> 00:03:20.720
我们将能够启用MFS自动固定功能

00:03:20.720 --> 00:03:27.120
在0.8版本的候选版本2中，并已排定

00:03:27.120 --> 00:03:34.000
附带0.8，所以我们可能会自动将mfs固定

00:03:34.000 --> 00:03:37.920
嗯，我认为查询方面就是这样

00:03:37.920 --> 00:03:45.120
嗯，我们还学习了gsipf中的http客户端补丁

00:03:45.120 --> 00:03:48.159
恰好鼓掌

00:03:48.879 --> 00:03:52.000
作为54的一部分发货，可供使用

00:03:52.000 --> 00:04:02.480
现在，我们可以继续进行本地固定

00:04:02.480 --> 00:04:07.519
如果是固定电路，是的，是的，我们可以关闭

00:04:07.519 --> 00:04:11.680
目前在当地固定的商店，嗯，它可能会返回，它可能会在返回

00:04:11.680 --> 00:04:17.759
未来具有更多功能，但现在它已经完成了

00:04:17.759 --> 00:04:23.600
如果我们从任何

00:04:23.600 --> 00:04:29.840
尝试了一些最新的修复方法，例如哑光

00:04:31.040 --> 00:04:34.960
我没有听到他的消息，我认为他可能正在努力

00:04:34.960 --> 00:04:38.720
确保固定服务API的东西正在做它需要做的事，但是

00:04:38.720 --> 00:04:42.080
我将与他核对一下，看看是否有新的迁移

00:04:42.080 --> 00:04:45.199
比旧版本更快，内存占用更少

00:04:45.199 --> 00:04:50.639
看起来应该是这样，但可以很好地确认

00:04:54.840 --> 00:04:57.840
谢谢

00:04:59.040 --> 00:05:03.360
嗯接下来是数据传输速度的提高

00:05:04.560 --> 00:05:11.120
是的，所以呃，上个星期的数据传输，嗯，我们

00:05:11.120 --> 00:05:14.000
我们是否大部分时间都在做黑客周活动，但在此之前，我们

00:05:14.000 --> 00:05:17.840
um做了很多工作，只是在扩展位交换回购之外

00:05:17.840 --> 00:05:24.320
看起来很像你知道已完成并重构的样子，也很可爱

00:05:24.320 --> 00:05:28.320
针对alex运行基准测试，而alex已开始执行其中的一些操作

00:05:28.320 --> 00:05:32.400
建立一些指标，我们有一些初始的东西

00:05:32.400 --> 00:05:36.840
呃时髦又有趣，所以我们试图弄清楚那是怎么回事

00:05:36.840 --> 00:05:40.479
嗯，我的意思是一般而言，图形的性能看起来确实不错，但是

00:05:40.479 --> 00:05:44.160
有一些bitwap um的怪异反演

00:05:44.160 --> 00:05:47.199
这是一定的延迟和网络，所以我们想弄清楚发生了什么

00:05:47.199 --> 00:05:50.240
那个嗯，所以我们本周要这样做，

00:05:50.240 --> 00:05:53.840
嗯，就是这样

00:05:58.560 --> 00:06:04.720
很棒，接下来只是增加可发现性和连接性

00:06:04.720 --> 00:06:08.639
是的，在连接管理器中总体上有一个建议

00:06:08.639 --> 00:06:11.280
根据本周的计划记录

00:06:11.280 --> 00:06:15.759
我们会看到何时实际进行此操作，但是

00:06:15.759 --> 00:06:19.600
电锯族也对龙虾的某些功能感兴趣

00:06:19.600 --> 00:06:23.840
对于你们中的那些人可能也不知道是爵士客户

00:06:23.840 --> 00:06:27.280
所以是的，他们可能会帮助一些

00:06:27.280 --> 00:06:30.479
如果这是他们的优先事项，我们仍然

00:06:30.479 --> 00:06:35.840
谈论它，这就是本周

00:06:41.360 --> 00:06:45.600
足够公平了，我刚刚为jstht添加了一个小节

00:06:45.600 --> 00:06:49.440
因为上周雅各布·瓦什科和我自己

00:06:49.440 --> 00:06:53.360
在jsdht上花了整整一周的时间，我们添加了

00:06:53.360 --> 00:06:58.800
um类型是事实，但更令人兴奋的是，我们添加了um

00:06:58.800 --> 00:07:06.240
就像在种子桶上铺上假想的码头一样

00:07:06.240 --> 00:07:10.960
在shah 2256地址空间上均匀分布

00:07:10.960 --> 00:07:14.000
恩，这很酷，恩

00:07:14.000 --> 00:07:17.360
而且还改进了驱逐的算法

00:07:17.360 --> 00:07:24.000
来自k个桶um的同行人数，这非常令人兴奋，

00:07:24.000 --> 00:07:27.039
会帮很多忙

00:07:27.919 --> 00:07:31.440
我认为您在服务器端还是做了另一件事

00:07:31.440 --> 00:07:37.520
客户端，呃，七，哦，都是一样的，它仍然是

00:07:37.520 --> 00:07:42.160
只是现在才可以进行爬升模式，是的，原因我带来了

00:07:42.160 --> 00:07:44.879
造成所有的废话

00:07:44.879 --> 00:07:50.000
巨大的，像断裂的，几分的，几分的

00:07:50.000 --> 00:07:56.960
客户端模式不需要两次射击，因为基本上像

00:07:56.960 --> 00:08:01.120
因为您只关心前两个存储桶和最后一个存储桶

00:08:01.120 --> 00:08:04.960
如果您是客户，中间的一切都无关紧要

00:08:04.960 --> 00:08:08.879
因此，如果我们不这样做，就不必添加它来喜欢浏览器捆绑包之类的东西

00:08:08.879 --> 00:08:15.120
需要的是，我认为最值得注意的事情之一

00:08:15.120 --> 00:08:17.759
如果您根本没有看过视频，我们会

00:08:17.759 --> 00:08:22.720
像去年一样发生的幻影漂移工作，这就是libpdp

00:08:22.720 --> 00:08:25.280
观察台，可让您挂接新节点

00:08:25.280 --> 00:08:28.400
那就是我们在那里开始工作的一件事

00:08:28.400 --> 00:08:32.159
um，以便您可以实际检查路由表检查连接

00:08:32.159 --> 00:08:35.760
只要我们实现了钩子，这将是可重复使用的

00:08:35.760 --> 00:08:43.760
对于那个嗯，我认为大量的回购让p2p也导出一些

00:08:43.760 --> 00:08:47.920
但是我们为其中一个小部件添加的其中一个进行中的图

00:08:47.920 --> 00:08:53.600
是上次Petar整理的Piezor库

00:08:53.600 --> 00:08:57.760
今年检查去查询，所以我们已经

00:08:57.760 --> 00:09:01.440
开始尝试包括它，以便我们可以调试我们的

00:09:01.440 --> 00:09:05.279
我们的js查询ui仍然需要一些工作，但是

00:09:05.279 --> 00:09:08.560
非常高兴能够调试查询

00:09:08.560 --> 00:09:11.040
住在那里

00:09:20.720 --> 00:09:26.640
很好，是bcp都长大了

00:09:28.080 --> 00:09:32.399
嗯接下来是优先级很高的新闻嗯接下来是

00:09:32.399 --> 00:09:35.760
嗯，其他倡议，所以打字稿整合是什么

00:09:35.760 --> 00:09:40.720
不管走到哪里

00:09:41.040 --> 00:09:45.279
除了

00:09:45.920 --> 00:09:50.160
改进了对打字稿波纹的支持

00:09:50.160 --> 00:09:57.360
一旦完成与亚洲的集成，就会发布一个大版本

00:09:57.360 --> 00:10:01.360
改进的jspfs monorepo

00:10:01.360 --> 00:10:08.160
嗯，尤其是打字稿，真正的打字稿，有很多方面

00:10:08.160 --> 00:10:13.200
像php杂波一样的涟漪um，有一个新的捆绑器

00:10:13.200 --> 00:10:17.519
可以处理打字稿的um

00:10:17.519 --> 00:10:23.760
脂类pinoys中的节点测试，该测试用于记录钩子并在以下位置运行气泡

00:10:23.760 --> 00:10:29.360
现在，运行时使用新的捆绑程序来执行此操作

00:10:29.360 --> 00:10:34.399
超级快，所以甚至php节点中的mocha测试也将更快

00:10:34.399 --> 00:10:37.760
浏览器测试将更快，但我会

00:10:37.760 --> 00:10:44.320
用新内容来撰写博客文章或其他内容

00:10:44.320 --> 00:10:48.000
天蓝色所有人都可以阅读，没有必要

00:10:48.000 --> 00:10:50.800
现在解释一切，因为这就是

00:10:50.800 --> 00:10:53.920
骗人的，但是是的，很多东西都出现了，但是在

00:10:53.920 --> 00:10:58.839
这周我希望我们报告中的类型必须是

00:10:58.839 --> 00:11:04.480
完成了，就像bfs repo差不多完成了

00:11:04.480 --> 00:11:10.560
我也认为亚历克斯在xfs中有一些vrs之类的东西，所以我们

00:11:10.560 --> 00:11:14.480
希望本周完成所有这些工作

00:11:14.480 --> 00:11:18.480
让我们看看是否可以管理，是的，我将尝试完成

00:11:18.480 --> 00:11:24.079
嗯，这是本周的unaix，这有点像

00:11:24.079 --> 00:11:29.040
质子真的很毛，我要看那里

00:11:29.040 --> 00:11:31.519
专业的缓冲模块在那里

00:11:31.519 --> 00:11:35.839
将为所有电线运输类型生成类型

00:11:35.839 --> 00:11:38.880
所以我要看的是摆脱质子而只是

00:11:38.880 --> 00:11:42.800
使用其他人的模块，因此我们不再需要维护它

00:11:42.800 --> 00:11:45.920
嗯，但这将对其他所有事物产生连锁反应，因为

00:11:45.920 --> 00:11:48.620
p2p中使用质子来做所有的um

00:11:48.620 --> 00:11:52.000
 [音乐]喜欢一切，所以我们要

00:11:52.000 --> 00:11:55.519
然后喜欢在其他地方推广

00:11:55.519 --> 00:11:58.720
就像新的多格式堆栈一样

00:11:58.720 --> 00:12:02.800
自己的协议缓冲区内容

00:12:02.800 --> 00:12:09.279
之所以喜欢，所以最好不要有多个

00:12:09.279 --> 00:12:13.600
依赖关系树中协议缓冲区模块的类型

00:12:13.600 --> 00:12:17.839
当我们制作浏览器捆绑包时，是的，

00:12:17.839 --> 00:12:21.200
有趣的是，还有一件事要提到

00:12:21.200 --> 00:12:27.120
嗯，实际上是我，亚历克斯发现了这个问题，并且将其修复为

00:12:27.120 --> 00:12:32.160
界面核心，嗯，我们有一个

00:12:32.160 --> 00:12:36.000
亚洲的doc谈论所有打字稿内容

00:12:36.000 --> 00:12:40.000
我们一直在使用的一些最佳实践

00:12:40.000 --> 00:12:43.440
在lipitp涟漪和ipfs报告其中之一

00:12:43.440 --> 00:12:49.920
是在

00:12:49.920 --> 00:12:55.200
外部文件（例如types.ts文件），我们开始

00:12:55.200 --> 00:12:58.000
这在一段时间以前，现在我们喜欢

00:12:58.000 --> 00:13:02.560
多个存储库，但实际上我们发现使用

00:13:02.560 --> 00:13:10.240
点ts文件不是最好的选择，因为当您

00:13:10.240 --> 00:13:15.040
当您重新生成类型，然后其中的一些人可能对此很熟悉

00:13:15.040 --> 00:13:20.399
另一个用户使用您的另一个报告

00:13:20.399 --> 00:13:24.320
当您尝试运行

00:13:24.320 --> 00:13:28.560
TypeScript编译器是否找到点ts文件，即使

00:13:28.560 --> 00:13:32.480
它只是不键入任何调用而试图编译它

00:13:32.480 --> 00:13:36.880
然后尝试解决进出口问题之类的东西

00:13:36.880 --> 00:13:43.760
那么导入路径可能会发生一些错误

00:13:44.079 --> 00:13:47.600
所以我们找出最简单的解决方案

00:13:47.600 --> 00:13:51.680
是实际上停止使用点ds文件作为类型和使用

00:13:51.680 --> 00:13:59.120
点d点ts类型uh的类型声明文件，我们有一个新的

00:13:59.120 --> 00:14:02.959
天蓝色的功能，实际上可以复制任何

00:14:02.959 --> 00:14:08.959
将声明文件键入此文件夹中的“ this”文件夹

00:14:08.959 --> 00:14:14.399
嗯，然后发布没有问题

00:14:14.399 --> 00:14:18.560
我们不再因路径错误而出现问题

00:14:18.560 --> 00:14:21.920
由编译器和类似的东西输出

00:14:21.920 --> 00:14:25.279
实际上更正文件的类型要好一些

00:14:25.279 --> 00:14:29.279
如果我们只在那儿写类型，因为我们可以定义类

00:14:29.279 --> 00:14:33.360
抽象类，编译器不会告诉您

00:14:33.360 --> 00:14:37.040
没有实现就无法拥有抽象类

00:14:37.040 --> 00:14:41.120
嗯，我们创建接口的所有东西，然后

00:14:41.120 --> 00:14:45.040
创建一个额外的接口，以便我们可以定义构造函数

00:14:45.040 --> 00:14:48.240
不需要这样做，因为我们可以将其声明为一个类

00:14:48.240 --> 00:14:52.240
所以一切都存在原型的接口和构造函数

00:14:52.240 --> 00:14:58.639
嗯，所以我们有点改变了改变，表达了最佳实践

00:14:58.639 --> 00:15:01.120
回购是即将到来的事情之一

00:15:01.120 --> 00:15:05.760
在这里进入新时代，我们发布了我们更新的文档

00:15:05.760 --> 00:15:09.920
但这只是提醒，因为这很多

00:15:09.920 --> 00:15:12.399
许多收割者已经在使用这些文件了，

00:15:12.399 --> 00:15:16.240
他们将需要更改以避免这些类型的错误，

00:15:16.240 --> 00:15:20.079
通行证进口通行证

00:15:21.680 --> 00:15:26.959
所有去的人都像你在开玩笑，是的，我的意思是参加聚会太晚了

00:15:26.959 --> 00:15:32.959
您的类型无论如何这都是非常令人兴奋的事情，请阅读文档

00:15:32.959 --> 00:15:41.680
嗯，它将变得更好继续前进badge两无三的支持

00:15:41.680 --> 00:15:44.959
所以是的，所以我们知道您知道这是r，所以很好

00:15:44.959 --> 00:15:52.000
我们已获得使用或维护该产品的人的同意

00:15:52.000 --> 00:15:57.199
ds badge和and 2回购协议，以及我们如何将它们放入一个回购协议中

00:15:57.199 --> 00:16:02.920
这样我们就不会完全失去对所有存储库的跟踪

00:16:02.920 --> 00:16:06.720
[音乐]为了让它进入ipfs，我们

00:16:06.720 --> 00:16:09.839
将需要

00:16:10.160 --> 00:16:17.839
嗯，修改了我们用于badge 2的一些现有工作

00:16:17.839 --> 00:16:25.120
这样我们就拥有了更合理的路径，所以我们有了ipfs init badger之类的东西

00:16:25.120 --> 00:16:28.480
ds为您提供最新版本的of

00:16:28.480 --> 00:16:31.440
不是badge，那是你会做的事

00:16:31.440 --> 00:16:37.120
现在就开始，然后再获取回购版本和

00:16:37.120 --> 00:16:42.959
数据存储规范跟踪随时间变化的变化um

00:16:42.959 --> 00:16:46.240
不知道我的意思是，这似乎不算是很多工作，但这也

00:16:46.240 --> 00:16:49.600
不是超级高优先级，因此不确定确切的时间

00:16:49.600 --> 00:16:55.790
就迁移而言，我们要自动迁移，或者我的意思是

00:16:55.790 --> 00:16:59.040
[音乐]我不，我不认为，所以我认为我们会

00:16:59.040 --> 00:17:04.079
也许您会同时支持这两者，因为ii希望badge 3

00:17:04.079 --> 00:17:08.000
比badge更好，更稳定，但我想

00:17:08.000 --> 00:17:12.240
要知道，对于我们的使用，我们的用户也会体验到

00:17:12.240 --> 00:17:15.439
并且他们拥有有效的sds转换工具，应该可以帮助他们

00:17:15.439 --> 00:17:19.839
嗯迁移

00:17:24.160 --> 00:17:27.520
下一步不是遍历

00:17:29.120 --> 00:17:34.240
嗯，没有重大更新um harsha仍在努力获取

00:17:34.240 --> 00:17:37.919
现有工作合并了整个冲压工作协调工作

00:17:37.919 --> 00:17:41.200
嗯，那就是那里的一些进步，然后在同一时间

00:17:41.200 --> 00:17:46.720
一起将一些脚本实现一起工作，以便我们可以

00:17:46.720 --> 00:17:50.559
只需在网络上进行一些实时测试

00:17:50.559 --> 00:17:54.400
它吸引家用路由器的群体，因此我们可以与

00:17:54.400 --> 00:18:01.840
那个，但是是的，那是

00:18:02.799 --> 00:18:14.880
嗯，unix fsv 1.5和co ipfs，我不知道会做完吗

00:18:14.880 --> 00:18:22.320
没更新kypfs gc改进没事，所以嗯

00:18:22.320 --> 00:18:26.320
gc改进的方法，实际上涉及引用

00:18:26.320 --> 00:18:31.120
计算块数，这与之前的版本相比有很大的变化

00:18:31.120 --> 00:18:36.960
原型设计是为了使工作得以进行

00:18:36.960 --> 00:18:40.960
在黑客马拉松周举行上周，但拿起并

00:18:40.960 --> 00:18:44.160
继续通过实施工作来阻止

00:18:44.160 --> 00:18:50.080
参考计数，所以这是当前最新的

00:18:50.080 --> 00:18:54.000
嗯，想过什么是最好的方法，所以

00:18:54.000 --> 00:18:57.039
嗯，并尝试将其原型制作出来，这样我们就可以

00:18:57.039 --> 00:19:00.240
其他概念证明

00:19:03.760 --> 00:19:07.440
mfs的改进

00:19:07.600 --> 00:19:11.200
mffs的改进实际上是我在大部分时间里所做的工作

00:19:11.200 --> 00:19:13.520
哈克周，那里取得了一些有趣的进展

00:19:13.520 --> 00:19:16.799
嗯，这使得大部分人都能够识别出呃

00:19:16.799 --> 00:19:20.160
抱歉，当前命令可以识别MFFS命名空间

00:19:20.160 --> 00:19:23.440
不一定对演示有任何印象，但其中之一是

00:19:23.440 --> 00:19:26.480
嗯，确实得到实施的能力是

00:19:26.480 --> 00:19:32.160
再次直接将文件导入mfs um并不令人印象深刻

00:19:32.160 --> 00:19:36.720
因为它允许您ipf直接添加和添加文件，但是很高兴

00:19:36.720 --> 00:19:41.200
您没有看到的是，所有这些内容都是gc安全的，因此您无需进行ipfs添加

00:19:41.200 --> 00:19:44.480
一个ipf有文件cp，您可以只添加一个ipfs，然后

00:19:44.480 --> 00:19:47.760
将其直接添加到mfs命名空间中

00:19:47.760 --> 00:19:52.000
以gc安全的方式将所有文件直接传输到其中，因此

00:19:52.000 --> 00:19:56.160
api更好，就像是的，用户体验也好很多，因为

00:19:56.160 --> 00:19:58.640
而不是必须执行两个命令，而是执行一个简单的命令

00:19:58.640 --> 00:20:02.320
直观只需将所有这些文件现在添加到mfs命名空间

00:20:02.320 --> 00:20:04.960
它在gc锁内完成，所以有

00:20:04.960 --> 00:20:07.600
没有会干扰这一点的垃圾收集器

00:20:07.600 --> 00:20:11.440
获得MFS的过程，因此仅用于

00:20:11.440 --> 00:20:15.120
其中一个命令还有一些其他要去的文档，它在那里描述

00:20:15.120 --> 00:20:19.360
工作的三个主要要点是名称

00:20:19.360 --> 00:20:22.559
间距稳定性和命令修改

00:20:22.559 --> 00:20:26.000
但我不打算离开，但如果您愿意，我想就此获得一些反馈

00:20:26.000 --> 00:20:28.080
如果人们要我完成那项努力

00:20:28.080 --> 00:20:31.919
还是继续前进，然后回到gc的工作，

00:20:31.919 --> 00:20:36.159
因此，请优先处理，不要再犹豫了

00:20:36.159 --> 00:20:39.280
如果我们需要的话，把那个呃留给以后再待

00:20:39.280 --> 00:20:43.280
但这就是在那里，那是我们的动力，我们可以

00:20:43.280 --> 00:20:50.720
稳定性的变化又是变化，这是一个微小的变化，比呃

00:20:50.720 --> 00:20:56.080
锁定，使用um和uh以及通道进行信令

00:20:56.080 --> 00:20:59.600
在外勤部内，所以再也没有什么特别的了

00:20:59.600 --> 00:21:03.840
朝外，但这是内部的

00:21:05.120 --> 00:21:07.919
仅此而已

00:21:09.120 --> 00:21:13.120
恩，您想直接进入ffs迁移河吗？

00:21:13.120 --> 00:21:16.799
哦，是的，我很想嗯，实际上我不想报告太多

00:21:16.799 --> 00:21:20.240
从上周开始，那里已经有四个公关了

00:21:20.240 --> 00:21:24.559
嗯，也许有人会知道

00:21:24.559 --> 00:21:29.120
在审查范围内进行一些讨论或某些更改，但

00:21:29.120 --> 00:21:33.360
直到那些评论发生了，我会

00:21:33.360 --> 00:21:36.720
欢迎任何人查看它，看看这些东西是如何工作的，如果您愿意，请尝试一下

00:21:36.720 --> 00:21:41.520
希望这是对它的全面检修

00:21:41.520 --> 00:21:45.840
迁移系统如何

00:21:50.080 --> 00:21:58.880
很棒，所以接下来是ipfs pub sub api改造

00:21:58.880 --> 00:22:04.880
嗯，所以它仍在工作，我在节点之间有可读的流，

00:22:04.880 --> 00:22:09.039
浏览器现在我有一个可以构建的工作进度

00:22:09.039 --> 00:22:13.360
最重要的是，但我仍然需要完成并完成

00:22:13.360 --> 00:22:16.640
我可以提交拉取请求之前的测试

00:22:16.640 --> 00:22:20.799
猜想我可以提交它，但是在我认为它准备好之前

00:22:20.799 --> 00:22:24.240
是的，很高兴看到发生了什么事

00:22:24.960 --> 00:22:28.720
是的，我之所以推迟，是因为该可读流同步

00:22:28.720 --> 00:22:32.080
我有点像一个独立的图书馆出版，所以不是

00:22:32.080 --> 00:22:37.600
整个gsi psync的一部分，因为它不一定必须是

00:22:37.600 --> 00:22:40.480
但我想完成它，以确保它确实可以完成所有操作

00:22:40.480 --> 00:22:44.480
我们想要做的，但是无论如何我都会把它放

00:22:44.480 --> 00:22:48.480
更快地进入拉取请求，所以原意是很棒的超级

00:22:48.480 --> 00:22:53.360
令人兴奋的呃内存泄漏和js ipfs说不

00:22:53.360 --> 00:23:00.159
更新，我们否认它的存在很方便，不，我只是停顿了一下

00:23:00.159 --> 00:23:05.600
直到我收到他们的回音，呃，等我完成其他工作后，我可能会捡起来

00:23:05.600 --> 00:23:09.840
只是为了确保我们不会错过任何事情，是的

00:23:09.840 --> 00:23:16.960
公平，嗯，杰西让p2p测试建立了

00:23:16.960 --> 00:23:20.880
是的，这周没有比赛，我想我们可能可以

00:23:20.880 --> 00:23:23.919
把所有这些与dht工作一起

00:23:23.919 --> 00:23:27.840
因为dhtv是受此影响的涟漪之一

00:23:27.840 --> 00:23:34.159
然后我们可以决定要为酒吧做什么，然后从那里再买一个河马

00:23:35.360 --> 00:23:39.919
很好，这使我们结束了其他计划

00:23:39.919 --> 00:23:44.960
嗯，现在我们继续讨论所有其他业务类型的东西

00:23:44.960 --> 00:23:48.320
设计评审建议书，有没有人要提出建议

00:23:48.320 --> 00:23:51.840
进行设计审查

00:23:54.320 --> 00:23:57.520
好吧，我还没有正式发布它，但是如果有人想看看

00:23:57.520 --> 00:24:01.919
MFS我为MFS提出的建议，看看这是否有意义

00:24:01.919 --> 00:24:06.559
我可以链接到html版本，但是我也可以

00:24:06.559 --> 00:24:12.400
将hack md uh链接放在人们可以对此发表评论的地方或其他任何地方

00:24:12.400 --> 00:24:14.559
只是得到一些反馈，这应该是一个真正的

00:24:14.559 --> 00:24:19.840
轻松阅读，这并不是真正的设计，更多的是功能建议

00:24:20.400 --> 00:24:27.120
mfs ii wow听起来很戏剧性，它是如此悲惨

00:24:27.200 --> 00:24:31.600
我想看看实际上有一个文件

00:24:31.600 --> 00:24:35.200
是的，哦，我可以把hack md放在

00:24:35.200 --> 00:24:38.960
在悠闲的呃，如果你想使评论直接平移出来，否则的HTML

00:24:38.960 --> 00:24:45.039
码头与那里很酷的ipfs链接链接，我只是把它放在呃

00:24:45.039 --> 00:24:48.159
复制将hackmd链接粘贴到markdown中

00:24:48.159 --> 00:24:51.360
记录在案的会议

00:24:51.360 --> 00:24:55.520
嗯，是的，无论您需要什么权限，其他人

00:24:55.520 --> 00:25:01.840
正在看这个电话也可以看一下，我现在就做

00:25:03.360 --> 00:25:07.600
如果没有进一步的设计建议

00:25:07.600 --> 00:25:15.840
我们可以继续使用拦截器并询问

00:25:16.720 --> 00:25:20.480
一般将军问，因为我们正在寻找

00:25:20.480 --> 00:25:26.960
呃重组的东西来了新的团队来了，这次会议可能会被拆除

00:25:26.960 --> 00:25:32.559
将来赞成其他论坛等等

00:25:32.559 --> 00:25:35.679
就像我们会在接近时评估这个问题一样

00:25:35.679 --> 00:25:39.919
因为我们要确保我们有适当的下架时间um

00:25:39.919 --> 00:25:44.480
应该指望开始总结我们在

00:25:44.480 --> 00:25:49.279
接下来的几周，并且在我们过渡到

00:25:49.279 --> 00:25:52.080
这些小组，所以请记住这一点

00:25:52.080 --> 00:25:56.000
东西不捡东西开始打包工作，我们应该停止

00:25:56.000 --> 00:26:00.880
几个星期就可以滚下来了，所以这不需要突然，但是

00:26:00.880 --> 00:26:06.080
作为我曾经与之合作的同事，有一些事情要牢记

00:26:06.080 --> 00:26:11.840
喜欢说为什么还没有完成为什么为什么还没有完成

00:26:12.720 --> 00:26:20.640
接下来是问题，我有一个问题，嗯，所以

00:26:20.640 --> 00:26:23.919
在黑客周中，我试图做一些令我惊讶的事情

00:26:23.919 --> 00:26:26.559
工作，我想知道我是否正在做

00:26:26.559 --> 00:26:33.279
错误的想法是我会为我拿出一个狗节点

00:26:33.279 --> 00:26:39.360
cid，然后将其克隆并替换一些链接，然后

00:26:39.360 --> 00:26:45.600
将其写回到ipfs以获取树的新更新版本

00:26:45.600 --> 00:26:52.240
但这似乎造成了一条折断的狗，我想，或者至少那么你不是

00:26:52.240 --> 00:26:58.320
能够再获取或导航它是

00:26:58.320 --> 00:27:02.480
应该起作用的是错误是功能

00:27:02.480 --> 00:27:05.520
是好事吗

00:27:05.600 --> 00:27:09.120
是通过块api还是通过dag

00:27:09.120 --> 00:27:13.840
 api是的，我知道，所以我会通过甲板上的api，我会得到一个

00:27:13.840 --> 00:27:17.120
狗铅节点，所以我然后打电话给删除链接的东西

00:27:17.120 --> 00:27:21.200
然后我打电话给添加链接的东西来替换那些东西，然后我

00:27:21.200 --> 00:27:27.840
说道格放，你知道我似乎没有时间

00:27:27.840 --> 00:27:31.440
像挖出什么是行不通的，但那是行不通的，然后我最终

00:27:31.440 --> 00:27:36.720
将dag节点编码为一个块并将其保存为有效的块

00:27:36.720 --> 00:27:40.159
但是是的，所以我认为简短的版本是

00:27:40.159 --> 00:27:44.880
ip dag api很容易被破坏，因为多年未触及

00:27:44.880 --> 00:27:51.279
好吧，我的意思是我们确实有睾丸激素，所以对每个人的建议

00:27:51.279 --> 00:27:54.399
观看这是改用Blog API并执行

00:27:54.399 --> 00:27:57.840
在客户端编码和编码，然后使用block api将是我的

00:27:57.840 --> 00:28:02.640
推荐当前这是针对js

00:28:02.640 --> 00:28:07.520
我想查看更多详细信息，因为这听起来应该可行

00:28:07.520 --> 00:28:11.840
是的，是的，我们应该确定创建一个测试用例

00:28:11.840 --> 00:28:15.279
只是要确保它是坏的还是

00:28:15.279 --> 00:28:19.039
但我只想确保这是预期的行为

00:28:19.039 --> 00:28:23.760
下课后没看到我这应该工作

00:28:23.760 --> 00:28:27.520
好的，另一个相关的问题是

00:28:27.520 --> 00:28:32.240
基于此，在我看来，能够

00:28:32.240 --> 00:28:35.279
从CID创建一个MFS，然后执行

00:28:35.279 --> 00:28:38.799
您所有的文件系统都使用insert并尝试执行该块

00:28:38.799 --> 00:28:43.279
来回标记是否有一个原因，为什么应该有一个MFS

00:28:43.279 --> 00:28:46.880
哦，为什么你不应该控制它映射到什么

00:28:46.880 --> 00:28:50.080
在cid方面，我们应该能够做类似的事情

00:28:50.080 --> 00:28:54.880
您知道使用ipfs路径（如创建目录）并获得新的cid

00:28:54.880 --> 00:28:59.360
该部分的后部像

00:28:59.360 --> 00:29:04.960
就像文件api的统一一样，实现梦想就像一场梦一样

00:29:04.960 --> 00:29:07.200
日

00:29:08.480 --> 00:29:13.520
也许它应该是mfs2 api的一部分，是的，您可以随意提出

00:29:13.520 --> 00:29:16.480
功能，甚至只是说说可能与您有关的话题进行讨论

00:29:16.480 --> 00:29:19.039
知道这绝对不是直接的一部分

00:29:19.039 --> 00:29:21.760
如果我们要在它上做很多工作，现在是时候弄清楚了

00:29:21.760 --> 00:29:26.480
我们想做什么，或者至少我们应该做什么

00:29:26.480 --> 00:29:30.480
在某些时候，应该没有mfs，就像

00:29:30.480 --> 00:29:34.559
这是一个CID，我碰巧喜欢坚持它的根源

00:29:34.559 --> 00:29:38.799
正如您所知，我有一种方便的方法可以参考

00:29:38.799 --> 00:29:43.360
在未来的嗯，但它应该就像让我让

00:29:43.360 --> 00:29:48.000
我以我熟悉的方式像cli一样改变我的障碍物，你知道我知道

00:29:48.000 --> 00:29:51.600
如何使用like bash制作一个目录like

00:29:51.600 --> 00:29:56.240
为什么我无论如何都不能做到这一点

00:29:56.240 --> 00:29:59.919
意识到时间，但是

00:30:00.480 --> 00:30:07.360
嗯，我有一个简短的问题，那是一个像

00:30:07.360 --> 00:30:11.600
我们已经有地方了吗

00:30:11.840 --> 00:30:15.840
像指针一样提示您遇到的事情

00:30:15.840 --> 00:30:24.240
当尝试使用时，就像您知道js ipfs http客户端

00:30:24.240 --> 00:30:27.840
电子，或者我几乎什么都不知道

00:30:27.840 --> 00:30:34.000
电子，因为电子是特殊的嗯，像这样的东西就像

00:30:34.000 --> 00:30:37.039
不论是在骇客周还是其他情况下都喜欢跑步的人

00:30:37.039 --> 00:30:41.760
就像他们知道答案一样，但现在也许想告诉其他人

00:30:41.760 --> 00:30:45.360
人们了解答案，他们不必自己发现答案

00:30:45.360 --> 00:30:48.840
以及js ipfs存储库中的docs目录

00:30:48.840 --> 00:30:53.840
嗯，像考虑电子的好地方。md像这里是这里

00:30:53.840 --> 00:30:58.000
那种东西很酷的陷阱

00:30:58.000 --> 00:31:00.240
谢谢

00:31:02.559 --> 00:31:06.640
也是聊天中来自忠诚的链接

00:31:08.320 --> 00:31:12.080
呃还有其他问题吗

00:31:14.480 --> 00:31:22.399
是的，这更多的是呃，然后问呃或类似的东西

00:31:22.399 --> 00:31:26.000
事实证明，经过一番戳后

00:31:26.000 --> 00:31:33.440
嗯，快照有很多怪癖，以及它是如何操作和确定范围的

00:31:33.440 --> 00:31:38.960
而您被允许做的事情就是将严格限制的快照作为

00:31:38.960 --> 00:31:42.880
cli工具有点烦人，因为您通常

00:31:42.880 --> 00:31:45.760
期望您的cli工具可以在您提供的任何路径上工作

00:31:45.760 --> 00:31:49.519
但是拍拍就像不行，除非你处在其中之一，否则你不存在

00:31:49.519 --> 00:31:53.519
我事先被告知的地方我可以进入

00:31:53.519 --> 00:31:56.720
嗯，现在我们可能要放

00:31:56.720 --> 00:32:00.960
一些文档解释了这一切如何在网站上起作用，直到您弄清楚

00:32:00.960 --> 00:32:05.679
您到底想怎么做，但是如果您有意见

00:32:05.679 --> 00:32:10.720
或者您知道处理瞬息万变的事物的经验以及如何

00:32:10.720 --> 00:32:14.720
您希望他们能够工作，那么您的反馈将是

00:32:14.720 --> 00:32:18.960
感谢您要指导此反馈

00:32:18.960 --> 00:32:25.039
是的，我有一个地方，我对此有何看法

00:32:25.039 --> 00:32:28.799
我的意见是，每当我有任何CLI工具时，都要确保不将其安装为

00:32:28.799 --> 00:32:32.320
捕捉，所以如果我们有，也许我们会使用

00:32:32.320 --> 00:32:36.640
另一个，我们通过另一个软件包管理器使ipfs可用，这可能

00:32:36.640 --> 00:32:39.840
可能值得

00:32:40.640 --> 00:32:48.320
是的，我们必须打开一个open或重新打开一个github问题

00:32:48.320 --> 00:32:53.440
关于这个讨论，我将发布链接到关于

00:32:53.440 --> 00:32:57.840
文献资料

00:32:58.720 --> 00:33:07.039
在笔记中，虽然我是说嗯，一般来说，有些设计计划是

00:33:07.039 --> 00:33:10.640
有用，因为我们最终还会发生这种情况

00:33:10.640 --> 00:33:15.679
例如，mac uh沙箱和ios沙箱之类的东西

00:33:15.679 --> 00:33:19.760
您将会看到越来越多的案例遇到

00:33:19.760 --> 00:33:22.799
在默认情况下是孤立环境的环境中运行

00:33:22.799 --> 00:33:25.440
对这些东西有什么计划

00:33:25.440 --> 00:33:27.840
当他们发现自己在那种环境中时工作

00:33:27.840 --> 00:33:32.480
两者都可能与用户进行了类似的交流

00:33:32.480 --> 00:33:35.840
在所有这些情况下，嘿，您将需要使用沙箱

00:33:35.840 --> 00:33:41.039
这样做是为了访问文件系统其余部分上的内容

00:33:44.640 --> 00:33:48.399
是的，我猜我猜有一些类似用户诊断的东西

00:33:48.399 --> 00:33:52.399
你知道那里有各种各样的形式吗

00:33:52.399 --> 00:33:57.679
我是我的笔记在一个缺口后面，或者您知道嘿，我无法访问任何

00:33:57.679 --> 00:34:02.320
这些文件，因为我的东西只是我的东西

00:34:02.320 --> 00:34:06.080
仅限于使用您知道主目录或主目录挂载的目录

00:34:06.080 --> 00:34:09.600
媒体目录或其他

00:34:19.040 --> 00:34:22.639
很酷，让我们总结10分钟，是的

00:34:22.639 --> 00:34:26.560
停车场没有更多的问题，只有答案

00:34:26.560 --> 00:34:29.119
停车场

00:34:29.919 --> 00:34:33.679
好吧，我们已经完成了惊人的包裹，谢谢大家的光临，不要忘了

00:34:33.679 --> 00:34:36.399
填写您的异步更新，我知道它说人们很调皮

00:34:36.399 --> 00:34:38.800
他们不这样做，你应该这样做我很顽皮，我不

00:34:38.800 --> 00:34:42.720
我要去做亚历克斯，每个人都应该做，好酷

00:34:42.720 --> 00:34:46.839
谢谢大家的光临，我们下周再见，也许我们不会

00:34:46.839 --> 00:34:49.839
再见

