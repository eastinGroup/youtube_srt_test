WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.799 --> 00:00:05.200
大家好，欢迎来到ipfs核心表示每周同步

00:00:05.200 --> 00:00:10.559
2020年10月26日，星期一，我是国王，我将成为您的房东

00:00:10.559 --> 00:00:14.639
我们将玩我们所带来的成就的游戏

00:00:14.639 --> 00:00:17.760
接下来我们要做的事情将经历我们的高优先级计划

00:00:17.760 --> 00:00:22.160
我们的优先级略低的计划

00:00:22.160 --> 00:00:26.480
然后设计审查停车场Qa，我们将拥有一个很棒的

00:00:26.480 --> 00:00:30.560
时间呃，这将是惊人的，也许是有史以来最好的一个。

00:00:30.560 --> 00:00:33.680
事不宜迟，让我们从高优先级入手

00:00:33.680 --> 00:00:37.360
主动，所以即将发布的版本，我可以

00:00:37.360 --> 00:00:41.120
快速讨论即将推出的更改，嗯，我们

00:00:41.120 --> 00:00:44.480
在上周末收到了类型，谢谢

00:00:44.480 --> 00:00:49.120
感谢伊拉克人的英勇努力，对此深表感谢

00:00:49.120 --> 00:00:52.160
嗯，那要出去了，嗯，你知道

00:00:52.160 --> 00:00:54.879
只要没有人告诉我这些类型不起作用

00:00:54.879 --> 00:00:59.280
所以我只是想清理一些呃你知道低垂的水果

00:00:59.280 --> 00:01:02.640
错误修复以及此类问题，在我们明天发布该问题之前，

00:01:02.640 --> 00:01:07.280
可能是星期三最坏的情况um包括删除

00:01:07.280 --> 00:01:11.200
山高，这是人们应该做的事情

00:01:11.200 --> 00:01:16.240
意识到呃，而且就像许多试图解决的小问题

00:01:16.240 --> 00:01:18.479
像带来一样

00:01:18.479 --> 00:01:22.720
类型工作的原因是很多api没有对齐

00:01:22.720 --> 00:01:26.240
在http客户端和核心之间，它们应该是

00:01:26.240 --> 00:01:30.640
因此，其中一些api现在比以前更加对齐

00:01:30.640 --> 00:01:35.920
嗯，希望能减少他们可能使某些人绊倒的困惑，请这样做

00:01:35.920 --> 00:01:41.759
阅读发行说明，无论如何它都将非常重要

00:01:41.759 --> 00:01:45.520
还有谁可以谈论即将发布的版本

00:01:45.520 --> 00:01:50.000
本周可能会有一个ipget发布

00:01:50.000 --> 00:01:55.439
嗯是的，去ip5.8还是有些需要得到的东西

00:01:55.439 --> 00:02:00.079
我们上周完成了，嗯，发生的事情不多

00:02:00.079 --> 00:02:04.079
人与人之间的前线

00:02:04.079 --> 00:02:08.239
城镇和呃，以及其他即将发生的事情

00:02:08.239 --> 00:02:15.680
但是，嗯，我们是我们大部分人发布的地狱，所以

00:02:15.680 --> 00:02:19.840
呃应该是应该继续前进

00:02:21.280 --> 00:02:24.319
我有一些ipget的更新，这些更新不是

00:02:24.319 --> 00:02:28.080
发布为prs，因此，如果有任何功能再次运行

00:02:28.080 --> 00:02:31.920
在该版本发布之前让我知道，或者是否已确定功能

00:02:31.920 --> 00:02:37.840
那么我们总是可以把它们放在下一次

00:02:38.640 --> 00:02:42.400
嗯，快喊出来，嗯，ipfs桌面

00:02:42.400 --> 00:02:48.959
0.13 uh前一段时间发货，就像过去两周一样

00:02:48.959 --> 00:02:54.879
它随go ipfs 0.7一起提供，就是这样

00:02:58.720 --> 00:03:02.000
我看的时候很甜蜜，因为我们没有

00:03:02.000 --> 00:03:06.560
上周赶上来了，所以这就是一个值得关注的版本

00:03:06.560 --> 00:03:13.599
为了这个草图，很酷，继续进行钉扎服务

00:03:16.159 --> 00:03:21.120
是的，就固定服务而言，嗯

00:03:21.120 --> 00:03:24.159
我呃实施基本上完成了

00:03:24.159 --> 00:03:27.680
我想在打印之前先对此进行审查

00:03:27.680 --> 00:03:34.080
今天，如果一切看起来都很好，嗯，那会把固定服务放进去

00:03:34.080 --> 00:03:36.319
在一个更好的地方

00:03:36.319 --> 00:03:41.200
通过支持我们的数据存储库um来提高性能

00:03:41.200 --> 00:03:43.599
那里应该没有任何东西

00:03:43.599 --> 00:03:46.159
破坏api之类的更改，使它们不可见

00:03:46.159 --> 00:03:50.640
事情应该工作得更快，放下一些基础

00:03:50.640 --> 00:03:53.840
进行api更改，

00:03:53.840 --> 00:03:57.280
即将与远程待处理的api同步，因此

00:03:57.280 --> 00:04:01.120
这个周末所有的事情都在进行中

00:04:01.120 --> 00:04:05.360
成为即将发布的版本的一部分

00:04:06.640 --> 00:04:10.319
是的，我们还关联了，我不记得我是否将其发布在这里

00:04:10.319 --> 00:04:16.479
还是上个礼拜没有，但是是的，我们确实有很多收获

00:04:16.479 --> 00:04:20.880
试图使我们想要的内容保持一致的讨论

00:04:20.880 --> 00:04:23.440
新型本地固定api看起来像

00:04:23.440 --> 00:04:28.080
与远程固定api，因此它们基本上是相同的

00:04:28.080 --> 00:04:34.639
嗯和lytle链接在那儿，对

00:04:34.639 --> 00:04:38.720
远程api啊是是从那出来的一件事

00:04:38.720 --> 00:04:45.919
是默认值吗，默认搜索名称是

00:04:45.919 --> 00:04:52.000
嗯，不区分大小写，嗯，所以你知道

00:04:52.000 --> 00:04:56.960
有效的星词um是您一直在寻找的东西，

00:04:56.960 --> 00:04:59.360
这就像运行一个昂贵的操作

00:04:59.360 --> 00:05:05.120
特别是作为默认值，因此我们想更改默认值，以便

00:05:05.120 --> 00:05:09.600
这是一个快速的精确匹配，您可以对索引执行某些操作

00:05:09.600 --> 00:05:14.639
像001 uh这样的东西也可以使它变得真正

00:05:14.639 --> 00:05:17.759
很高兴与您可能知道的本地数据存储一起使用

00:05:17.759 --> 00:05:24.400
疯狂的引脚数，如果您有呃，那pr就在那里

00:05:24.400 --> 00:05:28.720
有什么想法，但是我想你知道你从中学到东西

00:05:28.720 --> 00:05:31.600
从ipfs pin ls之类的一些课程中

00:05:31.600 --> 00:05:34.880
并拥有默认值是快速的事情，

00:05:34.880 --> 00:05:38.000
让人们选择加入更多信息

00:05:38.000 --> 00:05:42.639
我认为速度较慢是明智之举

00:05:45.900 --> 00:05:49.110
[音乐]

00:05:50.320 --> 00:05:56.240
同样，一旦我们登陆其中一些，我会去ipfs prs进行一些测试，

00:05:56.240 --> 00:06:01.360
有一些例子，如果人们想测试他们的客户

00:06:01.360 --> 00:06:04.479
针对远程服务，他们可以看到

00:06:04.479 --> 00:06:08.400
我们正在做什么，只是用某种方式旋转了一个Docker容器

00:06:08.400 --> 00:06:12.960
恩安德鲁的um固定服务服务器，然后就像运行一些查询一样

00:06:12.960 --> 00:06:16.319
再次对它运行一些http查询，就像看看一切如何

00:06:16.319 --> 00:06:20.080
我们实际上是否已经有任何已发布的基准测试，我们可以

00:06:20.080 --> 00:06:23.759
把它拿出来反对当地的东西

00:06:23.759 --> 00:06:30.479
恩，Alex um，您收集基准测试时使用过哪些脚本

00:06:30.479 --> 00:06:35.360
嗯，是的，所以在jsonpfs的问题上，我把我在那里使用的脚本放了起来

00:06:35.360 --> 00:06:40.800
但是它们只是我可以测试的临时性东西，我只是想知道是否

00:06:40.800 --> 00:06:42.800
他们就像我们可以运行的shell脚本

00:06:42.800 --> 00:06:46.560
去ipfs或如果他们是特定的好吧，是的，有一个艺术javascript测试

00:06:46.560 --> 00:06:50.240
您可以将守护程序控制器翻转到其他

00:06:50.240 --> 00:06:54.000
实现，它将像csv格式一样启动

00:06:54.000 --> 00:06:57.759
数据你可以画一个图

00:06:58.160 --> 00:07:01.520
Alex已经收集了图中的一些数据点

00:07:01.520 --> 00:07:04.560
关于ipfs目前有多慢的地方

00:07:04.560 --> 00:07:09.120
好吧，我希望能够证明反对

00:07:09.120 --> 00:07:14.720
相同的图表，并且能够看到还有基准问题，

00:07:14.720 --> 00:07:20.080
马特·奥伯（Matt Ober）补充说，他去了ipfs仓库

00:07:20.080 --> 00:07:24.319
针对badge的分析，因此一旦获得

00:07:24.319 --> 00:07:27.840
一个分支或类似的东西打他，也许他可以运行他的他的

00:07:27.840 --> 00:07:31.120
针对它的基准以进行验证

00:07:31.120 --> 00:07:34.560
或只是数据存储的性能一般都只是引脚

00:07:34.560 --> 00:07:38.400
修改密码哦，好吧那将是完美的

00:07:38.400 --> 00:07:42.400
是的，我和他谈过，一旦我们有了一些东西，他就是他的好

00:07:42.400 --> 00:07:45.840
测试没事

00:07:49.440 --> 00:07:52.560
从列表中很酷的下一个是sekai移除，所以

00:07:52.560 --> 00:07:56.240
嗯，我谈到jcpf将会进展顺利，它将被删除

00:07:56.240 --> 00:08:00.240
在下一个即将发布的版本中

00:08:01.840 --> 00:08:05.440
嗯接下来就是改善可发现性和连通性

00:08:05.440 --> 00:08:08.879
那很酷，关于第二次移除雅各布一件事

00:08:08.879 --> 00:08:15.199
什么时候有什么更新呢？

00:08:15.199 --> 00:08:18.560
人们有点，是的，让我们同步

00:08:18.560 --> 00:08:21.919
这个礼拜吧，我们还有一些潜力，比如时间

00:08:21.919 --> 00:08:25.280
改变了一些东西，但我们会同步起来，我认为

00:08:25.280 --> 00:08:27.919
我们应该能够合理地关闭一些东西

00:08:27.919 --> 00:08:32.560
很快，那么我们可以离线接触的内容

00:08:38.560 --> 00:08:43.120
好的，所以在js中提高发现性以及发现和连接性

00:08:43.120 --> 00:08:46.399
我上周不在，所以没有太多进展

00:08:46.399 --> 00:08:52.560
但是在外部继电器前面，我只有一个待定的公关，这是自定义

00:08:52.560 --> 00:08:56.080
公布过滤器以过滤出以提供用户

00:08:56.080 --> 00:08:59.120
过滤掉他们不想要的地址的能力

00:08:59.120 --> 00:09:02.800
宣布呃，基本上就是这样，我只需要添加测试，所以

00:09:02.800 --> 00:09:09.200
今天大概应该做吧，我主要是在会合部分

00:09:09.200 --> 00:09:12.399
现在在发现api和随机上被阻止

00:09:12.399 --> 00:09:16.640
实施出现，我可能会开始创建一个

00:09:16.640 --> 00:09:21.519
同时会合的例子就是

00:09:21.519 --> 00:09:24.560
这个星期

00:09:26.640 --> 00:09:30.080
遵循json pdp的原则，只是我们

00:09:30.080 --> 00:09:33.360
确实在上周发布了一个补丁，该补丁修复了

00:09:33.360 --> 00:09:36.560
泄漏没有正确关闭的流

00:09:36.560 --> 00:09:41.200
这样就可以进行修补，然后需要进行一些改进接口的工作

00:09:41.200 --> 00:09:43.920
我已经开始了，但是那很可能

00:09:43.920 --> 00:09:47.680
直到下周或希望我们登陆的东西

00:09:47.680 --> 00:09:52.160
可以与um po30一起运送

00:10:00.080 --> 00:10:05.279
很酷，那就是高优先级计划的结束，所以继续前进

00:10:05.279 --> 00:10:11.360
改善网络用户界面文件广告的其他举措

00:10:12.079 --> 00:10:15.360
那里没有太多更新

00:10:15.360 --> 00:10:20.320
后面的类型和打字稿的东西，所以希望本周

00:10:20.320 --> 00:10:25.360
嗯，但有公关吗？下一个也是我的，但已经亚历克斯

00:10:25.360 --> 00:10:29.920
谈论它打字稿的东西，它登陆了，谢谢亚历克斯

00:10:29.920 --> 00:10:34.240
为了通过这个标签组队，我们将

00:10:34.240 --> 00:10:37.519
可能会随着时间的推移添加更多的东西，因为它不能完全覆盖

00:10:37.519 --> 00:10:40.720
一切都很好，但实际上学习一些东西是很好的

00:10:40.720 --> 00:10:47.839
然后改善树上的东西

00:10:51.760 --> 00:10:59.200
我认为我们只是在等待waiting族成员提出一个

00:10:59.200 --> 00:11:03.040
释放，然后决定是否进行重大更改

00:11:03.040 --> 00:11:06.800
他们所做的将透明地发生

00:11:06.800 --> 00:11:10.800
还是我们直接跳过badge 3。

00:11:10.800 --> 00:11:14.959
恩安德鲁，因为他们有没有对此进行任何更新

00:11:14.959 --> 00:11:20.959
还是不，我一直在检查，除非他们将其发布，否则他们不会

00:11:20.959 --> 00:11:25.839
就在这次会议之前，他们还没有发布

00:11:25.839 --> 00:11:30.240
所以是的，就像你说的那样，他们引入了一些重大变化

00:11:30.240 --> 00:11:32.640
但是他们一直遵循的规则

00:11:32.640 --> 00:11:35.680
很好的是，如果他们休息就休息了，那么他们会再做一次

00:11:35.680 --> 00:11:38.800
这是主要发行版本，所以是的，我们不知道我们是否要去badge 2或

00:11:38.800 --> 00:11:43.839
rs 3可获得这些功能

00:11:44.800 --> 00:11:49.360
所以我可以ping他们，看看我能不能得到

00:11:49.360 --> 00:11:54.320
对此，但我怀疑他们目前还没有一个

00:11:54.320 --> 00:11:57.760
是的，我认为他们是我的意思，我最后一次检查了他们是否应该是他们

00:11:57.760 --> 00:12:02.480
像基于时间的发布一样经常这样做，但也许是为了

00:12:02.480 --> 00:12:04.639
在发生重大变化的地方更大的东西

00:12:04.639 --> 00:12:08.160
他们改变了他们改变了规则

00:12:08.839 --> 00:12:15.920
好吧，我们的截止日期是什么

00:12:15.920 --> 00:12:20.880
我的意思是说如果它在rc准备出去之前已经准备好了，那么它就可以了

00:12:20.880 --> 00:12:23.600
如果不是的话，它将进入下一个

00:12:23.600 --> 00:12:26.880
对，这很简单

00:12:31.519 --> 00:12:36.639
很酷的下一个DNS加法器解析为爵士乐

00:12:36.639 --> 00:12:41.680
是的，三个其他人的公关呃可能是空的，液体b是

00:12:41.680 --> 00:12:46.320
准备进行审查，我刚刚谈到了对mifmt的审查

00:12:46.320 --> 00:12:49.839
今天早些时候，我只需要测试

00:12:49.839 --> 00:12:54.160
迈克尔的公关，更新了示例以使用新的dns

00:12:54.160 --> 00:13:00.880
其他多其他人，并检查是否现在一切都按预期进行，所以

00:13:00.880 --> 00:13:07.839
我希望我们能在本周完成这项工作

00:13:08.480 --> 00:13:14.880
rad um使我们走到了其他倡议的尽头，所以现在继续前进

00:13:14.880 --> 00:13:18.480
到其他的东西，所以设计审查建议任何东西

00:13:18.480 --> 00:13:22.240
您想进行有关的设计审查

00:13:26.160 --> 00:13:31.600
没有人被封锁或任何人都没有酷

00:13:32.839 --> 00:13:38.000
问嗯我有关于呃的问题

00:13:38.000 --> 00:13:45.680
集合点和发现API就是那些

00:13:45.680 --> 00:13:52.160
就像那些带有uh文档的prs一样，还是在该级别上

00:13:52.160 --> 00:13:56.079
只是实现代码而已

00:13:56.079 --> 00:14:00.880
集合点是在lipitp集合点中实现的PR

00:14:00.880 --> 00:14:05.279
发现api模块是一个有建议的问题

00:14:05.279 --> 00:14:09.680
基本上，目标是使用集合点和内容路由

00:14:09.680 --> 00:14:13.519
最终会在将来用于此服务发现的其他模块

00:14:13.519 --> 00:14:17.440
所以这基本上是一个问题，我可以将链接发送给您

00:14:17.440 --> 00:14:21.279
呃，我的提议在哪里，现在我们应该去做

00:14:21.279 --> 00:14:31.839
是的，如果你想写个便条，是的，谢谢

00:14:34.320 --> 00:14:45.839
有人有任何疑问吗

00:14:46.240 --> 00:14:51.199
很好，那么停车场就没有其他地方了

00:14:51.199 --> 00:14:56.720
嗯，我只是将物品放在那里，所以我们在js ipfs中确实有一堆地方

00:14:56.720 --> 00:14:59.360
说有说回购和

00:14:59.360 --> 00:15:04.320
您可以提供实现，但几乎有一个js ipfs回购

00:15:04.320 --> 00:15:08.160
实施和bitswap的类似内容，并且有一些接口

00:15:08.160 --> 00:15:13.440
可能其他人可以实现的定义和降价文件

00:15:13.440 --> 00:15:18.240
我想做的实际上是在Typescript中有一个接口定义

00:15:18.240 --> 00:15:21.920
对于那些事情，然后确保我们的代码是

00:15:21.920 --> 00:15:27.360
反对接口定义与实际实现，所以其他

00:15:27.360 --> 00:15:31.759
可以实际实现它们并通过以下方式验证实现

00:15:31.759 --> 00:15:37.199
如果愿意，可以运行类型检查器，如果愿意，可以进行测试

00:15:37.199 --> 00:15:40.000
已经有很多地方

00:15:40.000 --> 00:15:44.079
不要使用不属于接口定义的内部部件

00:15:44.079 --> 00:15:47.519
所以我认为这将有助于我们更加诚实

00:15:47.519 --> 00:15:51.839
我们使用什么以及我们想要的界面是什么

00:15:51.839 --> 00:15:55.199
现在我们在某些地方有类型，实际上很容易

00:15:55.199 --> 00:15:58.800
这样做并确保我们在那里做正确的事

00:15:58.800 --> 00:16:03.440
嗯，我认为这是一个很好的起点

00:16:03.440 --> 00:16:06.000
可能类似于数据存储，因为我们有

00:16:06.000 --> 00:16:09.040
标题界面数据存储定义了一套

00:16:09.040 --> 00:16:13.360
验收测试从根本上验证了实施

00:16:13.360 --> 00:16:17.680
是一个数据存储库um，向其添加类型就像

00:16:17.680 --> 00:16:20.800
逻辑扩展名，因为如果那是一个

00:16:20.800 --> 00:16:25.519
像是平底锅能用，那么我们可以完全复制该平底锅

00:16:25.519 --> 00:16:31.360
在其他方面，好吧，嗯，你是说我们应该将它添加到那里

00:16:31.360 --> 00:16:34.880
或有一个单独的涟漪，我有点是将界面作为

00:16:34.880 --> 00:16:38.399
分开的东西，所以您不必拉入其他依赖项将是

00:16:38.399 --> 00:16:42.800
本身很有用，但也许是一个更好的选择

00:16:42.800 --> 00:16:46.000
但是数据存储区的所有实现都会

00:16:46.000 --> 00:16:49.680
依靠接口来运行这些句子测试

00:16:49.680 --> 00:16:58.240
所以他们已经为他们辩护了，听起来不错

00:17:02.839 --> 00:17:05.839
嗯

00:17:08.160 --> 00:17:11.439
好吧，我想就是停车场的尽头了

00:17:11.439 --> 00:17:16.319
嗯，请填写您的每周更新情况。很高兴知道每个人的情况。

00:17:16.319 --> 00:17:19.679
一直在做，这一直是核心基础

00:17:19.679 --> 00:17:22.959
从10月26日星期一开始每周同步

00:17:22.959 --> 00:17:26.400
我告诉你，这真的很棒，非常感谢

00:17:26.400 --> 00:17:32.480
下周见，再见，谢谢，再见

