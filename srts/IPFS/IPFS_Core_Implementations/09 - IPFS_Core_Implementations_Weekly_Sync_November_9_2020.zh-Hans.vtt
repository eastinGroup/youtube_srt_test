WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.799 --> 00:00:05.520
大家好，欢迎每周星期一同步到ipfs核心实现

00:00:05.520 --> 00:00:09.840
然后是2020年11月16日。我正在动脑，我将成为您的主人

00:00:09.840 --> 00:00:13.200
我们将玩一些高优先级计划的游戏其他计划

00:00:13.200 --> 00:00:16.320
Qa停车场对所有这类问题都提出了疑问

00:00:16.320 --> 00:00:20.960
这将是伟大的，所以事不宜迟

00:00:20.960 --> 00:00:24.000
嗯，让我们谈一个高优先级的倡议，所以首先要谈的是

00:00:24.000 --> 00:00:29.519
关于即将发布的版本，他们将发布一些jsopfs

00:00:29.519 --> 00:00:34.800
东西，所以我们运送了一个新的http客户端，带有来自伊拉克的期待已久的uh补丁

00:00:34.800 --> 00:00:42.719
嗯，要报告进度上传，这很棒，它将使网络用户界面

00:00:42.719 --> 00:00:48.559
很好，嗯，所以现在出来了呼啦嗯，还有一些错误，呃消息

00:00:48.559 --> 00:00:52.320
围绕依赖项的客户端，希望那不应该发生

00:00:52.320 --> 00:00:54.079
将来再来一次，因为我们已经支持

00:00:54.079 --> 00:00:57.120
嗯，我们关于那首[音乐]的词

00:00:57.120 --> 00:01:03.199
这是从js人生而来的，我看到有一个上线的p2p

00:01:05.600 --> 00:01:13.360
是的，嗯，它们已经被重构了

00:01:13.360 --> 00:01:18.720
是的，人们每隔一段时间就遇到脚踏枪

00:01:18.720 --> 00:01:22.799
当你关闭一个流时，它只是为了写而关闭它，但是

00:01:22.799 --> 00:01:26.880
不是为了阅读，而是关闭，现在为写作而关闭，

00:01:26.880 --> 00:01:29.920
阅读这是一个巨大的变化，我们也

00:01:29.920 --> 00:01:33.520
删除了执行后台任务的助手功能

00:01:33.520 --> 00:01:37.680
等待信息流将eof发送给您，因为我们没有

00:01:37.680 --> 00:01:43.200
不再需要它了，因为close将关闭读取和写入操作

00:01:43.200 --> 00:01:48.399
um对连接门控的改进我们有了一些接口，但是现在我们

00:01:48.399 --> 00:01:52.320
有一个实施方案，可以使在PDP中工作的人们更好

00:01:52.320 --> 00:01:56.880
控制谁可以访问他们的节点

00:02:01.759 --> 00:02:09.840
尚未在ipfs中使用，但您知道也许即将推出

00:02:10.319 --> 00:02:16.800
很棒的下一个是固定服务

00:02:18.319 --> 00:02:23.280
是的，所以固定服务上周我们正在整理一些内容

00:02:23.280 --> 00:02:27.599
迁移工作，整个周末都有

00:02:27.599 --> 00:02:32.000
一些需要解决的迁移难题

00:02:32.000 --> 00:02:34.879
我认为我们已经很近了，但我要去看看院长能否

00:02:34.879 --> 00:02:39.519
与我一起解决最后几个问题，这是必须要做的

00:02:39.519 --> 00:02:44.959
还是使用go ipfs的新版本还是旧版本

00:02:44.959 --> 00:02:49.120
链接到迁移代码中，我们可能需要

00:02:49.120 --> 00:02:52.560
改变我们的方式我们正在做一些事情来做到这一点

00:02:52.560 --> 00:02:57.760
那个工作正常，所以我要写些关于我们将要进行的工作

00:02:57.760 --> 00:03:01.519
结束，我们可能需要

00:03:02.879 --> 00:03:05.840
对我们的迁移方式进行一些更改，但我们应该能够

00:03:05.840 --> 00:03:10.080
今天，除了固定服务之外

00:03:10.080 --> 00:03:12.800
没有什么没有新什么没有

00:03:12.800 --> 00:03:16.000
自从上周我们谈起呃，我知道有一些活动

00:03:16.000 --> 00:03:23.280
在某些问题上要求这些东西，

00:03:23.280 --> 00:03:26.640
他们正在等待下一个版本的发布，但我没有回应

00:03:26.640 --> 00:03:30.640
任何问题的评论，但希望我们能得到这个

00:03:30.640 --> 00:03:33.120
我们剩下的就是确保

00:03:33.120 --> 00:03:38.080
迁移是好的，并且与迁移相关，一旦

00:03:38.080 --> 00:03:42.560
释放出来，下一个高优先级的项目将

00:03:42.560 --> 00:03:47.599
可能会像功能一样进行fs repo迁移

00:03:47.599 --> 00:03:53.680
嗯，自从从gx切换到go mod以来，我们基本上一直在滑冰

00:03:53.680 --> 00:03:57.760
我们不必做任何严重需要任何依赖的事情

00:03:57.760 --> 00:04:01.360
嗯，因为它只是在编辑配置文件

00:04:01.360 --> 00:04:04.720
现在我们终于做了一件实际上需要做的事情

00:04:04.720 --> 00:04:07.280
对代码有一些了解并引入依赖关系

00:04:07.280 --> 00:04:12.159
一切都炸毁了，所以这是呃，我们称之为回报

00:04:12.159 --> 00:04:16.799
回想起来，gx gomod交换机可能会产生技术债务

00:04:16.799 --> 00:04:21.280
实际上，相对于本周末而言，开展工作更容易

00:04:21.280 --> 00:04:25.360
尝试使其按旧方式工作，但我需要第二套方法是

00:04:25.360 --> 00:04:29.600
可以评估我们现在的位置，以便在

00:04:29.600 --> 00:04:33.520
要么是说要竖起大拇指，要么就是我们确切地知道这一天

00:04:33.520 --> 00:04:36.560
我们需要做些什么来修复它

00:04:38.160 --> 00:04:42.160
然后是其余的固定服务

00:04:42.160 --> 00:04:46.160
Lidl与Petar一起做了很多工作

00:04:46.160 --> 00:04:51.759
有点将其移到接近终点线并实际获得

00:04:51.759 --> 00:04:56.080
我们将要使用的cli和http api

00:04:56.080 --> 00:05:03.120
有一阵子，嗯，熨烫了，嗯，任何评论都还不错

00:05:03.120 --> 00:05:09.840
小皮塔尔，我想像剩下的主要问题是

00:05:09.840 --> 00:05:14.320
我们应该默认还是不周末阻止我

00:05:14.320 --> 00:05:22.240
倾向于像安德鲁说服我那样默认地阻止

00:05:22.240 --> 00:05:29.520
为什么这可能是一个更好的默认um，所以我们可能会对此进行试验

00:05:29.520 --> 00:05:33.680
这个星期，如果我们这样做，我们将需要添加一个

00:05:33.680 --> 00:05:38.320
标记哪些用于报告进度，类似于

00:05:38.320 --> 00:05:43.520
固定时使用旧的pin add命令可以传递打印进度

00:05:43.520 --> 00:05:47.280
您去过本地多少个类似的便笺在当地有意义，但如果您撒尿

00:05:47.280 --> 00:05:51.280
远程我们没有那么深刻的洞察力，所以我们在

00:05:51.280 --> 00:05:54.639
至少会为用户提供一些有关

00:05:54.639 --> 00:05:58.720
请求ID以及上次状态的更新时间，或者

00:05:58.720 --> 00:06:01.039
有些东西，我认为应该足够了

00:06:01.039 --> 00:06:05.680
MVP我们可以随时改善

00:06:05.680 --> 00:06:10.160
只是为了为那些没有密切关注的人提供更多的背景信息

00:06:10.160 --> 00:06:13.280
呃，你什么时候知道，什么时候做ipves

00:06:13.280 --> 00:06:17.440
固定添加一个阻止它的东西，直到您下载了整个

00:06:17.440 --> 00:06:23.199
dag um，那不是，那不是遥控器的那种

00:06:23.199 --> 00:06:27.360
固定将起作用，您无需等待此HTTP连接，直到

00:06:27.360 --> 00:06:30.080
事情已经由您刚刚告诉他们的服务下载完毕

00:06:30.080 --> 00:06:34.160
给我买，然后他们去拿，所以问题是你可能想

00:06:34.160 --> 00:06:37.360
拉直到完成，这样您才能知道何时完成，但这应该是

00:06:37.360 --> 00:06:40.720
是否存在默认行为，然后我们如何将其映射到事实中

00:06:40.720 --> 00:06:46.240
我们将使用相同的api作为新的本地固定

00:06:46.240 --> 00:06:48.720
api，我们希望这些东西看起来一样

00:06:48.720 --> 00:06:56.240
因为如果您是呃会很奇怪，如果ibms pin知道了pin uh

00:06:56.240 --> 00:07:02.000
远程添加未阻止，但是如果此固定本地广告被阻止，则可能是

00:07:02.000 --> 00:07:05.120
让人很困惑

00:07:06.400 --> 00:07:10.240
我想我会做下一个是secio remove呃

00:07:10.240 --> 00:07:16.720
是的，我ping迈克尔，我想今天是

00:07:16.720 --> 00:07:22.000
嗯，先关掉secio，看看每个人是否都吓坏了

00:07:22.000 --> 00:07:27.199
或者如果没有任何改变希望

00:07:28.840 --> 00:07:31.840
后者

00:07:33.039 --> 00:07:37.039
不可思议的第二年

00:07:38.000 --> 00:07:43.280
下一步是js改善可发现性和连接性

00:07:43.360 --> 00:07:48.000
是的，所以我自定义宣布了多项其他功能

00:07:48.000 --> 00:07:52.080
之前完成的工作现在在审核后合并

00:07:52.080 --> 00:07:55.680
我也收到了有关自动继电器示例的评论

00:07:55.680 --> 00:08:01.120
上周拨打多个其他自定义启动功能，我也将

00:08:01.120 --> 00:08:06.560
地址，我认为他们应该准备好了，因为雅各布只指出了

00:08:06.560 --> 00:08:12.160
现在剩下一些小事了，然后ii致力于发现和

00:08:12.160 --> 00:08:16.080
连接到最近的同行功能，我认为

00:08:16.080 --> 00:08:21.280
也是10点，而且既没有评论

00:08:21.280 --> 00:08:24.879
嗯，是的，这周到目前为止，我的主要重点是

00:08:24.879 --> 00:08:29.039
在集合工作中，我将首先解决

00:08:29.039 --> 00:08:32.479
雅各布对议定书执行情况的审查

00:08:32.479 --> 00:08:35.680
然后我将进行一些基准测试

00:08:35.680 --> 00:08:39.760
如果我有时间开始研究示例

00:08:39.760 --> 00:08:42.159
就是这样

00:08:45.200 --> 00:08:49.279
接下来的噪声是双向流和流中的错误

00:08:49.279 --> 00:08:53.519
浏览器，所以我添加了可以证明的测试

00:08:53.519 --> 00:08:57.440
流是双向的，并且错误起作用，该错误是um，即

00:08:57.440 --> 00:09:00.959
很好，这是一个巨大的进步，我要

00:09:00.959 --> 00:09:03.519
尝试并喜欢这样，唯一的是唯一的

00:09:03.519 --> 00:09:09.519
目前正在使用的东西是add um，我想得到一个像

00:09:09.519 --> 00:09:12.320
实验性发布将在下周底发布

00:09:12.320 --> 00:09:15.519
这样人们就可以开始玩了，我们可以收集一些反馈

00:09:15.519 --> 00:09:19.839
嗯，所以我要整理一下文档

00:09:19.839 --> 00:09:23.519
并确保我们使用正确的库之类的东西

00:09:23.519 --> 00:09:27.519
因为嗯，这有点奇怪

00:09:27.519 --> 00:09:32.640
目前，在服务器和服务器上使用不同的grpc uh库

00:09:32.640 --> 00:09:38.959
客户端um这是一个很好的中断对象um只是，是的

00:09:38.959 --> 00:09:43.120
就像不同的范式一样，嗯，所以需要

00:09:43.120 --> 00:09:47.279
看着很好很好

00:09:49.360 --> 00:09:52.399
嗯，这是高优先级计划的结尾

00:09:52.399 --> 00:09:58.480
下一步是其他举措，以便改进网络ui文件广告

00:09:58.480 --> 00:10:02.959
来自奇迹，他的互联网连接出现问题

00:10:02.959 --> 00:10:09.760
嗯，是的，谢谢亚历克斯运送进展中的东西。

00:10:09.760 --> 00:10:13.040
 hooray，所以现在我们可以集成到Web ui中

00:10:13.040 --> 00:10:16.160
它应该很快，我希望下周我们应该

00:10:16.160 --> 00:10:19.839
有它

00:10:21.760 --> 00:10:28.240
很好，您接下来又要进行地球科学的打字稿集成了

00:10:28.240 --> 00:10:33.440
这些更新不是来自我的，所以哦，也许其他人做了一个新的

00:10:33.440 --> 00:10:37.360
一个新的打字机挑战者进入了圈

00:10:37.360 --> 00:10:42.880
是的，所以我开始研究打字稿的类型定义

00:10:42.880 --> 00:10:47.279
一点点大的核心代码，基本上我没有待决

00:10:47.279 --> 00:10:51.839
谷歌的更新，以便我可以更新ig和

00:10:51.839 --> 00:10:56.480
开始获得呃自由的类型

00:10:57.680 --> 00:11:01.760
好吧，是的，在AG上有一个拉取请求

00:11:01.760 --> 00:11:08.640
回购基本上是为了增加对um类型检查的支持

00:11:08.640 --> 00:11:12.720
完整的打字稿环境，我们还有另一个

00:11:12.720 --> 00:11:18.959
就像全局标志，只是为了在其他地方启用打字稿支持

00:11:18.959 --> 00:11:23.760
更适合或更具体地用于类型检查

00:11:23.760 --> 00:11:28.560
从生成文档

00:11:28.560 --> 00:11:31.920
生成的类型声明

00:11:31.920 --> 00:11:37.360
嗯，以及周围的所有用例，是的，请仔细阅读并提供一些信息

00:11:37.360 --> 00:11:42.399
反馈，我正在js上对其进行测试

00:11:42.399 --> 00:11:49.279
ipfs repo一切似乎都可以正常工作，我们已经喜欢打字稿了

00:11:49.279 --> 00:11:54.240
配置在那里，所以检查已经在工作，这是

00:11:54.240 --> 00:11:57.920
基本上只是把所有东西都变成天蓝色，所以我们可以

00:11:57.920 --> 00:12:03.279
在js ipfs的文档部分各处使用它

00:12:03.279 --> 00:12:11.839
回购将变得有点困难，但我们会到达那里

00:12:12.480 --> 00:12:19.920
令人惊讶的非常令人兴奋的是，下一步是使用服务人员提供的共享节点

00:12:22.639 --> 00:12:26.959
嗯，我想那又是我

00:12:27.120 --> 00:12:31.760
是的，所以我们有一个拉取请求，我认为还没有降落，但是它增加了

00:12:31.760 --> 00:12:39.839
一个例子，这在很大程度上

00:12:41.279 --> 00:12:44.399
哦，我会明白的，我认为那是

00:12:44.399 --> 00:12:48.959
那里几乎全都是这样，所以马上就降落了

00:12:48.959 --> 00:12:53.839
嗯，下一次停止预算两项支持

00:12:55.440 --> 00:12:58.959
没什么可报告的，只是等着看他们是否

00:12:58.959 --> 00:13:05.680
将要发布，所以只等badge

00:13:05.680 --> 00:13:10.720
不要打电话给我们，我们会在有空时给您打电话

00:13:10.720 --> 00:13:14.399
我猜他们有一个决定

00:13:17.279 --> 00:13:21.839
哦，亲爱的，好吧，接下来不要遍历

00:13:23.200 --> 00:13:29.440
是的，所以这周和最后一周的拱门都在为容易眩晕的效果而努力

00:13:29.440 --> 00:13:35.200
变硬了，所以我们发现之间有些不一致

00:13:35.200 --> 00:13:38.560
自动共享和观察到的地址类型被共享

00:13:38.560 --> 00:13:43.040
所以现在他正在努力改善这一点，以便我们做广告

00:13:43.040 --> 00:13:46.560
正确的公共地址，因为我们将需要利用这些地址

00:13:46.560 --> 00:13:52.000
自动网络进行太阳协调

00:13:59.519 --> 00:14:04.320
接下来很酷的是Unix fsv 1.5和ipvs

00:14:04.320 --> 00:14:07.120
嗯，自上周以来，我不认为这方面有任何动静，

00:14:07.120 --> 00:14:10.639
他们身上还有其他一些笔记，不，我认为

00:14:10.639 --> 00:14:14.320
贡献者仍在做一些需要做的事情

00:14:14.320 --> 00:14:17.839
给一些评论

00:14:18.959 --> 00:14:25.199
下一步很酷，是对ipfs gc的改进

00:14:25.839 --> 00:14:30.320
上周进行大规模测试之后，我需要对

00:14:30.320 --> 00:14:33.440
设计那些本应在星期五外出的商品

00:14:33.440 --> 00:14:37.519
但由于我正在做的工作而被推迟了

00:14:37.519 --> 00:14:41.920
与固定的迁移，这样我就可以尽快到达

00:14:41.920 --> 00:14:46.399
迁移后，我将能够完成更改设计并获得

00:14:46.399 --> 00:14:50.720
设计工作被推向人们进行审查

00:14:57.360 --> 00:15:00.480
嗯，这是其他倡议的终结

00:15:00.480 --> 00:15:04.399
所以继续进行其他业务，例如设计审查提案

00:15:04.399 --> 00:15:13.839
任何人都有任何建议要审查

00:15:15.440 --> 00:15:26.720
好，阻止者，问任何阻止的人，任何人都可以问

00:15:26.720 --> 00:15:31.440
任何人都有任何问题，我想我就是我，就像看着一些

00:15:31.440 --> 00:15:34.160
这个周末安德鲁寄给我的东西

00:15:34.160 --> 00:15:38.320
这个退款迁移的东西可能是非常毛重的

00:15:38.320 --> 00:15:41.759
嗯，我怀疑我们会做一些

00:15:41.759 --> 00:15:46.000
一些稳固的进步，但我可能在这里弹出一些毛茸茸的东西

00:15:46.000 --> 00:15:50.560
由于我们的原因，我认为迁移过程中的许多变化

00:15:50.560 --> 00:15:56.079
在呃之前完成，默认情况下，我们现在同时支持db级和badge级

00:15:56.079 --> 00:15:58.480
那里有各种各样的数据存储插件

00:15:58.480 --> 00:16:02.000
我们正在使用go mod，就像有很多我认为是的新事物一样

00:16:02.000 --> 00:16:06.800
即将发生的迁移，我们以前没有处理过，但是

00:16:06.800 --> 00:16:10.720
现在是时候了，我想只是把它放在那里

00:16:10.720 --> 00:16:14.959
请注意，这可能比您读到的可怕文章所花费的时间要长。

00:16:14.959 --> 00:16:20.240
我做了我尝试过的事好吗

00:16:21.199 --> 00:16:27.440
js重播迁移工具同样是毛茸茸的，呃，不想做

00:16:27.440 --> 00:16:31.279
诸如创建回购的完整副本之类的事情，因为它

00:16:31.279 --> 00:16:34.480
可能是巨大的，如果中途失败怎么办

00:16:34.480 --> 00:16:36.959
通过像在之间来回移动

00:16:36.959 --> 00:16:39.920
东西，然后继续运行直到

00:16:39.920 --> 00:16:43.839
您没有其他要迁移的东西，就像哦，我完成了

00:16:44.480 --> 00:16:51.759
无论如何，我有一个问题很有趣

00:16:51.759 --> 00:16:59.440
嗯，关于固定服务或http客户端

00:16:59.440 --> 00:17:04.000
支持固定服务呃

00:17:04.000 --> 00:17:08.880
谁会接受，我认为冈萨雷斯开始了

00:17:08.880 --> 00:17:15.360
正在努力，但是后来我雅各布和亚历克斯谈到了

00:17:15.360 --> 00:17:22.640
我承担那个，那应该是什么

00:17:24.720 --> 00:17:27.919
是的，所以我不知道我从星期五开始看它

00:17:27.919 --> 00:17:31.360
呃，如果你愿意，我很乐意让你，但我也可以

00:17:31.360 --> 00:17:34.720
我认为还有一些事情要做

00:17:34.720 --> 00:17:38.240
如果你想那样的话可能会瘫痪

00:17:38.240 --> 00:17:43.679
鉴于它会这样，所以也许我会导致下一个项目

00:17:43.679 --> 00:17:45.679
我不得不去停车场，因为他们

00:17:45.679 --> 00:17:51.039
几乎一样，所以我们将不得不弄清楚如何着陆所有的方式

00:17:51.039 --> 00:17:54.960
碎片，鉴于我们似乎想要

00:17:54.960 --> 00:17:59.679
一次把它放下来，所以问题是

00:17:59.679 --> 00:18:04.720
要测试它，我们需要某种呃我们需要去ipfs进行测试

00:18:04.720 --> 00:18:08.720
然后我们还需要一些固定服务才能再次运行它

00:18:08.720 --> 00:18:13.919
喜欢与它配对并使用ruby实现对其进行测试，但是它

00:18:13.919 --> 00:18:17.520
似乎很难获得

00:18:17.520 --> 00:18:21.120
在ci上全部运行，所以我认为更好的方法是

00:18:21.120 --> 00:18:24.000
编写一个简单的服务，例如我们已经拥有的回声服务器

00:18:24.000 --> 00:18:29.679
或类似的东西

00:18:29.679 --> 00:18:32.640
是的，然后

00:18:32.880 --> 00:18:38.080
尝试登陆ipfs并借给客户端并运行

00:18:38.080 --> 00:18:41.840
混合测试，然后一起做

00:18:41.840 --> 00:18:45.280
ii真的不知道我们如何才能完成它

00:18:45.280 --> 00:18:50.000
包括网络用户界面，我做了这部分，所以我认为也许我们应该有一个

00:18:50.000 --> 00:18:54.559
谈话，我们如何逐步做，也许我不知道

00:18:54.559 --> 00:18:58.240
我和lyle谈论的事情，也许我们可以在http客户端中标记您

00:18:58.240 --> 00:19:01.600
可以选择加入，我们可以登陆某些补丁

00:19:01.600 --> 00:19:05.600
尚未测试，因此我们可以通过网络发布go ipfs

00:19:05.600 --> 00:19:10.799
使用它的ui，然后将其放入其中，然后我们可以添加测试以进行测试

00:19:10.799 --> 00:19:14.480
再次，呃，我知道也许还有其他

00:19:14.480 --> 00:19:19.440
我们可以选择的选项下一个类似的uh版本

00:19:19.440 --> 00:19:26.160
http客户端，然后仅在金币出货后才出货，是的，我不知道

00:19:26.160 --> 00:19:29.440
让我们找出如何做到这一点，并在并行化方面

00:19:29.440 --> 00:19:33.520
我们可以将其拆分为像我提到的那样，我们需要将服务器放入

00:19:33.520 --> 00:19:37.280
其他部分也许我们可以一起做，所以我们不必等待

00:19:37.280 --> 00:19:41.120
彼此之间或像没有一个人必须认真做

00:19:41.120 --> 00:19:47.520
是的，很酷，我认为一个问题，我们能不能生成一个模拟服务器

00:19:47.520 --> 00:19:53.039
从规格上讲，我的意思是我们可以生成大部分的模拟

00:19:53.039 --> 00:19:57.520
服务器，您仍然需要将其连接到实际

00:19:57.520 --> 00:20:01.679
准备将处理的响应

00:20:01.679 --> 00:20:06.000
你可以生成的电线格式是我认为的JavaScript

00:20:06.000 --> 00:20:11.600
没问题，我们同时生成了服务器和客户端

00:20:11.600 --> 00:20:15.679
我相信呃作为测试，我们实际上使用了

00:20:15.679 --> 00:20:20.960
go ipfs中的客户端，因此生成在开放状态下可以很好地工作

00:20:20.960 --> 00:20:25.280
api是的，如果我们有

00:20:25.280 --> 00:20:29.760
较轻的版本，因为现在就上下文而言，我们得到了这个红宝石

00:20:29.760 --> 00:20:36.960
由安德鲁·内斯比特（Andrew nesbit）创建的应用，但这就像postgres red是

00:20:36.960 --> 00:20:40.880
Ruby on Rails这不是您想要在ci上运行的东西

00:20:40.880 --> 00:20:47.840
呃，相反，如果我们有更轻的回声，像服务这样的回声，我们甚至可以

00:20:47.840 --> 00:20:51.360
将ipfs切换到该位置，这将解决很多问题

00:20:51.360 --> 00:20:54.240
我们也到达那里

00:20:55.440 --> 00:20:59.039
是的，虽然这可能没什么大不了，但请注意其中一件事

00:20:59.039 --> 00:21:02.559
我们正在使用类似完整的东西进行测试

00:21:02.559 --> 00:21:06.960
嗯，它也在测试是否触发了数据传输

00:21:06.960 --> 00:21:11.280
所有的事情都像这次旅行，但是所有这些过渡都是可笑的

00:21:11.280 --> 00:21:21.360
所以，嗯，嗯，是的，但是数据传输

00:21:21.360 --> 00:21:26.159
我们不会从这个背包中自动生成，因为它的数量有限

00:21:26.159 --> 00:21:29.440
是的，所以我是说您将无法自动生成该文件，但是

00:21:29.440 --> 00:21:33.679
至少对http来说，这也许并不重要

00:21:33.679 --> 00:21:37.840
对于像js http客户端来说可能没关系

00:21:37.840 --> 00:21:42.400
当您执行js ipfs实现时，它会更重要

00:21:42.400 --> 00:21:45.679
是的，所以像go ipfs可能仍然与另一个卡在一起，因为它

00:21:45.679 --> 00:21:50.240
还想检查数据传输和jsipfs

00:21:50.240 --> 00:21:53.280
可能也想要，但对于HTTP客户端的客户端

00:21:53.280 --> 00:21:56.320
就像你可以sm好吧，因为这不是他们的工作

00:21:56.320 --> 00:22:00.799
做p2p的事情，甚至在jsfs中，我们都有

00:22:00.799 --> 00:22:04.720
其他测试方式，例如我们可以控制所有节点，并且我们可以

00:22:04.720 --> 00:22:13.840
只是看东西是否到处都是，嗯，很酷

00:22:14.799 --> 00:22:18.799
嗯，是的，我们需要再开会一次还是需要

00:22:18.799 --> 00:22:22.400
我们能弄清楚如何发货吗

00:22:22.400 --> 00:22:26.240
所有这一切也许在一起，也许我们只是有一个

00:22:26.240 --> 00:22:30.159
我们两个之间的一个电话，弄清楚了

00:22:30.159 --> 00:22:37.280
好吧，我会再打个电话，嗯，也许你可以说出你的名字

00:22:37.280 --> 00:22:39.919
在停车场项目下，所以我知道邀请谁

00:22:39.919 --> 00:22:42.159
也

00:22:52.840 --> 00:22:58.320
是的，为什么总是跳

00:22:58.480 --> 00:23:03.600
是的，如果您不将光标放在想要的位置，它将跳到您身上

00:23:03.600 --> 00:23:09.840
好的，谢谢

00:23:10.480 --> 00:23:14.080
酷，我认为我想可能是那里

00:23:14.080 --> 00:23:22.159
其他任何人都想谈的事情

00:23:22.159 --> 00:23:26.159
如果我能保持你的安宁，现在就说

00:23:29.280 --> 00:23:34.080
好的，非常感谢大家加入ipfs

00:23:34.080 --> 00:23:37.600
核心实现从11月16日星期一开始每周同步

00:23:37.600 --> 00:23:41.520
请记住填写人们确实阅读过的异步更新，这是

00:23:41.520 --> 00:23:43.919
知道发生了什么以及每个人都在做什么非常令人兴奋

00:23:43.919 --> 00:23:48.520
非常感谢大家，下周我们再见

00:23:48.520 --> 00:23:51.520
再见

