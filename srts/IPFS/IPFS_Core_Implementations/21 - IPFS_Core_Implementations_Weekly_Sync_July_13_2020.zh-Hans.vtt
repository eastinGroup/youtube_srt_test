WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.680 --> 00:00:06.089
大家好，欢迎来到周一每周同步的ipfs核心实现

00:00:06.089 --> 00:00:09.719
2020年7月13日，我将动脑筋，我将成为您的主人

00:00:09.719 --> 00:00:13.320
我们将通过高优先级计划和其他

00:00:13.320 --> 00:00:18.420
每个人都在努力的行业，并提供一些更新，所以我购买了

00:00:18.420 --> 00:00:26.130
即将发布的第一号产品对Jess ipfs有所了解

00:00:26.130 --> 00:00:29.130
会被释放到这里来的好明天有一些错误

00:00:29.130 --> 00:00:34.770
有一次内存泄漏，多亏了雅各布，我们才得以解决，所以我想

00:00:34.770 --> 00:00:37.350
有点等待，您需要先填写到最后再发布它，所以首先需要它

00:00:37.350 --> 00:00:39.800
明天早上的事

00:00:40.879 --> 00:00:44.160
稍等一下，所以我在这里阅读

00:00:44.160 --> 00:00:52.460
我是怎么做到的，发现视频没问题，它将不会出现在youtube上

00:01:04.180 --> 00:01:07.279
[音乐]

00:01:09.619 --> 00:01:25.770
由于您所键入的错误修复而导致的待处理和尚待解决的问题

00:01:25.770 --> 00:01:38.759
如果警察不进来释放你，你知道吗，继续前进

00:01:38.759 --> 00:01:47.729
固定服务固定服务是的，所以今天是我们

00:01:47.729 --> 00:01:55.890
最终确定MEP，这意味着我们要删除规范的最终版本

00:01:55.890 --> 00:02:05.850
本周问题的链接在备注中，这里要求任何人

00:02:05.850 --> 00:02:12.220
对通用清洁服务服务API感兴趣

00:02:12.220 --> 00:02:21.040
查看规范，我也链接了人类可读的版本，我们有开放的API规范

00:02:21.040 --> 00:02:28.120
和该计划的人类可读版本是为了最终确定规范，例如

00:02:28.120 --> 00:02:36.090
在本周结束之前，希望在下周之前两天，然后我们将询问

00:02:36.090 --> 00:02:41.950
核心实施工作组我更喜欢GUI工作组和Vario

00:02:41.950 --> 00:02:47.380
纺纱服务和有兴趣实施的猎鹰合作伙伴

00:02:47.380 --> 00:02:55.600
诸如此类的事情可以表示同意或提供最新建议，以及

00:02:55.600 --> 00:03:04.570
变化，但长话短说，我们想在本周将其冻结，并同意

00:03:04.570 --> 00:03:10.600
在可以实现的版本上，我们在进行调整时做了一些细微的调整

00:03:10.600 --> 00:03:14.410
当然，当人们实施东西并找出答案时，这不是最好的方法

00:03:14.410 --> 00:03:21.700
要做到这一点，但我们不希望有太大的变化，我们主要是缩小范围

00:03:21.700 --> 00:03:28.180
使它像一个较小的表面，减少了人们容易达成共识的问题

00:03:28.180 --> 00:03:34.840
因此，从这里带走是请对此进行审查，并在发现任何问题时将其打开

00:03:34.840 --> 00:03:52.140
是的，任何有关将温度调高至55或94键的信息，是的

00:03:52.159 --> 00:03:57.989
是的，所以完成了对Edie密钥的子域支持，该支持在星期五我合并了

00:03:57.989 --> 00:04:02.959
认为woohoo，我们需要完成一个额外的

00:04:02.959 --> 00:04:12.090
我相信Edie会在其中进行ipfs的初始化工作

00:04:12.090 --> 00:04:17.370
将jaya slippy中的东西固定到小便，这样我的阴茎就不会因为Jas而折断

00:04:17.370 --> 00:04:22.350
当我们启动它时，我会回到本周的那个地方

00:04:22.350 --> 00:04:26.099
上周突然出现了一些需要解决的错误，但我会得到

00:04:26.099 --> 00:04:32.250
回到本周，密钥轮换已经准备就绪，但是在获取该密钥时受阻

00:04:32.250 --> 00:04:38.070
也可以做得很好，以便我们可以在需要时推出一个关键

00:04:38.070 --> 00:04:42.509
尽早轮换，我们可以只使用RS作为默认支持，但是现在

00:04:42.509 --> 00:04:48.000
我们希望在拉该之前获得edie默认支持

00:04:48.000 --> 00:04:55.889
完成，然后IP痕迹列表现在也支持基数为36 + CI D的输出

00:04:55.889 --> 00:05:01.710
我会不会很愚蠢，我知道他们还有其他需要补充的内容吗？

00:05:01.710 --> 00:05:07.800
没有覆盖，所以如果我没记错的话，我们应该能够做到，除非我想念

00:05:07.800 --> 00:05:13.169
JS部分的内容，但我们应该能够关闭一系列的PRS和

00:05:13.169 --> 00:05:18.449
获取默认值，但是如果我缺少某些内容，则可以纠正我-是的，是的

00:05:18.449 --> 00:05:22.740
不，那很好，我们可以等待，我认为这可能是最明智的方式

00:05:22.740 --> 00:05:29.370
实际上是采取关键旋转和初始化的东西，并合并所有

00:05:29.370 --> 00:05:35.880
其中，但默认设置为RSA，然后有另一个PR，即

00:05:35.880 --> 00:05:43.139
更改所有默认PR，仅将所有默认更改为椭圆

00:05:43.139 --> 00:05:48.900
曲线，还可以进行类似的操作，例如默认情况下将IP NS输出更改为以36为底

00:05:48.900 --> 00:05:52.949
不管怎样，基本上就像输出改变一样，

00:05:52.949 --> 00:05:57.780
默认更改PR，这样我们就可以合并所有类似的内容

00:05:57.780 --> 00:06:03.419
实际的新功能，好吧，我认为这可能是最明智的方法

00:06:03.419 --> 00:06:06.770
我们不喜欢等待我在新兴事物上等待了这么长时间

00:06:06.770 --> 00:06:14.990
实际有用，因此PID编码的默认值和实际热量类型

00:06:14.990 --> 00:06:19.219
你想改变它们就可以了

00:06:19.219 --> 00:06:22.789
我们可能可以，是的，我认为我们是纯粹的ID，因为有

00:06:22.789 --> 00:06:26.659
像让您看到我们必须担心的P东西，然后去加法器，但是我

00:06:26.659 --> 00:06:45.050
下一步应该是不容易做到的是子域网关

00:06:45.050 --> 00:06:54.349
好玩的是，同行们在本周合并了，其中之一是我在PD 255 19支持下的PR

00:06:54.349 --> 00:07:03.219
子域将所有p2p密钥默认设置为以56为基数，因此我们不会混淆

00:07:03.219 --> 00:07:10.520
DNS命名空间中的不同位置，是的，这个版本非常

00:07:10.520 --> 00:07:20.990
如果您的CID过长，这很简单，我们尝试将其转换为代表

00:07:20.990 --> 00:07:28.759
以46为基数，如果它不能帮助我们返回错误，对不起，这是很久了

00:07:28.759 --> 00:07:35.149
DNS规范，您仍然可以从基于路径的网关加载它，但是对于子域，我们

00:07:35.149 --> 00:07:41.389
只是返回一个错误，这对任何神奇的转换都是这样

00:07:41.389 --> 00:07:48.339
与合并，第二个是我相信Michael Moore贡献的

00:07:48.339 --> 00:07:53.569
从如果拉是很酷的公关，它增加了支持

00:07:53.569 --> 00:07:58.849
我们已经支持x-forwarded-的同级报头X转发的主机

00:07:58.849 --> 00:08:05.569
反向代理通常使用标头，并且此标头启用反向

00:08:05.569 --> 00:08:12.409
代理来覆盖子域网关的主机名，您可能会有所不同

00:08:12.409 --> 00:08:17.980
用于此标头，但可能最常见的是当您想要

00:08:17.980 --> 00:08:23.900
在现有网关上启用子域支持，但您要将其重定向到

00:08:23.900 --> 00:08:30.980
不同的主机名以保持原点隔离，并像重定向到新主机一样

00:08:30.980 --> 00:08:38.060
是在另一个基本域上的子域，请检查PR以获取详细信息，仅此而已

00:08:38.060 --> 00:08:50.990
还有狗更新了，是的，我的意思是从这里来的任何人

00:08:50.990 --> 00:09:05.660
生锈的先生Miller带领PHP运行宝贝嘿，是的，我基本上开始了

00:09:05.660 --> 00:09:13.310
上周的第二次迭代，因此我已经检查了一个点的计划

00:09:13.310 --> 00:09:18.860
我们将如何将其整合到Lippitt中，这将是关于

00:09:18.860 --> 00:09:23.960
用户的责任以及自身的责任是什么，我

00:09:23.960 --> 00:09:30.080
还为服务器实现了垃圾收集器，基本上可以删除

00:09:30.080 --> 00:09:37.640
已经被肮脏的尾巴丢弃的人，那么我也

00:09:37.640 --> 00:09:44.690
得到了用于发现查询的Cookie，所以基本上，当我们要求

00:09:44.690 --> 00:09:48.650
同行的尊贵服务器将不会收到我们已经拥有的服务器

00:09:48.650 --> 00:09:53.000
收到，因为我们至少会开始参考一次

00:09:53.000 --> 00:09:57.110
因为在此之前，我还使它与接口对等端兼容

00:09:57.110 --> 00:10:03.350
来自Liberty P的发现，有了这个，我们基本上可以将电线插入为

00:10:03.350 --> 00:10:08.780
发现任何其他发现，并且基本上每次它发出一个事件

00:10:08.780 --> 00:10:14.330
将所有内容记录在地址簿中，并且基本上是相同的

00:10:14.330 --> 00:10:22.760
像其他任何发现服务一样，除非用户想自己做

00:10:22.760 --> 00:10:28.820
发现您还可以通过config来执行此操作，以将其移至下一个

00:10:28.820 --> 00:10:34.360
回顾我基本上需要对此进行一些清理，并添加更多内容

00:10:34.360 --> 00:10:40.210
测试，但还没有完全涵盖，之后还需要整合

00:10:40.210 --> 00:10:47.770
SNP记录以交换其他人，并为下一个计划交换信息。

00:10:47.770 --> 00:10:53.230
 Pierre在八卦中记录了1.1版设计，但我仍然阻止了攻击者的攻击

00:10:53.230 --> 00:10:59.080
评论，所以自上周以来大部分都没有进展，而八卦城市开曼群岛

00:10:59.080 --> 00:11:05.140
上周也没有工作，所以基本上也没有任何发展

00:11:05.140 --> 00:11:17.140
进步，没关系，这已经交给了高度优先的计划

00:11:17.140 --> 00:11:25.570
继续进行第1.5小节的Unix计划，并进行任何更新，请参见Peter

00:11:25.570 --> 00:11:34.090
 Robinson和Magoo是的，我跳了进去，我想他们正在

00:11:34.090 --> 00:11:42.670
可能说世界问是否有进展，这是另一个男孩好吗

00:11:42.670 --> 00:11:46.450
迁移到博客商店中的蒙太奇密钥与上周相同，这杀死了

00:11:46.450 --> 00:11:52.900
即将发布的下一版和下一版的系统改造工作几乎一样

00:11:52.900 --> 00:11:58.480
迁移页面上的未解决问题知道回购迁移

00:11:58.480 --> 00:12:10.900
是我们的共享，自上周以来，我没有给我们做任何评论

00:12:10.900 --> 00:12:17.680
反馈说我将对狗的PB变化采取行动，说最终合并了，

00:12:17.680 --> 00:12:22.510
发布了，但这确实是一个主要问题，所以我必须将这些内容传播到所有人

00:12:22.510 --> 00:12:27.910
其他库，例如的UNIX，我想一旦完成，我还会有更多

00:12:27.910 --> 00:12:35.590
认为应该为下一个审核周期做好准备，下一个也是我的

00:12:35.590 --> 00:12:40.990
当广告目前有一个有趣的ipfs时，这可以改善网络

00:12:40.990 --> 00:12:44.010
要求审核中

00:12:44.420 --> 00:12:48.589
上周我们打了一个电话，决定使用自定义表格

00:12:48.589 --> 00:12:53.600
在后台使用blob的数据实现，我们可能会重新考虑

00:12:53.600 --> 00:13:00.769
后来决定使用本机表单数据，因为事实证明

00:13:00.769 --> 00:13:04.610
元数据支持仅像FS一样实现，因此也许现在不进行更改

00:13:04.610 --> 00:13:09.070
太糟糕了，或者没有更好的时间这样做

00:13:09.070 --> 00:13:17.449
但我们不想在编写更多测试到

00:13:17.449 --> 00:13:21.290
有点赶上回归和我的大米，因为他们的漫长过程

00:13:21.290 --> 00:13:28.220
汽车测试无法捕捉到的标准化现象我也花了一些时间

00:13:28.220 --> 00:13:34.630
试图看看我们是否可以像Hugo上周所建议的那样使用获取博客

00:13:34.630 --> 00:13:41.449
fetch blob存在一些问题，我开始使用Flashbulb

00:13:41.449 --> 00:13:48.829
取一个地球仪项目，尝试看看我们是否可以解决这些问题，但我认为其中一些

00:13:48.829 --> 00:13:54.949
现在我可以忽略那些，只要我有一个决定，我们就可以

00:13:54.949 --> 00:14:00.860
一种方式或另一种方式，因此一旦我听到回覆，也许是亚历克斯（Alex）

00:14:00.860 --> 00:14:04.820
执行决定，我们可以继续使用哪一项，即

00:14:04.820 --> 00:14:15.790
正确的是，一旦完成发行，我将去其他工作

00:14:16.449 --> 00:14:21.589
那是一个设计审查建议，任何人都有他们想要的东西

00:14:21.589 --> 00:14:30.250
提出设计要求

00:14:31.480 --> 00:14:38.839
我只想问一下清洁服务api是否帮忙五分钟

00:14:38.839 --> 00:14:47.060
即使不确定，我不确定一些问题，尽管我不确定

00:14:47.060 --> 00:14:52.820
是否应该问他们问题，但除非有人愿意，我会提出来

00:14:52.820 --> 00:14:59.300
我不知道什么时候才是合适的时机，但是我

00:14:59.300 --> 00:15:02.750
确实是想解决人们与

00:15:02.750 --> 00:15:06.649
新的多格式内容，因此我们可以在适当的时候进行讨论

00:15:06.649 --> 00:15:13.579
谈论它，但是我很快就去了某个地方，也许我们可以做

00:15:13.579 --> 00:15:20.480
可以肯定的是，我提出的一件事可以考虑RFC之类的东西

00:15:20.480 --> 00:15:25.010
过程可能是受锈启发的，它在锈项目中确实很好用

00:15:25.010 --> 00:15:30.110
为您提供了一个清晰的框架，使您可以从想法中汲取灵感

00:15:30.110 --> 00:15:34.940
这个想法消失了，或者实际上无法实现，我一直在努力地试图弄清楚

00:15:34.940 --> 00:15:40.370
了解如何在此处导航流程，但我认为另一个非常大的好处是

00:15:40.370 --> 00:15:45.380
RFC流程使社区能够推动变革，而不是成为变革者。

00:15:45.380 --> 00:15:51.649
本地化在同一组织内

00:15:51.649 --> 00:15:55.730
RFC流程决定了如何决定是否应采用该决定

00:15:55.730 --> 00:16:01.370
RFC是否通过，但您可以逐步解决，也许我们可以弄清楚我

00:16:01.370 --> 00:16:04.910
不知道该如何进行对话，但是我在这里扔了出去，也许

00:16:04.910 --> 00:16:11.959
你们中的一些人可以输入有趣的事实，我们尝试引入RFC

00:16:11.959 --> 00:16:22.190
对于p2p项目，我实际上写了第一个，所以这是唯一一个

00:16:22.190 --> 00:16:35.990
确定这是否意味着没有人开车，所以我要像锈一样是我的一些过程

00:16:35.990 --> 00:16:41.240
认为从无流程到RFC流程是不可能的

00:16:41.240 --> 00:16:44.320
你你要像之前那样采取一些步骤

00:16:44.320 --> 00:16:50.149
记录一些治理以及如何制定决策就像是

00:16:50.149 --> 00:16:55.130
我不认为第一步是合乎逻辑的-我们做过的任何地方都有记录

00:16:55.130 --> 00:16:59.060
像这样的东西只是因为我感觉到这些规格，因为所有

00:16:59.060 --> 00:17:02.480
库几乎是单个维护者，所以我们没有像我们这样的维护者

00:17:02.480 --> 00:17:06.890
那里还不需要很多正式的治理，但是在像我们所有人这样的规范中

00:17:06.890 --> 00:17:10.490
必须权衡，这变得有点不清楚，例如如何解除阻碍，

00:17:10.490 --> 00:17:14.179
决定如何正式化，所以我们写得像一个最小的

00:17:14.179 --> 00:17:18.140
仅用于规格的管理系统，实际上运行得很好，并且

00:17:18.140 --> 00:17:22.309
畅通无阻的很多东西，它并没有那么正式或如此多的过程

00:17:22.309 --> 00:17:26.809
RC程序，但它使我们能够更快地喜欢关闭事物，并且它允许

00:17:26.809 --> 00:17:32.150
我们来确定谁是决策者

00:17:32.150 --> 00:17:37.370
决定以及如何提出异议，以便您可以退房，这仅仅是

00:17:37.370 --> 00:17:40.190
在构建这些规范时，我们还没有以多种格式完成这些工作，

00:17:40.190 --> 00:17:44.590
可能需要将其移至多种格式，以及我们正在做的事情

00:17:44.590 --> 00:17:49.669
是的，所以II并不想只使用栅格模型，我认为它将是

00:17:49.669 --> 00:17:52.970
随着时间的流逝而发展，但有时我会启动一些流程会有所帮助

00:17:52.970 --> 00:17:56.929
发现自己处于我开始讨论的位置，有些人

00:17:56.929 --> 00:18:01.490
回应，然后您不知道那意味着什么，这意味着这是一个坏主意

00:18:01.490 --> 00:18:08.900
只是意味着像我们没有时间去做，或者如果我们没有时间去做，谁可以

00:18:08.900 --> 00:18:14.320
就像现在还不清楚，但是我如何处理事情，所以有一个过程是

00:18:14.320 --> 00:18:18.049
描述您如何对事物采取行动将是真正有帮助的，而不是锦上添花的

00:18:18.049 --> 00:18:21.500
在内部和外部也可以让人们知道如何导航

00:18:21.500 --> 00:18:27.080
基于这个，我会说，像现阶段一样，最重要的是

00:18:27.080 --> 00:18:30.650
有些东西可以使人们正式反对他们，因此您可以

00:18:30.650 --> 00:18:34.070
发表评论并发表意见，但是像正式异议一样，

00:18:34.070 --> 00:18:37.850
说得更清晰，当您问像嘿时，还有更多

00:18:37.850 --> 00:18:42.080
在这一点上，反对意见必须像反对意见一样清楚地陈述

00:18:42.080 --> 00:18:45.500
不要以为这个原因应该让人们拥有

00:18:45.500 --> 00:18:49.880
他们可以采取的可行措施，可能会改变您的想法，并且

00:18:49.880 --> 00:18:53.750
只是Alinea，介于两者之间，就像我一直不在乎的那样，我真的不在乎

00:18:53.750 --> 00:18:57.840
实际上，您不应该这样做，因为这真的很难

00:18:57.840 --> 00:19:04.740
当您不是准确发表评论的人时要区分，那么该怎么办

00:19:04.740 --> 00:19:11.130
我们从仅仅在这里提出来，到实际上我们可以接受的东西

00:19:11.130 --> 00:19:16.170
离线，但我希望这实际上能以某种方式发生，我很乐意

00:19:16.170 --> 00:19:20.540
做到达那里所必需的工作

00:19:22.809 --> 00:19:28.740
嗯，我选的可能只是进入我们

00:19:28.740 --> 00:19:34.470
谈论为ipfs org这样做是ipfs ipfs的主要问题

00:19:34.470 --> 00:19:41.430
之前，然后再开始讨论，好吧，我会做的

00:19:41.430 --> 00:19:51.560
谢谢你，我还有其他一些大讨论的项目，所以

00:19:51.560 --> 00:19:55.860
问题是我们是否应该将网络IP LD视为另一个突破

00:19:55.860 --> 00:20:00.150
来自ipfs的项目以及我提出它的原因

00:20:00.150 --> 00:20:04.440
我一直在与我们的许多永久用户进行交流，以尝试

00:20:04.440 --> 00:20:10.290
弄清楚IP和浏览器应该作为最小的API，它是

00:20:10.290 --> 00:20:14.540
很明显，每个人基本上都在使用这种IPL IP回的持久性

00:20:14.540 --> 00:20:18.840
到处都有一些零碎的异常

00:20:18.840 --> 00:20:23.670
在IP实际在Excel中滑动后，也变得很明显

00:20:23.670 --> 00:20:31.140
在一起就是这样，这些想法已经在酝酿中

00:20:31.140 --> 00:20:35.130
我的头很清楚，在某个时候可能被确定为

00:20:35.130 --> 00:20:39.630
单独有用的东西，然后IP发生同样的事情

00:20:39.630 --> 00:20:45.000
LD本身，但那里只是数据层，我认为也许是时候

00:20:45.000 --> 00:20:50.250
考虑另一个突破可能是IPL Davis的持久性和

00:20:50.250 --> 00:20:58.050
ipfs网络将其烘焙，然后可能将想法沉没在顶部，而那些

00:20:58.050 --> 00:21:02.630
不在乎文件系统本身，他们可以愉快地使用较小的文件系统

00:21:02.630 --> 00:21:09.960
这件作品最终研究了纺织三本书，就像我记得的一样

00:21:09.960 --> 00:21:18.810
现在，除了其他人以外还有谁使用我在ipfs中写了更详细的文章

00:21:18.810 --> 00:21:23.970
请注意，在该部队的警员迪特里克建议中，也许我们可以继续

00:21:23.970 --> 00:21:35.850
我简短的两秒钟的讨论是，那不是，但无论如何

00:21:35.850 --> 00:21:44.249
就像命名一样，但是就像我在这里大惊小怪的是

00:21:44.249 --> 00:21:49.889
只是ipfs和我们的爵士乐类型会做更多的事情，然后严格来说

00:21:49.889 --> 00:21:55.230
ipfs要求，所以我们应该有库，我们应该有

00:21:55.230 --> 00:21:58.679
应用程序和应用程序不应同名

00:21:58.679 --> 00:22:04.529
库使事情变得不那么混乱，这也是我一直以来的反馈

00:22:04.529 --> 00:22:10.169
像IPS一样，它是一个应用程序，而不是一个库和人员

00:22:10.169 --> 00:22:18.210
一个图书馆，所以我认为现在有两种方法可以解释这种情况，一种

00:22:18.210 --> 00:22:21.649
他们中的整个团队都被戴上帽子之后，他们当中的人可能真的很恐怖

00:22:21.649 --> 00:22:27.090
像这样的鞋子可能会转化为多余的东西，因为

00:22:27.090 --> 00:22:30.330
如果您尝试的是基本上是说像是的那样，那么可以将ipfs作为

00:22:30.330 --> 00:22:35.730
网络，然后有一个IP地址作为一种产品，就像

00:22:35.730 --> 00:22:40.499
不同的东西，看起来分别追求它们会更多

00:22:40.499 --> 00:22:45.330
工作而不是更少，但是可能有一种方法可以解决这个问题

00:22:45.330 --> 00:22:49.740
你实际上是有点范围界定，然后退缩说

00:22:49.740 --> 00:22:55.169
就像这是ipfs一样，可能是这种网络部分，

00:22:55.169 --> 00:22:59.009
然后我们在做很多实验的基础上，那就是你知道你在做什么

00:22:59.009 --> 00:23:03.029
在安装go ipfs和JSI DFS时得到的所有这些额外的东西

00:23:03.029 --> 00:23:06.720
我们一直在努力，我们真的很感兴趣，但是区别在于

00:23:06.720 --> 00:23:10.980
是的，真的很难，而且很令人困惑，我认为它也可以说出类似的东西

00:23:10.980 --> 00:23:16.769
像我想的优先事项，如果您只是喜欢随便看看我们的回购协议

00:23:16.769 --> 00:23:21.059
您会发现它就像保险丝有很多问题一样

00:23:21.059 --> 00:23:29.190
实现不是没有人在修复，我们想修复它们，但他们没有

00:23:29.190 --> 00:23:35.009
真正被视为整个项目非常重要的核心

00:23:35.009 --> 00:23:40.379
现在就开始工作，这是因为我们正在有效地工作

00:23:40.379 --> 00:23:47.309
现在是ipfs的协议和库，不像我想的那么多

00:23:47.309 --> 00:23:51.379
该应用程序只是在帮助您使用它

00:23:52.650 --> 00:23:56.550
正确，所以就好像您可以分开的意义上来说，这是一种令人费解的努力

00:23:56.550 --> 00:23:59.790
找出库组件，这些就是您关心的事情，

00:23:59.790 --> 00:24:05.250
维护，然后应用程序在分钟内对此具有完全支持

00:24:05.250 --> 00:24:10.890
最小的子集，然后您可以喜欢一些额外的东西，看看您在哪里

00:24:10.890 --> 00:24:18.630
知道线的优先级在哪里，所以在我最后一件事

00:24:18.630 --> 00:24:24.840
之所以有点这样，是因为我们试图着手共享节点同步

00:24:24.840 --> 00:24:30.540
跨浏览器选项卡现在拥有一些东西实际上非常有帮助

00:24:30.540 --> 00:24:37.020
这是最小的，并且不是成熟的ipfs，因此必须加以考虑

00:24:37.020 --> 00:24:43.290
根据用户的需求进行排序，显然可以确定这是更多或

00:24:43.290 --> 00:24:50.640
少给了什么，也给了我一个新的我杀死了这个即将到来的演讲

00:24:50.640 --> 00:24:55.590
变得越来越清楚，实际上我只是人们正在使用的东西

00:24:55.590 --> 00:25:01.410
我杀死了D，然后他们只想存储起来并能够检索到哪个

00:25:01.410 --> 00:25:06.240
学校要少得多，我们也可以在不休息的情况下吃东西

00:25:06.240 --> 00:25:12.510
适用于应用程序用户或当前GSI PFS用户的任何内容，也可以

00:25:12.510 --> 00:25:16.800
重新同步对于该特定用例有意义的东西，而不是所有其他用途

00:25:16.800 --> 00:25:24.150
案例我的意思是我不会低估有多少人没有想到它

00:25:24.150 --> 00:25:30.090
并且仅在该范围内使用它，我的意思是听起来像对

00:25:30.090 --> 00:25:33.600
我就像我奔跑一样杀死了B，这就像一个非常理想的约会中心

00:25:33.600 --> 00:25:37.110
的方式，但我认为实际上就像很多使用IP的人一样

00:25:37.110 --> 00:25:41.220
FS现在认为它更像是API，而不是协议，

00:25:41.220 --> 00:25:44.730
有很多API浮出水面，因此它们要做的事情和文件是

00:25:44.730 --> 00:25:48.660
就像其中非常重要的一部分，然后网络就像

00:25:48.660 --> 00:25:52.380
其中最重要的部分，通过网络，我也表示持久性

00:25:52.380 --> 00:25:58.650
是的，所以像那些东西对他们来说超级重要

00:25:58.650 --> 00:26:02.790
这比我认为的要难得多

00:26:02.790 --> 00:26:06.450
例如喜欢修剪API

00:26:06.450 --> 00:26:13.260
因为那将是此更改的必要部分，我想是的

00:26:13.260 --> 00:26:17.220
我的意思是，它还可以跟踪时间，就像我们在这里花了几分钟

00:26:17.220 --> 00:26:20.310
好吧，我认为这是一次值得的交谈，实际上，我们认为

00:26:20.310 --> 00:26:24.960
直到第4季度才能接触到它，所以我会碰到各种各样的东西，但是在

00:26:24.960 --> 00:26:28.980
至少我们可以在笔记中进行正在进行的对话，但是

00:26:28.980 --> 00:26:38.610
实际上，至少在第4季度之前，什么都不会发生

00:26:38.610 --> 00:26:42.750
您指出的是，随着时间的流逝，这已经是事实了，所以我的意思是，如果您想

00:26:42.750 --> 00:26:48.270
请继续与Michael谈谈多种格式，如果您不这样做，请执行其他操作

00:26:48.270 --> 00:26:53.970
必须放弃他们，请撕下这一直是IBA最好的弱点

00:26:53.970 --> 00:26:59.430
想想在2020年7月13日之前，如果

00:26:59.430 --> 00:27:03.480
您想要我们不必丢弃录音人员，只需丢弃它就可以了

00:27:03.480 --> 00:27:12.980
对你来说还好吧，是的，所以我认为人们已经看到了这一点，

00:27:12.980 --> 00:27:19.530
也许反应过度一点，因为你没人会接受这个

00:27:19.530 --> 00:27:25.710
像JSI PFS这样的依赖项不会很快迁移到此堆栈

00:27:25.710 --> 00:27:30.570
我们的观点和我的基尔迪（Kildee）就像我们第一次阅读全新图书馆时一样

00:27:30.570 --> 00:27:35.310
该用户不应该是拥有最多用户的用户

00:27:35.310 --> 00:27:41.970
有点像相反，就像我们采用我们使用它那样，我们尝试

00:27:41.970 --> 00:27:46.200
了解它并评估它的成熟度以及我们认为它会有多少

00:27:46.200 --> 00:27:49.530
随着时间的推移而变化，因为我们不希望您带图书馆，然后

00:27:49.530 --> 00:27:54.450
在您身上还有另外三项重大变化，您知道，现在我们也

00:27:54.450 --> 00:27:58.260
在我们的某些堆栈中，其他使用者的用户数少于您

00:27:58.260 --> 00:28:01.590
实际上像Jess一样容易迭代

00:28:01.590 --> 00:28:05.700
例如像一个很好的例子，实际上是我们编写的block API

00:28:05.700 --> 00:28:09.030
我写的像一年前一样，我们一直都知道您会投入很多东西

00:28:09.030 --> 00:28:12.630
从那以后，但您知道我们每三个月就想通一次

00:28:12.630 --> 00:28:15.540
就像还有另一个重大变化需要发生

00:28:15.540 --> 00:28:19.050
事情实际上按照他们需要的方式工作，所以永远不会知道我们

00:28:19.050 --> 00:28:22.110
因为我们不断看到这些，我们不会拥有你

00:28:22.110 --> 00:28:25.620
坚持下去，直到我们完成这些重大更改，然后再努力

00:28:25.620 --> 00:28:31.620
变化，而不是七种，舞蹈多格式的内容是相似的，并且

00:28:31.620 --> 00:28:37.920
在某种程度上更大，这不仅是JavaScript，而且实际上是多种多样的

00:28:37.920 --> 00:28:41.520
格式作为标准和规范没有改变，但是

00:28:41.520 --> 00:28:45.690
我们已经将其解释为全面的语言图书馆员的方式

00:28:45.690 --> 00:28:51.180
就像我们已经采取了错误的方法来多层地板垫和

00:28:51.180 --> 00:28:54.930
现在，多层地垫表已经增长，并且散列函数的数量和

00:28:54.930 --> 00:29:00.600
编解码器已经增长，非常明显，就像其中的某些东西一样

00:29:00.600 --> 00:29:04.860
当前实现库的方式是，当您获得一个

00:29:04.860 --> 00:29:10.680
格式实现，您将获得一组哈希函数，您将获得一组低音

00:29:10.680 --> 00:29:14.730
编码器，您会得到一组编解码器，这些编解码器有点像

00:29:14.730 --> 00:29:20.160
无论您决定采用哪种格式，只要导入链，就会得到

00:29:20.160 --> 00:29:25.020
整个表格，这些在JavaScript中更为明显，而在其他方面则是一个问题

00:29:25.020 --> 00:29:28.200
语言，因为您面临着要交付多少代码

00:29:28.200 --> 00:29:33.270
显然，当您分发捆绑包时，但在JavaScript中，甚至是表的大小

00:29:33.270 --> 00:29:37.230
这是一个问题，例如在捆绑包大小中显而易见的是，

00:29:37.230 --> 00:29:41.490
那里的格式表，就像您知道的一样，我们在图表中查看

00:29:41.490 --> 00:29:46.980
区块API正在为此花费大量预算，就像

00:29:46.980 --> 00:29:50.910
桌子不是无关紧要的，它只是在增长，我们甚至开始

00:29:50.910 --> 00:29:54.600
推迟将东西添加到多层地垫表中，因为该表是

00:29:54.600 --> 00:29:58.020
这么大，人们正在加载代码，所以这是错误的方式

00:29:58.020 --> 00:30:02.280
做正确的事情，所以我们正在研究多种格式

00:30:02.280 --> 00:30:07.980
在所有语言中，多层地板垫就像您加载的界面

00:30:07.980 --> 00:30:12.300
与实现有关，您关注的表信息以及

00:30:12.300 --> 00:30:16.140
从多种格式获得的表示形式与需求无关

00:30:16.140 --> 00:30:19.950
具有该表信息，以便您可以解析多重哈希并知道

00:30:19.950 --> 00:30:24.950
即使您没有哈希函数，该整数也是，您会知道

00:30:25.130 --> 00:30:32.130
就像真正的CID一样冒泡，因此CID具有

00:30:32.130 --> 00:30:35.730
像我们实际存在的问题一样的字符串编解码器

00:30:35.730 --> 00:30:40.500
打破这一点是因为我们必须能够代表我们所看到的事物的可见ID

00:30:40.500 --> 00:30:44.850
没有抄本，或者您不能代表字符串，除非您有

00:30:44.850 --> 00:30:50.039
表信息，所以我们一直在做的事情就像弄清楚界面

00:30:50.039 --> 00:30:53.970
看起来是我们认为是加载此负载的正确方法的最佳方法

00:30:53.970 --> 00:30:57.720
信息，然后将其冒泡到堆栈中并更新块

00:30:57.720 --> 00:31:04.259
现在可以使用界面，因此对于大多数消费者而言，这看起来并没有什么不同

00:31:04.259 --> 00:31:08.580
现在，您就像旧版块界面一样，理想情况下，您希望

00:31:08.580 --> 00:31:11.940
导入块，该块将带有一堆编解码器，现在，如果

00:31:11.940 --> 00:31:16.019
您导入块/默认值，您将获得带有一堆编解码器的块

00:31:16.019 --> 00:31:20.909
哈希函数ipfs可能仅在某处具有其自己的块，并且

00:31:20.909 --> 00:31:24.090
您将导入该块，它将具有所有编解码器和哈希函数，以及

00:31:24.090 --> 00:31:28.440
基本编码器确实使IPF成为一个安全点，所以在那个级别上，它实际上并不会

00:31:28.440 --> 00:31:32.759
更改，但事实是您必须对此进行配置并通过

00:31:32.759 --> 00:31:36.210
阻止所有层的接口

00:31:36.210 --> 00:31:40.620
您不能只导入它，因为您可能需要对其进行配置，或者

00:31:40.620 --> 00:31:44.519
您可能需要允许用户使用更多或更多编解码器对其进行配置

00:31:44.519 --> 00:31:49.649
散列函数或类似相当实质性的东西

00:31:49.649 --> 00:31:52.610
像架构II这样的代码更改将要更改很多代码路径

00:31:52.610 --> 00:31:57.269
因为我们知道这是一个巨大的突破，所以我们要采取其他所有措施

00:31:57.269 --> 00:32:00.809
打破我们已经拖延很久的变化，所以还有其他

00:32:00.809 --> 00:32:04.200
此重构中的内容严格来说不是这种多格式重构

00:32:04.200 --> 00:32:07.320
我们摆脱了缓冲区，当您进入8个数组时会做所有事情

00:32:07.320 --> 00:32:12.629
这是一个非常大的变化，我们知道CIB的变化也非常大

00:32:12.629 --> 00:32:17.039
因为没有您的输入，我们正在移动ESM，因为我们不想

00:32:17.039 --> 00:32:22.259
也可以在六个月到一年的时间内迁移到ESM，就像

00:32:22.259 --> 00:32:26.429
现在比起遭受更多的制动变化，现在更容易接受和处理它

00:32:26.429 --> 00:32:32.070
未来，我认为他们就像泡沫中的某些事物一样

00:32:32.070 --> 00:32:36.179
像ESM这样的东西就不在您要花费时间的地方，如果

00:32:36.179 --> 00:32:41.250
您正在升级的值类型更改是最重要也是最重要的

00:32:41.250 --> 00:32:45.450
迁移是一件痛苦的事情，因为您的缓冲区点到处都是缓冲区代码

00:32:45.450 --> 00:32:47.549
您有cid的地方是

00:32:47.549 --> 00:32:52.549
看到我到处解码，我们不得不认真思考

00:32:52.549 --> 00:32:57.869
失败案例应该是什么样的，所以很容易看到在哪里

00:32:57.869 --> 00:33:04.110
您需要进行更新，而不是让错误透明地出现，而您只是

00:33:04.110 --> 00:33:08.999
进行了错误的处理，但没有看到异常，因此有一百万个笔记

00:33:08.999 --> 00:33:12.989
升级时我们可以遍历的那个和不同的线程，但是

00:33:12.989 --> 00:33:17.039
是的，如果您想进入雷达，那就像有一个很大的突破

00:33:17.039 --> 00:33:20.909
更改即将到来，但它不会很快通过我们ipfs，但是您

00:33:20.909 --> 00:33:24.989
知道这一直取决于您何时要升级，但我们不是

00:33:24.989 --> 00:33:27.960
甚至建议您在接下来的三个或四个时间内升级

00:33:27.960 --> 00:33:31.440
几个月，就像我们还没有准备好，我们实际上还有其他优先事项

00:33:31.440 --> 00:33:37.019
四分之一，所以我们现在无法完成它，所以迈克尔·我有一个

00:33:37.019 --> 00:33:41.970
问题，每三个月左右一次，当您认为准备就绪时，我们

00:33:41.970 --> 00:33:47.609
开始升级并注意到他们可能需要的一些其他问题

00:33:47.609 --> 00:33:52.289
打破变化，过程会是什么样子，然后您又回到

00:33:52.289 --> 00:33:58.859
合并这些想法或是的，所以希望大部分

00:33:58.859 --> 00:34:03.720
当我们更新堆栈并像GSI BFS这样的人轻巧地工作时

00:34:03.720 --> 00:34:08.099
希望我们能够在此过程中解决大多数此类问题，如果有

00:34:08.099 --> 00:34:12.659
任何剩余的东西，例如我们仍然愿意接受重大改变，

00:34:12.659 --> 00:34:17.040
知道您在升级过程中是否会使升级变得容易

00:34:17.040 --> 00:34:19.799
更合理，这是我们需要采取的一种变革

00:34:19.799 --> 00:34:26.490
更基本的水平，是的，也许让我改写一下，它是不同的，所以其中之一

00:34:26.490 --> 00:34:31.379
我一直想做的事情是针对共享ipfs

00:34:31.379 --> 00:34:37.440
在浏览器中众所周知，尝试使用所有这些新IP，而我们只有一个

00:34:37.440 --> 00:34:40.530
阻止API并公开这些内容，并以某种方式代替该标签

00:34:40.530 --> 00:34:45.359
API，以便我们实际上可以了解那些可能不兼容或

00:34:45.359 --> 00:34:51.359
鉴于我们正在研究的团队要小得多，因此较早出现了问题

00:34:51.359 --> 00:34:56.579
和更多的ikf，因为用户认为这是一个好主意

00:34:56.579 --> 00:35:01.150
现在就做，还是您认为这是我们应该等到

00:35:01.150 --> 00:35:07.480
我认为这实际上取决于代码的隔离程度，因此

00:35:07.480 --> 00:35:11.170
代码真的是孤立的，并且不是超级集成的，其余的

00:35:11.170 --> 00:35:14.920
堆栈，这可能是个好时机，因为它会给你

00:35:14.920 --> 00:35:19.589
有了它，您将能够尽早清除所有问题，并

00:35:19.589 --> 00:35:24.009
对于像这样的工作人员界面这样的一些重大变化是

00:35:24.009 --> 00:35:27.099
可能会让您的生活更轻松，就像让您陷入困境

00:35:27.099 --> 00:35:30.730
到处都有Rais，这可能使它的生活比不得不面对的生活更加轻松。

00:35:30.730 --> 00:35:36.880
缓冲polyfill，所以它值得，我的意思是我不是我不在你的代码中，所以我

00:35:36.880 --> 00:35:41.200
不愿意为您提出建议，但可能需要考虑一下

00:35:41.200 --> 00:35:45.490
关于另一件事，我也要提一提的是，就像我们的观点是

00:35:45.490 --> 00:35:49.480
在新世界里有一个旧世界，我们希望没有太多

00:35:49.480 --> 00:35:55.380
之间的步骤，但我的意思是说我们不想让您采取

00:35:55.380 --> 00:35:59.589
在相同的代码库中进行了很多零碎的升级，因为这只会使

00:35:59.589 --> 00:36:03.490
迁移变得更加困难，所以就像我们知道

00:36:03.490 --> 00:36:07.809
可能不会维护每个漫画的两个版本

00:36:07.809 --> 00:36:12.640
只是为了维护这个新堆栈的编解码器，所以我实际上写了一个

00:36:12.640 --> 00:36:18.609
旧界面，以便您可以采用新样式的编解码器，它将完全

00:36:18.609 --> 00:36:24.009
将其转换为您当前使用的接口，以便从字面上转换回

00:36:24.009 --> 00:36:27.910
缓冲它会转换为旧的CID接口，就像所有内容一样

00:36:27.910 --> 00:36:31.660
相同，并且应该具有与您要插入的结构相同的结构

00:36:31.660 --> 00:36:36.039
我认为它是gsib格式或类似的格式，但我

00:36:36.039 --> 00:36:40.869
可以记住它的名称，但是像那样，这是您应该使用的方式

00:36:40.869 --> 00:36:44.140
在旧空间中使用新事物，直到您准备好完全像

00:36:44.140 --> 00:36:52.829
升级，但是是的，如果您必须完全隔离的话，这听起来很棒

00:36:52.829 --> 00:36:57.940
从OPR D团队真正看到的是一些实现了某些目标的同龄人

00:36:57.940 --> 00:37:03.309
进行IP犯罪方面的工作，并进行一些此类迁移，例如

00:37:03.309 --> 00:37:07.390
p2p带来了一大堆重大变化，但它们总是

00:37:07.390 --> 00:37:12.880
提交了PRS，该PRS实际上随后将ipfs升级为使用p2p的新版本

00:37:12.880 --> 00:37:16.790
以及从OPD团队看到的新界面

00:37:16.790 --> 00:37:20.700
因为当您升级和服用时，我听到的声音很多

00:37:20.700 --> 00:37:24.600
这样，但是就像这样，当您准备指出这些东西是非常深刻的

00:37:24.600 --> 00:37:30.960
像您的家人一样根深蒂固，这是肯定的，如果

00:37:30.960 --> 00:37:37.550
改变不是改变价值类型，我认为我们可以很容易地做到这一点，但是

00:37:37.550 --> 00:37:42.840
改变一个值类型，就像它不是一个不是一样，这是实质性的

00:37:42.840 --> 00:37:47.820
这不是一个小公关，也像是影响生态系统的东西

00:37:47.820 --> 00:37:52.440
杰伊斯（Jays）最重要的想法是这样，如果我承认，这不会改变

00:37:52.440 --> 00:37:56.100
就像只使​​用所有库一样，这是一个变化，因为它们没有得到

00:37:56.100 --> 00:38:00.030
缓冲区不再像以前那样无法再获得旧的CID了

00:38:00.030 --> 00:38:04.590
所以就像那样，那不是您可以零碎的东西，我

00:38:04.590 --> 00:38:10.860
认为我们可以做的最接近的事情就是

00:38:10.860 --> 00:38:20.430
CLI我们发送了PR，用于导入和导出汽车文件，并且使用了我们的新

00:38:20.430 --> 00:38:25.350
界面，并且仅与CLI隔离，因此不会像整个界面那样产生影响

00:38:25.350 --> 00:38:29.490
堆栈的其余部分，不必喜欢，它可以是

00:38:29.490 --> 00:38:34.620
解开纠结，如果您注意到像在该代码路径中一样，它实际上正在拉入

00:38:34.620 --> 00:38:39.420
新书，新版块接口的旧版本，现在我们将获得

00:38:39.420 --> 00:38:44.070
实际上已经升级为喜欢非常非常新的东西，并且在您的未来，但是喜欢

00:38:44.070 --> 00:38:48.660
这就是我们真正在寻找机会发送的东西

00:38:48.660 --> 00:38:53.340
您会收到有关的反馈，是的，如果您可以看的话，那将是非常好的

00:38:53.340 --> 00:38:56.790
在该公关中，以及出于其他原因，我认为我们确实需要关闭该公关

00:38:56.790 --> 00:39:01.920
弄清楚我们要为进出口做些什么，是的，是的

00:39:01.920 --> 00:39:05.700
就像我们所做的那样，仅仅因为值类型的更改是

00:39:05.700 --> 00:39:11.760
没什么大不了的，不是我们可以做的

00:39:11.760 --> 00:39:16.710
在很小的基础上，我希望有一个更好的例子，但就像我认为

00:39:16.710 --> 00:39:22.500
可能确实有帮助的一件事，对您来说会有所不同

00:39:22.500 --> 00:39:28.440
但在某些时候，GSI PFS light将采用此API正常工作

00:39:28.440 --> 00:39:34.440
我们在此方面与他们紧密合作，并将你们吸引到该公关中，只是为了看看

00:39:34.440 --> 00:39:38.400
代码并查看一些差异，我认为这些差异确实具有教育意义

00:39:38.400 --> 00:39:43.140
考虑一下他们将如何改变，这将是猜测ipfs

00:39:43.140 --> 00:39:48.270
实例，就像我是的，我不，我不知道我不想回到

00:39:48.270 --> 00:39:52.770
之前有过对话，但也许甚至值得考虑

00:39:52.770 --> 00:39:57.420
就像Jas ipfs的未来版本在最上面的SIDS上的代码行一样

00:39:57.420 --> 00:40:02.250
如果这是进行升级的简便方法，那也可能是

00:40:02.250 --> 00:40:06.150
您可能要考虑的道路，是的，我的意思是像我说的那样，这不是

00:40:06.150 --> 00:40:10.050
我的项目就像我做不到，我无法为您做出很多这样的决定，但是

00:40:10.050 --> 00:40:12.960
我的意思是我们将尽我们所能继续做汽车之类的事情

00:40:12.960 --> 00:40:21.990
导入/导出让我看看，所以我像这样通过引用

00:40:21.990 --> 00:40:25.859
也会发生，然后走，但然后像说话一样，几乎是J的袖子

00:40:25.859 --> 00:40:32.940
像是这样的事情，所以没有时间表，就象我们喜欢的那样

00:40:32.940 --> 00:40:36.720
这就像我们知道有一天需要发生的事情，但是

00:40:36.720 --> 00:40:41.099
没有优先级，这不是我们受此限制的原因

00:40:41.099 --> 00:40:45.270
您可以想象，它们是如此分配给文件声明，

00:40:45.270 --> 00:40:50.819
就像铁锈在做的日期一样，没有什么比这更重要的了

00:40:50.819 --> 00:40:54.240
虽然现在如此，所以您知道一些工作正在发生信任，

00:40:54.240 --> 00:40:57.599
它非常相似，我的意思是明显不同，因为它生锈，除非

00:40:57.599 --> 00:41:02.450
JavaScript总是有一些不同，但是是相同的方法

00:41:02.450 --> 00:41:08.030
运送时没有表格信息和编解码器，而不是将其加载

00:41:08.030 --> 00:41:12.390
就像我有一个基于您之前发表的评论的问题，这是

00:41:12.390 --> 00:41:17.450
您只有一个可以采用新编解码器实现并将其打开的适配器

00:41:17.450 --> 00:41:21.990
是否适合当前的编解码器实现

00:41:21.990 --> 00:41:27.839
现有的编解码器库不会只使用适配器，并且像代理一样选择一个

00:41:27.839 --> 00:41:32.310
新的实现，因此您没有两个不同的版本编码，因此

00:41:32.310 --> 00:41:37.230
从本质上讲，这是一件穿裙子的衣服，像冰一样的东西，并且做了很多

00:41:37.230 --> 00:41:41.010
尝试使您在所有这些编解码器（旧编解码器）之间进行一日竞赛

00:41:41.010 --> 00:41:47.310
因此，我不必这样做，也不必

00:41:47.310 --> 00:41:52.380
主要是因为旧的编解码器接口有很多额外的样板

00:41:52.380 --> 00:41:56.310
和终结点，那里没有像您可以做的离散的单个地方

00:41:56.310 --> 00:41:59.610
翻译是的，您在多个地方放了吗，所以我们就像

00:41:59.610 --> 00:42:03.210
您知道对我们来说，将旧的Codex移植到其中可能更容易

00:42:03.210 --> 00:42:07.920
新样式，然后像实际那样导出此旧界面

00:42:07.920 --> 00:42:12.690
实际上，对我们来说，迁移旧的所有法典比迁移要容易得多。

00:42:12.690 --> 00:42:17.130
就是试图在这个方向上提出翻译层

00:42:17.130 --> 00:42:21.780
我明白了，我说变速箱在任一方向上都在工作，但不，不，不，

00:42:21.780 --> 00:42:24.750
不，我们只是采用新样式并采用旧样式，这很多

00:42:24.750 --> 00:42:28.710
更容易，因为在新样式中，您知道这是一种编码功能，而另一种

00:42:28.710 --> 00:42:36.120
像这样解码的功能真的非常容易，所以我还有另一件事

00:42:36.120 --> 00:42:40.620
与我或不是所有人的所有事物有关，但我们

00:42:40.620 --> 00:42:44.700
每次都谈论块，或者不看IP O'Leary的网络还是这个

00:42:44.700 --> 00:42:49.140
分开的事情，我还提到ipfs light实际上是不好的，而你

00:42:49.140 --> 00:42:53.670
谈论也许与这种纺织品合作以获得新的知识产权

00:42:53.670 --> 00:42:58.560
东西，也许我猜可能在她的网站上，所以所有这些事情都差不多

00:42:58.560 --> 00:43:05.220
互连，所以我想做的一件事就是弄清楚是什么，我

00:43:05.220 --> 00:43:11.580
卡森（Carson）也是这样，所以道格（Doug）API本质上是一个带有某些

00:43:11.580 --> 00:43:17.130
发生在幕后的编码解码，而块KK很好

00:43:17.130 --> 00:43:23.310
因为从某种意义上说它是更小的API，所以没有太多事情发生

00:43:23.310 --> 00:43:29.820
您有任何可能的方式，使Block API可以与

00:43:29.820 --> 00:43:34.650
阻碍了新旧IP实施的实现，因此所有想尝试新IP的人都可以

00:43:34.650 --> 00:43:40.920
这些东西可以通过使用mu来实现，我会杀死该块并且I cap具有块API

00:43:40.920 --> 00:43:45.750
如果他们不想这样做，那么他们至少可以继续使用dag API

00:43:45.750 --> 00:43:51.030
对我来说，做共享节点的事情真的很有趣，因为那

00:43:51.030 --> 00:43:54.990
可以使用Excel的ipfs灯解决Excel的用例

00:43:54.990 --> 00:43:59.340
只希望有新的API并做扎克（Zack）和三本书

00:43:59.340 --> 00:44:03.180
表达了一些兴趣，不想这样做的人可以

00:44:03.180 --> 00:44:09.660
继续使用现有的标签api no III，诚实地建议您

00:44:09.660 --> 00:44:14.100
不要尝试将接口并行放置，而是像这样写

00:44:14.100 --> 00:44:17.460
非常小的翻译层，当您知道它需要像它一样存在时

00:44:17.460 --> 00:44:22.830
没有那么多代码可以采用ftfs中的当前块API，并且像已翻译的代码一样

00:44:22.830 --> 00:44:26.040
像新的块api一样来回插入块中

00:44:26.040 --> 00:44:29.610
您想要的是新的块api，则可以像让IPSS做旧的一样

00:44:29.610 --> 00:44:34.080
并编写五六行代码，将其转换回去

00:44:34.080 --> 00:44:39.420
来往新区块，就像一堆有效的冗余一样

00:44:39.420 --> 00:44:44.430
编码到核心IP FS中，这样做对我来说并没有多大意义

00:44:44.430 --> 00:44:49.440
因为在这两件事之间迁移并不难，唯一的一件事

00:44:49.440 --> 00:44:52.380
您输掉的游戏就像一场效率游戏，因为新的区块api有很多功能

00:44:52.380 --> 00:44:56.430
喜欢缓存，而不是内部缓存，我想您可能有

00:44:56.430 --> 00:45:01.920
误解了我的目标我的声音具有较低的KPI，它更像是二进制文件

00:45:01.920 --> 00:45:08.040
API选择一个块存储，IPL d博客为您提供了一种创建这些二进制文件的方法

00:45:08.040 --> 00:45:13.200
因为那些矿工和duggie api sorta人们想移民先生

00:45:13.200 --> 00:45:16.920
但希望他们会迁移，将来不再需要

00:45:16.920 --> 00:45:22.320
因为挡住一个像我杀死D挡，然后挡住一对将全部完成

00:45:22.320 --> 00:45:27.270
事情已经做了，这更有意义，我的意思是

00:45:27.270 --> 00:45:31.260
好像真的不是那么容易吗，就像你知道那不会比我更多，而是

00:45:31.260 --> 00:45:34.680
我不能以为它像块服务接口那样被称为我，就像不能

00:45:34.680 --> 00:45:38.430
您只需实例化它，并在网络和所有内容上获取它，然后如果

00:45:38.430 --> 00:45:42.780
您有该块服务接口疯狂，因为放置它是的，是的

00:45:42.780 --> 00:45:45.330
那时，就像拿走数据一样，这是微不足道的

00:45:45.330 --> 00:45:51.570
并将其转换为新的块API，就像我说的那样，这真的非常容易

00:45:51.570 --> 00:45:55.140
您将在其中装有缓冲液polyfill，但无论我是什么意思，我

00:45:55.140 --> 00:46:01.650
剥掉我正在尝试解决的网络部分的原因

00:46:01.650 --> 00:46:05.940
这个电话会议太多了，我们可以忘记了，我们已经过去了，我认为

00:46:05.940 --> 00:46:13.050
我们在这里太杂草了，是的，好的，希望我清除了

00:46:13.050 --> 00:46:15.120
是的，我们不是想像一吨

00:46:15.120 --> 00:46:18.030
为您准备的额外工作实际上，我们正试图做相反的事情，并试图

00:46:18.030 --> 00:46:22.710
限制大家都必须考的成绩数量，就像确保

00:46:22.710 --> 00:46:27.030
我们把事情做好了，这样当您升级时，您就不会不断地进行排序

00:46:27.030 --> 00:46:32.540
解决我们还没有发现的其他问题

00:46:32.540 --> 00:46:38.310
只是想回声亚历克斯说，这就像您知道某种PRS欢迎

00:46:38.310 --> 00:46:47.010
就像您知道的ipfs一样，我们有汽车中的东西，我们有一半的图形同步，

00:46:47.010 --> 00:46:56.100
有这样的IPL D格式是的，是的，我是说，是的，所以是这样的

00:46:56.100 --> 00:47:00.330
go的新界面随处可见，它们

00:47:00.330 --> 00:47:05.040
现在很遥远，我的意思是，例如，它们被用于抓斗中

00:47:05.040 --> 00:47:10.770
就像我们一样，我们在整个世界都有一个资源问题

00:47:10.770 --> 00:47:17.340
登上那些没造出来的东西，而《威胁》则特别让我深感

00:47:17.340 --> 00:47:21.960
里面的go资源，这真的很难为您提供任何

00:47:21.960 --> 00:47:25.140
虽然我唯一可以保证的日期

00:47:25.140 --> 00:47:29.370
老实说，就像您将在如何使用

00:47:29.370 --> 00:47:32.640
到本季度末，我肯定可以使用新的go接口

00:47:32.640 --> 00:47:37.650
保证我可以保证在其他使用glad的图书馆中的草稿公司

00:47:37.650 --> 00:47:41.370
文件硬币中的肮脏素数将继续升级到最新版本

00:47:41.370 --> 00:47:46.860
东西肯定可以保证，因为就像在类囊体管道中一样，但是

00:47:46.860 --> 00:47:50.400
至少下一个季度没有很多类似的东西，但是

00:47:50.400 --> 00:47:55.830
我们不是真的可以肯定地说，其中包括类似的文档

00:47:55.830 --> 00:48:02.970
最好的方式来创建一个dag并立即将其放入

00:48:02.970 --> 00:48:09.420
我认为这类似于使用我们的结构之一创建汽车文件

00:48:09.420 --> 00:48:14.310
然后导入它，但是就像有关如何执行该操作的文档一样

00:48:14.310 --> 00:48:19.860
是不是真的，卡卡音乐节的用户正在碰到类似这样的东西

00:48:19.860 --> 00:48:26.100
好的，如果您可以仅给出用例的更多详细信息，

00:48:26.100 --> 00:48:29.850
在那里，我可以将其纳入我们正在编写和制作的东西的清单中

00:48:29.850 --> 00:48:33.810
确保那是因为我们正在写一些类似的东西

00:48:33.810 --> 00:48:37.260
就像我们在运行一样，是一种思维和数据结构教程

00:48:37.260 --> 00:48:39.990
然后喜欢如何在没有现场吃饭的情况下建立这种数据结构

00:48:39.990 --> 00:48:45.210
真正谈论他们如何猛烈地进入存储，因为这有所不同

00:48:45.210 --> 00:48:48.030
取决于语言，但是在某个时候，我们需要放手

00:48:48.030 --> 00:48:51.530
每种语言，像这样说，是针对这些不同语言的最佳方法

00:48:51.530 --> 00:48:56.730
接口，是的，我认为很多时候实际上没有II可以

00:48:56.730 --> 00:48:59.910
向您保证，对于每种语言，我们都会喜欢的，这是如何

00:48:59.910 --> 00:49:03.810
像您刚才所做的一样将其保存到汽车档案中，他会来购买新车

00:49:03.810 --> 00:49:07.020
文件，然后这是我们的文件进入IP地址和文件硬币状遗嘱的方式

00:49:07.020 --> 00:49:10.740
肯定有该文档，但如果有的话，可能会有更有效的方法

00:49:10.740 --> 00:49:15.390
你在旅途中，你会像重要的驱动器GFS一样获得收获，就像实际上没有进入

00:49:15.390 --> 00:49:20.490
汽车文件，然后直接进入ipfs，这就像一件有趣的事情

00:49:20.490 --> 00:49:25.830
看是的，我的意思是想像在一场演出中那样思考

00:49:25.830 --> 00:49:31.290
周末的感激是一位老鹰fi Ceaser，他正试图像9号进口

00:49:31.290 --> 00:49:39.300
兆字节JSON文件权，这很好，虽然很好，但是还可以，但是现在

00:49:39.300 --> 00:49:45.900
关闭不会发送它，因为它不仅仅是梅格，是的，以正确的方式考虑它

00:49:45.900 --> 00:49:51.690
所以我们需要一些像我如何思考我感觉正确的D是的，所以

00:49:51.690 --> 00:49:55.350
我们从这里开始，这就是您的内存中地图的外观

00:49:55.350 --> 00:49:59.670
这是一种数据结构的语言，就像我们转身时的样子

00:49:59.670 --> 00:50:02.580
变成IPL d，我们得到该哈希板，您可以

00:50:02.580 --> 00:50:05.340
去获取它，然后从那里像那样变成一个链接，这就是你的方式

00:50:05.340 --> 00:50:08.070
创建一个数据结构，将其链接到事物的不同部分，那就是

00:50:08.070 --> 00:50:10.890
您如何构建更大的结构，它们越过了这样的极限，那就是

00:50:10.890 --> 00:50:13.590
绝对是我们正在努力做的事情，我们会拥有应该拥有的健康

00:50:13.590 --> 00:50:22.820
实际上，JavaScript中的所有语言示例都会使所有这些酷炫变得生锈

00:50:22.820 --> 00:50:26.430
听到我们听起来像是我们在努力，这真是太好了

00:50:26.430 --> 00:50:33.530
页好酷

00:50:33.880 --> 00:50:38.050
所有人都很棒，我想我错过了之间的会议，但是一切都很好

00:50:38.050 --> 00:50:47.080
这是值得的，谢谢大家和有毒物质，但就像我感谢大家一样，

00:50:47.080 --> 00:50:50.250
你上网

