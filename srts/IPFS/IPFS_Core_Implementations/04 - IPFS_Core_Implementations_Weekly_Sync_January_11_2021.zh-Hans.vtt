WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.880 --> 00:00:04.000
大家好，欢迎来到ipfs核心实现

00:00:04.000 --> 00:00:08.480
2021年1月11日，星期一的每周事务

00:00:08.480 --> 00:00:11.840
呃，休息后回来，这是我的第一天回来

00:00:11.840 --> 00:00:15.040
我敢肯定，今年我会做一些很棒的事情

00:00:15.040 --> 00:00:18.320
每个人都是我们要经历我们的常规

00:00:18.320 --> 00:00:21.439
议程是高度优先的倡议，其他

00:00:21.439 --> 00:00:25.039
主动性，然后停车场问其他问题

00:00:25.039 --> 00:00:30.800
这样的事情，让我们开始前进的事情即将到来，

00:00:30.800 --> 00:00:35.760
可以谈论的发布版本

00:00:38.399 --> 00:00:42.559
我上周错过的事情发生在休息时间

00:00:42.559 --> 00:00:50.239
在12月22日发布的Live PDP 0.13或类似的内容

00:00:50.239 --> 00:00:53.520
确实包含一些重大更改嗯

00:00:53.520 --> 00:00:57.120
从技术上讲，但除非您打开信息流，否则它们不应该影响人们

00:00:57.120 --> 00:01:03.120
直接在连接上，所以只是要注意那里，但是是的，我认为

00:01:03.120 --> 00:01:06.000
我们正在汇总，或者有公关开放

00:01:06.000 --> 00:01:12.880
将其包含在jsipfs中

00:01:12.880 --> 00:01:16.400
我的意思是说，穿上你的背心，是的，那是，是的，是的，是的

00:01:16.400 --> 00:01:27.840
是的，还有一些与此相关的快速修复

00:01:30.000 --> 00:01:33.520
是，0.8版本的状态类似于

00:01:33.520 --> 00:01:41.840
与进行中的上周相似

00:01:44.479 --> 00:01:47.920
嗯，希望本周晚些时候发布js ipfs，

00:01:47.920 --> 00:01:51.920
 ipvs客户端实验性的grpc服务器和一些

00:01:51.920 --> 00:01:55.280
修复了我们目前正在调试的一些问题

00:01:55.280 --> 00:01:59.200
http服务器中的内存泄漏可能

00:01:59.200 --> 00:02:09.840
以及来自HTTP客户端的并发连接的一些问题

00:02:11.360 --> 00:02:15.680
这就是即将发布和发布的版本

00:02:15.680 --> 00:02:22.720
我们可以继续进行下一个固定服务的项目

00:02:22.720 --> 00:02:28.319
从侧面看，我认为这只是um着陆的mfs固定

00:02:28.319 --> 00:02:31.040
这星期发生

00:02:31.520 --> 00:02:36.560
[音乐]是的，关于

00:02:36.560 --> 00:02:43.040
gui方面，我相信网络ui会把一切都连接起来

00:02:43.040 --> 00:02:50.160
MFS，然后我们将其注释掉，然后

00:02:50.160 --> 00:02:57.040
当它着陆时将其连接起来，我认为配置密钥已稳定，因此我们

00:02:57.040 --> 00:03:02.560
可以假设他们是正确的，好吧，是的，我想我们很高兴

00:03:02.560 --> 00:03:06.080
和他们在一起哦，是的，我们必须在其中发表一些评论

00:03:06.080 --> 00:03:08.879
在发行说明中有关

00:03:08.879 --> 00:03:13.440
任何使用rc但是的人都应该没事，所以嗯

00:03:13.440 --> 00:03:17.440
是的，如果它降落在rc中，那么我们将其记录下来，如果不能，我们可以

00:03:17.440 --> 00:03:21.760
现在将其注释掉，以后再做

00:03:22.560 --> 00:03:26.959
http客户端请求请求正在审核中

00:03:26.959 --> 00:03:32.080
现在它取决于rc1，一旦rc2发布，我将其更新为

00:03:32.080 --> 00:03:35.120
指向rc2

00:03:38.239 --> 00:03:44.720
所以我们不会在发布之前合并

00:03:45.360 --> 00:03:48.720
因为不会伤到它

00:03:49.920 --> 00:03:54.400
ii不要以为api不会改变

00:03:54.400 --> 00:04:01.840
api的表面很小

00:04:02.640 --> 00:04:14.720
好吧，我们可能想要在Web ui之前就非常正确了

00:04:14.720 --> 00:04:18.560
是的，我的意思是，如果我们要使用网络用户界面，理想情况下他们是对的

00:04:18.560 --> 00:04:22.560
在最终的go ip快速审核版本中，我们需要使用http客户端

00:04:22.560 --> 00:04:27.120
事先这样就可以进入那里了

00:04:27.120 --> 00:04:30.639
如果有什么变化，例如您知道事实证明我们犯了一个错误，那就是

00:04:30.639 --> 00:04:34.160
很好，因为您只会像这样的错误而已

00:04:34.160 --> 00:04:36.560
目前尚不支持该功能，因为您使用的是旧版本的

00:04:36.560 --> 00:04:43.840
去ipfs，然后我们将对其进行更新，然后一切正常

00:04:44.080 --> 00:04:49.520
好的，接下来是本地固定

00:04:51.440 --> 00:04:54.960
嗯，我觉得事情很漂亮

00:04:54.960 --> 00:05:01.520
在那里可靠，目前唯一要做的就是我们要进行一些测试

00:05:01.520 --> 00:05:08.400
进行评估，例如进行大量迁移所需的时间

00:05:08.400 --> 00:05:12.400
如果您的数据存储库中已经有很多引脚

00:05:12.400 --> 00:05:16.880
没什么大不了的，但我们希望能够设定期望

00:05:16.880 --> 00:05:20.080
与审核版本有关，如果实际上您需要花费多长时间

00:05:20.080 --> 00:05:24.880
有很多别针，信息将

00:05:24.880 --> 00:05:28.080
有空我今天应该就完成了

00:05:28.080 --> 00:05:31.840
经历并产生它，你可以

00:05:31.840 --> 00:05:35.039
图，看看，如果我们有这样的预期行为是什么

00:05:35.039 --> 00:05:39.039
我们所看到的曲线之外的任何东西

00:05:39.039 --> 00:05:42.960
他们网站上可能存在某些错误

00:05:47.520 --> 00:05:50.320
在某个特定的地方，我们应该发布该信息以用于

00:05:50.320 --> 00:05:53.440
用户的消费量，还是我们只想在内部将其用于

00:05:53.440 --> 00:05:57.600
这一点我的意思是我认为一旦我们有了东西，

00:05:57.600 --> 00:06:02.080
如果它看起来像我们看到的样子

00:06:02.080 --> 00:06:05.520
在内部，那么我们就很好了，我们只是

00:06:05.520 --> 00:06:09.759
像make一样，我们将其添加到0.8发布说明github问题中

00:06:09.759 --> 00:06:13.280
好的，嗯，是的，我们要确保一切

00:06:13.280 --> 00:06:21.840
首先在内部检查

00:06:23.360 --> 00:06:27.600
接下来很酷的是数据传输速度的提高

00:06:28.880 --> 00:06:37.120
嗯，汉娜和亚历克斯还在外面，虽然那里什么都没有

00:06:37.120 --> 00:06:40.319
是的，我有一些与数据传输有关的东西

00:06:40.319 --> 00:06:47.120
但我们最终会做到这一点neato uh js改善了可发现性，

00:06:47.120 --> 00:06:51.120
是的，所以在可再生能源方面

00:06:51.120 --> 00:06:53.759
上周两个最大的更新

00:06:53.759 --> 00:06:59.120
客户端代码现在准备在脂质峰核心pr中进行查看了吗？

00:06:59.120 --> 00:07:06.000
我还创建了一个基准测试设置程序，我刚刚完成了一些有关

00:07:06.000 --> 00:07:09.039
它并创建一些文档，以便明天我

00:07:09.039 --> 00:07:13.120
可以开始对服务器本身进行基准测试，因此

00:07:13.120 --> 00:07:16.080
是的，我想在本周完成基准测试

00:07:16.080 --> 00:07:19.520
并开始处理生产指南中的示例

00:07:19.520 --> 00:07:22.800
如果我能对服务器进行审核，那将是很好的

00:07:22.800 --> 00:07:31.520
这周，接下来就是双向流式传输了，

00:07:31.520 --> 00:07:34.960
 um在浏览器中的流区域，所以在圣诞节前就合并了

00:07:34.960 --> 00:07:38.000
它将在下一张幻灯片fs版本中发布

00:07:38.000 --> 00:07:41.360
以及说明新的闪亮内容的博客文章

00:07:41.360 --> 00:07:48.960
人们可以用它做的有趣的事情是javascript dht没有更新

00:07:48.960 --> 00:07:54.080
那是什么

00:07:54.080 --> 00:08:00.080
高优先级计划的结束，因此下一部分是其他计划

00:08:00.080 --> 00:08:03.840
嗯，第一件事就是打字稿整合

00:08:06.960 --> 00:08:13.599
所以我们在亚洲的打字稿配置中做了一些改动

00:08:13.599 --> 00:08:16.960
所以我要更新一些公关

00:08:16.960 --> 00:08:19.680
已经完成了

00:08:20.479 --> 00:08:25.120
ipfs酒店也有apr

00:08:25.120 --> 00:08:28.720
而且有一个CID类型设置的修复程序

00:08:28.720 --> 00:08:35.200
基本上打破了锂的类型，所以希望所有锂都被合并

00:08:35.200 --> 00:08:40.240
很快，我们就可以继续使用功能而不是类型

00:08:40.240 --> 00:08:43.519
是的，就是这样

00:08:51.040 --> 00:08:57.600
下一个项目是badge 2支持，我认为它将被重命名

00:08:57.920 --> 00:09:03.760
是的，它们很好badge，最新版本将是

00:09:03.760 --> 00:09:07.200
r 3和the团队说他们不

00:09:07.200 --> 00:09:10.640
除了做维护以外，对做其他事情真的很感兴趣

00:09:10.640 --> 00:09:14.160
像任何非关键性修复程序

00:09:14.160 --> 00:09:18.000
到d图形不支持的of版本，因此

00:09:18.000 --> 00:09:21.040
嗯，似乎没有特别好的理由

00:09:21.040 --> 00:09:26.640
为什么ipfs如果现在不使用badge，应该继续使用它，并且

00:09:26.640 --> 00:09:30.080
应该只切换到徽章，然后直接转到badge 3。

00:09:30.080 --> 00:09:34.560
嗯，我们可能需要同时支持两者

00:09:34.560 --> 00:09:37.839
就像让人们测试

00:09:37.839 --> 00:09:41.360
of3的稳定性，看看他们是否对此感到满意

00:09:41.360 --> 00:09:48.320
而且我们还需要为拥有多个数据版本的系统设置一个系统

00:09:48.320 --> 00:09:53.600
the数据存储的存储，每个都有一个存储库

00:09:53.600 --> 00:09:58.399
每个主要版本的版本似乎是一个坏主意，这就是我们

00:09:58.399 --> 00:10:00.880
目前在做[音乐]

00:10:00.880 --> 00:10:04.560
如果您对此感兴趣，我想按照

00:10:04.560 --> 00:10:11.279
呃去ds badge的回购，那里会发生一些讨论

00:10:14.079 --> 00:10:17.519
是纯粹在问题中进行讨论，还是有一个渠道可以

00:10:17.519 --> 00:10:24.160
我们也想讨论呃，是的，我目前的计划只是

00:10:24.160 --> 00:10:26.959
想要得到一些简短的信息，例如调查一些信息

00:10:26.959 --> 00:10:30.000
人们的简短想法，然后提出一个问题，然后再

00:10:30.000 --> 00:10:36.079
如果它像开始一样在github问题um上做

00:10:36.079 --> 00:10:40.959
它变得越来越复杂，然后我们将安排一个会议来讨论它

00:10:40.959 --> 00:10:47.839
好的

00:10:48.959 --> 00:10:53.120
遍历是列表中的下一个项目

00:10:55.200 --> 00:11:02.640
呃，爱尔兰人回来了，他正在做一些事情，嗯，是的。

00:11:02.640 --> 00:11:05.680
他正在和斯蒂芬谈话，我今天在想

00:11:05.680 --> 00:11:11.519
um一些多流问题，um我们将尝试做一些

00:11:11.519 --> 00:11:15.200
制定最简单的获取方式的策略

00:11:15.200 --> 00:11:18.000
至少完成了一些自然逆转操作，以便我们拥有

00:11:18.000 --> 00:11:20.880
很快的事情

00:11:22.399 --> 00:11:27.279
冷却下一个抑制单元1.5并引导pfs

00:11:27.279 --> 00:11:31.120
好像该票证上没有任何更新，实际上不是这个问题

00:11:31.120 --> 00:11:32.959
自12月初以来对此有任何评论

00:11:32.959 --> 00:11:35.120
所以

00:11:36.320 --> 00:11:40.800
嗯，对于sgc改进，它已经变得冷淡了。

00:11:40.800 --> 00:11:46.160
是接下来的事情好吗，我仍在努力，呃，看看我们

00:11:46.160 --> 00:11:51.200
需要尽一切努力来提高性能，直到看起来似乎有点迟钝

00:11:51.200 --> 00:11:54.959
实际上会在不知道堵嘴的情况下工作，所以这是一个

00:11:54.959 --> 00:11:58.639
这是个好消息，这需要评估呃

00:11:58.639 --> 00:12:01.120
主要性能影响取决于我们如何删除

00:12:01.120 --> 00:12:04.720
阻止在那个dag内，因为那个，如果不是

00:12:04.720 --> 00:12:07.839
我们仍然需要仅仅因为性能而意识到这一点，但这可能还是有道理的，但是它

00:12:07.839 --> 00:12:10.800
似乎并没有真正破坏任何东西，这是

00:12:10.800 --> 00:12:13.200
好消息

00:12:14.480 --> 00:12:24.800
所以这是目前唯一的更新，但这项工作仍在继续

00:12:24.800 --> 00:12:29.680
列表上的最后一项是ipfs迁移返工

00:12:29.680 --> 00:12:33.920
是的，上个星期我完成了所有的

00:12:33.920 --> 00:12:38.240
修改站点脚本的发行版等等

00:12:38.240 --> 00:12:42.160
呃这周应该都可以复习

00:12:42.160 --> 00:12:45.519
大块的东西要审查，并且没有其他优先事项，所以它可能

00:12:45.519 --> 00:12:49.360
不是我们可能不会马上解决它，但是呃

00:12:49.360 --> 00:12:52.720
我们将为下一个做好一切准备

00:12:52.720 --> 00:12:58.560
呃下一个版本，如果我们需要向后移植，我们可以吧

00:12:58.560 --> 00:13:01.920
发布，但至少是你所知道的

00:13:01.920 --> 00:13:04.800
将是最坏的情况，这将是最后一次

00:13:04.800 --> 00:13:07.200
发布我们必须继续前进的地方

00:13:07.200 --> 00:13:12.800
迁移，所以我们在那里很好

00:13:14.959 --> 00:13:21.839
只是一个审查问题

00:13:26.240 --> 00:13:29.839
很棒的东西，对其他计划而言

00:13:29.839 --> 00:13:33.760
所以下一部分是设计评审建议

00:13:33.760 --> 00:13:42.000
是空的，是的，我有东西，所以

00:13:42.000 --> 00:13:50.079
正如我之前提到的，um投入了一些思考

00:13:50.079 --> 00:13:57.279
嗯，这个问题在um bitswap周围有最大块大小

00:13:57.279 --> 00:14:04.240
如果你已经有一些最大的块了，那是令人沮丧的

00:14:04.240 --> 00:14:06.880
内容地址数据且块大于1

00:14:06.880 --> 00:14:10.720
兆字节，您正在导入git块和一些git

00:14:10.720 --> 00:14:13.920
块大于1兆字节，所以您现在不能使用bitswap

00:14:13.920 --> 00:14:19.600
所以计划是什么，所以

00:14:19.600 --> 00:14:25.519
该提案um是解决该um的一种方法

00:14:25.519 --> 00:14:29.040
还有第二个与之相关的建议，说嘿

00:14:29.040 --> 00:14:33.440
如果您已经可以处理转移的话，那就好

00:14:33.440 --> 00:14:36.959
很大的方块如果您决定

00:14:36.959 --> 00:14:41.760
所有文件都只是一个非常大的块

00:14:42.560 --> 00:14:48.240
这将使您能够拥有规范的哈希，因此它不会

00:14:48.240 --> 00:14:50.800
不管有人如何将它分割成块

00:14:50.800 --> 00:14:54.720
散列呃，它也允许人们喜欢

00:14:54.720 --> 00:14:59.199
像嘿一样抓住我找到了shot 256 system isl

00:14:59.199 --> 00:15:03.120
在github上，然后就像嘿，这是一个ipfs

00:15:03.120 --> 00:15:09.360
也许找到这些评论需要一些想法

00:15:09.360 --> 00:15:13.199
就像是一种完全不同的思考事物的方式等等

00:15:13.199 --> 00:15:19.040
可能是个坏主意，如果是个坏主意，请说出您的

00:15:19.040 --> 00:15:22.480
评论，这样我们就不会做不好的事情

00:15:24.000 --> 00:15:27.440
如果您或您的朋友有一些密码分析专业知识，那么想

00:15:27.440 --> 00:15:31.360
验证我处理sha-1和

00:15:31.360 --> 00:15:41.600
sha-2很聪明，所以也将不胜感激

00:15:41.600 --> 00:15:44.720
也学到了一些有趣的事情

00:15:44.720 --> 00:15:49.040
布雷克3和袋鼠12可能对我们超级有用

00:15:49.040 --> 00:15:52.959
嗯，因为它们是基于树的哈希

00:15:52.959 --> 00:15:59.759
我们用哈希表来做树，所以可能超级有用

00:16:04.480 --> 00:16:11.040
看看接下来的公关是阻滞剂，并问嗯看起来

00:16:11.040 --> 00:16:14.240
像激光雷达有东西，是的，只是

00:16:14.240 --> 00:16:18.480
如果有空余时间安装，请快速喊出来

00:16:18.480 --> 00:16:23.920
勇敢的beta或每晚只要它是1.19

00:16:23.920 --> 00:16:27.839
有些像对我们的uri ipns的内置支持

00:16:27.839 --> 00:16:34.639
和ipfs控制台斜杠，所以呃，只是玩它，我不是

00:16:34.639 --> 00:16:39.040
说出任何具体的内容，因为从以下人员那里得到反馈很有用

00:16:39.040 --> 00:16:45.519
即使有什么看起来很奇怪或没有什么也没有任何期望

00:16:45.519 --> 00:16:48.320
表现出您希望它发送反馈的方式

00:16:48.320 --> 00:16:53.759
要么让我DM，要么在Web上的ipfs上感觉到问题

00:16:53.759 --> 00:16:57.519
浏览器回购，我将尝试将其合并

00:16:57.519 --> 00:17:01.680
反馈信息，我们将尽力让我不要期望过高

00:17:01.680 --> 00:17:04.319
最初发布时的更改

00:17:04.319 --> 00:17:08.799
最初的支持是在勇敢的稳定者中取得的，但我们将对此进行迭代

00:17:08.799 --> 00:17:12.799
所以现在我们要推动这一基本支持

00:17:12.799 --> 00:17:15.839
解决这些问题，这就是目标

00:17:15.839 --> 00:17:20.000
因此人们可以通过以下方式解决这些问题

00:17:20.000 --> 00:17:26.799
公共网关或本地网关本地ipfs节点，由以下节点管理

00:17:26.799 --> 00:17:30.960
勇敢，但欢迎任何反馈，所以

00:17:30.960 --> 00:17:33.840
只是让我知道

00:17:35.760 --> 00:17:40.080
我只想指出，有一个ipfs社区安全聚会

00:17:40.080 --> 00:17:47.120
在星期三，这是围绕主题的github问题集

00:17:47.120 --> 00:17:51.360
在2021年，其中之一就是隐私和安全性，

00:17:51.360 --> 00:17:55.520
基于ipfs的社区团体表示

00:17:55.520 --> 00:17:59.120
对各种形式的兴趣可能意味着什么

00:17:59.120 --> 00:18:02.720
所以我们要让它们全部出现并做五分钟的操作

00:18:02.720 --> 00:18:06.960
他们在了解隐私方面所做的一切

00:18:06.960 --> 00:18:10.160
ipfs的安全性或要求是什么

00:18:10.160 --> 00:18:14.320
他们想要然后希望我不知道

00:18:14.320 --> 00:18:18.000
我的意思是半个小时的讨论，你知道

00:18:18.000 --> 00:18:22.320
最终以主题为主题的最重要的隐私和安全工作

00:18:22.320 --> 00:18:25.440
从那里开始，让外部团体参与进来

00:18:25.440 --> 00:18:28.799
有人在同一地点

00:18:28.799 --> 00:18:32.720
这样的页面，可能是通过实时观看或之后观看，或者

00:18:32.720 --> 00:18:35.840
参加会很棒

00:18:40.240 --> 00:18:45.440
呃我问过亚历克斯（Alex）呃亚历克斯（Alex）是否有机会看一下

00:18:45.440 --> 00:18:51.440
pub sub问题，我会写个便笺并分享您的意见，这将对您有所帮助

00:18:51.440 --> 00:18:55.600
我建议对流行音乐进行特定的更改

00:18:55.600 --> 00:18:59.679
我们在js ipfs中有sub api，很高兴知道

00:18:59.679 --> 00:19:03.760
如果你喜欢他们

00:19:04.720 --> 00:19:13.679
好吧，我会看一看，如果是对阻止者的回应，请多谢

00:19:13.679 --> 00:19:19.600
并问我们继续讨论谁有一个

00:19:22.840 --> 00:19:27.039
问题好吧停车场什么都不要

00:19:27.039 --> 00:19:29.760
适合其他地方

00:19:32.880 --> 00:19:37.280
嗯，我想这不是我一直在努力的重要

00:19:37.280 --> 00:19:43.840
清理ipfs计数器斜杠dht测量边码

00:19:43.840 --> 00:19:49.120
再一次，所以从二开始合并了柜台和

00:19:49.120 --> 00:19:53.440
如果有人想要的话，阿丁的dht图东西

00:19:53.440 --> 00:19:59.679
让我知道公关上超越院长的标签

00:20:04.960 --> 00:20:11.280
我猜这是我遇到的一个有趣的bug，与履带有关

00:20:11.280 --> 00:20:15.440
apr我必须提出一个pr来解决这个问题

00:20:15.440 --> 00:20:21.440
多帽子多加法器很有趣，有趣的是我有点困惑

00:20:21.440 --> 00:20:25.600
因为有时它们以斜杠p2p结尾，所以斜杠一些对等ID，有时它们

00:20:25.600 --> 00:20:30.480
不要和吉尔达p2p期望

00:20:30.480 --> 00:20:34.000
他们不要以这种方式结束，因为pid会来

00:20:34.000 --> 00:20:38.400
分别作为加法器信息对象的一部分

00:20:38.559 --> 00:20:43.200
如果您对此不小心的话，您将遇到无法通话的同伴

00:20:43.200 --> 00:20:47.760
或即使您有他们的地址，这似乎也是毫无疑问的，因为

00:20:47.760 --> 00:20:53.039
地址似乎无效，所以嗯

00:20:53.039 --> 00:20:56.799
如果您要与他们合作，请务必小心，我们认为这是嗡嗡声，

00:20:56.799 --> 00:20:59.760
就像地址太具体一样

00:20:59.760 --> 00:21:04.720
实际上就像是太恐怖了

00:21:04.720 --> 00:21:11.840
我怀疑那里肯定有一个错误，呃，是这个错误

00:21:11.840 --> 00:21:15.360
ipfs的较旧版本正在投放

00:21:15.360 --> 00:21:20.000
他们把你知道的斜线p2ps放在最后，

00:21:20.000 --> 00:21:24.080
某处的DHT，其他人不在，我们都

00:21:24.080 --> 00:21:27.840
在同一空间玩，这会引起问题

00:21:27.840 --> 00:21:33.600
确定吧，所以我们本来可以要求更统一的dht来解决问题

00:21:33.600 --> 00:21:37.280
我们也应该更加宽容或者更加谨慎

00:21:37.280 --> 00:21:41.120
当使用多地址时

00:21:42.960 --> 00:21:46.000
就像您是自己做的一样

00:21:46.000 --> 00:21:49.360
请注意，也许我们会做一些修复

00:21:49.360 --> 00:21:59.840
更多的事情更宽容

00:22:03.520 --> 00:22:07.919
如果没有别的，那我想我们完成了

00:22:07.919 --> 00:22:11.360
谢谢大家的光临，这是ipfs的核心实现

00:22:11.360 --> 00:22:14.480
从2021年1月11日（星期一）开始每周同步

00:22:14.480 --> 00:22:18.880
嗯，请填写您的异步更新，以便人们知道发生了什么事

00:22:18.880 --> 00:22:23.520
因为这真的很有用，下周我会再见

00:22:23.520 --> 00:22:27.840
大家再见

