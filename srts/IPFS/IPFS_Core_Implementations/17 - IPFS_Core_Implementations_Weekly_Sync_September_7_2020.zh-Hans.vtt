WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.040 --> 00:00:06.080
大家好，我们欢迎您每周同步ipfs核心实现

00:00:06.080 --> 00:00:10.960
星期一，2020年9月7日。我正在动脑，我将成为您的房东

00:00:10.960 --> 00:00:13.599
将通过我们的高优先级计划

00:00:13.599 --> 00:00:18.560
其他措施，然后阻止泰坦停车场

00:00:18.560 --> 00:00:20.320
将会很棒，我们将会发现

00:00:20.320 --> 00:00:25.920
在这个美好的星期一，ipfs世界正在发生什么

00:00:25.920 --> 00:00:31.840
所以首先要谈论的是即将发布的产品

00:00:31.840 --> 00:00:36.120
嗯，我可以很快谈论jsrpfs了，我们已经发货了jsrpfs

00:00:36.120 --> 00:00:42.879
 0.50令人难以置信的是它会进行钉扎改造

00:00:42.879 --> 00:00:46.079
提供一些相当显着的速度改进

00:00:46.079 --> 00:00:49.360
当您固定事物时，添加事物时所处的位置

00:00:49.360 --> 00:00:52.559
嗯，所以如果您要处理大型数据集，则非常需要升级

00:00:52.559 --> 00:00:55.039
嗯，这会让你的生活很多

00:00:55.039 --> 00:00:58.800
更容易，我们也已经开始接受UN8

00:00:58.800 --> 00:01:02.559
数组作为事物的输入，这真的很酷，所以我们总是

00:01:02.559 --> 00:01:05.840
以缓冲区的形式接受它们，但

00:01:05.840 --> 00:01:09.119
在内部，它们已经被转换，这很慢

00:01:09.119 --> 00:01:13.680
嗯，烦人，喜欢的最好的方法基本上是通过缓冲区

00:01:13.680 --> 00:01:17.119
它们在浏览器中没有意义，因为缓冲区不是问题

00:01:17.119 --> 00:01:21.759
嗯，所以现在我们到处都接受缓冲区，我们现在以八个数组接受您，

00:01:21.759 --> 00:01:26.960
所不同的是，现在我们只给您一个单位数组

00:01:26.960 --> 00:01:32.159
所以这会影响到您，因为如果您先前已编码到缓冲区

00:01:32.159 --> 00:01:34.640
界面，您将习惯于执行以下操作

00:01:34.640 --> 00:01:38.560
像base64一样在其中串绕并传递

00:01:38.560 --> 00:01:43.040
那将不再起作用，因为我们仅使用了una数组接口

00:01:43.040 --> 00:01:46.240
嗯，所以您将来需要对此进行编码，

00:01:46.240 --> 00:01:51.119
您的代码将在node和浏览器以及dino和任何位置运行

00:01:51.119 --> 00:01:55.040
javascript将我们带入了我们疯狂的旅程

00:01:55.040 --> 00:02:01.600
嗯，请给您编码，八个数组uh也随p2p 0.29 uh一起提供，

00:02:01.600 --> 00:02:04.880
给我们签名的同行记录八卦子1.1和

00:02:04.880 --> 00:02:08.959
ed2 5 5 1 9正确的钥匙

00:02:08.959 --> 00:02:12.239
所以请检查一下，我正在整理博客文章

00:02:12.239 --> 00:02:16.000
嗯，这会在接下来的几天内生效

00:02:16.000 --> 00:02:23.040
很酷的人，可以谈论Guy pfs的rc2，是的，所以我们有一些错误

00:02:23.040 --> 00:02:27.120
修复了我们将要发布的0.7版的第二个rc的问题

00:02:27.120 --> 00:02:30.400
我相信这周应该是最后一次遥控

00:02:30.400 --> 00:02:34.640
那么下周我们将把0.7越过栅栏

00:02:34.640 --> 00:02:37.680
除了精神病外，每个人都要消费

00:02:37.680 --> 00:02:40.879
弃用那里有很多额外的好东西

00:02:40.879 --> 00:02:44.640
所以我想我们本周晚些时候开会讨论这个问题

00:02:44.640 --> 00:02:47.920
所以在那里

00:02:49.519 --> 00:02:56.879
超级酷，超级刺激，接下来就是固定服务

00:02:58.159 --> 00:03:04.800
是的，所以我们对化妆品api规范的更改进行了两次讨论，其中之一是

00:03:04.800 --> 00:03:09.360
关于澄清我们期望错误响应的方式

00:03:09.360 --> 00:03:14.400
看起来像第二个是非常具体的

00:03:14.400 --> 00:03:20.159
名称过滤器是如何工作的，即部分过滤器

00:03:20.159 --> 00:03:24.239
不区分大小写，我认为这是最新的呃

00:03:24.239 --> 00:03:28.400
共识，我们正在

00:03:28.400 --> 00:03:34.480
明天见面，嗯，去过go ipfs pining api之间的集成

00:03:34.480 --> 00:03:37.680
整合固定客户，我相信方式

00:03:37.680 --> 00:03:43.440
Web ui将消耗掉它，因为这将是第一个

00:03:43.440 --> 00:03:47.840
该api的用户

00:03:53.599 --> 00:03:57.599
酷，我觉得我应该把某种js放在一起

00:03:57.599 --> 00:04:04.879
规范的实施，这将是很酷的，所以对于

00:04:04.879 --> 00:04:08.480
嗯，我认为院长最终产生了客户

00:04:08.480 --> 00:04:11.760
使用这种招摇之类的东西，因为它们具有开放的api

00:04:11.760 --> 00:04:15.840
发电机，所以他只是产生了客户um

00:04:15.840 --> 00:04:20.079
然后在其上创建一个适配器以将其抽象出来

00:04:20.079 --> 00:04:23.520
有一些相当不错的发电机

00:04:23.520 --> 00:04:29.680
嗯也适合js，我认为这是一个不错的

00:04:29.680 --> 00:04:33.919
像棱镜测试客户端这样的体面的，但模拟

00:04:33.919 --> 00:04:40.800
是的，这样做很好，方法很酷

00:04:40.800 --> 00:04:47.280
恩继续ed 2五五一九九键是的不

00:04:47.280 --> 00:04:50.320
更新那些呃，它仍然有望降落

00:04:50.320 --> 00:04:54.560
在下周的第7集ip节目中，同样的内容与sec io移除

00:04:54.560 --> 00:05:00.800
嗯，那里没有新的东西，它正在发生

00:05:01.360 --> 00:05:05.520
所以我们也需要喜欢我需要在本周开放公关

00:05:05.520 --> 00:05:10.080
从js的um中删除它，这样我们就可以

00:05:10.080 --> 00:05:13.680
在下一个版本中启动

00:05:15.039 --> 00:05:20.560
列表上的下一件好事是锈ipfs

00:05:20.560 --> 00:05:27.120
在大哥哥之家的第37周主动行动

00:05:27.120 --> 00:05:30.560
首先，社区做出了巨大的贡献

00:05:30.560 --> 00:05:34.160
你们很多人都知道了鲁迪格（rudiger）

00:05:34.160 --> 00:05:40.880
 from actics贡献了dns查找，因此我们现在可以从

00:05:40.880 --> 00:05:46.160
在锈fps中，这真的很酷，但除此之外，我们刚刚完成了

00:05:46.160 --> 00:05:51.520
很大的工作周期让我们着迷

00:05:51.520 --> 00:05:58.319
dht dns和非常基本的文件系统存储

00:05:58.319 --> 00:06:02.000
对于基于多个散列的块，这真的很酷

00:06:02.000 --> 00:06:09.120
嗯，我们正在追赶，锈ipfs的性能是

00:06:09.120 --> 00:06:12.240
诚然比慢一些但可比

00:06:12.240 --> 00:06:19.440
go的实现中添加了大数据集之类的东西，这就是

00:06:19.440 --> 00:06:22.080
我们在哪里

00:06:24.000 --> 00:06:28.240
太好了，需要做很多工作

00:06:30.080 --> 00:06:33.759
你们曾经使用过dht的go邀请吗

00:06:33.759 --> 00:06:38.160
您只需要深入了解该代码即可，或者

00:06:38.160 --> 00:06:44.639
嗯，不，我的意思是像许多ipfs一样，我们只是实现任何东西

00:06:44.639 --> 00:06:49.360
p2p的实现是在生态系统上的，所以我们

00:06:49.360 --> 00:06:53.199
只是连接了rustler p2p cademlia和

00:06:53.199 --> 00:06:56.479
和所有这些东西，所以一件事就是名字

00:06:56.479 --> 00:07:03.360
是autonet，因此dht发行就像我们不是，我们不确定

00:07:03.360 --> 00:07:06.960
如果我们实际上是在发布任何内容，因为我们没有进行任何打punch

00:07:06.960 --> 00:07:10.880
嗯，但是在p2p中有一个专用的pr

00:07:10.880 --> 00:07:14.840
所以我们只是在等那个

00:07:14.840 --> 00:07:19.680
很好，我想以某种方式进行测试会很好

00:07:19.680 --> 00:07:27.039
看到人们想追赶并谈论那会很酷，不会

00:07:27.039 --> 00:07:32.880
在列表中的下一项是js改进了

00:07:32.880 --> 00:07:39.120
可发现性和连接性是的，所以嗯，第一部分是作者

00:07:39.120 --> 00:07:42.479
接力我上周回到了它，我

00:07:42.479 --> 00:07:48.240
基本上完成了雅各布前一段时间给我的评论

00:07:48.240 --> 00:07:55.120
我添加了一些我打算添加的其他内容，但对于第一个

00:07:55.120 --> 00:07:59.520
反馈周期我还没有完成，所以现在是它的第一个迭代

00:07:59.520 --> 00:08:03.680
准备进行审核jacob希望本周能够对其进行审核

00:08:03.680 --> 00:08:06.879
是的，所以作者中继的下一个迭代

00:08:06.879 --> 00:08:10.560
将基本上包括缺少的是

00:08:10.560 --> 00:08:17.280
在出现多其他变化时更新网络，以便我们传播

00:08:17.280 --> 00:08:20.400
将该信息提供给其他所有同行

00:08:20.400 --> 00:08:24.000
还找到远程实现网络

00:08:24.000 --> 00:08:27.520
基本上现在您将连接出现

00:08:27.520 --> 00:08:31.840
并且如果对等方作为中继协议并且也支持up

00:08:31.840 --> 00:08:36.159
您将基本上根据自己的限制将其添加为自动中继

00:08:36.159 --> 00:08:40.159
配置之前，但是的，但目标是也尝试

00:08:40.159 --> 00:08:44.240
发现，如果您未连接到他们，他们就会意识到

00:08:44.240 --> 00:08:48.240
关于整体连接管理器

00:08:48.240 --> 00:08:52.399
嗯，我度过了上周末和今天的早晨

00:08:52.399 --> 00:08:56.480
基本上完成了一个史诗般的问题，其中包含

00:08:56.480 --> 00:09:01.600
基本上，我认为我们需要做的所有工作都有六个不同的里程碑

00:09:01.600 --> 00:09:05.519
关于连接管理器总体上，这里的主要目标

00:09:05.519 --> 00:09:10.160
基本上与集合点和作者的接力工作保持一致

00:09:10.160 --> 00:09:14.560
我们需要连接管理器更加智能，以便我们

00:09:14.560 --> 00:09:18.640
例如，不要关闭与

00:09:18.640 --> 00:09:22.320
我们要购买的自动中继节点以及所有

00:09:22.320 --> 00:09:26.640
其他类似的流程，这也很重要

00:09:26.640 --> 00:09:32.320
对于在此之后应该是我们工作的dht，所以是的，我认为

00:09:32.320 --> 00:09:36.399
连接管理器对于接下来的夫妇将是一件大事

00:09:36.399 --> 00:09:40.480
的发布，因此我的前三个里程碑

00:09:40.480 --> 00:09:43.920
我认为我们需要的是创造出来的

00:09:43.920 --> 00:09:48.160
希望首先解决下一个版本

00:09:48.160 --> 00:09:50.959
基本上是改善水印

00:09:50.959 --> 00:09:56.320
观察，我们目前基本上只有一个幼稚的实现，如果

00:09:56.320 --> 00:10:00.959
达到最大阈值，我们只是与同伴断开连接而没有

00:10:00.959 --> 00:10:04.959
任何类似的知识，例如，我们应该

00:10:04.959 --> 00:10:08.160
检查我们是否要断开连接的对等方

00:10:08.160 --> 00:10:11.680
嗯，就是我们想要的或正在运行的协议

00:10:11.680 --> 00:10:13.519
基本上看起来我们已经连接到

00:10:13.519 --> 00:10:18.800
结果网络和其他应有的特征，我们应该

00:10:18.800 --> 00:10:21.760
应该检查一下，如果您愿意，我会在里程碑中对它们进行描述

00:10:21.760 --> 00:10:24.959
要检查它，然后我们还需要保证

00:10:24.959 --> 00:10:28.640
我们想要保持的连接保持活跃

00:10:28.640 --> 00:10:32.320
现在不是一回事，也是另一回事

00:10:32.320 --> 00:10:36.720
我们应该拥有的已经是

00:10:36.720 --> 00:10:41.120
基本上是为了保护连接，这是我之前所说的

00:10:41.120 --> 00:10:44.399
我们需要保护我们对等端上的连接

00:10:44.399 --> 00:10:50.160
真的要依靠其他例子，如果我们想依附于

00:10:50.160 --> 00:10:53.360
我们需要保证的电路中继节点

00:10:53.360 --> 00:10:56.720
这个连接不会关闭，是的，很漂亮

00:10:56.720 --> 00:11:03.519
很多，我将在本周开始制作这部史诗

00:11:05.600 --> 00:11:15.360
是的，我会收到反馈，确保我明天都会收到反馈

00:11:15.360 --> 00:11:21.040
嗯，这是对那些高优先级计划的支持，所以动起来

00:11:21.040 --> 00:11:26.800
子域网关上的所有其他活动

00:11:26.800 --> 00:11:34.399
嗯，它支持将ipns名称和那些较短的密钥安排为

00:11:34.399 --> 00:11:40.880
降落到0.7，这主要是我们在等待

00:11:40.880 --> 00:11:44.800
博客文章和呃

00:11:44.959 --> 00:11:51.519
因为就像我们发布博客文章一样，我们希望像cloudflare这样的合作伙伴能够

00:11:51.519 --> 00:11:55.920
也支持这一点，需要花很多时间来滴答滴答

00:11:55.920 --> 00:11:59.040
这些更新，所以要过几周

00:11:59.040 --> 00:12:04.720
那土地，但那是我认为剩下的唯一部分

00:12:06.480 --> 00:12:12.399
很酷，没有更新西部1.5的监禁版本，因为

00:12:12.399 --> 00:12:16.480
据我所知，我们继续进行钉扎系统

00:12:16.480 --> 00:12:22.560
翻新，已全部出货，全部已出货

00:12:22.560 --> 00:12:29.279
嗯，太棒了，呃，不正常，所以我想没有

00:12:29.279 --> 00:12:34.639
更新dac服务或改进Web ui文件应用

00:12:34.639 --> 00:12:43.279
嗯，我可以快速更新有关Web ui文件广告的需求

00:12:43.279 --> 00:12:46.320
在导入之前缓冲整个东西

00:12:46.320 --> 00:12:52.959
通过伊拉克的补丁登陆的http api并计划发布

00:12:52.959 --> 00:12:57.920
希望本周使用Web ui 211

00:12:57.920 --> 00:13:07.839
有关进度报告的其他改进将在下一版本中发布

00:13:08.160 --> 00:13:15.920
很酷，仅此而已。

00:13:15.920 --> 00:13:21.839
任何人都有他们想要提出的设计审查建议

00:13:23.040 --> 00:13:27.519
冷却任何阻滞剂并询问

00:13:30.000 --> 00:13:35.839
我有点受阻

00:13:36.320 --> 00:13:42.800
因此，我们确实喜欢用户代理在um上嗅探通过um传入的所有请求

00:13:42.800 --> 00:13:45.839
http api，我想切换电子

00:13:45.839 --> 00:13:51.120
渲染器使用本机提取而不是节点的端口

00:13:51.120 --> 00:13:55.920
http模块，因此需要对um go进行更新

00:13:55.920 --> 00:14:00.399
ipfs嗯，我已经检查了用户代理

00:14:00.399 --> 00:14:03.680
pr'd和nadine刚刚合并，希望能够实现

00:14:03.680 --> 00:14:07.519
在下一个rc中出来，所以它将在0.7中，这将是激进的

00:14:07.519 --> 00:14:11.600
因为它将整整节省一半的时间

00:14:11.600 --> 00:14:18.480
ci中的电子测试，因为它们真的很慢，所以我有点

00:14:18.480 --> 00:14:21.360
被阻止，但实际上是在最后一个小时左右才开始移动的，因此

00:14:21.360 --> 00:14:26.480
其实很酷，嗯，其他人也有阻止者

00:14:26.480 --> 00:14:34.240
需要疏通的障碍物，这不是很有趣的雅各布

00:14:36.240 --> 00:14:39.600
很酷的任何问题

00:14:40.320 --> 00:14:47.199
停车的一切都好，这真是太神奇了

00:14:47.199 --> 00:14:49.680
嗯争论对抗每周同步

00:14:49.680 --> 00:14:54.800
呃，2020年9月7日，星期一，嗯，请填写您的异步更新

00:14:54.800 --> 00:14:58.399
评论呃，并在互联网上度过愉快的时光嗯

00:14:58.399 --> 00:15:02.240
为了安全起见，不要仅仅因为我们买了慢性病毒就碰你的脸

00:15:02.240 --> 00:15:11.760
并不代表一切都结束了，以后再见

