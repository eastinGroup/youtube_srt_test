WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.120 --> 00:00:08.480
大家好，欢迎来到ibfs核心实现

00:00:08.480 --> 00:00:12.400
2020年，我将动脑筋，我将成为您的主人

00:00:12.400 --> 00:00:16.480
我们将通过高度优先的倡议其他倡议

00:00:16.480 --> 00:00:19.840
阻碍者，并询问停车场设计者的建议

00:00:19.840 --> 00:00:30.560
以及所有这些好东西，因此可以发布即将发布的影片和狗屎影片

00:00:30.560 --> 00:00:37.280
所以嗯，最好的呵呵0.7上周没出来，但是

00:00:37.280 --> 00:00:42.399
几乎在那里，我知道我知道，我实际上是指所有

00:00:42.399 --> 00:00:46.960
所有的发行内容，就像我们调查所有内容所需要的一样

00:00:46.960 --> 00:00:50.800
事实证明很好，实际上需要通过

00:00:50.800 --> 00:00:56.239
如果粉丝在打电话，我会做发行UM的过程

00:00:56.239 --> 00:01:00.399
让他看看轨道数据库测试，但是

00:01:00.399 --> 00:01:05.199
哦，好了，时间已经过去了，到发行为止

00:01:05.199 --> 00:01:09.520
嗯，那应该是应该出来的

00:01:09.520 --> 00:01:16.159
很快就自己规范了，

00:01:16.159 --> 00:01:25.600
开始支持js http客户端

00:01:25.600 --> 00:01:29.119
将使用来自的新的销钉远程命令

00:01:29.119 --> 00:01:36.159
正在进行中的ipfs中的拉取请求嗯，我认为我们需要喜欢连线

00:01:36.159 --> 00:01:42.000
配置并以一种配置的方式弄清楚

00:01:42.000 --> 00:01:48.079
将会像我们添加和删除呃一样更新

00:01:48.079 --> 00:01:53.520
固定服务呃，如果有可能像特定的那样喜欢修改

00:01:53.520 --> 00:01:56.479
一种方式就像是一个数组

00:01:56.479 --> 00:02:00.640
在配置中的对象，也许我们需要一个

00:02:00.640 --> 00:02:04.719
专用命令，例如我们用于引导程序的命令，或者也许

00:02:04.719 --> 00:02:07.200
不是我们需要讨论的事情，但是

00:02:07.200 --> 00:02:12.080
就是这样，我想是的，所以我们有

00:02:12.080 --> 00:02:15.680
有没有人主动提出要重新生成代码，

00:02:15.680 --> 00:02:21.680
我没有收到他的最新资料，但

00:02:21.680 --> 00:02:24.879
我的意思是就像在我攻击发行版之前，我问是否

00:02:24.879 --> 00:02:32.160
他可以很好地进行更改，然后在我发布之后通知实施者

00:02:32.160 --> 00:02:38.400
包括皮纳塔，所以我认为这很好，就像时间问题一样，因为

00:02:38.400 --> 00:02:41.680
因此我们仍然需要重新生成代码，以便您可以针对

00:02:41.680 --> 00:02:45.440
安德鲁斯测试服务器um [音乐]

00:02:45.440 --> 00:02:49.280
我认为我们可能需要专门的命令

00:02:49.280 --> 00:02:55.599
我的猜测是因为呃，基本上是因为安全，因为

00:02:55.599 --> 00:03:00.800
api密钥实际上与对称密钥一样敏感um

00:03:00.800 --> 00:03:04.400
您需要保证他们不会被送到错误的地方，所以

00:03:04.400 --> 00:03:06.640
更改名称是一种攻击手段

00:03:06.640 --> 00:03:10.800
密钥发送到错误位置的名称

00:03:10.800 --> 00:03:13.040
所以

00:03:14.000 --> 00:03:17.599
如果您希望它们是非对称密钥，则可以使用

00:03:17.599 --> 00:03:21.920
那些不希望他们成为不对称密钥的人

00:03:30.239 --> 00:03:33.840
看起来像什么

00:03:37.519 --> 00:03:40.959
红旗以什么方式

00:03:41.120 --> 00:03:44.480
像那样，我们正在使用对称样式

00:03:44.480 --> 00:03:48.560
密钥和令牌是的，就像它是如此琐碎

00:03:48.560 --> 00:03:53.280
好好进攻，就是说，如果我重命名

00:03:53.280 --> 00:03:56.959
您知道来自Alex的固定服务

00:03:56.959 --> 00:04:00.640
亚历克斯的固定服务和亚历克斯的固定服务

00:04:00.640 --> 00:04:06.400
备份，然后我制作一个新文件，并将其称为alex的固定服务

00:04:06.400 --> 00:04:11.680
对吧，就像我喜欢我喜欢改变名字

00:04:11.680 --> 00:04:16.239
这样当您发送给我时，您实际上就像在给我发送另一个密钥一样

00:04:16.239 --> 00:04:21.199
嗯，比你想的要多，所以我们只需要使它不成为

00:04:21.199 --> 00:04:29.840
你可以做的事就可以了

00:04:31.330 --> 00:04:34.410
[音乐]

00:04:34.479 --> 00:04:38.000
我认为所有这些都是我认为所有工作都已完成的情况，我认为其中大多数都已完成

00:04:38.000 --> 00:04:42.560
问题就像或其中一些有关

00:04:42.560 --> 00:04:45.919
在ipfs版本中已解决，因此该版本发布时

00:04:45.919 --> 00:05:00.000
这些会完成的，是的，在那里采摘，嗯，都会全部出去

00:05:00.000 --> 00:05:03.680
没有七个版本，然后在我打开的js ipfs方面

00:05:03.680 --> 00:05:07.440
今天公关，嗯，把那个地方都移走

00:05:07.440 --> 00:05:12.720
只要我们做下一个次要发行版本就可以出去

00:05:12.720 --> 00:05:15.440
假设您只知道何时应该发布它

00:05:15.440 --> 00:05:18.880
因为它显然会拉起控制桥

00:05:18.880 --> 00:05:23.680
是的，是的，我们还需要推出

00:05:23.680 --> 00:05:27.520
当这样的兴趣是这样的公告是

00:05:27.520 --> 00:05:32.000
你知道你的最后一刻，就像这是你一周的最后一刻

00:05:32.000 --> 00:05:35.840
因此，只要在所有社交媒体上让您知道，就可以让人们知道

00:05:35.840 --> 00:05:42.720
如果您正在跑步，请像这样去fps 0.2，这是其他人最后一次

00:05:42.720 --> 00:05:45.840
可以和你说话

00:05:50.840 --> 00:05:57.680
绝对嗯，她本周不是最后更新

00:05:59.919 --> 00:06:05.039
嗯，是的，建议提高他的可扩展性和连接性

00:06:05.199 --> 00:06:09.840
是的，我嗯，所以后续中继仍在进行中，最初的实现

00:06:09.840 --> 00:06:13.440
上周在0.30范围内合并

00:06:13.440 --> 00:06:19.360
jsonptp功能发布的分支，里程碑23是

00:06:19.360 --> 00:06:22.800
准备进行审核，我们将在本周进行审核

00:06:22.800 --> 00:06:26.479
它们包括网络更新，以使用

00:06:26.479 --> 00:06:30.160
确定推送，我们现在有了新的聆听

00:06:30.160 --> 00:06:33.759
人们可以用来联系我们和我的地址

00:06:33.759 --> 00:06:38.720
还需要将自签名对等记录更新为

00:06:38.720 --> 00:06:43.039
基本上是用新地址重新创建的

00:06:43.039 --> 00:06:49.840
基本上，当我们没有呃的时候发出的热声音

00:06:49.840 --> 00:06:55.520
在足够的中继中以根据用户如何配置

00:06:55.520 --> 00:06:59.520
自由，我们可以尝试在上找到它们

00:06:59.520 --> 00:07:03.680
网络目前仅使用b2b内容路由，因此

00:07:03.680 --> 00:07:07.919
ipfs人们基本上会使用代表

00:07:07.919 --> 00:07:11.120
因为我们仍然没有默认启用dhc

00:07:11.120 --> 00:07:16.800
但我计划也提供下周的跟进

00:07:16.800 --> 00:07:20.720
会合集成，并且此计划基本上是

00:07:20.720 --> 00:07:25.919
lpgp.discovery api，基本上我们会去集合

00:07:25.919 --> 00:07:29.520
在以后的代表中找到它

00:07:29.520 --> 00:07:33.360
通过dht，目标是找到远程中继和

00:07:33.360 --> 00:07:38.400
其他我们最终需要的服务

00:07:38.400 --> 00:07:44.879
是的，基本上，自动中继部分的最后一步是

00:07:44.879 --> 00:07:49.360
不要做，不要宣布私人地址，这是我们遇到的一个问题

00:07:49.360 --> 00:07:54.080
已经有，通常我们有些人会制造问题，说我们有

00:07:54.080 --> 00:07:57.120
警告，例如在浏览器中说我们正在尝试

00:07:57.120 --> 00:08:02.400
拨号到浏览器中的本地地址

00:08:02.400 --> 00:08:06.319
基本上是因为其他同伴正在宣传他们为

00:08:06.319 --> 00:08:10.479
人们应该能够拨打的侦听地址，情况并非如此

00:08:10.479 --> 00:08:13.919
基本上，我们需要知道我们有

00:08:13.919 --> 00:08:19.520
自动中继摆脱这个问题，是的，最后关于

00:08:19.520 --> 00:08:24.479
连接管理器总体上，我上周开始创建一个

00:08:24.479 --> 00:08:27.840
带有可发现性基线的文档

00:08:27.840 --> 00:08:32.000
每个环境和用例的连接性和连通性

00:08:32.000 --> 00:08:35.279
并非全部，但基本上是目标年度的开始

00:08:35.279 --> 00:08:40.240
基本上是要了解对等方的重要联系

00:08:40.240 --> 00:08:43.360
在每个用例和环境中

00:08:43.360 --> 00:08:48.399
尝试在js中找到更智能的连接管理器的策略

00:08:48.399 --> 00:08:52.080
基本上我们需要了解例如作者的真实生活

00:08:52.080 --> 00:08:55.279
我们购买的连接非常重要

00:08:55.279 --> 00:08:59.360
我们无法断开与该对等方的连接，我们需要找到

00:08:59.360 --> 00:09:04.080
所有这些同行，例如我们共享pub sub和

00:09:04.080 --> 00:09:06.720
自动保护所有这些连接

00:09:06.720 --> 00:09:14.640
是的，基本上找到了这种策略，是的，就是这样

00:09:17.279 --> 00:09:21.440
我将要像这样改善um，而这在json中未实现

00:09:21.440 --> 00:09:27.120
在Blitzwell um中进行呃会话的转换，所以我想我想我们会

00:09:27.120 --> 00:09:31.519
最终像在这里弹出一样对待它

00:09:31.519 --> 00:09:34.560
因为您想要像一群同龄人

00:09:34.560 --> 00:09:37.839
有喜欢

00:09:38.160 --> 00:09:41.440
是的，我正在考虑的事情之一

00:09:41.440 --> 00:09:47.680
这个基准是使用multicollect的应用程序级别的协议

00:09:47.680 --> 00:09:53.519
拓扑和位交换将在该类别中，我还是

00:09:53.519 --> 00:09:58.080
像呃一样对齐，她将如何参与ptp

00:09:58.080 --> 00:10:02.480
在汽车方面，如果它基本上足够智能

00:10:02.480 --> 00:10:06.800
只是保护一切，或者如果我们应该指导人们

00:10:06.800 --> 00:10:10.000
谁建立协议，现在他们应该保护同级

00:10:10.000 --> 00:10:13.120
这是我们需要完善的一些东西

00:10:13.120 --> 00:10:19.760
在我们实施它的同时，我想是的，您是否说过js

00:10:19.760 --> 00:10:27.279
 ipvs在bitwap um中没有会话，但是我建议

00:10:27.279 --> 00:10:30.800
如果以及何时实施会话，

00:10:30.800 --> 00:10:35.200
你允许有一些关于

00:10:35.200 --> 00:10:41.440
查询是如何进行的或查询的演变是一件什么事情

00:10:41.440 --> 00:10:45.600
我们想去做的是

00:10:45.600 --> 00:10:49.360
能够找出更多有关该图的内容

00:10:49.360 --> 00:10:56.000
作为会话的一部分，这样您就可以停止提供每个单独的代码块，

00:10:56.000 --> 00:11:01.519
而是提供您知道的根或文件和目录

00:11:01.519 --> 00:11:07.120
或只是经常对数地砍伐树木

00:11:07.120 --> 00:11:13.279
嗯，这不只是每个区块um的数量，

00:11:13.279 --> 00:11:15.920
为了做到这一点，我们需要更多有关查询的上下文

00:11:15.920 --> 00:11:20.560
比我要的要多一些，所以我们有尝试

00:11:20.560 --> 00:11:22.959
喜欢弄清楚如何通过所有这些事情，但如果你们是

00:11:22.959 --> 00:11:29.839
从头开始，有些事情要一直在劝告下

00:11:35.519 --> 00:11:41.519
我在星期五邀请了几个人来这里，但是如果你不在那，那就让我

00:11:41.519 --> 00:11:45.440
知道，我会加你，让我喜欢无与伦比的互换研究

00:11:45.440 --> 00:11:49.360
讨论中，因为常驻实验室团队正在努力

00:11:49.360 --> 00:11:53.680
比特交换，那么比特交换或块交换的未来是什么样的

00:11:53.680 --> 00:11:58.240
嗯，那是星期五，这是什么状态的研究

00:11:58.240 --> 00:12:00.560
项目要去哪里征求反馈

00:12:00.560 --> 00:12:05.600
嗯，所以这可能是呃，我不知道这是否将是完整的替代品，或者

00:12:05.600 --> 00:12:08.800
不适用于bitwap um或对此的修订

00:12:08.800 --> 00:12:13.519
但这可能是我们所关注的

00:12:13.519 --> 00:12:16.560
代替经过添加过程

00:12:16.560 --> 00:12:21.600
js会话，但我们可以看到时间轴是什么样的

00:12:21.600 --> 00:12:25.360
因为那你也可以把我加入那个会议

00:12:25.360 --> 00:12:28.079
是的，谢谢

00:12:29.920 --> 00:12:33.360
好吧，这是高优先级计划的终结

00:12:33.360 --> 00:12:41.919
嗯，继续进行其他活动嗯[音乐]

00:12:44.320 --> 00:12:48.720
等待0.7发布

00:12:51.200 --> 00:12:54.720
呃没有单位更新

00:12:54.959 --> 00:13:03.200
键入更快的um no uh不更新1.5并在距离最近的地方上调

00:13:04.079 --> 00:13:09.680
税务服务，我把它划掉了，我将把它从

00:13:09.680 --> 00:13:13.839
列出，因为我没有花太多时间在上面

00:13:13.839 --> 00:13:17.519
所以一旦我真正开始，我就会把它放回清单上

00:13:17.519 --> 00:13:24.079
嗯，下一个也是我的改进呃Web ui文件，让我们一起唱很多

00:13:24.079 --> 00:13:27.440
东西已经降落了，我正在努力的最后一块

00:13:27.440 --> 00:13:30.320
实际上是在做用户界面，所以它将

00:13:30.320 --> 00:13:34.560
让您知道进展情况

00:13:35.440 --> 00:13:40.800
我还发现也许进度处理程序在那里

00:13:40.800 --> 00:13:45.279
我为更新和下载进度编写的所有补丁都不是

00:13:45.279 --> 00:13:50.320
必要的嗯，所以我想我可能会关闭那些拉

00:13:50.320 --> 00:13:53.120
要求，但好消息是我们不会拥有我们

00:13:53.120 --> 00:13:59.199
想要下一个的复杂性um

00:13:59.199 --> 00:14:06.320
也是我的，这是打字稿集成呃所以

00:14:06.320 --> 00:14:10.880
ipfs在alex的审查中正在运行一个拉取请求

00:14:10.880 --> 00:14:14.720
我要更新该拉取请求，但

00:14:14.720 --> 00:14:19.600
中间大部分是相同的，以传播发生在其中的某些更改

00:14:19.600 --> 00:14:22.160
与此同时

00:14:22.399 --> 00:14:26.079
alex有一个针对的拉取请求

00:14:26.079 --> 00:14:30.880
亚洲正在引进某种类型的一代

00:14:30.880 --> 00:14:36.160
所以我会从alex那里拿走它并稍做更改，以便它做更多或

00:14:36.160 --> 00:14:39.760
减少我在ipfs中所做的事情，也许重新布线ipf必须要做的是

00:14:39.760 --> 00:14:42.399
天蓝色的东西

00:14:43.040 --> 00:14:46.399
它只是生成与树分离的类型

00:14:46.399 --> 00:14:50.480
并告诉打字稿在哪里寻找

00:14:50.480 --> 00:14:53.519
然后有一个较旧的拉取请求

00:14:53.519 --> 00:15:00.240
雨果，呃从类型和

00:15:00.240 --> 00:15:03.440
我完全忘记了其他几件事，所以我会分手

00:15:03.440 --> 00:15:09.680
将它们分解成单独的任务并逐一借给它们

00:15:10.480 --> 00:15:17.279
一旦我们有一个ipfs类型生成工作，我可能会继续

00:15:17.279 --> 00:15:21.279
并尝试将类似的机制添加到其他召回中，并采取

00:15:21.279 --> 00:15:27.120
我们从那里得到的经验，所以除了期望那里有拉取请求

00:15:27.120 --> 00:15:30.959
部分原因也类似于ipfs生成

00:15:30.959 --> 00:15:34.639
有意义的类型，它应该能够理解依赖项的引入

00:15:34.639 --> 00:15:39.120
因此，如果未键入flippy t2p，并且没有键入ipld，则它不能真正

00:15:39.120 --> 00:15:43.600
很有意思，嗯

00:15:43.600 --> 00:15:49.040
因此，仅通过一件事，就有一些人对

00:15:49.040 --> 00:15:52.480
以及自由的类型，所以最终会很好

00:15:52.480 --> 00:15:57.360
您与他们的想法，我们可以合作

00:15:57.360 --> 00:16:01.600
是的，我想有些人做了几分钟

00:16:01.600 --> 00:16:04.959
对打字稿的原始拉取请求也是如此

00:16:04.959 --> 00:16:09.600
到ipfs以及某些类型，所以是的，我肯定会尝试

00:16:09.600 --> 00:16:12.079
在社区中尽我所能

00:16:12.079 --> 00:16:16.480
而且我也知道很多对此感兴趣的人

00:16:21.199 --> 00:16:24.720
酷，我想在其他计划中添加一些内容

00:16:24.720 --> 00:16:29.440
所以我正在研究UM，所以一件事是我正在试图分解呃

00:16:29.440 --> 00:16:32.560
icfs模块有点，所以我分散了

00:16:32.560 --> 00:16:39.519
cli和http api服务器um，我的意思是说，这是一种很酷的um

00:16:39.519 --> 00:16:43.600
这样的想法是，您只需要不需要的核心即可

00:16:43.600 --> 00:16:46.639
就像经历了所有的安装

00:16:46.639 --> 00:16:50.480
cli和http api的依赖关系

00:16:50.480 --> 00:16:54.720
您通常不需要um，因为这是人们抱怨的一种情况

00:16:54.720 --> 00:16:59.440
大约很多，然后这样

00:16:59.440 --> 00:17:02.320
为什么我还没有接触过触摸脚本的东西，因为我一直在继续前进

00:17:02.320 --> 00:17:06.400
嗯，但这几乎是完成的

00:17:06.400 --> 00:17:10.400
我进行了一次史诗般的尝试，以期给我的教授带来npm

00:17:10.400 --> 00:17:15.439
今天，以便我们可以进行2.7的另一项针对男生的测验

00:17:15.439 --> 00:17:21.120
9.7带来了icfs

00:17:21.120 --> 00:17:25.600
 npn注册表镜像是最新的，因为它共享了一大堆代码

00:17:25.600 --> 00:17:30.840
嗯，这很有趣，我仍然接触到朦胧的v8

00:17:30.840 --> 00:17:36.400
欢迎，因为它冷却到鼻子TP模块，这需要

00:17:36.400 --> 00:17:38.400
缓冲区或要发送的字符串不是

00:17:38.400 --> 00:17:43.200
不幸的是，使用了巨大的乏味的aos

00:17:43.200 --> 00:17:47.360
这是不同的，我认为我应该做到这一点，

00:17:47.360 --> 00:17:52.000
这样我就可以重新谋杀教科书了

00:17:55.280 --> 00:18:01.120
很酷，这是其他计划的目的

00:18:11.600 --> 00:18:18.320
不，我只是呃那里有呃你知道有人戳了

00:18:18.320 --> 00:18:21.679
就像旧的ipfs问题之一一样，

00:18:21.679 --> 00:18:26.480
固定到数据存储区中，我怀疑我们将要

00:18:26.480 --> 00:18:31.679
与您在jessakifas中所做的类似的方法

00:18:31.679 --> 00:18:35.039
但我认为这可能值得，我不知道本周是否会这样

00:18:35.039 --> 00:18:39.600
或下周会更好，但要讨论

00:18:39.600 --> 00:18:42.880
我们如何希望固定看起来

00:18:42.880 --> 00:18:47.840
鉴于重要的工作已在固定上进行了一些更改

00:18:47.840 --> 00:18:53.280
服务api尤其是周围，就像您知道命名的pin或具有多个

00:18:53.280 --> 00:18:56.320
针对相同cid并可能

00:18:56.320 --> 00:19:00.240
是管理所有这些的适当方法

00:19:00.240 --> 00:19:02.559
我认为本周不会是那个时候，但是

00:19:02.559 --> 00:19:05.440
可能下个星期吧

00:19:07.520 --> 00:19:13.760
我很想在固定峰会上发表一些想法，

00:19:13.760 --> 00:19:18.960
销对象api和一些纺织线也

00:19:18.960 --> 00:19:21.760
我认为参与了

00:19:22.160 --> 00:19:28.320
所以把那些拉进去可能会更糟，我认为

00:19:28.320 --> 00:19:32.080
短期数据存储的东西嗯，然后有

00:19:32.080 --> 00:19:35.760
就像长期只是完全固定到

00:19:35.760 --> 00:19:40.160
线程嗯，但我认为这将需要

00:19:40.160 --> 00:19:42.720
更大得多的对话，但是在那里

00:19:42.720 --> 00:19:45.360
我们在过渡期间可以做的事情

00:19:45.360 --> 00:19:48.640
固定性能提升的机会

00:19:48.640 --> 00:19:52.160
固定服务，以便他们可以

00:19:52.160 --> 00:19:55.840
您知道只是在他们的系统上提高性能，直到我们了解

00:19:55.840 --> 00:19:59.679
线程的东西或任何最终成为

00:19:59.679 --> 00:20:04.000
我怀疑最大的问题就是

00:20:04.000 --> 00:20:07.919
现在，我就像要成为主键的东西一样

00:20:07.919 --> 00:20:11.120
正确的事是什么？

00:20:11.120 --> 00:20:18.960
或名称或一些uuid um，然后一旦有了

00:20:18.960 --> 00:20:22.159
弄清楚好了，如果您想做些什么，您想做什么？

00:20:22.159 --> 00:20:25.919
您希望您知道的主要钥匙是其他东西

00:20:25.919 --> 00:20:30.400
您是否有单独的索引，还是喜欢吃查询费用？

00:20:30.400 --> 00:20:36.480
我怀疑这些是需要探索的主要问题，因为没有得到

00:20:36.480 --> 00:20:39.280
太多了，就像哦，嘿，如果我们添加像

00:20:39.280 --> 00:20:44.320
全新的东西，如果我们替换了一件不太可行的东西，那该怎么办？

00:20:44.320 --> 00:20:48.640
就像另一件事可能无法解决

00:20:52.080 --> 00:20:55.600
感谢您的解释

00:20:55.679 --> 00:21:02.159
嗯，我想提一句，所以

00:21:02.159 --> 00:21:07.440
在爵士乐项目中，我们曾经或仍然使用天青做伴奏，但是

00:21:07.440 --> 00:21:13.039
如果您只是克隆一个项目并启动它的问题

00:21:13.039 --> 00:21:18.080
vs代码和其他工具会采用其他格式设置规则以及什么

00:21:18.080 --> 00:21:23.280
假定是因为他们正在寻找eslint配置，如果

00:21:23.280 --> 00:21:28.880
不是他们的，那么，如果他们只是使用通用同步，我认为

00:21:28.880 --> 00:21:33.600
所以有了呃，我认为ipfs还是很薄弱的

00:21:33.600 --> 00:21:38.480
嗯，在亚洲的put和succinct降落了，这就是我们现在拥有的

00:21:38.480 --> 00:21:42.880
天青使用的eslint的可共享配置

00:21:42.880 --> 00:21:49.440
嗯，所以我们可以在每个回购协议中增加一个内衬，以扩展ipfs

00:21:49.440 --> 00:21:53.840
然后所有工具都会知道配置应该是什么样的，

00:21:53.840 --> 00:21:59.440
希望创造更好的体验，所以我将添加一些

00:21:59.440 --> 00:22:03.679
其他回购协议，并会鼓励其他人也帮助我

00:22:03.679 --> 00:22:07.760
如果有人想帮忙请

00:22:08.000 --> 00:22:16.480
这听起来像是秋季国家的工作，呃，也许我有某种想法

00:22:16.480 --> 00:22:21.120
清单的回购是的，所以我有一些

00:22:21.120 --> 00:22:24.480
坐在那里的代码遍历每一个

00:22:24.480 --> 00:22:29.520
在一个用户或组织中回购并查找文件，然后查看是否

00:22:29.520 --> 00:22:33.520
匹配我在本地拥有的文件，然后

00:22:33.520 --> 00:22:37.840
如果它不使用我的github令牌替换它，我用它来更新所有

00:22:37.840 --> 00:22:40.400
每当有一个github动作工作流时

00:22:40.400 --> 00:22:44.720
改变是因为我有50个仓库，它们都具有相同的工作流程

00:22:44.720 --> 00:22:47.120
因此，如果您想借用该代码，可能会像

00:22:47.120 --> 00:22:50.480
一个合理的脚本去改变所有这些

00:22:50.480 --> 00:22:54.480
但是它只是覆盖了它不喜欢打开公关或其他任何东西的文件，所以我

00:22:54.480 --> 00:22:57.840
不知道你是否想变得那么积极

00:22:58.640 --> 00:23:02.880
嗯，是的，为什么不与我分享链接，我会看一下，然后看看

00:23:02.880 --> 00:23:11.440
我可以做到，谢谢，哦，嗯，艾力克斯，所以

00:23:11.440 --> 00:23:19.600
我们是否根据您在uh中的拉取请求发布了基础分支

00:23:19.600 --> 00:23:23.520
多格式的名称空间或任何范围

00:23:23.520 --> 00:23:29.280
嗯，我们应该更新js ipfs吗，我认为某些东西被阻止了

00:23:29.280 --> 00:23:35.039
basex对吧，也许我们应该在那儿使用那把叉子

00:23:35.200 --> 00:23:40.320
是的，多基础取决于基础

00:23:43.679 --> 00:23:50.080
只是将其作为点发布发布，所以它应该刚到

00:23:50.080 --> 00:23:53.440
意思是说已经完成了，或者他释放了

00:23:53.440 --> 00:23:56.559
发布它不包括它，是的，除非它依赖它

00:23:56.559 --> 00:24:00.720
直接，但是像这样，下一个版本将把它放进去

00:24:00.720 --> 00:24:06.640
到您知道的浏览器捆绑版um的缩小版本

00:24:07.679 --> 00:24:12.720
但是如果有阻塞的事情，我们总是可以发布零件

00:24:14.480 --> 00:24:21.600
非常感谢，很酷的问题

00:24:27.200 --> 00:24:32.480
我分享了okr工作表，因此请填写，我们将在周四见面

00:24:32.480 --> 00:24:35.840
验证但添加您的所有想法，我们将尝试巩固

00:24:35.840 --> 00:24:38.320
这个星期

00:24:42.799 --> 00:24:48.640
嗯那就是那个谢谢大家来这个

00:24:48.640 --> 00:24:50.880
一直是我的专业邀请函代表

00:24:50.880 --> 00:24:55.360
2020年9月21日，星期一，请寻求更新

00:24:55.360 --> 00:25:01.840
嗯，请放心，再见

