WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.839 --> 00:00:06.080
大家好，欢迎来到周一每周进行的ipfs核心实现

00:00:06.080 --> 00:00:09.679
9月14日，我正在动脑，我将成为您的主人，我们

00:00:09.679 --> 00:00:11.840
将通过我们的高优先级计划

00:00:11.840 --> 00:00:15.839
其他措施，并有一个Qa停车场

00:00:15.839 --> 00:00:21.039
让我们开始进行高优先级计划有什么乐趣

00:00:21.039 --> 00:00:26.320
即将发布和发布，我们可以谈谈

00:00:26.880 --> 00:00:33.840
是的，因此ipfs 0.7 rc2上周发布，其中包含一些错误修复

00:00:33.840 --> 00:00:45.200
事情，然后我们应该在本周发布0.7的目标上

00:00:45.200 --> 00:00:51.920
edem您已被静音，但未被静音yeah是的，因为它现在正好，谢谢

00:00:51.920 --> 00:00:57.600
唯一需要进入0.7的内容是Web ui更新

00:00:57.600 --> 00:01:03.600
嗯，这很快就会出现，嗯，就像一个小小的错误修复程序，

00:01:03.600 --> 00:01:07.360
像一些性能方面的东西一样进行调查

00:01:07.360 --> 00:01:11.119
仔细检查一切是否都按照我们认为的方式正常工作

00:01:11.119 --> 00:01:15.680
嗯，但一切看起来都不错

00:01:19.600 --> 00:01:22.799
优秀非常令人兴奋

00:01:23.360 --> 00:01:27.840
接下来是固定服务

00:01:29.520 --> 00:01:36.079
是的，那是正在进行的，嗯，我们有

00:01:36.159 --> 00:01:40.960
我们有一个可以响应事物的服务器，我们有一个http客户端，

00:01:40.960 --> 00:01:45.200
响应事物并发送请求

00:01:45.200 --> 00:01:52.720
我们在初始ipfs中有很大一部分去了ipfs集成

00:01:52.720 --> 00:01:58.640
嗯，对每个人来说都足够了

00:01:58.640 --> 00:02:03.040
在您从事此工作的人们都知道js land

00:02:03.040 --> 00:02:08.239
嗯，在http客户端和Web ui中玩玩

00:02:08.239 --> 00:02:12.239
嗯，然后我们需要回去，我们仍然需要走

00:02:12.239 --> 00:02:16.640
嗯，回填所有详细信息

00:02:16.640 --> 00:02:20.640
嗯，那就是诸如此类的事情仍在进行中

00:02:20.640 --> 00:02:26.959
喜欢处理关键材料[音乐]

00:02:26.959 --> 00:02:29.920
现在是使用环境变量完成的，就像您知道的那样

00:02:29.920 --> 00:02:32.400
完成的事情

00:02:34.720 --> 00:02:41.599
在api规范方面，我应该做一个新的

00:02:41.599 --> 00:02:44.959
像明天那样的规格版本可能明天

00:02:44.959 --> 00:02:52.000
或直到今天晚些时候，最近对

00:02:52.000 --> 00:02:58.800
进入文档，并对规格进行实际更改，我们将

00:02:58.800 --> 00:03:04.000
有更多，就像我们将有一个

00:03:04.000 --> 00:03:11.840
改进了错误响应，我相信我们正在降低限制

00:03:11.840 --> 00:03:16.560
可在cid过滤器中传递多少个cid

00:03:16.560 --> 00:03:20.080
嗯，因为像cid实际上就是60个字符

00:03:20.080 --> 00:03:26.879
该网址可以在网络浏览器中容纳大约2000个

00:03:26.879 --> 00:03:31.360
如果您可以像这样说不超过1000，这是不现实的

00:03:31.360 --> 00:03:35.680
10所以我们将硬限制设置为10

00:03:35.680 --> 00:03:38.959
 cids，这将使该实施

00:03:38.959 --> 00:03:42.080
如果需要，可以更轻松地固定服务

00:03:42.080 --> 00:03:46.560
交叉检查东西，那只是10分10cids

00:03:46.560 --> 00:03:51.519
在那个时候，我觉得我们越来越接近

00:03:51.519 --> 00:03:55.280
指出我们对规格和底座满意的地方

00:03:55.280 --> 00:04:04.400
所以这将是次要的释放，并且计划是

00:04:04.400 --> 00:04:09.120
有效地使用ipfs时瞄准主要1.0

00:04:09.120 --> 00:04:13.280
与客户一起发货

00:04:13.599 --> 00:04:21.519
这将是一个里程碑，因为它表示现在规范已经确定

00:04:22.880 --> 00:04:30.320
呃，确实将最大的cid数减少到了10。

00:04:30.320 --> 00:04:33.759
我们是否也就此事实指出，应该像这样

00:04:33.759 --> 00:04:40.240
少于2000个字符，以便将来使用

00:04:40.240 --> 00:04:43.680
cid足够大，以某种方式越界

00:04:43.680 --> 00:04:47.840
我们仍然备份在那里

00:04:48.800 --> 00:04:52.400
是的，我们也可以将其添加到说明中

00:04:52.400 --> 00:04:57.040
就像不可能在

00:04:57.040 --> 00:05:02.639
就像浏览器的运行时一样，所以就像在运行时级别上自我阻止一样

00:05:02.639 --> 00:05:06.240
它在浏览器的运行时级别被阻止，但如果有人要这样做则不会被阻止

00:05:06.240 --> 00:05:08.800
这，他们只是从像发送HTTP请求

00:05:08.800 --> 00:05:11.919
去或者是的，是的，有人会喜欢

00:05:11.919 --> 00:05:18.960
现在用sha 512创建cidv1，这些将超级长

00:05:18.960 --> 00:05:25.840
是的

00:05:26.880 --> 00:05:32.240
我也是下一个是呃ed25519默认密钥

00:05:32.240 --> 00:05:36.320
是的，第二个都只是在等待0.7

00:05:36.320 --> 00:05:40.320
释放嗯，然后我仍然需要添加该公关

00:05:40.320 --> 00:05:45.280
js ipfs摆脱了心理困扰，所以我们本周会这样做

00:05:45.280 --> 00:05:52.960
不错，接下来是rust ipfs计划

00:05:52.960 --> 00:05:56.400
演示很棒

00:05:58.319 --> 00:06:04.000
大家好，所以最后一件大事是

00:06:04.000 --> 00:06:08.880
我上周或前一周谈论的意见

00:06:08.880 --> 00:06:13.520
一周只是清理并添加了更多的中断测试

00:06:13.520 --> 00:06:17.680
和一致性测试之类的东西，欢迎您点击

00:06:17.680 --> 00:06:21.120
通过那些公关，但它就像很多重组和东西一样，所以它

00:06:21.120 --> 00:06:26.560
可能不会太令人兴奋，但那里的清单上有几个项目

00:06:26.560 --> 00:06:29.039
呃，有几件事要去找人，那里有一个

00:06:29.039 --> 00:06:35.280
基板加上ipfs技术预览，因此您可以看到

00:06:35.280 --> 00:06:41.680
这两件事是um中断um，然后我们启动了一个网站

00:06:41.680 --> 00:06:45.199
叫做我们ipfs yet.rs，其中包含

00:06:45.199 --> 00:06:49.360
枚举um一致性测试，所以

00:06:49.360 --> 00:06:52.800
我觉得这对我们所处的位置会很有用

00:06:52.800 --> 00:06:57.039
给人们，然后只是一个便笺

00:06:57.039 --> 00:07:02.000
去真主罗克利吧，我们应该尽快谈谈，因为um轨道数据库

00:07:02.000 --> 00:07:05.759
即将推出另一个版本，然后是下一个版本，我们可以

00:07:05.759 --> 00:07:10.160
潜在地以共享工作者为目标，但我也不想去

00:07:10.160 --> 00:07:12.240
现在很深入，但是我只想指出

00:07:12.240 --> 00:07:18.160
这就是我的全部，只要有出色表现，我都很乐意与您交谈

00:07:21.440 --> 00:07:28.160
关于铁锈中的呃dht的问题，您是否正在实施类似

00:07:28.160 --> 00:07:33.599
自动或其他任何方式可以告诉同龄人不是

00:07:33.599 --> 00:07:39.280
很好，他们不应该是服务器，不，我们不是，我们在piggy带

00:07:39.280 --> 00:07:44.319
沙沙作响的p2p的顶部，它还没有autonet，因此dhd发布仍然

00:07:44.319 --> 00:07:49.039
一个问题嗯，但我们是我们可以发现

00:07:49.039 --> 00:07:52.080
整天无所事事，或者您全天发现内容

00:07:52.080 --> 00:07:59.039
呃，在运行清单p2p中有一个拉取请求，我将其粘贴到那里

00:07:59.039 --> 00:08:01.919
有人不愿意这样做

00:08:01.919 --> 00:08:04.800
嗯，所以如果您想微调或支持

00:08:04.800 --> 00:08:08.080
那种努力，或者我不知道，但是那是那种状态

00:08:08.080 --> 00:08:11.919
是的，是的，我的意思是，只是它可能值得

00:08:11.919 --> 00:08:17.280
考虑到这样做可能值得

00:08:17.360 --> 00:08:21.680
离开dht处于客户端模式

00:08:21.680 --> 00:08:25.680
好的，这样我们就不会再像坏节点那样陷入困境，就像我们让他走了一样

00:08:25.680 --> 00:08:28.160
一阵子

00:08:28.240 --> 00:08:31.280
好的，我将传递该请求，我们将

00:08:31.280 --> 00:08:35.360
看看我们是否可以做到，我不知道现在有任何节点在运行，但是

00:08:35.360 --> 00:08:40.000
你知道我们只是在测试中，我们会做的

00:08:40.000 --> 00:08:43.200
是的，就像未来一样

00:08:43.200 --> 00:08:47.120
确保网络集成

00:08:52.399 --> 00:08:56.800
很棒的下一步是呃jsp可发现性和连接性

00:08:56.800 --> 00:09:02.240
嘿，伙计们，这很酷，关于自动中继部分

00:09:02.240 --> 00:09:05.680
嗯，我基本上是从

00:09:05.680 --> 00:09:09.040
我最初的公关初步实施应该是

00:09:09.040 --> 00:09:12.080
大部分准备就绪只需要jacob的最终审查

00:09:12.080 --> 00:09:18.560
然后我开始通过可访问性对此进行一些后续的处理

00:09:18.560 --> 00:09:22.800
到其他东西，例如pr来更新网络

00:09:22.800 --> 00:09:26.959
一个新的上市地址的存在，这基本上需要确定推送

00:09:26.959 --> 00:09:30.959
但我们还需要更新我们自己签名的对等记录

00:09:30.959 --> 00:09:34.640
多其他更新之前没有做过

00:09:34.640 --> 00:09:39.680
公关也已经准备好了，但是我在等第一个公关

00:09:39.680 --> 00:09:44.399
在要求审查之前合并，然后我目前正在最后一个工作

00:09:44.399 --> 00:09:47.680
自动继电器的一部分，基本上是找到远程实现

00:09:47.680 --> 00:09:52.320
如果我们没有连接足够多的显示器，则可以根据以下情况提供继电器

00:09:52.320 --> 00:09:56.640
到我们想要的东西，或者如果我们在其中没有任何东西

00:09:56.640 --> 00:10:00.640
我们的同伴也坚持不懈，所以基本上是为了找到一个

00:10:00.640 --> 00:10:06.160
远程继电器基本上是我从金牌中获得灵感的

00:10:06.160 --> 00:10:10.800
b2b发现模块呃，所以目标是要提供服务

00:10:10.800 --> 00:10:14.240
使用Uh内容路由审查的发现

00:10:14.240 --> 00:10:16.640
未来的发现和其他事物

00:10:16.640 --> 00:10:21.680
基本上，目标是出现注册提供一定的

00:10:21.680 --> 00:10:25.519
命名空间服务，然后您可以找到此服务

00:10:25.519 --> 00:10:28.720
在网络中，您将获得提供此服务的同龄人

00:10:28.720 --> 00:10:31.760
然后，如果需要，您可以拨打他们的电话，

00:10:31.760 --> 00:10:35.519
在这种情况下，您基本上会绑定到它们，以使它们成为

00:10:35.519 --> 00:10:41.519
对你来说也很早出来，嗯，这基本上对我来说首先比较容易，但是后来

00:10:41.519 --> 00:10:46.000
意识到我需要对电路传输进行一些更改

00:10:46.000 --> 00:10:50.399
现在我将其与服务本身分离

00:10:50.399 --> 00:10:54.160
因为例如我们希望中继服务具有

00:10:54.160 --> 00:10:57.760
生命周期消息，例如起点停止

00:10:57.760 --> 00:11:01.839
这样我们就可以开始中继服务

00:11:01.839 --> 00:11:05.839
这样做是不是说我是中继，所以您可以

00:11:05.839 --> 00:11:08.959
问我是否要为您转播东西，并且

00:11:08.959 --> 00:11:13.519
在运输中，因为我们基本上完成了接口运输

00:11:13.519 --> 00:11:20.800
不是最好的方法，是的，这就是我目前的观点

00:11:20.800 --> 00:11:24.079
在自动继电器中，我希望我能完成

00:11:24.079 --> 00:11:28.000
在接下来的两三天内，所有正在进行的工作

00:11:28.000 --> 00:11:33.680
在此之后，我旨在启动连接管理器的总体史诗，这是

00:11:33.680 --> 00:11:38.480
也链接在笔记中，仅此而已

00:11:38.640 --> 00:11:42.160
我会确保再次进行自动中继审核

00:11:42.160 --> 00:11:44.800
明天前

00:11:51.680 --> 00:11:58.320
很酷，这使主要的举措更加完善

00:11:58.320 --> 00:12:01.120
其他措施，呃，我将跳过子域

00:12:01.120 --> 00:12:05.200
网关和sv 1.5的unix以及之前的ipfs，因为没有

00:12:05.200 --> 00:12:09.440
更新这些计划，嗯，加沙市，你想告诉我们怎么回事吗？

00:12:09.440 --> 00:12:12.160
与右旋

00:12:13.680 --> 00:12:16.800
嗯，我什么都没做

00:12:16.800 --> 00:12:23.440
所以这是在后台um web ui文件上，我认为这是一个

00:12:23.440 --> 00:12:28.000
拉请求，它有点卡住，正在等待某些东西

00:12:28.000 --> 00:12:31.360
否则我不记得我对变化的想法

00:12:31.360 --> 00:12:36.160
转到ipfs呃http服务器

00:12:36.160 --> 00:12:42.000
我认为之后我们可以降落了，我还没来得及添加其他物品

00:12:42.000 --> 00:12:46.639
但我先说说，然后再说吧，所以我开始接管一些

00:12:46.639 --> 00:12:50.399
雨果·乌姆（Hugo um）的打字稿作品

00:12:50.399 --> 00:12:54.240
我发送给Alex的请求请求很大

00:12:54.240 --> 00:12:57.680
嗯，主要是评论，所以不应该

00:12:57.680 --> 00:13:00.959
太糟糕了，但是需要进行一些更改，因为

00:13:00.959 --> 00:13:06.160
嗯，当我们开始生成类型文档时，它开始找出一些问题

00:13:06.160 --> 00:13:09.200
我们没有意识到，所以有一点点，但是

00:13:09.200 --> 00:13:14.639
剩下的只是评论，是的，所以我将专注于此

00:13:14.639 --> 00:13:21.839
一周尝试度过

00:13:22.160 --> 00:13:26.320
我保证我会做到的，哦，我什至不知道我们会做到的，我保证我们会的

00:13:26.320 --> 00:13:31.360
在本周末结束比赛，因为那是怪物，但是是的

00:13:31.360 --> 00:13:38.800
看起来很酷，对于其他计划而言

00:13:38.800 --> 00:13:46.000
所以继续进行设计审查提案，任何想要类似shoulda之类的人

00:13:46.839 --> 00:13:49.839
做过

00:13:50.480 --> 00:13:58.480
谁阻止了你，问你有很多测试

00:13:58.480 --> 00:14:02.720
我要在go ips版本发布之前做的事情

00:14:02.720 --> 00:14:09.519
包括类似在ipfs上npm上的orbit db test之类的东西，如果我能得到的话

00:14:09.519 --> 00:14:13.600
一些备份将是极好的

00:14:15.279 --> 00:14:18.560
嗯，如果有人有时间，如果有人有时间

00:14:18.560 --> 00:14:22.160
我们将不胜感激，也许我可以为您提供帮助

00:14:22.160 --> 00:14:26.240
让我们谈谈，谢谢

00:14:27.040 --> 00:14:31.839
嗯，也可以带我来介绍一下关于NPM的内容

00:14:34.560 --> 00:14:40.000
所以有人问任何问题

00:14:40.399 --> 00:14:45.839
如果有问题，您还需要答案

00:14:48.480 --> 00:14:51.120
停车场

00:14:51.519 --> 00:14:56.079
不符合上述任何类别的任何内容

00:14:56.240 --> 00:15:00.320
我想我以为我已经把那个II发布给了一些ipld人们

00:15:00.320 --> 00:15:04.079
最近是有意思的

00:15:04.079 --> 00:15:11.040
对我们来说，我们有办法

00:15:11.040 --> 00:15:14.320
更长的内容的标识符

00:15:14.320 --> 00:15:17.519
不只是一个多哈希，而且它们包括

00:15:17.519 --> 00:15:21.839
就像我们将其称为更复杂的加密证明

00:15:21.839 --> 00:15:27.600
嗯，我是在想添加的人的背景下考虑这一点的

00:15:27.600 --> 00:15:32.240
像您知道其中有100兆字节块的门仓库

00:15:32.240 --> 00:15:36.560
通过ipfs，但无法正常工作，因为就像我们不会处理大于

00:15:36.560 --> 00:15:39.279
一兆字节，但为了重组数据和

00:15:39.279 --> 00:15:43.279
现在所有的哈希值都在变化，所以就像有各种证明一样，您可以

00:15:43.279 --> 00:15:47.360
构造，但尚不清楚我们如何实际传达这些信息，例如我们

00:15:47.360 --> 00:15:50.240
即使您弄清楚如何构建

00:15:50.240 --> 00:15:52.639
证明

00:15:53.040 --> 00:15:56.720
所以如果您对此感兴趣，那么

00:15:56.720 --> 00:16:09.839
呃ipld频道可能是讨论的地方

00:16:10.399 --> 00:16:14.399
如果您有兴趣的话，一定不要错过

00:16:16.959 --> 00:16:21.040
好吧，如果别无其他，那么我们可以召集这次会议闭幕

00:16:21.040 --> 00:16:25.680
退回10分钟或11分钟，令人惊讶，非常感谢

00:16:25.680 --> 00:16:29.040
对于每个人来说都很重要，这一直是每周iphone的核心问题

00:16:29.040 --> 00:16:33.920
请于9月14日星期一同步，请注意保持安全，

00:16:33.920 --> 00:16:37.839
互联网再见

