WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.380 --> 00:00:06.750
好的，欢迎大家再次光临，这是ipfs核心实现的每周一次

00:00:06.750 --> 00:00:13.950
同步它是11月25日，我们用完了2019年的时间，现在是

00:00:13.950 --> 00:00:18.090
是时候谈论等待了，今天我们有记笔记的人把它当作亚历克斯，因为杰克不是

00:00:18.090 --> 00:00:24.900
是的，如果你在这里以here足类动物的名字在这里，我想你已经

00:00:24.900 --> 00:00:30.300
已经在与会者列表下完成了，我们将通过我们的举措

00:00:30.300 --> 00:00:33.420
请稍后在下方解释出价的作者

00:00:33.420 --> 00:00:37.079
每周更新以进行异步审核，但今天我们不会进行审核，但是

00:00:37.079 --> 00:00:45.300
人们可以在闲暇时异步查看它，酷起来吧

00:00:45.300 --> 00:00:51.210
然后采取主动行动，所以我本周采取的自由行动是删除

00:00:51.210 --> 00:00:56.640
更新的发布流程计划，因为我们在很大程度上做到了这一点

00:00:56.640 --> 00:01:01.530
过去，现在我们遵循新的发行流程，我们的PR都要进行升级

00:01:01.530 --> 00:01:06.900
到乘客侧BFS，我将其替换为名为“ scently slashed”的部分

00:01:06.900 --> 00:01:13.530
已发布的版本，因此在这里您可以放置​​即将发生的事情

00:01:13.530 --> 00:01:20.610
即将发货或刚发货，人们需要了解它，所以我已经

00:01:20.610 --> 00:01:26.490
这里已经有几件事了，所以新闻是jsrf的HTTP客户端

00:01:26.490 --> 00:01:32.460
版本40已在引擎盖下发布，现在可以全部获取并进行异步/等待

00:01:32.460 --> 00:01:39.450
因此，万岁，我们仍然有很酷的流和nodejs流，

00:01:39.450 --> 00:01:46.290
我们仍然保留回调API，因此存在重大变化

00:01:46.290 --> 00:01:55.649
发布，但它们很小，应该很容易迁移到

00:01:55.649 --> 00:02:03.420
对于HTTP客户端来说，现在要进行一些更改以删除

00:02:03.420 --> 00:02:07.829
我们支持的一些流API只是普通的旧异步

00:02:07.829 --> 00:02:14.530
Iterables将非常酷，并删除了回调接口，并且

00:02:14.530 --> 00:02:23.120
好好清除这是对的事情，我已经打开了PR，它实际上减少了

00:02:23.120 --> 00:02:31.100
ipfs HTTP客户端捆绑的大小超过一半，因此大约为240 K，

00:02:31.100 --> 00:02:38.900
现在不到196，我认为这真的很酷，但说实话，这主要是

00:02:38.900 --> 00:02:44.870
因为我从捆绑中删除了对等ID和期间流，什么是

00:02:44.870 --> 00:02:49.700
发生的原因是p2p加密由于包含以下内容而被拉入

00:02:49.700 --> 00:02:57.470
那些依赖和Limpy 2p加密货币巨大，我相信不是很

00:02:57.470 --> 00:03:05.570
当您从HTTP HTTP客户端获取对等ID时经常使用，对不起

00:03:05.570 --> 00:03:12.680
告诉我这总是会发生的，所以我有一个删除建议

00:03:12.680 --> 00:03:17.540
并用描述对象的对象代替它们

00:03:17.540 --> 00:03:23.660
info和CID而不是对等体，我认为是因为对等体ID是CID，它将

00:03:23.660 --> 00:03:25.700
在可预见的将来继续

00:03:25.700 --> 00:03:32.209
这样，如果合并，那将是一个好消息，对于

00:03:32.209 --> 00:03:37.730
大家好，第二个很酷的是jaesuk FS 0 40仍然在

00:03:37.730 --> 00:03:42.530
验尸我有点停顿了

00:03:42.530 --> 00:03:46.930
当我正在固定椅子时，如果s httpclient

00:03:46.930 --> 00:03:50.959
因为我只是很多工作，所以我想把它全部搞清楚，所以

00:03:50.959 --> 00:03:55.549
这有点延迟，但我们目前处于社区的第二阶段

00:03:55.549 --> 00:03:59.540
开发测试，几天之内我们将过渡到免费的阶段，除非有人

00:03:59.540 --> 00:04:04.970
有很多大问题我实际上已经发现了很多问题

00:04:04.970 --> 00:04:13.130
已经发送了PRS进行修复，所以效果很好，希望可以在

00:04:13.130 --> 00:04:18.370
是12月初的月底，是的，所以你可以看一下

00:04:18.370 --> 00:04:24.050
关于即将发布和已发布的内容，这就是我要说的

00:04:24.050 --> 00:04:27.169
忍耐中的硬币别人没有其他东西吗

00:04:27.169 --> 00:04:37.310
分享即将来临的旋转飞船之旅，或有任何疑问

00:04:37.310 --> 00:04:43.280
对，我继续简短地继续说对不起，是的，是的，我们

00:04:43.280 --> 00:04:47.660
宣布山雀，但只有一次，我们拥有新的山雀

00:04:47.660 --> 00:04:51.199
引导者，我们正在开始淘汰旧的过程

00:04:51.199 --> 00:04:56.930
引导程序，所以我通过对JSF ipfs的初始PR进行了一些

00:04:56.930 --> 00:05:01.880
笔记，我可以对其进行调整，并使其变得更加有用，可以随意采用

00:05:01.880 --> 00:05:07.759
如果您想要um，但我们将对IPSS进行同样的操作，然后

00:05:07.759 --> 00:05:17.090
世界更好，是的，让我们采取哦，谢谢迈克尔，是的，是的，然后

00:05:17.090 --> 00:05:21.680
在公关登陆后，我意识到Jes ipfs不支持dns加法器

00:05:21.680 --> 00:05:24.470
多加法器，我真的不知道它们是什么

00:05:24.470 --> 00:05:30.590
哦，这是正确的规范，所以现在我们有一些有关dns的文档

00:05:30.590 --> 00:05:36.169
加法器，然后奥利（Ollie）希望它变得更好，是的，不要退休，

00:05:36.169 --> 00:05:46.060
但是因为我们无法解析那些DNS，所以该传说又有了扩展

00:05:46.060 --> 00:05:52.550
史蒂文·雷（Steven Rae）的观点是，在使用PFS时确实支持递归解析

00:05:52.550 --> 00:05:58.430
DNS加法器，因此对于Dennis加法器，它指向txt记录，这也是DNS的补充

00:05:58.430 --> 00:06:05.449
正确地安排您的音乐节，递归地解决点亮p2p不会的问题，这就是

00:06:05.449 --> 00:06:09.440
也很不幸那很奇怪，但绝对是

00:06:09.440 --> 00:06:14.080
好的，这里需要很酷的请求

00:06:14.229 --> 00:06:20.449
好的，很酷，所以如果没有别的，那就快点走

00:06:20.449 --> 00:06:23.810
升级测试和基础设施流程我不认为任何人都知道

00:06:23.810 --> 00:06:30.409
除非Dirk可以就即将到来的狗屎迅速分享驱逐通知

00:06:30.409 --> 00:06:37.090
发布，因此ipfs unix首次导入获得了UNIX的支持

00:06:37.090 --> 00:06:44.199
IPO首发数据，也称为SV 1.5的UNIX，即将发布到IP FS

00:06:44.199 --> 00:06:46.710
你很快

00:06:49.210 --> 00:06:55.099
好的，这意味着存储大量数据和需要的人

00:06:55.099 --> 00:06:59.629
保留修改后的时间，因为也许他们正在沉没一些东西，

00:06:59.629 --> 00:07:03.259
想要知道什么时候已经更新可以真正知道

00:07:03.259 --> 00:07:07.340
信息，因为目前还没有那种东西

00:07:07.340 --> 00:07:14.110
和文件模式，这是一个有趣的时刻，我们有一个规范，我们在其中创建了一个规范

00:07:14.110 --> 00:07:20.360
s 1.5的UNIX，这是Unix FS v2登陆之前的单位之间的权宜之计

00:07:20.360 --> 00:07:25.340
肯定会来的，但是是的，那太棒了

00:07:25.340 --> 00:07:35.000
新闻，所以我想这很有可能会进入Jess IVFs 41

00:07:35.000 --> 00:07:38.080
返回兼容的帝国，所以如果你不这样做，如果你

00:07:38.080 --> 00:07:44.710
不要指定任何内容，就是这样，没关系，是的。

00:07:44.710 --> 00:07:49.210
使用元数据创建一个节点，她将无法使用旧版本读取该节点，并且

00:07:49.210 --> 00:07:55.449
我们实际上将要么是直观的运动元数据，要么如果您忽略它，

00:07:55.449 --> 00:07:59.680
因为它只是添加到protobuf的末尾，您仍然可以

00:07:59.680 --> 00:08:01.860
读

00:08:03.770 --> 00:08:07.880
我们将使用go的旧版本，我认为如果该节点仍然可以读取该节点

00:08:07.880 --> 00:08:15.650
让我使用元数据，或者没有人来填充它，它遇到的事情并非如此

00:08:15.650 --> 00:08:18.130
知道做什么

00:08:19.250 --> 00:08:26.970
好吧，只有新节点好吧，但是我想关于它的好处是，我们

00:08:26.970 --> 00:08:33.930
在此选项中构建了规范，因为存在链接到的节点

00:08:33.930 --> 00:08:37.709
来自元数据节点，因此即使我们无法读取目标节点，您也可以

00:08:37.709 --> 00:08:40.890
可能仍会读到P正在查看链接并获得

00:08:40.890 --> 00:08:47.839
整个文件还是大部分文件，取决于其构造方式

00:08:47.839 --> 00:08:54.029
无论如何，这足以与之相关，例如您可以放一些

00:08:54.029 --> 00:09:00.510
元数据注释中的文件数据（如果需要）还是不提供

00:09:00.510 --> 00:09:05.790
让我们继续前进，因为我无济于事，我将尝试删除指向该链接的链接

00:09:05.790 --> 00:09:12.060
注释中的UNIX FS 1.5规范很酷，所以升级吧

00:09:12.060 --> 00:09:16.260
继续前进，因为我们在idomeni中经历了15分钟的路程，因此您做了一些升级

00:09:16.260 --> 00:09:21.690
任何人都可以测试基础设施和过程，但是我认为

00:09:21.690 --> 00:09:25.980
客户面临着很多变化，但他们确实要在

00:09:25.980 --> 00:09:36.990
上周，不错，很酷，很不错哦，子域网关不在这里

00:09:36.990 --> 00:09:45.060
东西，但在0:40中，我实际上花了很长时间尝试编写发行版

00:09:45.060 --> 00:09:49.560
0:40的注释，我建议您先阅读它们，因为我们现在可以帮助您

00:09:49.560 --> 00:09:54.779
反之亦然，可以在IP NS路径中对配对思想进行编码，因此我写了一篇

00:09:54.779 --> 00:09:59.010
在比赛记录中解释其真正含义以及为何如此重要

00:09:59.010 --> 00:10:05.910
因此，去看看0:40有争议的信号是最近的记录是

00:10:05.910 --> 00:10:09.690
可能仍处于搁置状态，因为脂质剥皮器中仍在发生红杉和

00:10:09.690 --> 00:10:17.220
我P＆S的东西，所以雨果也不在这里，所以我们不能谈论它并添加

00:10:17.220 --> 00:10:21.390
性能，如果亚历克斯想分享一些，我们也许可以谈谈

00:10:21.390 --> 00:10:29.970
新闻哦，是的，所以我在机场上做了一些黑客周

00:10:29.970 --> 00:10:35.399
回来的飞机上的文件大小与可能已经变成

00:10:35.399 --> 00:10:41.870
快得多，所以我做了几件事，所以我做的第一件事是

00:10:41.870 --> 00:10:46.320
当您正在导入文件时，就像导入一个文件一样

00:10:46.320 --> 00:10:50.459
今天堂兄D的矮胖板条箱然后移至下一个翻牌圈，所以现在

00:10:50.459 --> 00:10:55.170
一次做十个仲裁就好了

00:10:55.170 --> 00:11:00.449
那么对于每个文件来说，将是全部，它将一次处理一大堆节点

00:11:00.449 --> 00:11:05.790
当它创建dag时，它将缓冲区取回并对其进行哈希处理，然后将

00:11:05.790 --> 00:11:08.220
第一个噪音案例就像所有这类的东西

00:11:08.220 --> 00:11:11.100
当我们按顺序执行所有操作时，现在已经完成了

00:11:11.100 --> 00:11:21.990
平行然后II使它，以便钉扎冲洗钉扎

00:11:21.990 --> 00:11:28.110
会反跳，因此此刻每当您添加文件时，它都会将文件固定

00:11:28.110 --> 00:11:31.740
在那里它创建了您知道一支笔和笔集中的条目的内容，然后写道

00:11:31.740 --> 00:11:36.630
叫出了磁盘，这在浏览器中速度很慢，我发现固定了

00:11:36.630 --> 00:11:40.230
冲洗固定大约需要50％的时间，因为

00:11:40.230 --> 00:11:43.740
通常情况下，或者您知道有空视图时就在写文件，然后

00:11:43.740 --> 00:11:48.540
如果是一个方块，那么您也在写笔，那也是一个方块，所以是的

00:11:48.540 --> 00:11:55.079
另一个时间花在冲洗上是很麻烦的，但我很抱歉

00:11:55.079 --> 00:11:58.500
像您作为开发人员所做的标准操作一样弹跳，所以现在每个

00:11:58.500 --> 00:12:03.000
当你说闪光时，你知道稍等一下，然后再说些其他的话

00:12:03.000 --> 00:12:05.940
说请冲洗，他们会第二次冲洗，因为这是

00:12:05.940 --> 00:12:09.870
当第二件事说请午餐时，是因为它改变了别针，所以

00:12:09.870 --> 00:12:13.980
现在我要说的是冲洗针的初始调用，因为公主

00:12:13.980 --> 00:12:18.180
受到影响，因此您甚至不希望自己只是重复地错误地输入了错误的数据，

00:12:18.180 --> 00:12:21.839
一遍又一遍，所以现在就像她得到了一个模糊的整体清单，我们

00:12:21.839 --> 00:12:25.589
这样做只会等待，然后等待，然后它将在最后刷新

00:12:25.589 --> 00:12:34.430
快得多，因此基本上使添加性能提高了一倍，因此

00:12:34.430 --> 00:12:37.889
如果没有这些改进，目前的附加性能是可比的

00:12:37.889 --> 00:12:44.130
走相当于一半的速度，这是另一回事

00:12:44.130 --> 00:12:49.440
我已经完成了非原子性数据存储的想法，所以

00:12:49.440 --> 00:12:54.630
您知道在数据库中您有酸，这是数据库中的属性

00:12:54.630 --> 00:12:58.230
a代表原子性，这意味着一旦您进行了操作，

00:12:58.230 --> 00:13:01.760
该操作的结果可用于其他操作

00:13:01.760 --> 00:13:08.150
这意味着像在实践中一样，这意味着我们存储的数据存储量远

00:13:08.150 --> 00:13:15.360
等待文件的所有字节刷新到磁盘，然后再考虑

00:13:15.360 --> 00:13:19.920
操作完成后，我们会在其中记录快速正确的补品

00:13:19.920 --> 00:13:25.290
速度不快，但它确实写得很酷，只是它的振铃慢而

00:13:25.290 --> 00:13:32.010
假设节点具有自己的权限FS，例如非原子的权限文件功能，因此

00:13:32.010 --> 00:13:36.000
他们不保证字节在两天后被刷新

00:13:36.000 --> 00:13:40.260
完成，所以我们不能使用它，但是就像如果您的应用程序没有使用该怎么办

00:13:40.260 --> 00:13:45.000
关心是否喜欢，例如，是否喜欢仅使用CLI而您不喜欢

00:13:45.000 --> 00:13:48.570
有一个守护进程在运行，那么管道还没有问题

00:13:48.570 --> 00:13:52.890
add命令完成后，所有命令都将其存入磁盘，因为整个Silla

00:13:52.890 --> 00:13:56.460
无论如何都会被拆除，它们将被刷新到磁盘

00:13:56.460 --> 00:14:01.800
在该过程退出之前，您可以在其中使用最右端的或原子

00:14:01.800 --> 00:14:07.050
案件，并提供了巨大的速度，因此通过作为一种选择

00:14:07.050 --> 00:14:12.170
基本上已经将添加速度提高了一个数量级，即

00:14:12.170 --> 00:14:17.310
超级酷，所以我只是想将这些合理化为一堆PS all

00:14:17.310 --> 00:14:22.470
我们可以用来获得不同知识的不同库

00:14:22.470 --> 00:14:35.160
这个问题真的很酷，所以我想警告一下，如果您正在写

00:14:35.160 --> 00:14:43.470
非原子地回购，如果您尝试从某人那里获取某物，

00:14:43.470 --> 00:14:51.540
我的PFS会获得CIT好的CID，例如速度是否足够快

00:14:51.540 --> 00:14:55.710
因此，如果返回结果，则可以足够快地尝试获得CID

00:14:55.710 --> 00:14:59.200
问仓库，说你有这个和仓库，你可以说

00:14:59.200 --> 00:15:04.960
否，因此它将进入网络并要求开始搜索DHT，是的，

00:15:04.960 --> 00:15:08.740
更糟糕的是，它可能会询问回购协议，您是否已收到该回购协议，就像我确信

00:15:08.740 --> 00:15:18.220
并没有整个农场，所以您要知道警告事项就像

00:15:18.220 --> 00:15:24.910
非常非常像非常有用的非常特殊的用例，听起来很酷

00:15:24.910 --> 00:15:34.780
真的很有趣，他们也很高兴建议也去ipfs，所以

00:15:34.780 --> 00:15:40.260
他们可以做类似的事情

00:15:40.260 --> 00:15:46.930
酷，好，那就是艾登今天不在这里，因为我没有表演过

00:15:46.930 --> 00:15:49.870
明天进行迁移-关键

00:15:49.870 --> 00:15:54.370
目前，Block store我还没来得及看一下，所以

00:15:54.370 --> 00:16:01.330
嗯，因为其他事情变得越来越多，所以暂时搁置了

00:16:01.330 --> 00:16:08.080
很重要，但是我很快就会好起来的。鸭子，您对我们有一点WAP更新吗？

00:16:08.080 --> 00:16:14.800
我知道我目前正被阻止等待测试运行，

00:16:14.800 --> 00:16:21.370
对于代码的滥用，因此希望我们可以不受阻碍地

00:16:21.370 --> 00:16:25.780
同时，我可能会看到这和异步/等待工作还是我可以做的事情

00:16:25.780 --> 00:16:34.270
那是相当小的，我可以在几天之内完成，我不知道艾伦是否

00:16:34.270 --> 00:16:39.330
您对此有任何见识，或者如果它主要发生在那里，是的，我

00:16:39.330 --> 00:16:43.900
认为Libby对我来说是目前所缺少的，所以您可能想要

00:16:43.900 --> 00:16:47.170
签入，我知道雅各布斯不在今天，但他明天会在我身边

00:16:47.170 --> 00:16:53.680
想，这样就可以像Jase IVF一样和他一起检查

00:16:53.680 --> 00:17:01.240
从字面上看，剩下的我们现在已经达到了ipfs级别，所以我们

00:17:01.240 --> 00:17:06.720
做得很好，但是，那将非常有用

00:17:06.970 --> 00:17:19.750
在那里，我们已经下一个了，我们有一个水槽，一个体重秤，嗯，很好，我们是

00:17:19.750 --> 00:17:25.930
就像我说的那样，它只是在完成PTP，

00:17:25.930 --> 00:17:30.640
目前正在冒泡他们的东西，上周我做了一些工作，但是

00:17:30.640 --> 00:17:36.730
一周前在一个名为link的模块上，它的长度为前缀，这只是一个分叉

00:17:36.730 --> 00:17:43.390
拉长度是自由固定的，因此它只是一个的异步可迭代版本

00:17:43.390 --> 00:17:49.240
异步迭代，您可以在其中阅读，编码和解码

00:17:49.240 --> 00:17:55.960
带数字的前缀以说明它们的长度，并且该前缀通常是一个

00:17:55.960 --> 00:18:03.820
变体，因此您可以将其设置为任意大小，但一件事是

00:18:03.820 --> 00:18:12.070
拉皮塔（Lapita）巅峰人物意识到他们需要秒IO，实际上我认为它使用了

00:18:12.070 --> 00:18:16.030
它实际上不使用变体，因为他使用的长度不受限制的固定消息像

00:18:16.030 --> 00:18:23.350
固定长度，例如32英寸，我可以用32英寸左右的长度将其解开

00:18:23.350 --> 00:18:32.050
他们需要一个固定长度的读取器，或者编码器和解码器，所以我做了一些

00:18:32.050 --> 00:18:40.390
对该模块进行工作以添加自定义长度编码和解码，例如Varon

00:18:40.390 --> 00:18:46.060
是默认设置，但是如果您想使用固定长度前缀，则可以

00:18:46.060 --> 00:18:52.120
您只需要像将数字编码为前缀的函数一样给它，然后

00:18:52.120 --> 00:18:58.840
以及代码的功能，所以可以

00:18:58.840 --> 00:19:09.340
是的，所以有人来审查DHT的某些变化，第一个HT是

00:19:09.340 --> 00:19:13.390
看起来如果时间太长，它只会丢弃邮件，我想知道是谁

00:19:13.390 --> 00:19:21.370
在您一直在做的工作中添加一个选项很有意义

00:19:21.370 --> 00:19:31.070
长度前缀工作，或者如果应该是另一个类似的变换，是的，我想

00:19:31.070 --> 00:19:39.769
defo就像是一个完整的模型，或者是一个很大的东西，但是是的

00:19:39.769 --> 00:19:44.960
理想情况下，它不仅会丢弃消息sis，而且会适当地拆分

00:19:44.960 --> 00:19:50.809
您在说多个消息之间的多个之间是不应该的

00:19:50.809 --> 00:19:56.240
甚至首先发生在DHT级别，也不需要

00:19:56.240 --> 00:20:05.149
关注我们这样的消息长度II不知道密钥

00:20:05.149 --> 00:20:08.090
能够在我知道的那一刻发送消息会很好

00:20:08.090 --> 00:20:11.480
如果超过该数量，则给它提供大于四个的缓冲区

00:20:11.480 --> 00:20:17.659
梅格，然后它会抛出它，它不会让你发送，但是然后但是现在我

00:20:17.659 --> 00:20:24.259
想像为什么您的内存中有一个超过四个Meg的块

00:20:24.259 --> 00:20:28.279
数据，我会向您指出问题所在，也许您可​​以知道并获得一些信息

00:20:28.279 --> 00:20:32.029
是的，是的，因为可能有点像旧版代码，您知道它过去的用途

00:20:32.029 --> 00:20:35.119
必须检查一下，现在不再需要，可能看起来

00:20:35.119 --> 00:20:41.269
不是，我知道这是它的长度前缀的限制，但是可能会有

00:20:41.269 --> 00:20:47.840
在Plex或其他任何东西中有一些任意限制，但是是的，我们

00:20:47.840 --> 00:20:53.149
想要喜欢，因为问题在于我们如何通知客户，因为他们

00:20:53.149 --> 00:20:56.659
只是发送消息，以某种方式向您解释他们发送的远程模式

00:20:56.659 --> 00:21:00.710
一条太大的消息，我们不仅要砍一滴，

00:21:00.710 --> 00:21:06.049
连接之类的东西，因为只有当他们向您发送不良信息时，

00:21:06.049 --> 00:21:09.110
他们可能是一个坏演员，你可能不与他们联系

00:21:09.110 --> 00:21:12.740
我一直在战斗，德克实际上是在谈论

00:21:12.740 --> 00:21:16.549
发送一则您有消息的烂摊子，然后将其发送到远程

00:21:16.549 --> 00:21:21.350
发送给其他人哦，我们收到的是

00:21:21.350 --> 00:21:28.909
接收结束权是的，是的，我想这可能是为什么

00:21:28.909 --> 00:21:31.610
放在首位，这样您就不能像随意发送邮件一样被发送

00:21:31.610 --> 00:21:39.100
链接太大，但无论哪种方式

00:21:39.100 --> 00:21:45.640
有人，有人说，如果可以的话，他们可以把那堆烂摊子寄出去

00:21:45.640 --> 00:21:50.500
发送大消息然后他们然后将其分块将是一件很高兴的事情

00:21:50.500 --> 00:21:58.570
适当地，如果你说我的意思是无论如何，这是一次对话

00:21:58.570 --> 00:22:06.159
无论如何，所以异步等待反映了我们已经困扰了我们

00:22:06.159 --> 00:22:12.909
一直到J端，因为HTTP客户端现在几乎已经

00:22:12.909 --> 00:22:16.360
转换后，但仍然有完整的流和边缘流，

00:22:16.360 --> 00:22:22.899
回调，所以我们真的很接近，这在那方面是超级好消息

00:22:22.899 --> 00:22:29.919
我无法更新p2p，在此之前没有其他人可以这样做，但是

00:22:29.919 --> 00:22:35.230
他们确实有一个Trello板，该板与其他

00:22:35.230 --> 00:22:42.309
以前和以前的会议，您可能可以检查一下，以便

00:22:42.309 --> 00:22:48.010
让我们完成了计划的最后一刻，但幸运的是，

00:22:48.010 --> 00:22:52.090
设计审查建议，我们那里什么都没有，同一个人也想

00:22:52.090 --> 00:23:02.679
在最后一刻添加一些东西，并问任何人哦，实际上我在这里戴了一顶帽子

00:23:02.679 --> 00:23:09.490
是的，我把它放在停车场了，问我没问过，我听说我们收到了

00:23:09.490 --> 00:23:15.029
从新的贡献者那里提取请求以更新MIT或将许可证切换到MIT

00:23:15.029 --> 00:23:21.010
加或或和或阿帕奇在您自己的休闲维克斯，我们有

00:23:21.010 --> 00:23:26.850
以前表达了这​​样做的愿望，这就是我所拥有的超级好消息

00:23:26.850 --> 00:23:32.230
试图在一个问题中标记人，但是github只提到前50个

00:23:32.230 --> 00:23:41.890
人们是这样，如果II需要在这里发送链接，但基本上下一步是

00:23:41.890 --> 00:23:45.220
做出签名的贡献，所以每个人都需要同意

00:23:45.220 --> 00:23:48.840
他们过去和将来所做的一切现在都将成为

00:23:48.840 --> 00:23:56.590
许可为MIT和Apache，如果您还没有收到

00:23:56.590 --> 00:24:03.640
通知该特定问题，则该特定问题没有问题

00:24:03.640 --> 00:24:11.400
那么请立即处理该问题，我已经检查了他们的支票簿或添加了

00:24:11.400 --> 00:24:19.180
发表评论，说您在上面签字，我将在此处将链接形象化，然后将其放在

00:24:19.180 --> 00:24:23.560
还要注意哦，是某人真的不谢谢你

00:24:23.560 --> 00:24:30.750
酷，现在要求其他任何阻滞剂

00:24:32.040 --> 00:24:36.040
所有正确的问题，哦，是的，这是一个关于

00:24:36.040 --> 00:24:41.830
DHT很酷，是的，我尝试一下之后再看一下

00:24:41.830 --> 00:24:45.670
在这种情况下，停车场也是空的，我们还有最后的东西

00:24:45.670 --> 00:24:53.980
其他人好吧，不，谢谢大家的光临，这是我的荣幸

00:24:53.980 --> 00:24:56.890
一如既往，下周我再见

00:24:56.890 --> 00:25:02.440
每周同步ipfs核心实现的另一个激动人心的版本嗨

00:25:02.440 --> 00:25:06.780
PMSing再见再见

