WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.120 --> 00:00:04.480
大家好，欢迎来到ipfs核心实现

00:00:04.480 --> 00:00:08.559
2020年10月2日星期一的每周同步。

00:00:08.559 --> 00:00:13.040
我很疼我会成为你的主人我们要经历我们的强大力量

00:00:13.040 --> 00:00:16.400
倡议，其他倡议，停车场，全部

00:00:16.400 --> 00:00:19.359
好东西，我不确定

00:00:19.359 --> 00:00:21.520
它会和上周一样好，不会，它将变得更好

00:00:21.520 --> 00:00:26.160
很棒，让我们继续吧，好吧，即将发布的版本

00:00:26.160 --> 00:00:30.560
等一下，我们需要一个记笔记的人，我忘了那很糟糕，不是撒谎了吗

00:00:30.560 --> 00:00:35.360
所有的事情都在我屏幕的左侧

00:00:35.360 --> 00:00:38.559
厄运，祝你好运，我的意思是，这都是相对的。

00:00:38.559 --> 00:00:42.320
非常感谢您这样自愿参加

00:00:42.320 --> 00:00:46.480
嗯，太酷了，让我们继续前进吧，混合高优先级计划

00:00:46.480 --> 00:00:50.160
第一件事即将来临，船发布了

00:00:50.160 --> 00:00:57.280
因此，几天前就快速发货了，呃，jsipfs51，嗯，很棒

00:00:57.280 --> 00:01:03.920
它具有类型它具有omg mega lols类型具有um类型我认为他们

00:01:03.920 --> 00:01:06.320
工作他们工作很棒，这很了不起

00:01:06.320 --> 00:01:11.040
还摆脱了secio的问题，并修复了许多错误

00:01:11.040 --> 00:01:14.799
你应该完全升级请

00:01:15.360 --> 00:01:19.600
还有一篇博客文章，请阅读有关博客文章的文章

00:01:20.240 --> 00:01:27.759
嗯，我可以谈谈ipfs是的，是的，所以可能会有一个

00:01:27.759 --> 00:01:30.320
本周发布，我需要看看有几件事

00:01:30.320 --> 00:01:33.840
需要增加的数量，我们将要介绍的领料服务工作

00:01:33.840 --> 00:01:38.079
大约在一秒钟内看起来很好，而um数据存储的作品看起来很适合

00:01:38.079 --> 00:01:42.640
嗯，我们需要做一个快速升级，然后有一些

00:01:42.640 --> 00:01:44.960
他们正在做一些上线的bdp工作

00:01:44.960 --> 00:01:48.320
改善流媒体，有一些视频流

00:01:48.320 --> 00:01:52.320
以及um接口的所有优点，因此它们将继续工作

00:01:52.320 --> 00:01:56.799
希望这个礼拜结束，嗯，我会暂时说那是更多

00:01:56.799 --> 00:02:00.880
我们不太可能在下周看到rc，而不是在本周看到

00:02:00.880 --> 00:02:04.399
本周世界上发生的所有疯狂

00:02:04.399 --> 00:02:06.640
嗯

00:02:06.840 --> 00:02:09.840
是的

00:02:11.200 --> 00:02:14.080
还有其他东西

00:02:17.599 --> 00:02:24.480
竞标服务纺纱服务很不错，所以我们有一个

00:02:24.480 --> 00:02:27.120
基于数据存储的固定服务性能

00:02:27.120 --> 00:02:31.680
看起来很好，嗯，我想我们只是在等待

00:02:31.680 --> 00:02:35.360
我认为我们将对所有这些内容进行最终审查，但就目前而言

00:02:35.360 --> 00:02:38.800
它很好，我也有迁移

00:02:38.800 --> 00:02:41.840
我会检查它们应该能够在它们看起来的那一天进行检查

00:02:41.840 --> 00:02:44.640
向前和向后迁移都很好

00:02:44.640 --> 00:02:48.959
嗯，嗯，除了那个，我不知道

00:02:48.959 --> 00:02:54.879
除非我们想在某些实际的客户数据上运行它，否则剩下的就不多了

00:02:54.879 --> 00:02:59.120
或类似我们希望您知道的东西，否则

00:02:59.120 --> 00:03:01.760
看起来应该准备在本周开始等待

00:03:01.760 --> 00:03:07.360
任何任何审查出现的任何问题，所以不期待

00:03:07.360 --> 00:03:10.400
任何事情任何重大变化，如果有的话

00:03:10.400 --> 00:03:13.920
如果有的话，那么绿灯亮

00:03:13.920 --> 00:03:18.800
关于那个问题，不，然后

00:03:18.800 --> 00:03:24.640
从下一个版本开始，我们一直在向前迈进

00:03:26.959 --> 00:03:33.599
是的，从固定服务api规范前面只是一个快速的PSA

00:03:33.599 --> 00:03:37.440
有一个小的补丁版本，不会改变

00:03:37.440 --> 00:03:45.599
要求格式，但会改变我们根据引脚名称进行搜索的方式，因此默认情况下

00:03:45.599 --> 00:03:50.480
现在，默认名称是快速的精确名称搜索

00:03:50.480 --> 00:03:54.319
如果您想区分大小写不敏感，那么您需要

00:03:54.319 --> 00:04:00.799
传递匹配参数，所以最终请切换

00:04:00.799 --> 00:04:04.400
我认为Go ipfs客户端已经切换到最新版本

00:04:04.400 --> 00:04:10.159
呃，如果不是，那不是阻碍，而是有点向后退

00:04:10.159 --> 00:04:14.640
兼容的更改，但我们将默认值改为

00:04:14.640 --> 00:04:19.519
表现更出色，是更广泛的一部分

00:04:19.519 --> 00:04:24.800
完善我们的默认值，例如列出图钉

00:04:24.800 --> 00:04:28.960
或解决一些问题，我们正在切换到性能最高的

00:04:28.960 --> 00:04:33.040
默认值，因为人们通常不知道有一个参数

00:04:33.040 --> 00:04:37.120
使事情变得更快，所以我们使默认事情变得最快

00:04:37.120 --> 00:04:43.840
是的，就是这样

00:04:45.600 --> 00:04:50.160
很棒，接下来是sekio移除

00:04:51.759 --> 00:04:55.600
是的，所以所有这些都被释放了，因为是的，它在我身上

00:04:55.600 --> 00:04:59.520
走，我们有意计划去做

00:04:59.520 --> 00:05:03.759
本周引导节点上的闪存

00:05:03.759 --> 00:05:07.039
一旦完成，我们就完全禁用了引导节点，然后

00:05:07.039 --> 00:05:12.400
我们还将停用旧的DHT助推器

00:05:12.400 --> 00:05:17.360
现在我们需要替换的hydra节点

00:05:18.639 --> 00:05:22.720
我们要安排停工吗

00:05:23.039 --> 00:05:26.479
好吧，基本上我们只是计划

00:05:26.479 --> 00:05:31.759
禁用它在助推器音符上的功能

00:05:31.759 --> 00:05:36.080
在引导节点上删除24小时

00:05:36.080 --> 00:05:39.680
嗯，看看有人在我们的大方向上尖叫

00:05:39.680 --> 00:05:43.680
嗯，如果没有的话，我们将在下周将其完全退役

00:05:43.680 --> 00:05:46.800
或从助推器和我们的引导程序中删除sekio

00:05:46.800 --> 00:05:49.360
是下周

00:05:50.479 --> 00:05:55.520
如果有投诉，可以将其发送到预先指定的酒吧子频道

00:05:55.520 --> 00:05:58.479
他们当然不能做到这一点，因为他们没有心理，我没有

00:05:58.479 --> 00:06:04.160
具有启用噪声的um，以便它们的水力节点

00:06:04.160 --> 00:06:07.680
基本上没有，所以我们在上半年对网络进行了防御，以抵御人为攻击

00:06:07.680 --> 00:06:12.000
年和氢基本上是民用的

00:06:12.000 --> 00:06:15.520
对我们自己的网络进行攻击，它们是否仍然可以正常工作

00:06:15.520 --> 00:06:18.240
九头蛇是sybil，但不是，不是

00:06:18.240 --> 00:06:22.000
攻击，所以如果你看像九头蛇的工作

00:06:22.000 --> 00:06:26.960
他们要做的主要事情是，他们可以更好地覆盖网络

00:06:26.960 --> 00:06:30.319
所以我们基本上已经完成了计算以获得

00:06:30.319 --> 00:06:34.000
纯纯的对等ID分布，因此，如果您查看路由表，

00:06:34.000 --> 00:06:37.120
那时你那里会有一些水力节点，但它们却没有

00:06:37.120 --> 00:06:41.919
像dht强化的整个要点一样淹没您的节点

00:06:41.919 --> 00:06:44.960
就像我们上周发布的博客文章一样，这是

00:06:44.960 --> 00:06:49.120
我连接到您的节点，然后我接管了整个路由表，这是

00:06:49.120 --> 00:06:54.720
不是氢化物是做什么的，这是一个很好的西比尔，但是的

00:06:54.720 --> 00:06:58.240
公共节点与生俱来公共网络与生俱来

00:06:58.240 --> 00:07:03.919
容易受到攻击，嗯，我们刚做了那么昂贵的事情

00:07:03.919 --> 00:07:06.720
而且我们不会花钱攻击自己，因为那会

00:07:06.720 --> 00:07:09.199
犯蠢

00:07:09.599 --> 00:07:13.919
足够合理，可以继续使用js来提高可发现性

00:07:13.919 --> 00:07:19.280
和连接是的，所以我得到了自定义分析过滤器

00:07:19.280 --> 00:07:23.759
现在准备进行审查的功能，这基本上使用户能够

00:07:23.759 --> 00:07:27.599
示例筛选出私有或按顺序回头看地址

00:07:27.599 --> 00:07:30.880
不要将它们广告给

00:07:30.880 --> 00:07:34.960
网络，我也实现了自定义拨号地址

00:07:34.960 --> 00:07:39.360
分拣机，其目标是允许

00:07:39.360 --> 00:07:44.160
例如，嗯，我们首先拨打已知的公共地址

00:07:44.160 --> 00:07:48.000
如果我们不能的话，只能尝试私人地址

00:07:48.000 --> 00:07:54.879
拨号问题，所以在外部中继区域中，我为此工作

00:07:54.879 --> 00:07:59.199
然后在事物的集合面

00:07:59.199 --> 00:08:02.960
ii回到它呃，它仍然没有使用

00:08:02.960 --> 00:08:06.879
发现api，但我有一个与集合点的公关

00:08:06.879 --> 00:08:10.319
集成了android测试，一切准备就绪

00:08:10.319 --> 00:08:15.599
进行初步审查以及会合实施本身

00:08:15.599 --> 00:08:19.039
嗯，然后我基本上开始从事一些

00:08:19.039 --> 00:08:23.199
我们从自动继电器开始的例子

00:08:23.199 --> 00:08:28.560
我已经完成了大部分的示例，但我也会利用

00:08:28.560 --> 00:08:32.959
有机会为此示例创建测试，这是

00:08:32.959 --> 00:08:36.240
我们在自由上拖延了很长时间的事情

00:08:36.240 --> 00:08:39.039
我们所有的示例都没有测试，并且每次都想要

00:08:39.039 --> 00:08:41.839
要发布，我们需要手动检查所有

00:08:41.839 --> 00:08:44.880
所以我想从现在开始做测试

00:08:44.880 --> 00:08:50.240
在他们身上，在此之后，我还将开始为

00:08:50.240 --> 00:08:55.839
会合，是的

00:08:58.880 --> 00:09:02.080
很酷地添加测试您的示例是一个好主意

00:09:02.080 --> 00:09:08.880
只是说这样节省了很多时间，所以我在

00:09:08.880 --> 00:09:10.800
那里是双向流媒体，

00:09:10.800 --> 00:09:15.120
简而言之，这是浏览器中的流错误

00:09:15.120 --> 00:09:18.240
由于当前浏览器技术的局限性

00:09:18.240 --> 00:09:24.000
我们不能同时向后和向前传输事物

00:09:24.000 --> 00:09:27.440
您必须先创建一个表单数据对象，然后才能上载目录

00:09:27.440 --> 00:09:32.000
例如um需要消耗整个文件的文件

00:09:32.000 --> 00:09:35.600
流，然后再开始发送它，这真的很无聊，因为您无法启动

00:09:35.600 --> 00:09:37.839
接收

00:09:38.080 --> 00:09:44.800
数据，直到您发送了所有数据，所以解决方案，所以另一个问题是

00:09:44.800 --> 00:09:49.040
现有http api的流错误是什么

00:09:49.040 --> 00:09:53.200
将所有错误放入fab的http预告片中，除了没有浏览器外

00:09:53.200 --> 00:09:57.760
支持um的http预告片，因此，如果您要串流播放一堆

00:09:57.760 --> 00:10:00.000
的东西到服务器，并且有一个错误

00:10:00.000 --> 00:10:05.200
它被放进拖车，它永远不会到达，或者至少永远不会

00:10:05.200 --> 00:10:09.120
被浏览器处理后，流实际上就停止了，

00:10:09.120 --> 00:10:12.000
您认为我已经完成了很酷的豆子，除了您还没有完成，

00:10:12.000 --> 00:10:14.240
错误，您从未见过，所以不是

00:10:14.240 --> 00:10:18.640
不好，所以解决这类问题的方法是

00:10:18.640 --> 00:10:22.480
嗯，您可以在某种媒体上播放某种rpc

00:10:22.480 --> 00:10:25.920
双向的，您可以包装错误之类的东西

00:10:25.920 --> 00:10:33.839
所以像websockets这样的数字是显而易见的，所以看着我在看

00:10:33.839 --> 00:10:38.240
今天进入grpc在节点上工作很好

00:10:38.240 --> 00:10:42.480
它在浏览器中不起作用，因为它会通过http

00:10:42.480 --> 00:10:47.279
在节点中它使用http 2似乎不是

00:10:47.279 --> 00:10:50.959
任何浏览器都支持，所以有点问题

00:10:50.959 --> 00:10:55.680
可能最终切换到类似uh json rpc之类的东西，因为它确实可以解决

00:10:55.680 --> 00:10:58.640
网络套接字，还有一大堆

00:10:58.640 --> 00:11:01.920
有点像周围的问题，嘿，你会

00:11:01.920 --> 00:11:05.440
添加对grpc的支持以通过Web套接字执行操作，就像

00:11:05.440 --> 00:11:09.680
不，现在您也可以使用http，就像哦，不

00:11:09.680 --> 00:11:13.680
我不能使用它，所以您可能无法使用grpc，这很可惜

00:11:13.680 --> 00:11:18.160
因为你知道这是很好理解的

00:11:18.160 --> 00:11:22.320
和专业的底部很好，但还是这样，所以看着

00:11:22.320 --> 00:11:25.440
刚刚开始，呃，没有今天就四处转转

00:11:25.440 --> 00:11:29.200
下周将进行更新，但会有所帮助，并且会解决很多问题

00:11:29.200 --> 00:11:31.920
对我们的问题

00:11:32.000 --> 00:11:34.800
任何问题

00:11:36.079 --> 00:11:41.200
这是否意味着您正在考虑按原样使用grpc或希望提供一些

00:11:41.200 --> 00:11:47.040
使用Web套接字的某种扩展um，我的意思是我想使用grpc呃，如果

00:11:47.040 --> 00:11:51.120
这是如果我们可以通过网络套接字来做

00:11:51.120 --> 00:11:55.760
嗯，这很值得，但是如果最终要完成大量的工作，我就去

00:11:55.760 --> 00:11:58.320
用别的东西，因为我不

00:11:58.320 --> 00:12:02.240
特别想像周围的基础设施一样进行维护

00:12:02.240 --> 00:12:06.720
我只想用东西把它运出去

00:12:08.000 --> 00:12:12.720
我会在您全力以赴之前检查一下

00:12:12.720 --> 00:12:18.560
是否或每个浏览器都可以连接到本地主机上的websocket

00:12:18.560 --> 00:12:23.440
因为我认为有些内容安全政策可能会阻止您

00:12:23.440 --> 00:12:27.680
是的，我希望将这些东西淘汰掉

00:12:27.680 --> 00:12:30.720
我走的那棵树

00:12:34.800 --> 00:12:38.399
很酷，这就是高优先级计划向其他目标转移的目的

00:12:38.399 --> 00:12:43.760
举措，以便改善Web ui文件输出

00:12:45.200 --> 00:12:52.079
这个星期没有任何更新，打字稿的东西ii有一些

00:12:52.079 --> 00:12:57.600
我添加的其他拉取请求是，这些东西的类型更多

00:12:57.600 --> 00:13:01.519
是的，我将其中的一个与um示例合并

00:13:01.519 --> 00:13:06.959
所以大概明天早上才发货

00:13:06.959 --> 00:13:12.000
谢谢，很酷，所以预算两个支持

00:13:14.240 --> 00:13:18.320
呃，就badge两而言，实际上并没有任何动静，我们仍然

00:13:18.320 --> 00:13:20.320
等着看他们是否会与另一个人一起出来

00:13:20.320 --> 00:13:23.839
具有我们所需功能的主要版本

00:13:23.839 --> 00:13:27.279
嗯，但除此之外，没有任何更新，

00:13:27.279 --> 00:13:30.320
没有任何变化，我们准备继续前进，但嗯

00:13:30.320 --> 00:13:34.240
您知道这是什么，我们需要从badge中实际释放产品以继续前进

00:13:34.240 --> 00:13:36.800
这些功能

00:13:37.760 --> 00:13:41.440
是的，根据目前的状态，我们可能要等到0.9才会着陆

00:13:41.440 --> 00:13:49.839
在接下来的一两周内转移oerc

00:13:52.639 --> 00:13:59.279
很酷的dns加法器解析为js，是的，另外一个

00:13:59.279 --> 00:14:03.920
现在将dns其他解析器合并并发布

00:14:03.920 --> 00:14:08.160
只是我们只有一个待处理的vr b2b而已

00:14:08.160 --> 00:14:15.360
解析拨号盘上的dns另一个，该拨号盘已经在工作，并且插孔

00:14:15.360 --> 00:14:20.000
已经做了第一篇评论，我也在和迈克尔·伯恩斯（Michael Burns）聊天

00:14:20.000 --> 00:14:24.720
来自基础设施团队，因为我们现在我可以连接到

00:14:24.720 --> 00:14:29.440
所有引导节点，但一些txt记录

00:14:29.440 --> 00:14:34.639
仍然有或无法到达的地址或提供证书的地址

00:14:34.639 --> 00:14:39.199
宪章，因为我们将在网络套接字中使用ns4或dns6

00:14:39.199 --> 00:14:41.360
地址，因为浏览器问题

00:14:41.360 --> 00:14:47.519
ssl，但我们仍然在txt中记录了ipa

00:14:47.519 --> 00:14:50.800
使用需要使用Web套接字的地址

00:14:50.800 --> 00:14:54.399
删除，是的，所以我认为我们非常接近

00:14:54.399 --> 00:15:04.560
这个很棒，不可逆转

00:15:04.560 --> 00:15:08.320
是的，我们的工作量很大

00:15:08.320 --> 00:15:11.839
暂时将其移至此处，我们可能会将其与优先级列表一起移至上方，但

00:15:11.839 --> 00:15:15.600
我们仍在制定工作计划，呃，有一堆

00:15:15.600 --> 00:15:18.560
可能需要完成的事情才能着陆

00:15:18.560 --> 00:15:22.720
我们只是在弄清楚那个工作计划是什么

00:15:22.720 --> 00:15:26.160
嗯，因为我们需要处理同时连接之类的问题

00:15:26.160 --> 00:15:29.839
这对多流和各种东西都有影响

00:15:29.839 --> 00:15:34.079
我们正在努力弄清一切

00:15:39.600 --> 00:15:43.440
根本就是其他举措的终结

00:15:43.440 --> 00:15:48.959
嗯，所以继续讨论其他项目，所以设计审查建议

00:15:48.959 --> 00:15:52.800
任何人都可以提出任何建议，我是说我会...

00:15:52.800 --> 00:15:56.720
我正在使用um做的一些事情可能会设计出来

00:15:56.720 --> 00:16:00.079
复习呃，但本周不复习

00:16:01.120 --> 00:16:04.560
哦，我想我会有一个设计或至少一个

00:16:04.560 --> 00:16:10.000
um对修订垃圾收集的拟议行动的审查

00:16:10.000 --> 00:16:14.000
嗯，我还没有，但是这周晚些或下周，我没有

00:16:14.000 --> 00:16:17.440
嗯，我不知道是否有人想为

00:16:17.440 --> 00:16:20.720
当我有一个

00:16:20.720 --> 00:16:25.920
设计方案，但这可能会在这里出现

00:16:25.920 --> 00:16:28.399
下周

00:16:34.160 --> 00:16:37.839
是的，如果你有一个嗯

00:16:37.920 --> 00:16:41.360
您有时间要分配给该时间或组织一个

00:16:41.360 --> 00:16:45.279
会议随时向您展示您的设计建议

00:16:45.279 --> 00:16:49.279
然后我们可以征求名称以加入该行

00:16:49.279 --> 00:17:03.920
很好，我将在本周晚些时候解决这个问题

00:17:03.920 --> 00:17:06.799
如果没有更多的设计评审建议，则继续进行

00:17:06.799 --> 00:17:09.839
阻止者并询问

00:17:16.839 --> 00:17:20.880
问题，我实际上有一个关于

00:17:20.880 --> 00:17:23.280
您之前提到的有关Alex的事情

00:17:23.280 --> 00:17:30.320
websocket嗯，这意味着我们将在服务器上有一个同时用于ipfs和js的api

00:17:30.320 --> 00:17:33.440
讨论的ipfs或以某种方式覆盖

00:17:33.440 --> 00:17:39.360
现有的api，所以方法很好，所以我先做njs ipfs

00:17:39.360 --> 00:17:42.640
嗯，所以我们有话要说

00:17:42.640 --> 00:17:48.160
然后有人可以实现它并使用ibms

00:17:48.160 --> 00:17:51.760
最初的事情基本上是解决流媒体问题

00:17:51.760 --> 00:17:55.600
嗯api，所以只有少数几个，然后回退到http客户端

00:17:55.600 --> 00:17:58.320
为了其他一切，这应该使我们能够运送一些东西

00:17:58.320 --> 00:18:03.120
快速可用，然后，如果每个人都对此感到满意

00:18:03.120 --> 00:18:06.880
我们也可以考虑将其扩展到rpfs

00:18:06.880 --> 00:18:10.559
那只是因为我在js方面的专长而不是去

00:18:10.559 --> 00:18:14.160
是的，我们只是想了解它

00:18:14.160 --> 00:18:21.120
所以就像API的v1一样，不同的流媒体是

00:18:21.120 --> 00:18:25.840
对每个API来说是正确还是对不起？

00:18:25.840 --> 00:18:32.160
是的，所以我们有一个v0 uh http api，所以就像v1 websocket api

00:18:32.160 --> 00:18:36.960
嗯，我认为是的，也许只是零点运行

00:18:36.960 --> 00:18:43.840
不同的端口是一个不同的过程，但是是的，我的意思是

00:18:47.600 --> 00:18:52.320
就像我不能，我看不出同时拥有http和

00:18:52.320 --> 00:18:59.200
像atg api一样的全背式um之外的websocket api不会去任何地方

00:18:59.200 --> 00:19:02.640
就像你知道有很多东西建立在它上面

00:19:02.640 --> 00:19:06.160
就像是您想堆更多东西一样

00:19:06.160 --> 00:19:09.440
还是您想要其他东西

00:19:09.440 --> 00:19:11.600
哦，天哪，我的偏爱使我转向了别的东西，因为那样你就可以

00:19:11.600 --> 00:19:16.080
也可以根据需要打开和关闭它，是的，我不知道

00:19:16.080 --> 00:19:25.840
无论如何，这就像设计的问题

00:19:26.640 --> 00:19:32.799
嗯，继续前进，是的，我添加了一个链接

00:19:32.799 --> 00:19:36.160
嗯，我想开始关于

00:19:36.160 --> 00:19:42.960
我们如何在公共网关上表示dns链接域名

00:19:42.960 --> 00:19:49.600
长话短说，如果你有像文档ipfs io这样的人

00:19:49.600 --> 00:19:53.360
它具有dns链接，您可以从本地网关加载它

00:19:53.360 --> 00:20:01.440
这将是docs.ipfsio.ipns.localhost问题就像在localhost上一样

00:20:01.440 --> 00:20:06.400
很好，因为没有tls，问题是如果您要加载

00:20:06.400 --> 00:20:10.480
它来自公共网关，而不是原始网关

00:20:10.480 --> 00:20:13.679
支持该域名，假设您要从

00:20:13.679 --> 00:20:17.760
网络链接或cloudflare的子域网关

00:20:17.760 --> 00:20:24.240
目前，由于tls证书而无法使用

00:20:24.240 --> 00:20:29.360
如果您想拥有仅适用于通配符tls的证书

00:20:29.360 --> 00:20:34.480
单一级别的dns名称和

00:20:34.480 --> 00:20:37.600
适用于李p2p的cid的作品

00:20:37.600 --> 00:20:43.840
关键问题是如果您想将域名用作标识符

00:20:43.840 --> 00:20:48.000
域名中的点分为多个dns

00:20:48.000 --> 00:20:51.520
标签，这意味着不可能同时给两个

00:20:51.520 --> 00:20:57.120
从技术上讲可能可行，但由于服务条款

00:20:57.120 --> 00:21:04.559
随时随地轻松挖掘这种类型的证书是不可能的

00:21:04.559 --> 00:21:11.280
而且没有可用的多级通配符，所以这个想法是

00:21:11.280 --> 00:21:15.120
在这个问题上列出了不同的想法和优点和缺点

00:21:15.120 --> 00:21:18.159
但我认为最有前途的是想出

00:21:18.159 --> 00:21:21.919
一些简单的编码，我们删除点

00:21:21.919 --> 00:21:27.039
可以容纳在单个标签中，上限为63个字符，但我认为大多数情况下

00:21:27.039 --> 00:21:31.840
足够多的网站，所以如果有人有

00:21:31.840 --> 00:21:35.600
想法只是对这个问题发表评论

00:21:35.600 --> 00:21:39.120
检查或喜欢对提案进行编码，以及是否

00:21:39.120 --> 00:21:43.760
我们想出了一些可能是设计审查建议的可靠建议

00:21:43.760 --> 00:21:48.080
但现在来看一下

00:21:56.799 --> 00:22:00.240
冷却停车场中的其他东西

00:22:07.679 --> 00:22:13.840
岩石上还可以

00:22:16.000 --> 00:22:27.840
gs接口是在正确的等待时间结转的

00:22:28.559 --> 00:22:32.720
好吧，每个人都将得到四分钟的回复

00:22:32.720 --> 00:22:36.000
太棒了，非常感谢大家的光临，这一直是

00:22:36.000 --> 00:22:40.559
2020年11月2日星期一的ipvs uh wikisync。

00:22:40.559 --> 00:22:42.720
放心，那里是一个疯狂的世界，而且只会走

00:22:42.720 --> 00:22:47.440
得到疯狂的可怕，但你知道实际上没有

00:22:47.440 --> 00:22:52.400
都很好玩很高兴在网上见到你再见

