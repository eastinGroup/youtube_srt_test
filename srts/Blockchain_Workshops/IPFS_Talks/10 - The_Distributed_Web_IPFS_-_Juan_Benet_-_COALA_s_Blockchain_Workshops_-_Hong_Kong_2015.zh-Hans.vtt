WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.750 --> 00:00:10.139
你准备好了吧，所以我们实际上需要达成共识，将其纳入我们的议程

00:00:10.139 --> 00:00:13.980
在议程的一个分支上，我们有一个网站和一个已分发的网站

00:00:13.980 --> 00:00:19.349
所以我要与我达成共识的规则对接，以及为什么您要

00:00:19.349 --> 00:00:24.470
分布在互联网上的分布式词上，而我PF把它带走了

00:00:24.470 --> 00:00:30.810
谢谢，谢谢你让我如此迅速地举手，有多少人知道

00:00:30.810 --> 00:00:38.340
ipfs已经很酷了，所以我们想称呼IP fest为

00:00:38.340 --> 00:00:42.360
分布式Web，因为它是制作网站和Web应用程序的一种努力

00:00:42.360 --> 00:00:48.059
在分布式环境中运行ipfs的另一个名称也是永久性网络

00:00:48.059 --> 00:00:55.949
还是merkel网站和ipfs是一种协议，可以升级网络的工作方式，但是我

00:00:55.949 --> 00:01:00.870
教授一般都喜欢博客链，从某种意义上说，它受到了同样的启发

00:01:00.870 --> 00:01:06.119
默克尔树和某种意义上启发了区块链的技术

00:01:06.119 --> 00:01:11.640
我自称也是升级区块链本身的协议的结构

00:01:11.640 --> 00:01:15.720
这个话题是我会谈论网络以及为什么会有一些问题

00:01:15.720 --> 00:01:19.470
在那里，我们正在尝试解决已经讨论过的一些问题

00:01:19.470 --> 00:01:25.110
在这次会议上，我将在某种程度上介绍一下IP FS是什么

00:01:25.110 --> 00:01:29.490
以及其结构如何，我将讨论它与区块链的关系，我将

00:01:29.490 --> 00:01:34.020
得出结论，是否有时间我们尝试讨论如何

00:01:34.020 --> 00:01:38.820
项目本身，因为我认为关于互联网的获取方式还有很多话要说

00:01:38.820 --> 00:01:46.140
今天打补丁，一般情况下主要发展如何发生，所以我喜欢

00:01:46.140 --> 00:01:52.140
从这张图片开始，因为它是不同商品的非常清晰的构造

00:01:52.140 --> 00:01:57.360
各种网络，这是来自保罗·巴兰（Paul Baran），他是

00:01:57.360 --> 00:02:01.680
分组交换的发明者可以追溯到AT＆T成立之初

00:02:01.680 --> 00:02:06.149
交换或像去告诉教练我们正在从交换线路切换到数据包

00:02:06.149 --> 00:02:10.140
互联网之前的交换方式，他将网络描述为

00:02:10.140 --> 00:02:14.879
集中式分散式或分散式，这里的重点是

00:02:14.879 --> 00:02:17.700
集中式网络很容易考虑，因为

00:02:17.700 --> 00:02:20.269
只有一件事可以完成所有工作，还有很多客户

00:02:20.269 --> 00:02:25.260
分散的网络类型的碎片，并获得一些复制或一些

00:02:25.260 --> 00:02:29.220
弹性，但要等到完全分布式和点对点后才能使用

00:02:29.220 --> 00:02:33.599
直到您去到哪里协议在每个地方都相同的时候

00:02:33.599 --> 00:02:39.599
实体运行相同的代码片段，或者在硬件中您知道它们的情况是

00:02:39.599 --> 00:02:44.700
你会得到一种可以以任何方式分解的织物

00:02:44.700 --> 00:02:49.379
并且整个事情仍然会工作，所以当您考虑

00:02:49.379 --> 00:02:55.739
互联网及其组成的协议当然也有共识

00:02:55.739 --> 00:03:01.290
帮助您了解该帮助是如何产生的，以及如何配制出这台出色的机器

00:03:01.290 --> 00:03:05.790
我们拥有的，而这一切实际上都与规范代码和计算机有关，我们

00:03:05.790 --> 00:03:09.750
有很多想法我们可以综合成协议

00:03:09.750 --> 00:03:15.930
协议，我们将其转换为代码，这意味着仅采纳规范中的想法

00:03:15.930 --> 00:03:22.139
并将它们按摩到一个程序中，然后我们运行这些程序，这意味着

00:03:22.139 --> 00:03:26.040
互联网具有极强的延展性，这意味着任何人都可以真正进入

00:03:26.040 --> 00:03:29.430
改变互联网他们所要做的就是提出一系列想法

00:03:29.430 --> 00:03:35.340
足够好地实施它并在成功的情况下将其交付，人们会采用它，并且

00:03:35.340 --> 00:03:39.299
人们会使用它，并且人们最终会将其作为

00:03:39.299 --> 00:03:42.269
互联网，这就是比特币发生的事情，这就是我们今天在这里的原因

00:03:42.269 --> 00:03:47.549
因为某人一个人可能更多，但最有可能一个人出现了

00:03:47.549 --> 00:03:52.069
带着很多想法在代码中写了它的规格，然后运了出去

00:03:52.069 --> 00:03:59.099
而这里的强大之处在于，当您考虑网络之类的内容时

00:03:59.099 --> 00:04:04.069
以及重塑和重塑网络实际工作方式将有多困难

00:04:04.069 --> 00:04:10.349
建议升级整个网络实际上并没有疯狂

00:04:10.349 --> 00:04:14.609
实际上我们已经在做，我们已经有五十到一百多个

00:04:14.609 --> 00:04:22.109
千个网站已经在ipfs上运行，所以这很有趣，因此

00:04:22.109 --> 00:04:24.930
网络和互联网不是一回事，互联网是网络的电线

00:04:24.930 --> 00:04:28.650
是那些计算机中那些电线之上的应用程序

00:04:28.650 --> 00:04:32.460
当您考虑我们今天在

00:04:32.460 --> 00:04:38.280
网络这些应用程序越来越多地统治着我们的生活，我在想如何

00:04:38.280 --> 00:04:44.760
您生成的大量数据进入了其中的某些Web应用程序，而不是您

00:04:44.760 --> 00:04:48.720
通过公司等了解，而不是通过邮件知道，而是通过直接了解

00:04:48.720 --> 00:04:54.150
像您使用HTTP的Web应用程序连接到其他计算机，以及

00:04:54.150 --> 00:04:59.310
发送一些数据并接收一些数据，我们正在谈论您的学习

00:04:59.310 --> 00:05:01.979
我们在谈论您的个人文件，我们在谈论公司文件

00:05:01.979 --> 00:05:06.150
谈论与大多数人进行的所有沟通

00:05:06.150 --> 00:05:09.030
对您而言最重要的是您的个人关系您的工作关系

00:05:09.030 --> 00:05:15.630
您的总体上几乎所有事情都是正确的，而疯狂的事情是，网络拥有

00:05:15.630 --> 00:05:19.710
我们需要解决的一些问题和一些非常关键的问题

00:05:19.710 --> 00:05:27.120
成为一个主要的重大问题，其中一个在此图中被重铸为

00:05:27.120 --> 00:05:29.900
网络虽然是从分布式的角度出发的，但是这种点对点的方式

00:05:29.900 --> 00:05:34.169
每个人都将同时运行HTTP服务器和客户端的想法

00:05:34.169 --> 00:05:38.580
能够彼此共享文档，它已经完全集中，现在我们运行

00:05:38.580 --> 00:05:43.950
浏览器，我们使用来自Web服务器的内容，然后与Web服务器进行通信

00:05:43.950 --> 00:05:49.050
像这些经过细心精心设计的方式一样，但您作为

00:05:49.050 --> 00:05:52.830
网络浏览器并没有真正将数据发布到网络中，这就是一切

00:05:52.830 --> 00:05:58.889
由一组服务器介导，这也意味着如果您要下载数据

00:05:58.889 --> 00:06:02.340
您必须将其从这些服务器中删除，然后它变成一个

00:06:02.340 --> 00:06:06.240
效率非常低下，就像你们所有人现在都开始下载一样

00:06:06.240 --> 00:06:10.710
江南风格，我们甚至可以假设其中有七个或八个链接

00:06:10.710 --> 00:06:15.449
我们之间将浪费大量的带宽，我们应该根据

00:06:15.449 --> 00:06:20.520
制作幻灯片时的视图数约为500 PB

00:06:20.520 --> 00:06:25.380
来自Google服务器的数据，对于所有这些链接，更不用说乘以8

00:06:25.380 --> 00:06:30.090
知道在不同时间，无论网络的直径如何变差

00:06:30.090 --> 00:06:33.479
当您正确考虑离线用例时，如果我们所有人都在合作

00:06:33.479 --> 00:06:39.060
通过网络上的Google文档或某种应用程序

00:06:39.060 --> 00:06:41.970
互联网在我们与互联网崩溃的连接中崩溃了

00:06:41.970 --> 00:06:47.910
除此之外，它只会停止运行Web Web应用程序，而今天这些应用程序并非旨在

00:06:47.910 --> 00:06:53.640
在脱机的情况下继续运行，而不是先脱机，然后在

00:06:53.640 --> 00:06:57.210
我已经决定的时间，还有其他所有非常关键的时间

00:06:57.210 --> 00:07:04.140
现在，如果您的等待时间或带宽有限，人类将无法工作

00:07:04.140 --> 00:07:08.940
高于或低于某些限制，我认为这是不可接受的，我认为

00:07:08.940 --> 00:07:11.700
我们作为工程师需要在这里接手比赛

00:07:11.700 --> 00:07:17.880
并解决这个主要问题，因为当您

00:07:17.880 --> 00:07:22.380
考虑人们如何使用这些东西，我们倾向于设计网络

00:07:22.380 --> 00:07:26.130
像这样的应用程序，您应该知道这种事情应该是最好的

00:07:26.130 --> 00:07:29.040
案例，我们将它们分发给人们，人们爱上了他们，他们

00:07:29.040 --> 00:07:33.420
一直使用它们，然后我们就不停地思考何时会发生什么

00:07:33.420 --> 00:07:37.650
我们考虑的执行模型不是适用于

00:07:37.650 --> 00:07:42.680
他们的日常生活中，我们不会停止思考何时断开连接，

00:07:42.680 --> 00:07:47.610
他们对我们创建的软件的依赖最终导致了伤害

00:07:47.610 --> 00:07:52.230
他们相当多，你知道想像人们所有的设备

00:07:52.230 --> 00:07:57.240
如今越来越流行，您知道有关物联网的想法，等等。

00:07:57.240 --> 00:08:01.290
事物根本无法通过网络共享数据

00:08:01.290 --> 00:08:07.080
通过通常是本机的协议，他们实现了整个想法

00:08:07.080 --> 00:08:09.990
我们都将共享的惊人的理想化文档网络

00:08:09.990 --> 00:08:13.710
通过协作，这些应用程序网络不会扩展到移动设备中

00:08:13.710 --> 00:08:18.000
并且还没有扩展到物联网，所以这是另一个

00:08:18.000 --> 00:08:23.160
网络之类的问题正被这些设备踢走，其价值

00:08:23.160 --> 00:08:28.650
通过将所有东西整合在一起而被带入

00:08:28.650 --> 00:08:31.860
在这里，所以这是我们需要解决的另一个问题

00:08:31.860 --> 00:08:37.080
当您考虑其中的所有数据库时，信息孤岛

00:08:37.080 --> 00:08:40.800
大型社交网络确实是他们的数据，就像是您的

00:08:40.800 --> 00:08:44.910
数据，但实际上并非如此，就像您对它有权利，但他们可以控制它

00:08:44.910 --> 00:08:48.600
当然，您无法将其彼此链接，也无法将其链接至其他片段

00:08:48.600 --> 00:08:53.080
网络上的数据将以这种方式保留

00:08:53.080 --> 00:08:59.320
该网站应该关闭还是将您踢出门，或者采取其他措施，使数据成为

00:08:59.320 --> 00:09:02.290
网络的全部目的是创建相互链接的数据

00:09:02.290 --> 00:09:08.590
如果所有这些都是通过特定实体进行的，则

00:09:08.590 --> 00:09:13.990
数据的实用性和价值取决于我认为人们的那些实体

00:09:13.990 --> 00:09:18.250
最了解埃及人的是他们突然醒来的时候

00:09:18.250 --> 00:09:22.630
早上，他们的互联网已经完全关闭，

00:09:22.630 --> 00:09:26.770
交流消失了人们一直在通过彼此交流

00:09:26.770 --> 00:09:32.470
社交网络等等，突然之间没有任何效果，所以这又是

00:09:32.470 --> 00:09:36.460
在设计通信系统或计算机时的另一个问题

00:09:36.460 --> 00:09:40.290
通讯应用程序，您不会考虑当一个

00:09:40.290 --> 00:09:46.210
政府决定关闭人们的互联网接入，这是一个大问题

00:09:46.210 --> 00:09:50.230
当然，值得庆幸的是，人们部署了网状网络等，而且他们

00:09:50.230 --> 00:09:52.990
设法恢复了互联网访问权限，但这不是给定的

00:09:52.990 --> 00:09:55.710
因此需要构建应用程序来处理这类用例

00:09:55.710 --> 00:10:00.970
需要在局域网中运行的应用程序考虑可以，所以这是一个

00:10:00.970 --> 00:10:04.600
人为灾难，但自然灾害又如何呢？

00:10:04.600 --> 00:10:06.970
所有这些通信基础设施发生的情况是

00:10:06.970 --> 00:10:11.740
地震洪水，你知道超级火山爆炸了，我的意思是

00:10:11.740 --> 00:10:15.700
如果数据中心发生重大灾难，我们该怎么办？

00:10:15.700 --> 00:10:22.180
突然我们没有数据了，一家公司会说抱歉，我们丢失了它

00:10:22.180 --> 00:10:26.560
我是说自然灾害，我们没有考虑到这一点，当然有一些

00:10:26.560 --> 00:10:30.790
公司确实做得足够大，以至于他们确实考虑过

00:10:30.790 --> 00:10:34.810
事情，他们确实跨多个数据中心复制了您的数据，但事实并非如此

00:10:34.810 --> 00:10:39.670
可能像您所相信的那样复制或安全，并且不如您想象的那么安全

00:10:39.670 --> 00:10:44.770
您可能希望它是正确的，我的意思是还存在烧书的问题

00:10:44.770 --> 00:10:52.960
我们一直在批评烧书，因为这种可怕的事情发生在

00:10:52.960 --> 00:10:57.520
社会有点发疯，我们认为看书燃烧是终极的

00:10:57.520 --> 00:11:04.780
危害人类的罪恶我们认为人类是语言和技术的产物

00:11:04.780 --> 00:11:08.040
和知识，这些是与众不同的东西

00:11:08.040 --> 00:11:15.220
但是有些社会却在烧书，我们认为这就像事物的特征

00:11:15.220 --> 00:11:20.020
真的非常糟糕，但是今天我们一直在烧书

00:11:20.020 --> 00:11:24.640
每天，只要您移动并占用网络，我们每天都会烧书，并且

00:11:24.640 --> 00:11:28.990
一个URL不再指向曾经拥有该链接的人的位置，现在

00:11:28.990 --> 00:11:32.890
为他们看不到这是一本为他们燃烧的书

00:11:32.890 --> 00:11:35.800
他们可能再也找不到文件了

00:11:35.800 --> 00:11:41.110
访问它们，他们甚至可能没有进行完全有效的搜索，因此至关重要的是

00:11:41.110 --> 00:11:45.190
在网络上创建理想化文档概念的关键点

00:11:45.190 --> 00:11:51.070
相互链接有问题，这些文档是计算机上的文档，并且

00:11:51.070 --> 00:11:55.420
您可以刻录这些链接，也可以刻录这些计算机，因此每个

00:11:55.420 --> 00:12:01.240
关键的关键问题，希望对您有所启发

00:12:01.240 --> 00:12:07.120
这些问题的紧迫性以及为什么升级网络如此重要，所以ipfs是

00:12:07.120 --> 00:12:11.380
使分发服务器中的Web工作脱机工作的该项目首先是

00:12:11.380 --> 00:12:16.540
更加永久安全，使用户在智能中四处移动轮廓

00:12:16.540 --> 00:12:20.380
方式，当然会更快，因为如果不加快速度，没人会

00:12:20.380 --> 00:12:24.970
实际上使用它，这一切都是先尝试使其更快，然后再进行。

00:12:24.970 --> 00:12:30.460
一会儿，所有其他属性都掉了，我认为这很酷，这是一个

00:12:30.460 --> 00:12:35.110
超流星传输协议与HTTP相同，目标是匹配

00:12:35.110 --> 00:12:38.740
界面完全不需要改变什么应用程序

00:12:38.740 --> 00:12:43.060
完全没有什么不同，您仍然应该能够运行所运行的任何内容

00:12:43.060 --> 00:12:47.800
IP FS上的HTTP，只需进行很少的修改或不做任何修改，有些事情将变得更难

00:12:47.800 --> 00:12:50.710
当然，就像更复杂的Web应用程序一样，

00:12:50.710 --> 00:12:55.990
翻译，但您会获得一些非常有趣的属性，据我所知是

00:12:55.990 --> 00:13:01.330
回顾过去25年的发展历程中的产品

00:13:01.330 --> 00:13:05.920
网络已创建，并考虑网络的外观

00:13:05.920 --> 00:13:12.460
今天，如果蒂姆·伯纳斯·李（Tim berners-lee）发明了

00:13:12.460 --> 00:13:15.820
网络，因此我们从一开始就提出了很多好主意

00:13:15.820 --> 00:13:19.450
网络的发明，如果以这种方式制造，它将是什么样子

00:13:19.450 --> 00:13:22.300
您可能会想，因为我们在区块链崇拜中，为什么不去

00:13:22.300 --> 00:13:25.390
那里为什么区块链不像这口井一样

00:13:25.390 --> 00:13:29.110
比特币和区块链没有提出默克尔链接，这有点像

00:13:29.110 --> 00:13:36.580
较旧的想法，它本来可以做到的，但是它已经完成了，所以这些

00:13:36.580 --> 00:13:43.300
协议种类分离到堆栈中，网络当然很棒

00:13:43.300 --> 00:13:47.620
我们知道FS的应用程序平台是一种出色的协议，可确保

00:13:47.620 --> 00:13:53.050
我们有一种安全的命名方式可以使我们完整了解版本

00:13:53.050 --> 00:13:56.890
数据和默克尔链接的版本控制，这是II了解它们的地方

00:13:56.890 --> 00:14:01.270
它们甚至更老，但我了解了它们和GUID，当然还有BitTorrent

00:14:01.270 --> 00:14:04.750
通过网络非常正式地移动内容的这种惊人方式

00:14:04.750 --> 00:14:09.550
HDS允许我们查找内容，整个内容的设计使得

00:14:09.550 --> 00:14:15.010
它可以在任何网络上工作，所以这不是真正的HTTP HTTP，您可以使其工作在

00:14:15.010 --> 00:14:19.390
任何传输方式，但通常大多数Web服务器只是不这样做，而只是

00:14:19.390 --> 00:14:23.620
通过TCP工作，因此如果您想通过蓝牙运行网络，

00:14:23.620 --> 00:14:26.860
通过音频或类似方式运行网络，您必须非常努力地工作

00:14:26.860 --> 00:14:31.720
这样做意味着没有人做，所以堆栈有点中断

00:14:31.720 --> 00:14:36.700
在这些部分中，我们将其称为“点燃p2p”，这是一组

00:14:36.700 --> 00:14:40.000
许多其他项目可以使用的协议，并且实际上是核心

00:14:40.000 --> 00:14:46.020
我们正在为奇迹狗或奇迹网或IP LD昵称的部分

00:14:46.020 --> 00:14:53.110
这是该协议的核心部分，其想法是提出一个

00:14:53.110 --> 00:14:56.740
对于所有这些分布式数据结构有意义的核心格式

00:14:56.740 --> 00:15:00.940
所有这些希望通过网络通过Web进行交互的分布式系统

00:15:00.940 --> 00:15:06.100
网络和地址内容彼此之间并四处移动，因此

00:15:06.100 --> 00:15:10.000
堆栈这里有一组协议，您可以看到

00:15:10.000 --> 00:15:13.960
ipfs特定，但重点是您可以将它们换出，可以

00:15:13.960 --> 00:15:20.670
您实际上可以使用HTTP交换ipfs，也可以使用其他类型的

00:15:20.670 --> 00:15:26.440
像Web RTC或UTP之类的传输方式，并且您可能拥有一个IP版本

00:15:26.440 --> 00:15:29.680
完全在tor和NTP上工作的攻击，当您

00:15:29.680 --> 00:15:32.110
考虑保护隐私和安全

00:15:32.110 --> 00:15:41.980
在某种意义上说，在人们的网络上，这就是数据IP的互联网是如此的好

00:15:41.980 --> 00:15:45.399
这个想法是因为它围绕IP协议创建了一条瘦腰，我们正在

00:15:45.399 --> 00:15:49.540
同样的事情，但对于数据本身，所以我们想像的是瘦腰

00:15:49.540 --> 00:15:55.600
定义这些分布的数据结构意味着什么

00:15:55.600 --> 00:15:59.320
不只是数据，还只是数据结构，这是您需要一种表达数据的方法

00:15:59.320 --> 00:16:03.370
就像今天别人表达他们的方式一样，如果您

00:16:03.370 --> 00:16:07.860
曾经用过git的人，你知道这是默克尔树或类似的东西，而我

00:16:07.860 --> 00:16:13.600
如果您听说过区块链，将无法完全解释默克尔树是什么

00:16:13.600 --> 00:16:18.160
整个想法是，您有一些块，并且您有指向的哈希

00:16:18.160 --> 00:16:22.180
上一个区块，并创建了所有这些奇迹链接链

00:16:22.180 --> 00:16:26.190
链接的确是我们关心的属性，但关键是

00:16:26.190 --> 00:16:30.910
得到和一大堆其他协议具有这些不同的树，所有的

00:16:30.910 --> 00:16:34.690
这些不同的独立信息库，甚至是比特币和

00:16:34.690 --> 00:16:40.360
区块链沙皇这棵巨大的默克尔树一直像这条巨大的链

00:16:40.360 --> 00:16:45.730
你有这些与默克尔的联系，我是默克尔森林教授的重点

00:16:45.730 --> 00:16:51.459
是通过提出

00:16:51.459 --> 00:16:56.649
它们之间的链接方式相同，因此您可以想到比特币并获取和

00:16:56.649 --> 00:17:02.470
BitTorrent以及诸如此类作为整个系统的同一系统的一部分

00:17:02.470 --> 00:17:06.429
基本上像这样，这应该是网络链接的一种方式

00:17:06.429 --> 00:17:09.730
在这些东西之间，我们只是使它变得非常酷

00:17:09.730 --> 00:17:13.419
系统和重要系统可以继续做自己最擅长的事，但

00:17:13.419 --> 00:17:18.819
仍然保持链接能力，当您今天考虑块x时，您还可以

00:17:18.819 --> 00:17:23.470
考虑一下以太坊也正在崛起，这是另一个巨大的区块链权利

00:17:23.470 --> 00:17:28.380
因此，您可以看到我们正在帮助建立的巨大默克尔森林，

00:17:28.380 --> 00:17:32.710
再次，重点是升级互联网以这种方式升级网络

00:17:32.710 --> 00:17:38.860
我们使开发人员的生活更轻松的地方，因为最终，如果您

00:17:38.860 --> 00:17:43.300
改进，您设法使其变得非常复杂

00:17:43.300 --> 00:17:47.300
对于成功的开发人员而言，这很容易，这就是您的方式

00:17:47.300 --> 00:17:51.770
如果您提出一个协议及其真正的协议，则可以在网络上取得进展

00:17:51.770 --> 00:17:55.390
很好，但是就像您的实现对开发人员没有帮助或友好

00:17:55.390 --> 00:17:59.150
谢谢你再试一次，只是不会，不会移动针头，这是

00:17:59.150 --> 00:18:04.880
我必须等到别人设法把它降下来，所以我

00:18:04.880 --> 00:18:07.070
提到我认为是斯拉夫区块链，这是因为

00:18:07.070 --> 00:18:10.730
区块链就像其他任何一个一样，都是AAA默克尔链接数据结构

00:18:10.730 --> 00:18:14.870
意味着您可以将它们完全放在ipfs上，并在您认为时用作传输工具

00:18:14.870 --> 00:18:19.010
再次关于区块链，您拥有带有一些数据的区块，并且您知道您

00:18:19.010 --> 00:18:22.850
还有另一个指向上一个的块，这里的关键部分是

00:18:22.850 --> 00:18:28.280
有一些链接是右哈希值，因此当您

00:18:28.280 --> 00:18:32.450
散列，您将获得包含在块中的值

00:18:32.450 --> 00:18:39.050
右边，这是一个默克尔链接，您可以检查

00:18:39.050 --> 00:18:42.680
通过它的特性形成的巨大链条当然会产生斑点

00:18:42.680 --> 00:18:45.950
这额外的东西，或者至少是特别是比特币区块链拥有的东西

00:18:45.950 --> 00:18:52.070
这是您尝试执行此工作证明以找出谁该做的事的额外内容

00:18:52.070 --> 00:18:56.330
在特定目标难度下解决散列问题

00:18:56.330 --> 00:19:00.500
依此类推，但这对ipfs来说并不重要，关键是它是一个

00:19:00.500 --> 00:19:07.820
当您更深入地研究区块链时，它可以传输奇迹般的数据结构

00:19:07.820 --> 00:19:11.750
指向一组交易，对，这仍然是默克尔

00:19:11.750 --> 00:19:16.340
链接和尚未包含的事务都在该池中

00:19:16.340 --> 00:19:20.480
某个地方，延伸链条的过程正在进行交易

00:19:20.480 --> 00:19:25.100
是有效的，并将它们放在块中，并扩展了链，这是什么

00:19:25.100 --> 00:19:29.210
当您想要包含链上的数据时，就会发生这种情况

00:19:29.210 --> 00:19:34.220
不适合我们在整个会议上讨论了包括

00:19:34.220 --> 00:19:38.090
区块链中的合同，记录和重要文件等

00:19:38.090 --> 00:19:42.440
但您实际上无法通过交易将其放入其中，因为您没有

00:19:42.440 --> 00:19:46.730
希望每个节点都必须存储它，以便您执行相同的操作

00:19:46.730 --> 00:19:52.850
区块链所做的事情，您将哈希值作为链接权放到了它，但是这些

00:19:52.850 --> 00:19:56.450
这些这些内容开始是各种各样的东西

00:19:56.450 --> 00:19:58.779
就像法律记录合同代码一样

00:19:58.779 --> 00:20:03.919
我已经看到了通过比特币发送的电子邮件几乎什么都可以，但是会发生什么

00:20:03.919 --> 00:20:07.970
使用这些链接，您将无法单击像这样的链接，其中仅包含一些哈希

00:20:07.970 --> 00:20:11.179
对，所以现在您必须使用该哈希值，并弄清楚它还有什么其他系统

00:20:11.179 --> 00:20:15.500
属于，所以顺便说一句，只有这些文件变得越来越大，例如

00:20:15.500 --> 00:20:19.010
您已经看到了一些大量的档案文件，因为您需要时间戳记

00:20:19.010 --> 00:20:22.970
重要的细节，但问题在于您如何确保所有

00:20:22.970 --> 00:20:28.669
如果您要在其中放置http链接，则其中的内容仍可寻址

00:20:28.669 --> 00:20:33.169
当然，您不会得到想要的任何完整性

00:20:33.169 --> 00:20:35.870
任何人都可以更改服务器或其他东西，文件将是

00:20:35.870 --> 00:20:40.760
与众不同，再次回顾那些不记得它是如何工作的人的HTTP

00:20:40.760 --> 00:20:45.169
你有这个互联网，你有一堆服务器，如果你想

00:20:45.169 --> 00:20:49.669
一个特定的文件，您必须与特定的服务器进行对话才能将其取回，或者

00:20:49.669 --> 00:20:53.419
特定的服务器集，即使网络中有一堆其他计算机

00:20:53.419 --> 00:20:56.630
有没有关系，您必须去与特定的人交谈，并且有

00:20:56.630 --> 00:20:58.580
这是有原因的，当时

00:20:58.580 --> 00:21:02.899
但也许现在不再如此，如果您想放入区块链，

00:21:02.899 --> 00:21:07.490
不要这样做，您要放置内容的哈希值，所以我们为什么不构建一个系统

00:21:07.490 --> 00:21:12.440
只是通过哈希解决所有问题，是的，已经有一些，但重点是

00:21:12.440 --> 00:21:16.490
这就是为什么我们不让网络本身以这种方式工作，这就是我自称的

00:21:16.490 --> 00:21:24.049
关于使Web本身可以与基于哈希的文件系统一起使用，因此

00:21:24.049 --> 00:21:27.320
这张图片，您得到一张图片，任何具有内容的音符都可以分布

00:21:27.320 --> 00:21:31.970
提供给您的内容，因为同样，您无需信任，这与您是同一回事

00:21:31.970 --> 00:21:34.220
get和baturin您将获得的同一事物和您得到的同一事物

00:21:34.220 --> 00:21:39.769
在比特币区块链中等等，好处是它是一个文件系统

00:21:39.769 --> 00:21:43.639
就像我们在谈论存储岩石记录和文档一样好，

00:21:43.639 --> 00:21:47.750
目录等，并且分辨率完全按照您期望的那样工作

00:21:47.750 --> 00:21:51.049
在文件系统中工作的方式与您期望它在网络上工作的方式相同

00:21:51.049 --> 00:21:56.510
您可以拥有指向其他对象的目录，依此类推

00:21:56.510 --> 00:22:00.740
究竟是什么获得数据，以及数据为何如此成功的原因当然是这些

00:22:00.740 --> 00:22:08.210
奇迹链接，以及人们是否以为您知道它的作用以及原因

00:22:08.210 --> 00:22:11.539
是成功的，整个想法是，以前有一个版本控制

00:22:11.539 --> 00:22:15.950
叫做sen，在此之前它们是CVS，以此类推，模型是

00:22:15.950 --> 00:22:19.309
拥有一台服务器来维护您的版本，每个人都可以集中管理

00:22:19.309 --> 00:22:22.580
会与该服务器通信，因此要进行任何更新，您都必须将其发布

00:22:22.580 --> 00:22:27.169
更新到该服务器的服务器，如果它不是很健壮或有弹性，

00:22:27.169 --> 00:22:31.309
您剪切了任何一个链接，希望您不会和它说话，所以您

00:22:31.309 --> 00:22:34.820
如果中央服务器出现故障，您将无法进行任何更新

00:22:34.820 --> 00:22:38.989
当然，一切都瓦解了，它的改进是使整个事情变得完整

00:22:38.989 --> 00:22:42.409
首先分发使其脱机，这与比特币所做的相同

00:22:42.409 --> 00:22:47.989
从某种意义上说，该网络中的任何节点都能够维护自己的

00:22:47.989 --> 00:22:53.269
版本并相互交谈，因此如果网络的一部分出现故障，则不会

00:22:53.269 --> 00:22:56.929
不管其他人仍然可以工作，如果您在一起时会同步回来，如果

00:22:56.929 --> 00:23:00.409
服务器宕机完全没有关系，您仍然可以工作并与每个人交谈

00:23:00.409 --> 00:23:06.440
其他这是我自称对整个网络所做的事情，我们正在移动网络应用程序

00:23:06.440 --> 00:23:10.549
网站，文档和档案，以及您可以触摸的所有内容

00:23:10.549 --> 00:23:17.629
网络以这种方式工作，这就是我所说的超高速，因为如果

00:23:17.629 --> 00:23:21.559
您下载一些东西，然后在本地获取，并且拥有从未拥有过的哈希值

00:23:21.559 --> 00:23:24.559
必须再次下载它，您克服了最大的问题是速度

00:23:24.559 --> 00:23:29.539
轻巧，因此您可以对内容移动方式有不同的思考

00:23:29.539 --> 00:23:35.570
通过网络，它可以让您抢先移动东西以拥有缓存

00:23:35.570 --> 00:23:43.369
等等，所以ipfs正在创建这个庞大的网格

00:23:43.369 --> 00:23:47.659
经过身份验证的网格，其中任何数据都可以指向任何其他数据

00:23:47.659 --> 00:23:51.019
通过默克尔链接的数据，这里的关键是您不是

00:23:51.019 --> 00:23:55.340
指向我们指向可能会更改您指向的HTTP服务器

00:23:55.340 --> 00:23:59.029
加密哈希，这意味着您确切知道自己是哪份文件

00:23:59.029 --> 00:24:02.299
指的是这里每个人都想要的区块链之外的东西，或者你想要的

00:24:02.299 --> 00:24:05.599
我听过人们想要从区块链中取出的一些东西

00:24:05.599 --> 00:24:08.989
在整个区块链研讨会上，人们谈论很多感兴趣的人

00:24:08.989 --> 00:24:14.629
在区块链中，不是来自您知道的聪明的反常，而是来自一种方式

00:24:14.629 --> 00:24:18.590
存储数据与获得相同类型的属性是一回事

00:24:18.590 --> 00:24:25.340
在这里，所以这是一种不同的方式

00:24:25.340 --> 00:24:29.000
考虑如何存储信息，您可以将其的重要属性

00:24:29.000 --> 00:24:32.030
区块链是正确的时间戳，所以您可以考虑将

00:24:32.030 --> 00:24:36.470
ipfs上的数据，并从ipfs中获取路由散列，然后进行时间戳记

00:24:36.470 --> 00:24:40.610
他们进入区块链，反之亦然，您可以将区块链本身和

00:24:40.610 --> 00:24:43.760
实际上，将所有这些都放在ipfs上

00:24:43.760 --> 00:24:48.950
被设计为完全依靠我们IP的链，因为它使人们

00:24:48.950 --> 00:24:52.400
生活变得更轻松，就像您不必工作来做所有这些点对点的工作

00:24:52.400 --> 00:24:55.970
很难，所以当您想到今天的网站时，它们的工作方式就像

00:24:55.970 --> 00:24:59.330
正确的是，有一堆相互通信的服务器，并且

00:24:59.330 --> 00:25:03.020
当然也有客户，每个人都有一个很大的数据库，数据很友好

00:25:03.020 --> 00:25:06.230
就像在数据库中一样，仅此而已，您就可以通过这些方式互相交谈

00:25:06.230 --> 00:25:11.270
连线，但问题是所有这些数据实际上都是相互关联的，但

00:25:11.270 --> 00:25:15.260
这些链接再次引用了供认模型中的服务器

00:25:15.260 --> 00:25:20.660
翻转它的头部，说让数据互相连接，依此类推

00:25:20.660 --> 00:25:24.140
当然，如果有人记得链接的数据，

00:25:24.140 --> 00:25:28.580
语义网这是相同的想法，就像让数据彼此连接一样

00:25:28.580 --> 00:25:31.970
但是，一个问题是链接数据仍然依赖于那些链接是

00:25:31.970 --> 00:25:38.090
仍然依赖那些服务器，大多数情况下仍然不是所有链接都可以解决

00:25:38.090 --> 00:25:44.000
数据是通过这种方式寻址的，但是大多数链接数据是通过以下方式寻址的

00:25:44.000 --> 00:25:47.300
这些位置，因此使用起来非常困难，因为

00:25:47.300 --> 00:25:51.350
这些链接可能会断开，您不想一次查询20台服务器，如此等等

00:25:51.350 --> 00:25:54.110
您真正想要的是类似的东西或可以在其中使用的区块链

00:25:54.110 --> 00:25:58.550
将全部数据移到一个位置甚至完全移到一个位置

00:25:58.550 --> 00:26:04.370
脱机，并且仍在运行中的所有内容，是的，这是关于D的

00:26:04.370 --> 00:26:07.580
优先考虑服务器和网站，然后才真正思考

00:26:07.580 --> 00:26:12.110
有关数据的知识，并且当您考虑Web应用程序数据时就知道了

00:26:12.110 --> 00:26:16.430
可以考虑一下庞大的内容图，而不是让您

00:26:16.430 --> 00:26:23.300
将您的Web应用程序设计为存储在类似模型中的内容

00:26:23.300 --> 00:26:28.160
通过续集创建一个merkel对象，其中的链接

00:26:28.160 --> 00:26:33.650
您在这些对象之间相互链接是默克尔链接，该链接允许

00:26:33.650 --> 00:26:37.430
您将获得所有这些其他属性以及所有密码验证

00:26:37.430 --> 00:26:42.200
依此类推，您还可以对所有内容进行签名，然后再获得额外的收入

00:26:42.200 --> 00:26:46.550
完整性检查，这是您可以看到谁生成了这些东西，这真是令人惊讶

00:26:46.550 --> 00:26:50.870
如果您要创建用户所在的任何类型的分布式网站，则很有用

00:26:50.870 --> 00:26:54.650
创建内容并为您移动内容，您可以发力

00:26:54.650 --> 00:26:57.500
像这样的法律记录，您可以将默克尔的合同与

00:26:57.500 --> 00:27:01.790
签名，然后签名的内容就变成了指向这些内容的指针

00:27:01.790 --> 00:27:05.750
签名，例如法律协议，或者您知道我的法律协议

00:27:05.750 --> 00:27:09.080
可能只是指向一大堆已签订的合同，然后我可以

00:27:09.080 --> 00:27:12.260
沿着那条路线，每隔一次将其时间戳记入比特币区块链

00:27:12.260 --> 00:27:19.330
并以这种方式保持记录，所以它是巨大的网格

00:27:19.330 --> 00:27:23.030
真正意义在于创建此分布式网络

00:27:23.030 --> 00:27:27.710
数据可以相互链接，并通过默克尔链接进行链接，您可以移动

00:27:27.710 --> 00:27:34.460
看起来很容易，但是看起来很像

00:27:34.460 --> 00:27:39.950
障碍在于采用新方法，例如基本匹配所有

00:27:39.950 --> 00:27:42.620
人们期望您如何制作网站和网络的界面

00:27:42.620 --> 00:27:47.620
应用程序，但是通过这种分布式的工作使它成为一个整体

00:27:47.620 --> 00:27:52.370
很酷，所以希望能解释我自称是关于让我

00:27:52.370 --> 00:27:55.880
查看时间，看看效果如何超级好

00:27:55.880 --> 00:27:59.810
晚了，我会花几分钟告诉您有关项目本身的信息，因为我

00:27:59.810 --> 00:28:07.390
认为这很重要，所以这开始了，因为我想建立一个处女

00:28:07.390 --> 00:28:11.720
数据集软件包管理器，所以我想让科学家更容易移动

00:28:11.720 --> 00:28:15.860
围绕数据，同时我也想做一个类似的

00:28:15.860 --> 00:28:19.940
我可以与每个人交谈的某种分布式代理的存储层

00:28:19.940 --> 00:28:23.720
其他，但这有点像次要目标，而当我进入时

00:28:23.720 --> 00:28:28.100
合并get和BitTorrent我意识到，因此您实际上可以沉迷于

00:28:28.100 --> 00:28:32.240
重组数据结构的工作方式以制定更好的协议和使用

00:28:32.240 --> 00:28:38.120
取而代之的是，当我开始对此进行越来越多的思考时，它变得很明显

00:28:38.120 --> 00:28:42.080
这对网络本身产生了巨大的影响，只是在某种程度上

00:28:42.080 --> 00:28:49.280
事实上，这很有趣，与

00:28:49.280 --> 00:28:53.059
区块链既可以作为一种方式

00:28:53.059 --> 00:28:57.379
提供到所有块的链接，并将其作为放置块的一种方式

00:28:57.379 --> 00:29:02.450
链本身，因此它使实现更容易，但同时也使

00:29:02.450 --> 00:29:06.019
很容易在区块链之间进行对话，所以，如果您有来自

00:29:06.019 --> 00:29:10.340
比特币交易成为以太坊交易，您可以通过IP进行交易

00:29:10.340 --> 00:29:13.940
FS，它会更容易，因为相同类型的链接又可以了

00:29:13.940 --> 00:29:19.370
创造一条瘦腰，每个人都可以有一种格式化的方式

00:29:19.370 --> 00:29:23.210
数据，如果我们遵循一件事，那么一切都可以与每一个人对话

00:29:23.210 --> 00:29:27.700
就像我们不破坏网络，

00:29:27.700 --> 00:29:32.179
所以这当然是所有开源的，因为所有重要的协议都应该

00:29:32.179 --> 00:29:36.710
是的，而且你知道在这个背后有一个庞大的社区

00:29:36.710 --> 00:29:40.970
开始了，但是甚至像我这样的想法也出现在我眼前

00:29:40.970 --> 00:29:44.869
几十年来的成果，以及很多真正的思想和工程学成果

00:29:44.869 --> 00:29:50.509
人，我的任务主要是将思想融入到生产好的产品中

00:29:50.509 --> 00:29:56.389
匹配所有部分的界面，并且又有一个大型社区

00:29:56.389 --> 00:30:05.840
它已经有大量的用户，成百上千的贡献者，而且

00:30:05.840 --> 00:30:09.889
有点牵引力，所以我们将项目描述为Alpha，但是

00:30:09.889 --> 00:30:11.749
人们在各地使用生产

00:30:11.749 --> 00:30:15.590
就像我说的50到10万个网站

00:30:15.590 --> 00:30:19.159
不同的区块链或比特币或以太坊相关公司

00:30:19.159 --> 00:30:25.789
最近使用它的是大型类似网络提供商

00:30:25.789 --> 00:30:29.179
具有庞大安装基础的附加存储设备，这将很有趣

00:30:29.179 --> 00:30:34.369
当它上网时，它获得了很大的牵引力，并且真正地移动了

00:30:34.369 --> 00:30:41.869
快速这很棒，但同时也很重要，所以

00:30:41.869 --> 00:30:46.639
有点像退后一步，然后思考一下这个项目的进展情况

00:30:46.639 --> 00:30:53.659
转发和出售有关如何这些什么有点点相同

00:30:53.659 --> 00:30:57.649
在过去有很多其他尝试这样做的项目中，它取得了成功

00:30:57.649 --> 00:31:01.759
不能引起很多兴趣，我认为这对于那些人来说至关重要

00:31:01.759 --> 00:31:04.789
可能想要创建不同协议并获得其他人的人

00:31:04.789 --> 00:31:09.050
做出贡献并帮助推动他们

00:31:09.050 --> 00:31:13.490
仔细考虑整个事情并思考如何发展是至关重要的

00:31:13.490 --> 00:31:17.030
与其他项目之间的接口以及人们的每件事

00:31:17.030 --> 00:31:20.720
接触，如果你能概括和概括，就像

00:31:20.720 --> 00:31:23.690
一遍又一遍地做这件事，你最终会得到非常非常重要的东西

00:31:23.690 --> 00:31:28.220
所有这些小巧而非常简单的东西，将使其可用于

00:31:28.220 --> 00:31:32.210
其他人，但随后您会得到一些切实可行的东西

00:31:32.210 --> 00:31:38.870
人们可以落后，所以我认为很多时候人们不这样做，而且

00:31:38.870 --> 00:31:45.320
我成立了一家公司来建立这个公司，因为我想拥有一个

00:31:45.320 --> 00:31:49.550
独立小组，我认为这是另一件事，很重要

00:31:49.550 --> 00:31:52.760
当您想到比特币时，这些协议是如何出现的

00:31:52.760 --> 00:31:56.900
匿名把它放在那里你对它的想法是由

00:31:56.900 --> 00:32:00.560
当您想到BitTorrent时，内核黑客便不是一家公司

00:32:00.560 --> 00:32:05.270
一个人，等等，网络基础设施的关键部分是

00:32:05.270 --> 00:32:10.640
从各种各样的随机地方涌现出来，因为产生了真正的好主意

00:32:10.640 --> 00:32:16.520
人们有肚子去执行它们，建造它们并部署它们，但是

00:32:16.520 --> 00:32:21.590
我要建立的是一个实验室，它是完全开源的

00:32:21.590 --> 00:32:25.400
不管他们属于哪个组织，都可以在一起工作

00:32:25.400 --> 00:32:32.120
就像IETF的强大力量一样，可以采取行动

00:32:32.120 --> 00:32:37.370
看看整个互联网堆栈的时刻，想一想什么缺失了什么

00:32:37.370 --> 00:32:42.560
添加然后执行此操作真的很重要，这就是事实

00:32:42.560 --> 00:32:47.870
ipfs背后的努力正在变成建立一个我们称之为的实验室

00:32:47.870 --> 00:32:53.980
协议实验室，就像特斯拉在协议栈中开会一样

00:32:53.980 --> 00:32:57.830
但是如果您回到这张幻灯片，了解计算机上的规范代码

00:32:57.830 --> 00:33:04.910
我们今天面临的问题是，存在大量研究，这很棒

00:33:04.910 --> 00:33:07.940
意味着有如此多的研究和如此之多的好主意真是太神奇了，但是

00:33:07.940 --> 00:33:13.280
我经常看到的问题是，我什至可以Mia，就像我拥有25年之久

00:33:13.280 --> 00:33:18.180
光明的未来，我们就像人类一样，就像我们的外星科技一样

00:33:18.180 --> 00:33:21.480
问题是我们今天所说的很多东西都已经解决了

00:33:21.480 --> 00:33:27.510
几十年前已经被学者所接受，为什么我们今天看不到这些结果

00:33:27.510 --> 00:33:33.630
这是因为此漏斗破裂了，是因为当我们从研究转向

00:33:33.630 --> 00:33:37.440
发展之间的差距很大，大多数学者想出的都非常好

00:33:37.440 --> 00:33:41.130
想法并转到下一篇论文，但实际上很少有人花时间

00:33:41.130 --> 00:33:46.110
将那些想法实施到系统中，然后再发展

00:33:46.110 --> 00:33:50.790
从开发到部署，都有巨大的空间

00:33:50.790 --> 00:33:56.310
筛选，因为实际上只有很少的东西开发得足够好

00:33:56.310 --> 00:33:59.700
人们可以实际使用并且将实际使用的工程系统，以及

00:33:59.700 --> 00:34:03.780
甚至，即使在您开发了某些东西之后，即使在部署它之后，如果

00:34:03.780 --> 00:34:07.380
如果您不怎么想，就不会非常仔细地思考如何启动它

00:34:07.380 --> 00:34:11.100
仔细考虑如何让人们使用Kindle来点燃它

00:34:11.100 --> 00:34:14.700
根本不会发生，您将再次在泥土中死亡，所以等到它消失时

00:34:14.700 --> 00:34:19.760
人们对它的使用已经被这些巨大的过滤器过滤了很多次

00:34:19.760 --> 00:34:26.190
我们几乎一无所获的可能性，所以我敦促大家

00:34:26.190 --> 00:34:30.090
提出并讨论了您知道要解决的技术问题的问题

00:34:30.090 --> 00:34:33.990
阅读更多文学作品，因为它只是充满了您所得到的答案

00:34:33.990 --> 00:34:37.679
寻找它只是没有以您可以

00:34:37.679 --> 00:34:42.929
使用，并专注于此，这有点像我正在构建协议

00:34:42.929 --> 00:34:49.620
实验室将成为可以解决此问题的研发和部署机构

00:34:49.620 --> 00:34:55.260
过滤到某种程度，所以无论如何这是IP FS项目与它之间的关系

00:34:55.260 --> 00:35:00.530
区块链等等谢谢谢谢

00:35:00.600 --> 00:35:03.780
你只是在那里呆了一会儿

00:35:03.780 --> 00:35:08.070
我有一些技术可以向您介绍一些可能对我确实想要的最大帮助的技术

00:35:08.070 --> 00:35:14.880
留出一些时间来提问，也许有人问一个问题，

00:35:14.880 --> 00:35:17.400
没问过你们两个都问过没问过

00:35:17.400 --> 00:35:24.320
抱歉，MC特权和我的锤子，我

00:35:25.130 --> 00:35:29.250
看起来还没，我想只用ipfs玩了一下

00:35:29.250 --> 00:35:34.980
一个有趣的项目，我的问题是，它看起来非常适合静态内容

00:35:34.980 --> 00:35:38.550
如果我喜欢Twitter，那么动态会议又如何呢？

00:35:38.550 --> 00:35:44.400
 Twitter和Twitter即时生成了我的新闻提要，是的，所以如此

00:35:44.400 --> 00:35:51.180
我不知道内容，是的，我们事先不知道哈希，所以我会

00:35:51.180 --> 00:35:55.890
用“先得到”来描述它，也许这很有意义，它有一个整体

00:35:55.890 --> 00:35:58.980
一堆里面的静态内容和一个分支指针就可以移动了

00:35:58.980 --> 00:36:03.960
毫无意义的可变性，所以您有大量的静态

00:36:03.960 --> 00:36:07.650
内容，但是您需要做的就是获得可变性，这是您需要一个指针

00:36:07.650 --> 00:36:13.320
可以移动到不是不变的内容指针的地方，而是可变的

00:36:13.320 --> 00:36:18.960
指针，并通过命名得到名称，我们将其命名为是，但我得到了分支

00:36:18.960 --> 00:36:23.790
这就是我们称呼他们的名字，因此，如果我们回到像幻灯片一样的方式

00:36:23.790 --> 00:36:31.710
关于我们要去的链接，您看到那里我有ipfs斜线是一个哈希

00:36:31.710 --> 00:36:35.880
根据文件的内容进行哈希处理，然后在上方称为/ IP

00:36:35.880 --> 00:36:41.580
 NS代表名称空间，其中有一个DNS名称，例如example.com，这意味着

00:36:41.580 --> 00:36:45.720
那里有一个DNS记录，该记录具有最新版本的帮助

00:36:45.720 --> 00:36:48.960
指向该内容的税务记录当然不是您的最佳解决方案

00:36:48.960 --> 00:36:52.680
不想等待DNS解析获得正确的更新，而希望它减少

00:36:52.680 --> 00:36:56.340
理想情况下小于一秒

00:36:56.340 --> 00:37:01.410
你可以通过另一层来实现这一点，在这里我没有显示，但是那是

00:37:01.410 --> 00:37:07.770
FS命名来自ipfs中的名称或分支，仅表示

00:37:07.770 --> 00:37:12.930
公钥，因此，如果您有私钥，这意味着您可以创建一个指向

00:37:12.930 --> 00:37:16.290
一些内容PFS和发布者通过一些记录

00:37:16.290 --> 00:37:20.850
系统和人们可以信任该名称，所以这个名称很难看，这是一个巨大的哈希

00:37:20.850 --> 00:37:24.150
这不是一个好名字，但人们可以信任该名字，因为它是

00:37:24.150 --> 00:37:28.320
经过身份验证的权利，就像名称本身就是来自

00:37:28.320 --> 00:37:32.190
他们获取了公共密钥，并且可以验证您是否在记录上签名

00:37:32.190 --> 00:37:37.140
正确，这就像洋葱一样，是的，哦，是的

00:37:37.140 --> 00:37:40.380
实际上，是的，好像他的名字到处都是，而且是洋葱

00:37:40.380 --> 00:37:46.530
在Farina新的taco净玉米卷FS中，只有大量的东西在使用它，并且

00:37:46.530 --> 00:37:50.010
这些是与ipfs相关的其他项目，并且已经

00:37:50.010 --> 00:37:53.510
想着同一种社交活动，是的，所以一定要看看那些

00:37:53.510 --> 00:37:57.270
是的，如果有什么我们应该做的更好的，请告诉我们

00:37:57.270 --> 00:38:00.810
因为我们想使最好的事情成为可能，所以对于那些您的Merkle DAG

00:38:00.810 --> 00:38:03.869
知道你是玻璃杯，接下来的20年你可以在这玩

00:38:03.869 --> 00:38:08.280
绝对绝对棒极了，谢谢，所以把它放在一起给胡安，谢谢

00:38:08.280 --> 00:38:10.460
很多

