WEBVTT
Kind: captions
Language: zh-Hans

00:00:19.250 --> 00:00:24.150
好的，谢谢大家，很高兴今年再次来到这里，对不起

00:00:24.150 --> 00:00:28.710
改变时间表我很恶心，所以在此期间我可能会咳嗽

00:00:28.710 --> 00:00:34.620
演示文稿，所以如果发生这种情况，我会提前道歉，很高兴能成为

00:00:34.620 --> 00:00:39.420
在DEFCON 2上，很高兴看到我们的社区仍然非常

00:00:39.420 --> 00:00:43.379
紧密相处，我们继续共同成长，每一天都有新事物

00:00:43.379 --> 00:00:49.589
今年，我们使用IP FS或etherium或同时使用这两个激动人心的项目

00:00:49.589 --> 00:00:55.350
今天为您提供三个演示文稿，我将讨论IP FS并提供一些生态系统

00:00:55.350 --> 00:00:58.879
新闻daveed将％接受嘴唇治疗和DEF p2p

00:00:58.879 --> 00:01:04.080
家庭将讨论分布式应用程序和轨道，我们也有

00:01:04.080 --> 00:01:08.460
我们团队的另外两名杰里米（Jeremy）在Go ipfs工作，杰西（Jesse）在

00:01:08.460 --> 00:01:11.700
文件硬币在休息时间找到我们，我们可以回答您可能遇到的任何问题

00:01:11.700 --> 00:01:16.159
了解ipfs的工作方式，以及如何使用它以及我们如何帮助您的广告

00:01:16.159 --> 00:01:22.230
今年的时间很少，所以我不能像以往那样长时间介绍ipfs

00:01:22.230 --> 00:01:26.490
通常会这样做，因此这些讲座可以让您深入了解

00:01:26.490 --> 00:01:30.690
IP FS是它的工作方式，而我将简要介绍所有此类内容

00:01:30.690 --> 00:01:36.660
相反，那就是内容，我们如何移动内容以及我们如何

00:01:36.660 --> 00:01:40.980
当今互联网上的地址内容有很多问题有问题

00:01:40.980 --> 00:01:45.480
低效的不良安全模型依赖和大规模集中化

00:01:45.480 --> 00:01:50.910
系统依靠骨干检查和更多的ipfs

00:01:50.910 --> 00:01:54.570
行星际文件系统是一种新的范式，用于移动数据和

00:01:54.570 --> 00:02:01.520
在Internet上处理内容是分布式分散的点对点

00:02:01.520 --> 00:02:07.320
版本化的密码安全可验证文件系统很多话

00:02:07.320 --> 00:02:13.890
他们的IP FS使网络变得更加安全，开放的ipfs解决了所有问题

00:02:13.890 --> 00:02:17.310
密码散列的内容，由中央Isis和转移权力

00:02:17.310 --> 00:02:21.840
Web内容的动态可以链接到和检索，而无需

00:02:21.840 --> 00:02:25.620
吸引特定的中介机构，您不必依赖庞大的

00:02:25.620 --> 00:02:30.780
集中式孤岛，您便可以将其链接在一起，并且拥有内容的人

00:02:30.780 --> 00:02:34.170
可以将其提供给其他任何人，这可能是您旁边的一台笔记本电脑

00:02:34.170 --> 00:02:37.890
成为地球上的其他人，您不必等到一台Web服务器死掉

00:02:37.890 --> 00:02:44.370
ipfs还可以使区块链记录时间戳并解决大量问题

00:02:44.370 --> 00:02:48.780
链下的大量数据保留了安全保证，因为它是

00:02:48.780 --> 00:02:53.850
只是散列链接，它本身也可以用来构建区块链，但是那

00:02:53.850 --> 00:03:00.330
是一个更长的故事，也许有一天我会讲讲技术

00:03:00.330 --> 00:03:04.470
简介是ipfs是一个协议栈，它是一组实现和一个

00:03:04.470 --> 00:03:10.740
建立并链接基于默克尔图的Web内容的项目

00:03:10.740 --> 00:03:15.720
一起使用加密散列，这给ipfs同样的妙处

00:03:15.720 --> 00:03:21.000
以太网比特币获得的不变性和身份验证属性

00:03:21.000 --> 00:03:26.340
BitTorrent和所有其他所有系统都将ipfs视为数据模型

00:03:26.340 --> 00:03:31.640
允许将这些数据结构链接在一起，使它们更多

00:03:31.640 --> 00:03:36.120
功能强大，因为他们的地址从一个到另一个都可以连接

00:03:36.120 --> 00:03:44.850
一个和一个定理交易直接进入git commit ipfs是一个协议

00:03:44.850 --> 00:03:49.080
堆栈中有一个我所描述的数据模型，并且节点使用

00:03:49.080 --> 00:03:54.959
点对点网络堆栈，我们称为lib p2p，这是一个非常模块化的库

00:03:54.959 --> 00:04:00.270
而今天晚些时候我们将进一步讨论的观点ipfs也是自我描述的

00:04:00.270 --> 00:04:05.340
它是一种面向未来的协议，它基于UNIX原理构建，并且高度可靠

00:04:05.340 --> 00:04:09.150
通过传输连接协议对所有组件进行模块化

00:04:09.150 --> 00:04:13.890
内容表示格式文件分块器的文件布局所有这些

00:04:13.890 --> 00:04:18.930
事情是可插拔的，可替换的ipfs是一个雄心勃勃的项目

00:04:18.930 --> 00:04:24.300
它具有许多功能和特性，并且还会有更多的功能和特性

00:04:24.300 --> 00:04:29.160
务实的我们以功能完整为单位进行构建，以便人们可以使用它

00:04:29.160 --> 00:04:34.940
今天解决大问题我今天有很多关于生态系统的新闻给您

00:04:34.940 --> 00:04:39.750
首先是ipfs现在有两个实现，一个实现

00:04:39.750 --> 00:04:45.490
自从DEFCON以来的JavaScript过去一年，我们发货了，我们发货了哦

00:04:45.490 --> 00:04:51.640
Go ipfs的四个系列，带来了许多新功能，错误修复等

00:04:51.640 --> 00:04:55.780
它似乎有一个雄心勃勃的宏伟路线图，尽管它并没有实现

00:04:55.780 --> 00:05:01.180
1.0，但它比您之前尝试过的要稳定得多，并且很多人

00:05:01.180 --> 00:05:05.140
真的很开心，昨天我们释放了三个哦，所以我们

00:05:05.140 --> 00:05:09.340
如果您使用的是IP FS，请鼓励所有人进行更新，并感谢大家

00:05:09.340 --> 00:05:12.400
谁做出了贡献，我知道会有很多人在关注这一点，

00:05:12.400 --> 00:05:19.570
对此版本做出了贡献。关于JSI PFS的重要事项是

00:05:19.570 --> 00:05:23.620
在实施之前，人们会产生气蚀

00:05:23.620 --> 00:05:27.910
在浏览器更改为采用Web之前采用新协议的过程

00:05:27.910 --> 00:05:31.450
如果人们必须安装，如何在新协议上构建网站

00:05:31.450 --> 00:05:35.590
一些东西或扩展名之类的东西，所以我们决定建立一个完整的

00:05:35.590 --> 00:05:40.660
IP FS在JavaScript中的实现，并使其完全在浏览器中运行

00:05:40.660 --> 00:05:44.800
这是一项艰巨的任务，而且功能非常强大，这意味着Web应用程序

00:05:44.800 --> 00:05:50.350
开发人员无需依赖任何浏览器就可以开始在ipfs上构建

00:05:50.350 --> 00:05:53.500
更改或进行任何安装，因此您可以完全分发

00:05:53.500 --> 00:05:58.770
如今具有股票浏览器的去中心化Web应用程序

00:06:01.730 --> 00:06:06.360
新闻的另一个主要方面是，动态内容终于有了

00:06:06.360 --> 00:06:10.320
以前的ipfs人们已经指出，好的ipfs非常适合静态

00:06:10.320 --> 00:06:15.000
内容，他们看不到如何构建动态实时Web应用程序，

00:06:15.000 --> 00:06:19.680
分散式分布式架构只会阻塞事物，因此我们决定

00:06:19.680 --> 00:06:23.820
今年需要一些时间来实现IP FS之上所需的各个部分，以实现

00:06:23.820 --> 00:06:28.950
构建这些类型的应用程序，这意味着低延迟的发布/订阅协议，以及

00:06:28.950 --> 00:06:33.240
一组用于存储和检索数据的库，旨在

00:06:33.240 --> 00:06:42.690
收敛，这意味着CRT T的存在，因此我们提出了采用这些方法的挑战

00:06:42.690 --> 00:06:46.290
分布式数据触及了分布式数据模型

00:06:46.290 --> 00:06:51.000
很难更改它，为此我们提出了巨大的挑战

00:06:51.000 --> 00:06:54.540
想建立一个分布式的点对点聊天客户端

00:06:54.540 --> 00:06:57.570
在局域网中工作而无需连接到骨干网和

00:06:57.570 --> 00:07:02.820
今天晚些时候你会听到这是霍布特的消息还有一点新闻是

00:07:02.820 --> 00:07:07.800
我们所调查的是子项目已经逐渐成熟

00:07:07.800 --> 00:07:11.640
努力之一是多种格式，这是一套自我描述的

00:07:11.640 --> 00:07:16.290
可验证的协议避免了数据锁定，因此您可能会熟悉

00:07:16.290 --> 00:07:19.620
使用多哈希，这使您可以多路复用多种不同的哈希

00:07:19.620 --> 00:07:23.370
功能多广告或多键，还有很多其他功能

00:07:23.370 --> 00:07:26.850
IETF和许多其他组织的标准化已经取决于

00:07:26.850 --> 00:07:32.250
他们，因此我们决定为自己的另一个组织创建像自己的组织一样的组织

00:07:32.250 --> 00:07:36.300
这些项目点亮了p2p模块化的点对点库，视频再次

00:07:36.300 --> 00:07:41.280
将描述更多的最后一个是IPL是一种稀薄的废物形式

00:07:41.280 --> 00:07:46.200
代表默克尔链数据结构IPL d是

00:07:46.200 --> 00:07:50.550
ipfs使默克尔森林成为可能，这使您可以链接

00:07:50.550 --> 00:07:55.080
从一种数据结构到另一种数据结构，真正有趣的是

00:07:55.080 --> 00:07:59.400
关于这的以太坊社区是，还没有，但是很快我们将拥有

00:07:59.400 --> 00:08:05.370
能够在ipfs中本地处理以太坊区块的功能，这意味着您可以

00:08:05.370 --> 00:08:10.200
定理散列和地址块研究交易，并研究

00:08:10.200 --> 00:08:14.660
无需运行ipfs本机路径中的整个状态树

00:08:14.660 --> 00:08:24.260
和以太坊节点或EMA定理光客户端，这很棒，这非常适合

00:08:24.260 --> 00:08:27.740
aetherium，因为它可以将范围扩展到运行ipfs的所有其他应用程序

00:08:27.740 --> 00:08:31.430
您可以提交Web应用程序或参考，他们可以通过

00:08:31.430 --> 00:08:35.270
IP FS也非常适合归档，因为有很多归档工具

00:08:35.270 --> 00:08:42.470
围绕ipfs生态系统构建，这里的最后一点新闻是

00:08:42.470 --> 00:08:46.310
我自称的项目已经在打包方面做了很多工作

00:08:46.310 --> 00:08:50.990
管理IP FS最初是作为数据集程序包管理器而诞生的，

00:08:50.990 --> 00:08:54.170
对于社区来说，这自然是非常有用的

00:08:54.170 --> 00:09:00.530
像apt pac-man Nix npm pi PI之类的经理，在ipfs上的确很棒

00:09:00.530 --> 00:09:05.600
概念验证，但其中一些都不可用于生产，因此

00:09:05.600 --> 00:09:09.010
还有更多工作有待完成，我们将在未来几个月内继续努力

00:09:09.010 --> 00:09:13.400
但是发生了什么事，就是我们能够建立新的程序包管理器

00:09:13.400 --> 00:09:18.110
从头开始直接使用IP FS，我们拥有自己的GX，可用于

00:09:18.110 --> 00:09:25.460
因此，使用GX，我们可以管理带有哈希值的go软件包，就像现在一样

00:09:25.460 --> 00:09:28.790
可以知道您下面的代码不会更改，这很重要

00:09:28.790 --> 00:09:32.630
改进还有其他基于IP FS孢子构建的程序包管理器和

00:09:32.630 --> 00:09:35.690
想到的一两个苹果dapple是以下产品的软件包管理器：

00:09:35.690 --> 00:09:43.100
以太网点很酷，所以我想谈谈一些用户，

00:09:43.100 --> 00:09:49.090
正在使用IP FS，如果您在一起使用，请喝一口水

00:09:55.290 --> 00:10:03.070
这是一个基于IP FS和IP FS构建的去中心化身份服务的报告。

00:10:03.070 --> 00:10:08.200
 aetherium，这是它建立的CAPTCHA分散式社交网络

00:10:08.200 --> 00:10:14.830
在etherether和ipfs上，这是数字，它是使用

00:10:14.830 --> 00:10:20.410
定理和ipfs这在一个用于扩展的基础架构系统中

00:10:20.410 --> 00:10:25.600
aetherium节点和ipfs节点再次在凌晨3点和s的IP这是您Joe音乐

00:10:25.600 --> 00:10:31.810
再次使用IP FS和一个定理，这是Eris工业界正在构建智能

00:10:31.810 --> 00:10:39.010
再次使用etherium和ipfs合约平台，这是块写链

00:10:39.010 --> 00:10:42.760
针对您正在使用的四个存储容器的出处解决方案

00:10:42.760 --> 00:10:48.820
一个定理和ipfs的要点是，哦，这是平衡3一个聪明的人

00:10:48.820 --> 00:10:54.460
合同驱动的三项会计系统我喜欢这个短语的要旨

00:10:54.460 --> 00:10:58.779
这是所有这些应用程序都利用了我们的技术组合

00:10:58.779 --> 00:11:04.690
他们在一起会更好，我们会分别创造很多价值，但是当您

00:11:04.690 --> 00:11:08.170
将这些平台组合在一起，发生了神奇的事，所有这些应用

00:11:08.170 --> 00:11:12.279
可以证明我们每天都在发生更多的事情，我们希望

00:11:12.279 --> 00:11:16.930
还会有更多的事情发生，因此我们邀请整个定理社区开展更多的合作

00:11:16.930 --> 00:11:20.020
在所有这些事情上都紧密地联系在一起，让我们知道我们如何能够提供帮助

00:11:20.020 --> 00:11:23.560
如果您基于ipfs和aetherium，则支持一些用例

00:11:23.560 --> 00:11:30.580
希望听到您的声音，并了解我们如何为我想切换的最后一件事提供帮助

00:11:30.580 --> 00:11:34.570
稍作调整，并解决以下问题中最长久的问题之一

00:11:34.570 --> 00:11:41.410
ipfs生态系统，这是有记录的新闻硬币，所以主要的问题是我们的以太坊

00:11:41.410 --> 00:11:45.700
用户曾经有过的看法是，ipfs不会自行承担数据的备份

00:11:45.700 --> 00:11:51.160
网络，这是设计使然，因为长期备份数据非常昂贵

00:11:51.160 --> 00:11:54.610
需要以某种价值来补偿或激励的运营

00:11:54.610 --> 00:11:59.470
如您所知，我们将行为的这一层分成了自己的协议，称为

00:11:59.470 --> 00:12:03.370
猎鹰一个加密货币文件存储网络有很多原因

00:12:03.370 --> 00:12:05.680
其中之一就是如果您使用IP FS

00:12:05.680 --> 00:12:08.360
就像浏览器一样，您必须存储其他人的数据

00:12:08.360 --> 00:12:13.370
就像您可以直接在许多对等网络中本地使用一样好

00:12:13.370 --> 00:12:18.790
系统失败，因为它们试图迫使系统同时执行这两项操作

00:12:18.790 --> 00:12:23.990
所以一开始我们的意图是构建足够多的ipfs来构建失败

00:12:23.990 --> 00:12:28.220
硬币，因此我们竞相建立您的文件，我们将其运出，

00:12:28.220 --> 00:12:31.610
考虑改变我们的齿轮或福克兰，但三件事改变了他们

00:12:31.610 --> 00:12:36.320
首先想到的是，分布式数据几乎没有市场

00:12:36.320 --> 00:12:41.029
我当时运行的存储就像2015年中期的一个定理，我承认

00:12:41.029 --> 00:12:46.040
两个年轻项目的分散式应用程序才刚刚开始，几乎

00:12:46.040 --> 00:12:50.750
云满足了所有人的需求，我们知道复杂的数据

00:12:50.750 --> 00:12:56.450
存储需求将需要区块链智能合约，因为许多

00:12:56.450 --> 00:13:03.019
应用程序需要更多地研究谁存储数据以及为什么

00:13:03.019 --> 00:13:07.519
发生的第三件事是，我们突然大量采用了ipfs

00:13:07.519 --> 00:13:10.130
比我们预期的要大得多，这使我们感到惊讶

00:13:10.130 --> 00:13:14.630
成千上万的用户希望获得新功能和错误修复，成百上千的用户

00:13:14.630 --> 00:13:18.170
出现的开发人员开始帮助我们提供他们需要检查的代码

00:13:18.170 --> 00:13:23.089
所需的方向等等，因此我们决定加倍使用IP FS并向后推

00:13:23.089 --> 00:13:29.449
到现在为止要开发ipfs，而e vm一直处于战斗状态

00:13:29.449 --> 00:13:34.339
经过测试和验证，现在是时候遥遥领先于市场了

00:13:34.339 --> 00:13:40.149
集中式数据存储正在兴起，因此与您可以想到的一点不同

00:13:40.149 --> 00:13:50.089
Amazon s3与IP FS支持的以太坊相遇，与其他替代品falcone不同

00:13:50.089 --> 00:13:54.230
是一种旨在存储的比特币用于哈希处理的区块链协议

00:13:54.230 --> 00:14:00.500
这是比特币的哈希突袭，就像EXA一样，是一种荒唐的力量

00:14:00.500 --> 00:14:05.060
散列现在我相信这是一个荒谬的计算能力

00:14:05.060 --> 00:14:09.410
世界500强超级计算机汇集在一起​​，我们像尘埃落定

00:14:09.410 --> 00:14:12.949
2013在曲线拐点之前的某个地方，然后我们有了这个

00:14:12.949 --> 00:14:16.880
每次看这张图，爆炸都会让我惊讶

00:14:16.880 --> 00:14:21.800
如今专用于此的电源我认为它比某些电源使用更多的电源

00:14:21.800 --> 00:14:24.470
许多小国家，请想象是否可以

00:14:24.470 --> 00:14:28.370
建立具有激励机制的数据存储网络，因此

00:14:28.370 --> 00:14:32.540
您可以召集该数量的磁盘以显示在

00:14:32.540 --> 00:14:37.130
存储将其添加到您所了解的网络中，就像您所知道的五个一样

00:14:37.130 --> 00:14:41.440
两年的快速增长，你知道我想证明六年

00:14:41.440 --> 00:14:45.949
这就是要做分布式分散式存储的原因

00:14:45.949 --> 00:14:50.660
能够与云竞争的平台，因为在一天结束时，您

00:14:50.660 --> 00:14:53.149
不想在要存储在某人笔记本电脑中的数据上进行排序

00:14:53.149 --> 00:14:56.779
像这样的地雷，有些类似于今天的数据中心

00:14:56.779 --> 00:15:00.620
您想使用笔记本电脑快速高效地交付商品，但最终您

00:15:00.620 --> 00:15:06.199
希望认真运营分布式存储网络之间的竞争

00:15:06.199 --> 00:15:10.490
这很有趣，因为现实是我们应该竞争

00:15:10.490 --> 00:15:14.180
有了云，云就是每个人都在扔数据的地方，我们应该

00:15:14.180 --> 00:15:19.970
共同努力以击败它，因此最基本的文件看起来像这样

00:15:19.970 --> 00:15:24.980
矿工租用硬盘并赚取积分，然后他们可以交换

00:15:24.980 --> 00:15:33.130
对于美元比特币以太坊，您可以成为可能是人或人的任何用户

00:15:33.130 --> 00:15:39.470
申请或合同将随后购买文件硬币并花费它来租用

00:15:39.470 --> 00:15:44.660
网络存储数据我在2014年发表的第一版falcone论文

00:15:44.660 --> 00:15:50.389
描述具有核心挖掘功能的协议，该功能使用共识

00:15:50.389 --> 00:15:54.470
建筑证明，要么是工作证明，要么是可能的缘故证明，然后

00:15:54.470 --> 00:15:57.949
关于能力的证明，它还谈到了二级市场，并且

00:15:57.949 --> 00:16:01.579
二级市场虽然功能不多，但本文

00:16:01.579 --> 00:16:05.630
非常重要，因为您可以使用它来通过付款实现低延迟交付

00:16:05.630 --> 00:16:08.360
频道或州频道我喜欢闪电网络，所以您可以

00:16:08.360 --> 00:16:12.079
想象一下，这个链继续考虑着很多节点有很多存储空间，

00:16:12.079 --> 00:16:20.240
他们可以在其中做状态通道，这很酷，尽管现在我们可以添加

00:16:20.240 --> 00:16:24.529
像我所说的那样，一个合适的合同引擎在文件硬币上有很多

00:16:24.529 --> 00:16:28.850
的改进，但将使这些存储网络与众不同的是

00:16:28.850 --> 00:16:33.949
云就是这样的事情，能够与抵押和抵押相关联

00:16:33.949 --> 00:16:37.770
论坛的胜利描述了能够做到声誉阈值

00:16:37.770 --> 00:16:42.120
能够根据人们的身份进行身份选择，

00:16:42.120 --> 00:16:45.210
储存了当您被迫时能够做地缘政治界限的能力

00:16:45.210 --> 00:16:49.680
在某个国家内存储某些数据，所有这些事情都可以

00:16:49.680 --> 00:16:55.830
当您拥有像这样的大型网络时，表示为合同

00:16:55.830 --> 00:17:00.360
对于使这些平台中的任何一个都能正常工作非常重要

00:17:00.360 --> 00:17:03.300
在过去的几年中，进行了大量的探索

00:17:03.300 --> 00:17:07.380
在这种情况下，如果您的团队正在朝这个方向做很棒的工作，那么

00:17:07.380 --> 00:17:10.920
aasaiya，这是另一个分散式分布式存储平台，

00:17:10.920 --> 00:17:15.000
我们也完成了一些其他工作，

00:17:15.000 --> 00:17:19.410
自2014年以来，已经有两年的大量学术研究证明了

00:17:19.410 --> 00:17:24.480
随着新方案的涌现，能力越来越强，以及如何做的大量研究

00:17:24.480 --> 00:17:29.310
以更安全的方式进行智能合约，我们尝试进行交易时会感到更加自在

00:17:29.310 --> 00:17:36.750
今天的数据合同比两年前要多

00:17:36.750 --> 00:17:39.420
Falcone是一个有趣的产品，我们评估了很多系统，

00:17:39.420 --> 00:17:43.260
考虑如何去做我们可能会建造的建筑

00:17:43.260 --> 00:17:45.660
在比特币之上，我们可能会在定理之上施加负载，依此类推

00:17:45.660 --> 00:17:49.890
并在所有向量上一致地测量了一个定理

00:17:49.890 --> 00:17:54.150
更强大的技术和更有效的发展社区

00:17:54.150 --> 00:17:59.430
该定理尚未满足的一些要求，例如，我们需要

00:17:59.430 --> 00:18:03.660
交易量和交易速度都非常快，您知道

00:18:03.660 --> 00:18:06.530
每秒的交易量很疯狂，我们最终要达到目标

00:18:06.530 --> 00:18:12.450
我们还需要这种连接操作，这意味着能够在

00:18:12.450 --> 00:18:16.020
分布式网络，您与骨干网断开了连接，如果

00:18:16.020 --> 00:18:20.040
您的城市与世界其他地方断开连接

00:18:20.040 --> 00:18:23.190
不应该像想象中的那样停下来，如果你认识你，你就去旅行的地方

00:18:23.190 --> 00:18:26.250
然后您失去了与骨干网的连接，然后没有任何工作像

00:18:26.250 --> 00:18:30.630
那是站不住脚的，所以我们正在朝着能够

00:18:30.630 --> 00:18:34.140
朝着这个方向努力，尽管这两件事虽然不是排行榜

00:18:34.140 --> 00:18:37.440
因为以太坊社区对此也非常感兴趣

00:18:37.440 --> 00:18:41.400
致力于图表和这些工作，我们认为我们可以

00:18:41.400 --> 00:18:44.910
一起解决这些问题，所以我很高兴地宣布我们选择了

00:18:44.910 --> 00:18:49.490
EVM作为我们的合同引擎

00:18:57.130 --> 00:19:02.810
除此之外，我们还有两个选择，要么是叉出以太坊，然后建立我们的

00:19:02.810 --> 00:19:05.870
自己的网络，这意味着在许多问题上共同努力，

00:19:05.870 --> 00:19:09.860
代码库和一般共享策略，但基本上建立了两个

00:19:09.860 --> 00:19:14.060
不同的网络，这样做的好处是我们不会阻止可扩展性

00:19:14.060 --> 00:19:16.310
等等，我们可以朝那个方向前进

00:19:16.310 --> 00:19:21.500
或者替代方案是在以太坊顶部使用虚拟文件硬币

00:19:21.500 --> 00:19:25.700
区块链意味着直接在关键问题和代码上一起工作

00:19:25.700 --> 00:19:30.020
这意味着不必建立大型的工作量证明网络即可保护

00:19:30.020 --> 00:19:35.570
Falco Network，这意味着使Falcone能够本地服务以太坊合同

00:19:35.570 --> 00:19:39.710
希望直接在以太坊区块链中，如果您的iam可以采用

00:19:39.710 --> 00:19:43.010
在我们需要或将要使用的此连接的操作功能中进行分片

00:19:43.010 --> 00:19:45.950
最终迁移到网络之外，从而能够满足这些限制，但是

00:19:45.950 --> 00:19:48.830
幸运的是，这至少不是我们每年必须做出的决定

00:19:48.830 --> 00:19:53.420
定理可能对我们来说更重要的决定因素是定理

00:19:53.420 --> 00:19:58.190
我们已经看到，今年社区经历了巨大的挑战

00:19:58.190 --> 00:20:00.800
从旁观的角度来看，是一个不同的社区，是很多事情

00:20:00.800 --> 00:20:05.510
发生了，我想指出的是，如果定理有其他定理，

00:20:05.510 --> 00:20:09.560
表现出非常有效的改善和解决问题的精神

00:20:09.560 --> 00:20:15.230
您不惧怕团结起来解决历史上的问题

00:20:15.230 --> 00:20:18.710
计算没有人从一开始就获得了正确的一切，因此

00:20:18.710 --> 00:20:22.610
在改变世界的团队中有效的团队是那些有能力的团队

00:20:22.610 --> 00:20:27.560
对路线进行纠正并重新发明他们最终淘汰的技术

00:20:27.560 --> 00:20:32.840
因此，我们很高兴地宣布，我们正在将失败代币构建为虚拟链

00:20:32.840 --> 00:20:36.550
直接在乙醚上

00:20:41.059 --> 00:20:48.110
而且它可以被以太坊网络中的合同本地访问

00:20:48.110 --> 00:20:51.809
我要宣布的第三件事是，我们正计划在某些地方出售Falcone

00:20:51.809 --> 00:20:57.720
不管怎样，请继续关注，对我来说就是今天在其他谈话中看到你，谢谢

00:20:57.720 --> 00:21:00.140
谢谢你

