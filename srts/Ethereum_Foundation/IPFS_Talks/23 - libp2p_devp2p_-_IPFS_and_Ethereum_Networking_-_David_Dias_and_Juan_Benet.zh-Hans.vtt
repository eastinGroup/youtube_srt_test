WEBVTT
Kind: captions
Language: zh-Hans

00:00:18.110 --> 00:00:22.170
大家好，我是David，我负责协议应用程序，我是软件工程师

00:00:22.170 --> 00:00:26.840
负责并专注于JSI PFS和点对点项目的方式

00:00:26.840 --> 00:00:30.599
在这个令人惊叹的会议上，我们已经看到了很多技术

00:00:30.599 --> 00:00:35.129
以及构建去中心化应用程序的解决方案，将边界推向了一个新的高度

00:00:35.129 --> 00:00:40.080
完整的分布式方案，但是尚未涵盖

00:00:40.080 --> 00:00:46.290
网络水平需要做很多魔术

00:00:46.290 --> 00:00:50.400
我什至不敢说黑魔法就能做到这些点对点

00:00:50.400 --> 00:00:53.699
应用程序在我们今天拥有的基础架构中工作

00:00:53.699 --> 00:01:00.690
诸如Nats防火墙之类的东西缺乏完全脱机的认知能力

00:01:00.690 --> 00:01:05.190
场景传感器网络是我们点对点的一些问题

00:01:05.190 --> 00:01:09.720
软件开发人员必须克服以构建这些分散的

00:01:09.720 --> 00:01:16.650
应用程序，这并非偶然，像ipfs和它的氦气一样

00:01:16.650 --> 00:01:21.540
从头开始构建完全成熟的网络堆栈以解决这些问题

00:01:21.540 --> 00:01:26.550
对于ipfs的点对点和DEF的点对点的挑战

00:01:26.550 --> 00:01:31.170
IAM，这仅仅是因为您的网络中没有传输

00:01:31.170 --> 00:01:36.150
提供了ipfs的原语，甚至还需要身份验证之类的东西

00:01:36.150 --> 00:01:40.260
和加密能够应对多种网络拓扑

00:01:40.260 --> 00:01:44.640
不同的场景是我们必须克服的一些挑战，

00:01:44.640 --> 00:01:50.610
在构建这些系统时就像面对一样，但是有一个关键的小钥匙

00:01:50.610 --> 00:01:54.780
点对点这些网络堆栈的设计之间的差异是

00:01:54.780 --> 00:02:01.230
模块化这种模块化使我们有能力扩大我们的覆盖范围

00:02:01.230 --> 00:02:05.100
通过使用系统必须提供的功能来对设备进行配置

00:02:05.100 --> 00:02:10.920
点对点中的每个模块都公开了一个定义明确的接口，用于

00:02:10.920 --> 00:02:15.239
传输路由的对等点发现三路复用加密

00:02:15.239 --> 00:02:21.090
您命名，我们可以选择我们想要的组件并烘烤我们的

00:02:21.090 --> 00:02:24.840
我们要运行此设备的早期对等解决方案

00:02:24.840 --> 00:02:28.330
模块化为我们提供了保持的机会

00:02:28.330 --> 00:02:33.610
我们用于身份验证过程寻址的原语完好无损，它非常强大

00:02:33.610 --> 00:02:38.440
能够仅通过一个地址就可以解决网络中任何其他进程的结构

00:02:38.440 --> 00:02:42.310
公钥，这样我们就可以在网络中找到进程，而不仅仅是拨号

00:02:42.310 --> 00:02:47.530
还要确保我们正在与正确的端点进行对话，所以这

00:02:47.530 --> 00:02:52.510
意味着像我们可以从传统的物理网络转变为超级

00:02:52.510 --> 00:02:57.430
物理和虚拟上具有物理和虚拟的连接图

00:02:57.430 --> 00:03:03.580
覆盖范围不受我们可以使用的系统功能的限制

00:03:03.580 --> 00:03:07.720
诸如butta之类的东西可以创建其中一些频道，甚至广播或音频也可以

00:03:07.720 --> 00:03:12.190
在运输方面，我们可以升级不可靠的渠道，从而变得可靠

00:03:12.190 --> 00:03:17.500
可靠性升级，我们可以使用sekai l TLS加密我们想要的任何频道

00:03:17.500 --> 00:03:23.380
曲线DP和其他曲线，这意味着我们还可以进入生态系统

00:03:23.380 --> 00:03:29.350
没有通常用于大型案例的完整网络堆栈

00:03:29.350 --> 00:03:33.790
例如，这是受限制的浏览器

00:03:33.790 --> 00:03:38.620
有时没有的WebSockets HTTP和WebRTC或物联网设备

00:03:38.620 --> 00:03:44.770
甚至拥有TCP堆栈您必须依靠某些无线电协议

00:03:44.770 --> 00:03:51.910
为了能够拨出该设备，例如一个非常好的

00:03:51.910 --> 00:03:55.660
我们可插拔的同行的一个例子是，我们的朋友从开放

00:03:55.660 --> 00:04:01.840
集市需要并且希望有一个旅游交通工具供其使用和所有

00:04:01.840 --> 00:04:05.500
他们需要做的是创造一个可以实现相同目标的旅游交通工具

00:04:05.500 --> 00:04:09.970
接口，因为其他仅传输对等网络，他们可以将其插入

00:04:09.970 --> 00:04:13.840
就在其中，一旦完成，其他所有想要使用该应用程序的应用程序

00:04:13.840 --> 00:04:18.070
运输就可以带来它，而您不必从

00:04:18.070 --> 00:04:22.900
应用程序的代码库中的原语保持不变

00:04:22.900 --> 00:04:27.130
强大的想法就像在每台设备上运行完整的团队笔记一样

00:04:27.130 --> 00:04:37.900
没有任何限制，所以我们认为，我们认为聋人p2p时代可以实现点对点

00:04:37.900 --> 00:04:42.279
汇聚并喜欢共同努力

00:04:42.279 --> 00:04:47.199
使用这些网络的社区的生态系统给他们的未来码头增加了负担

00:04:47.199 --> 00:04:54.779
提供了许多可以增强该生态系统的原始数据，并且由于我们

00:04:54.779 --> 00:04:59.049
已经做了前面提到的让ipfs在该服务器上运行的工作。

00:04:59.049 --> 00:05:04.449
我们喜欢的浏览器继续前进，问自己我们该怎么做

00:05:04.449 --> 00:05:13.149
为了使任何tem节点在浏览器上运行，所以我将像我们这样显示

00:05:13.149 --> 00:05:19.659
开始入侵某些东西在一开始的非常早期

00:05:19.659 --> 00:05:24.939
谦虚的开始，但我们想向您展示该过程的进展，我有两个

00:05:24.939 --> 00:05:33.069
为您演示，因此寻找演示，第一个挑战是

00:05:33.069 --> 00:05:38.829
基本上让etherium v​​m在浏览器上工作

00:05:38.829 --> 00:05:43.029
熟悉当今运行浏览器应用程序的标准设置

00:05:43.029 --> 00:05:48.399
在浏览器上，您必须将所有内容进行物理转换，然后

00:05:48.399 --> 00:05:52.719
编译后，我们可以加载它，并且我们为这个非常美好的新鲜世界做好了准备，

00:05:52.719 --> 00:05:56.739
您可以看到发生了什么，在这里，我们将像模拟d2

00:05:56.739 --> 00:06:00.189
区块链，我们将创建一些块，我们将对其进行处理

00:06:00.189 --> 00:06:04.869
通过etherium v​​m总是有这样的感觉，因为这些操作非常占用CPU

00:06:04.869 --> 00:06:09.069
密集的训练需要一点时间，但是一旦到达那里就可以跑步

00:06:09.069 --> 00:06:14.919
其余检查国家/地区，我们从浏览器运行块中获取氦气VM。

00:06:14.919 --> 00:06:19.529
 GM区块链，但还有更多，现在我打开另一个标签，

00:06:19.529 --> 00:06:24.189
基本上连接到以前打开的另一个对等点，我正在连接

00:06:24.189 --> 00:06:28.149
这两个浏览器标签页，所以我不问生成块，而是问

00:06:28.149 --> 00:06:32.799
那个同伴给我盒子，让它顺畅地进行，就像我刚才说的拨号

00:06:32.799 --> 00:06:38.499
到另一个对等端，它找到了对等端并从该网络获取数据块，因此我们

00:06:38.499 --> 00:06:42.759
可以获取我正在浏览器上运行的TMV并从其他位置查找块

00:06:42.759 --> 00:06:48.009
节点，这非常令人兴奋，但是还有更多，您可以看到，我可以弹出更多

00:06:48.009 --> 00:06:51.999
节点，就像他们很快找到彼此，但现在像真正的

00:06:51.999 --> 00:06:55.810
有趣的演示就像我们可以获取这些浏览器节点一样

00:06:55.810 --> 00:06:59.800
连接到真实的以太网络

00:06:59.800 --> 00:07:05.200
演示哦，我已经演奏了很棒的歌，所以同样的舞蹈让应用程序

00:07:05.200 --> 00:07:10.060
运行，但在这里我们要做些额外的事情，我们要运行Gayageum

00:07:10.060 --> 00:07:14.590
注释通过对等修补，因此它以一种方式进行地址处理

00:07:14.590 --> 00:07:17.980
点对点回声系统，现在不再像

00:07:17.980 --> 00:07:21.430
模拟区块链，我要用氦气拨号给那个女孩

00:07:21.430 --> 00:07:26.410
并像基本上我正在使用此增强的游戏说明那样获取块

00:07:26.410 --> 00:07:32.350
与点对点连接到网络的其余部分，再次产生

00:07:32.350 --> 00:07:34.300
创世纪街舞需要一点点

00:07:34.300 --> 00:07:38.020
尤其是通过Ella营销部门的最新工作，可以大大改善这一点

00:07:38.020 --> 00:07:42.550
缩放，我确定，但是一旦到达那我们就开始接收所有这些

00:07:42.550 --> 00:07:48.820
你去那里的块，你可以看到像是从真实的现场获取

00:07:48.820 --> 00:07:53.700
网络，它将所有块都拉进浏览器

00:07:59.740 --> 00:08:06.350
太棒了，所以让我在图表中说明是什么并且一直持续下去，这可能需要花费

00:08:06.350 --> 00:08:09.080
如果您已经下载了区块链，则可能不知道

00:08:09.080 --> 00:08:12.490
知道你可以回到幻灯片吗

00:08:14.320 --> 00:08:25.900
好的，好的，谢谢，好的

00:08:27.530 --> 00:08:31.310
所以发生了什么，所以我们知道我们已经完成了敏锐的工作

00:08:31.310 --> 00:08:37.159
并很好地连接到他们的视野，然后我们添加了这首歌德

00:08:37.159 --> 00:08:42.770
莱昂内尔（Leonel）与我们进行了点对点修补，就像在双P2P上一样

00:08:42.770 --> 00:08:48.020
网络，然后我们也抛出对等运行循环的node.js蜗牛

00:08:48.020 --> 00:08:53.710
然后我们有连接到此node.js的浏览器

00:08:53.710 --> 00:08:59.420
连接到网络的其余部分到另一个去Jess节点好女孩只是

00:08:59.420 --> 00:09:02.780
节点以遍历您的笔记，这样您就可以看到我们已经喜欢使用多个

00:09:02.780 --> 00:09:07.040
像我正在使用TCP在节点之间连接女孩一样在这里传输，然后我

00:09:07.040 --> 00:09:10.070
使用从节点到浏览器的Web套接字

00:09:10.070 --> 00:09:14.030
接下来，就像我可以将多个浏览器连接在一起一样，

00:09:14.030 --> 00:09:17.180
要做的只是使用WebRTC浏览器的对等传输

00:09:17.180 --> 00:09:21.500
我只是把它放在最上面，我可以做的是，我可以再次将浏览器连接到

00:09:21.500 --> 00:09:27.050
带有注释的女孩，这种方式就像具有通用功能的任何浏览器一样

00:09:27.050 --> 00:09:30.800
运输可以拨到另一个支持我们点对点的钉子

00:09:30.800 --> 00:09:35.030
这是非常令人兴奋的，这意味着像我们最终可以将氦气注入其中

00:09:35.030 --> 00:09:38.750
浏览器像三个节点一样运行，只是一个小的浏览器是

00:09:38.750 --> 00:09:42.260
基本上任何具有任何网络功能的设备都不是网络

00:09:42.260 --> 00:09:46.670
问题了，我想向马丁大声疾呼，因为马丁

00:09:46.670 --> 00:09:52.360
基本上做到了在浏览器上运行以太坊的所有魔力

00:09:53.779 --> 00:10:02.120
我只需要将电线插在一起就很容易，非常感谢大家

00:10:02.120 --> 00:10:06.319
财富，就像你在这里看到的，基本上就像是

00:10:06.319 --> 00:10:10.370
晚上的黑客攻击实际上非常令人印象深刻哦，它是如此容易附加

00:10:10.370 --> 00:10:14.870
我们对等地使用氦气并将块带到浏览器并运行

00:10:14.870 --> 00:10:20.810
他们在TMJ SVM上非常令人兴奋，因此我们将继续追求这一点

00:10:20.810 --> 00:10:26.060
努力使您可以跟上飞跃UTP组织的发展步伐

00:10:26.060 --> 00:10:31.250
在定理组织上对同级开发充耳不闻，您可以检查所有

00:10:31.250 --> 00:10:36.079
这些示例都是在对等I的称为爵士成语的回购中演示的

00:10:36.079 --> 00:10:39.680
可以在Twitter上发布链接，如果有人有兴趣签出的话

00:10:39.680 --> 00:10:43.839
太好了，非常感谢你

