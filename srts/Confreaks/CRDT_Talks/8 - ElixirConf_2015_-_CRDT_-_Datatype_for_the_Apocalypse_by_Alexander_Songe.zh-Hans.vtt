WEBVTT
Kind: captions
Language: zh-Hans

00:00:20.400 --> 00:00:27.730
您正在谈论CRT青少年如何没有优势或启示录如此

00:00:27.730 --> 00:00:34.090
少数免责声明零关税是奇怪的知识，是条理分明的鼓励

00:00:34.090 --> 00:00:38.370
学术论文上的学习者很难理解，很少

00:00:38.370 --> 00:00:46.390
通用UNC库在那里，大多数人都对它感兴趣

00:00:46.390 --> 00:00:51.400
他们，但几乎无法理解他们。我的希望是，你们中的一些人可能是

00:00:51.400 --> 00:00:56.260
有兴趣实施一些，但很可能我想吸引人

00:00:56.260 --> 00:01:02.229
对实际使用它们感兴趣，我确实有一个名为loom的十六进制库，它是一个

00:01:02.229 --> 00:01:08.799
有点老，但它支持一些最近的新Delta crd茶

00:01:08.799 --> 00:01:15.939
它可以正常工作，我有一个即将推出的新API，但尚未准备好

00:01:15.939 --> 00:01:24.729
因为直到圣诞节可能现在对障碍的理解是具有讽刺意味的

00:01:24.729 --> 00:01:30.670
这可能真的很高，但是您实际上并没有那么复杂

00:01:30.670 --> 00:01:33.909
必须非常精确地了解您所做的事情，实际上并非如此

00:01:33.909 --> 00:01:40.530
涉及很多代码，只是根本没错

00:01:40.790 --> 00:01:48.450
在crd中几乎没有戏弄过你，如果你得到了，就会破坏你的真相。

00:01:48.450 --> 00:01:56.189
他们错了，所以什么是crd T，通常称为冲突

00:01:56.189 --> 00:02:02.429
免费的复制数据类型有两种形式，一种是可交换数据

00:02:02.429 --> 00:02:06.090
类型，这些是基于日志的类型，您只需保留所有

00:02:06.090 --> 00:02:10.410
发生更新，然后您仔细阅读日志并应用操作和

00:02:10.410 --> 00:02:14.220
吐出一个结果，然后有一种叫做基于状态的，这是很多的

00:02:14.220 --> 00:02:24.260
容易推理，但是它们会变得很大，很难

00:02:24.260 --> 00:02:28.380
很难运送非常大的博士职责，这可能会导致停机

00:02:28.380 --> 00:02:35.370
就像一般的垃圾收集暂停一样，您发出更新操作来

00:02:35.370 --> 00:02:41.190
改变crdt更新的状态被定义为可交换关联

00:02:41.190 --> 00:02:47.970
和幂等有例外，但通常人们不喜欢

00:02:47.970 --> 00:02:54.420
谈论他们。

00:02:54.420 --> 00:02:58.079
属性很棒，因为您总是可以重复发送一条消息，将其发送五个

00:02:58.079 --> 00:03:02.100
时间从过去发送东西，直到出现混乱为止

00:03:02.100 --> 00:03:06.470
传达最新消息后，您将进入一致状态

00:03:06.470 --> 00:03:12.329
每个人都可以看到所有消息，并且只要您有合理的理解

00:03:12.329 --> 00:03:18.859
最近的更新，他们来自所有不同服务器的所有答案都将关闭

00:03:20.209 --> 00:03:27.420
因此，它们对于分布式系统非常有用，其中有些人说我不是

00:03:27.420 --> 00:03:30.660
构建分布式系统，但是您正在构建分布式系统

00:03:30.660 --> 00:03:37.350
如果您使用的是浏览器，则可能是在构建分布式

00:03:37.350 --> 00:03:41.489
客户与用户进行交互操作时，客户期望的系统

00:03:41.489 --> 00:03:47.549
界面，然后在保存它们时，

00:03:47.549 --> 00:03:50.579
浏览器上次看到的内容以及其他人现在可能拥有的服务器上的内容

00:03:50.579 --> 00:03:54.660
同时编辑了一些内容，坦率地说，你可能

00:03:54.660 --> 00:03:59.010
分布式系统（如果您要建立任何年轻的网络），甚至还可以

00:03:59.010 --> 00:04:02.520
除非您进行序列化，否则它们本身正在使用elixir和Erlang进程

00:04:02.520 --> 00:04:06.660
到一个过程的一切分布式系统的许多特性是

00:04:06.660 --> 00:04:13.410
在光束本身内，您不能，实际上不能有两个过程

00:04:13.410 --> 00:04:17.549
相同的状态，而没有将它们以严格的方式捆绑在一起

00:04:17.549 --> 00:04:22.170
可能还是要在一个进程中序列化，所以有什么共同点

00:04:22.170 --> 00:04:26.550
您周围的crdt类型带有标志，这些标志是金条

00:04:26.550 --> 00:04:35.850
要么有一个错误就好，所以标志被欺负了，要么是真的，要么是

00:04:35.850 --> 00:04:44.780
否有计数器，它们会上升或下降设置维护一些列表

00:04:44.780 --> 00:04:48.960
有些寄存器在大多数情况下都会维护一件事

00:04:48.960 --> 00:04:53.400
在特殊情况下保留多于一件的东西，有些地图将一个

00:04:53.400 --> 00:04:59.070
带有值映射的名称或术语具有很多有趣的特性

00:04:59.070 --> 00:05:04.170
可以嵌套crd t​​的好处是，您可以嵌套地图和地图

00:05:04.170 --> 00:05:10.860
在大多数情况下，您可以创建非常大的丰富对象，并且可以假冒

00:05:10.860 --> 00:05:15.590
到另一个系统，您的所有更新将被很好地保留

00:05:15.590 --> 00:05:23.310
还有一些图可以帮助管理图系统，尽管

00:05:23.310 --> 00:05:27.300
在某些情况下，这些文件变得有些古怪，虽然也有crdt文件

00:05:27.300 --> 00:05:32.250
我不会在涉及的所有存储需求上都使用它们

00:05:32.250 --> 00:05:38.010
通常会进行十次或更多次以进行协作编辑，反而最终

00:05:38.010 --> 00:05:42.020
比存储文档所需的实际空间大十倍，并且

00:05:42.020 --> 00:05:47.060
如果存在大量并发，情况可能会变得更糟

00:05:49.240 --> 00:05:59.220
嗯，所以即使可以在CRT上构建许多应用程序属性

00:05:59.220 --> 00:06:05.440
有些应用程序逻辑需要强有力的协调，但是您

00:06:05.440 --> 00:06:12.130
可能实际上无法通过大量扭曲来摆脱困境

00:06:12.130 --> 00:06:18.699
不阅读本书就适应crdt自身前进的问题

00:06:18.699 --> 00:06:24.220
目前学术文献是一个错误，其中有很多细微之处

00:06:24.220 --> 00:06:28.240
很多图书馆，您必须了解演员的工作方式以及

00:06:28.240 --> 00:06:32.530
并发单位实际上在文献中对您而言意味着

00:06:32.530 --> 00:06:35.229
实际上能够理解大多数未正确记录的库

00:06:35.229 --> 00:06:39.130
现在到您可以拿起它们走的地步，我希望

00:06:39.130 --> 00:06:44.650
最终完成更改，如果您使crd挑逗，则必须对它们进行大量测试

00:06:44.650 --> 00:06:47.770
仅仅因为您获得了100％的代码覆盖率并不意味着

00:06:47.770 --> 00:06:51.190
您已经涵盖了所有可能的交织，这是

00:06:51.190 --> 00:06:58.000
我被这种东西咬了很多不同类型的错误，因为在这种情况下

00:06:58.000 --> 00:07:03.150
系统的问题，您无法解决OCR dt的问题

00:07:03.150 --> 00:07:08.050
已经嘲笑了效率低下的问题，您可以设计出自己的出路，但如果

00:07:08.050 --> 00:07:11.710
您的财产有逻辑上的矛盾，您要面对

00:07:11.710 --> 00:07:20.080
数学上的确定性，这简直是绝望，我浪费了六个星期，所以这是

00:07:20.080 --> 00:07:24.069
一些示例，以便您实际上可以看到它们的工作方式，我

00:07:24.069 --> 00:07:29.409
希望我有激光指示器，但无论如何我还是不能指向

00:07:29.409 --> 00:07:34.389
它有一个G计数器，所以最容易实现为

00:07:34.389 --> 00:07:46.469
简单地图单个角色会在地图中递增其自己的ID，而当他们

00:07:46.469 --> 00:07:51.000
演员们要让我发挥自己的价值，

00:07:53.689 --> 00:08:11.599
好吧，好吧，哦，开着哦，好吧，这是激光指示器哦，好吧，每个演员

00:08:11.599 --> 00:08:14.349
向所有其他人发送其整个计数器的消息，然后将地图合并

00:08:14.349 --> 00:08:18.889
同一角色的重复条目通过上限或最大值解析

00:08:18.889 --> 00:08:24.619
每个演员的价值，通常就是这样，让我们​​看看我是否可以

00:08:24.619 --> 00:08:32.779
实际上是点声，所以在这里我们要添加一个数组，就是将一个数组添加到

00:08:32.779 --> 00:08:38.240
它的计数器然后加两个，所以这里是三个，这是一次沟通

00:08:38.240 --> 00:08:43.039
在这里，您可以看到婚姻具有两种属性，即沟通

00:08:43.039 --> 00:08:48.980
继续，当有一个不存在的情况发生时会发生什么，比如说有一个不存在的情况

00:08:48.980 --> 00:08:54.769
订单消息，这是直接送给这里的​​，因为您要

00:08:54.769 --> 00:08:59.930
红色三号不能覆盖红色三号的最大值

00:08:59.930 --> 00:09:03.319
将会保留下来，因此所有这些消息都可以在任何情况下乱序到达

00:09:03.319 --> 00:09:09.740
顺序，然后最后就是要读取值的时候

00:09:09.740 --> 00:09:15.319
总结集合中的每个项目，您就可以完成最简单的操作之一

00:09:15.319 --> 00:09:22.759
各种CRT取笑，但有些问题只会上升，而您却无法走

00:09:22.759 --> 00:09:29.360
向下，但您可以通过将它们中的两个一起使用以14个增量来解决此问题

00:09:29.360 --> 00:09:34.040
和14个减量，然后再减去一个，这称为APN

00:09:34.040 --> 00:09:40.600
反过来，这是您必须要做的那种扭曲

00:09:40.600 --> 00:09:50.480
保持crdt属性并在实际应用中使用，所以这是一个女孩

00:09:50.480 --> 00:09:56.660
仅集如果将集操作限制为仅添加集，这将很有趣

00:09:56.660 --> 00:10:04.399
RCR DTS非常简单，如果已经存在某些东西就存在问题

00:10:04.399 --> 00:10:06.519
明显地

00:10:08.780 --> 00:10:15.740
如果您考虑拥有一个，则无法轻松地从该列表中删除项目

00:10:15.740 --> 00:10:21.240
类似于带有crdt的pn计数器，您最终得到了2p的设置，但是

00:10:21.240 --> 00:10:25.620
您只能删除一次项目，还有另一种变体，如果您

00:10:25.620 --> 00:10:29.460
当您删除项目时，将从第一组中删除它，然后在您添加时

00:10:29.460 --> 00:10:36.240
再次，您只能一次里亚德，然后有更多的解决方案使用

00:10:36.240 --> 00:10:44.790
各种各样的墓碑，但它们是通货膨胀的，您将永远不会

00:10:44.790 --> 00:10:47.760
通货膨胀的解决方案，他们只是选民，随着您的成长，

00:10:47.760 --> 00:10:55.860
应用程序的生命持续不断，还有一种出路称为“小时槽”

00:10:55.860 --> 00:11:03.320
是观察到的没有墓碑的拆卸装置，这有点复杂

00:11:04.010 --> 00:11:11.760
所以这些都是加法运算本身有趣的部分

00:11:11.760 --> 00:11:21.810
当我将面包从这份副本中的清单中删除时，就会发生这种情况。

00:11:21.810 --> 00:11:31.350
取出蜜蜂的面包，然后当我合并回去时，我曾经为

00:11:31.350 --> 00:11:35.420
每个事件我增加此计数器，每个值都用一个计数器标记，

00:11:35.420 --> 00:11:44.610
如果在算法中将其与算法合并时是否检查它们是否都应

00:11:44.610 --> 00:11:49.320
看到了面包的更新，因为他们俩都这样做了，因为他们俩都没有

00:11:49.320 --> 00:11:53.370
只能看到它，但仍然看到它，这意味着有人必须将其删除

00:11:53.370 --> 00:11:57.120
这意味着只要我坚持下去，它就可以永远从国家中消失

00:11:57.120 --> 00:12:02.190
这些时钟与发生的每个事件保持一致，因此我向该时钟添加了一个，

00:12:02.190 --> 00:12:07.620
正确标记值，我可以添加和删除将要和您所做的事情

00:12:07.620 --> 00:12:10.620
要做的是，您只需要确定添加和删除的总订单

00:12:10.620 --> 00:12:15.510
添加/删除获胜和a和/或edwin并删除获胜，然后在广告获胜时

00:12:15.510 --> 00:12:19.769
如果存在并发更新，说明彼此之间没有看到对方

00:12:19.769 --> 00:12:24.989
广告胜出，如果删除获胜，则漂亮地删除某天

00:12:24.989 --> 00:12:34.860
简单易懂，所以要多解释一下，这有点像向量

00:12:34.860 --> 00:12:40.739
时钟，但实际上并没有什么区别，我会仔细检查它们

00:12:40.739 --> 00:12:45.329
快速解释，这就是我向每个演员解释的每个价值观的原因

00:12:45.329 --> 00:12:51.209
每个参与者的每个事件都从零开始，因此您必须应对每个内部事件

00:12:51.209 --> 00:12:56.249
碰撞计数器，然后在矢量时钟中标记该值，当

00:12:56.249 --> 00:13:01.019
您准备发送不包含版本向量和单词的消息

00:13:01.019 --> 00:13:08.189
虚线版本向量仅表示值的标记，然后标记

00:13:08.189 --> 00:13:11.639
当然，您发送时钟的副本和每条消息，以便您实际上可以

00:13:11.639 --> 00:13:17.369
在两个集合中都应执行逻辑，如果在两个集合中均应执行

00:13:17.369 --> 00:13:26.759
在这两个集合中，并且不是在两侧，您都将其删除，这是一种

00:13:26.759 --> 00:13:31.949
对于使您更直观地了解逻辑删除方法的东西必不可少

00:13:31.949 --> 00:13:38.339
可在CRT茶中使用，这是来自矢量时钟的Wikipedia页面，它是

00:13:38.339 --> 00:13:45.869
有点奇妙，相对于这里的这个点，这里的一切都是过去的，所以

00:13:45.869 --> 00:13:49.559
当我从该蓝色区域中标记的集合中删除元素时，我知道

00:13:49.559 --> 00:13:55.649
它不在那里，因为它是这里的因果关系，因为我们不

00:13:55.649 --> 00:14:00.509
确实有一个统一的时间，所有事情实际上都是基于因果关系，而不是

00:14:00.509 --> 00:14:05.069
时间基本上是虚构的，尤其是您的多台服务器的时间可以移动

00:14:05.069 --> 00:14:11.220
在服务器本身上，这就是为什么我们只使用数字的原因，实际上

00:14:11.220 --> 00:14:15.089
如果您使用的是墓碑变种，则称为末日石现象

00:14:15.089 --> 00:14:18.779
挂钟时间，而现在是将来，您将无法执行

00:14:18.779 --> 00:14:23.279
操作，直到时间过去了，如果您将其设置为真的很远

00:14:23.279 --> 00:14:28.829
未来，这注定了一切，这是您正在做的事情的影响

00:14:28.829 --> 00:14:33.600
然后我们所拥有的并不是每个值都大于

00:14:33.600 --> 00:14:36.509
其他值或每个值都不小于这些关系中的另一个

00:14:36.509 --> 00:14:40.110
是并发操作，即使某些情况不存在，也是如此

00:14:40.110 --> 00:14:44.100
沟通三天，可能两天前就发生了

00:14:44.100 --> 00:14:49.529
并发操作，因为它们没有因果关系，这实际上是

00:14:49.529 --> 00:14:54.180
有趣的属性，因为在设定的情况下，我们实际上可以执行某种操作

00:14:54.180 --> 00:15:02.459
推理的直观语义种类，以创建更复杂的类型

00:15:02.459 --> 00:15:07.709
用户，只要他们编辑某些内容，并在两个字段中都添加了单独的字段

00:15:07.709 --> 00:15:20.160
编辑将被保留不，这是部分排序，因此一切都是

00:15:20.160 --> 00:15:27.420
在每台服务器上的每个服务器上订购，但您不知道所有服务器之间的顺序

00:15:27.420 --> 00:15:30.540
否则，这都与您所在的位置有关，因为如果我们切换到

00:15:30.540 --> 00:15:33.449
一个不同的点，其因果关系将是完全的

00:15:33.449 --> 00:15:49.009
不一样，我已经讲过了，是的，是的

00:15:50.509 --> 00:15:54.120
是的，时间尺度是完全不同的，没有统一的

00:15:54.120 --> 00:16:01.170
时间的概念，你只需要放弃那种幻想，是的，这就像

00:16:01.170 --> 00:16:07.319
有点像通过相对论官进行推理的原因

00:16:07.319 --> 00:16:11.069
使用单词观察是根据您所看到的而发生的事情，

00:16:11.069 --> 00:16:14.970
爱因斯坦的相对论存在一些伪悖论，其中

00:16:14.970 --> 00:16:21.380
你可能会得到一些看起来像是自相矛盾的东西，从不有趣，我

00:16:21.380 --> 00:16:38.250
过去了，看好了，所以我们的麻烦很大，我已经抽象赞扬了

00:16:38.250 --> 00:16:41.490
图书馆变成了一个文件上校，我从卡洛斯那里拿走了那份工作

00:16:41.490 --> 00:16:46.589
Peguero的crdt的C ++实现非常出色

00:16:46.589 --> 00:16:54.089
同时由于所有单字母变量而难以阅读，因此

00:16:54.089 --> 00:16:58.079
有一个称为Delta crd T的功能，您实际上可以将一个空白

00:16:58.079 --> 00:17:02.480
crdt kinda这是一种略有不同的方法论，

00:17:02.480 --> 00:17:10.169
将操作应用于这些操作，而不是使用点上下文或上午

00:17:10.169 --> 00:17:16.350
点云只是未来的小原子部分，

00:17:16.350 --> 00:17:21.659
 Delta代表，您可以只发送该Delta，如果实际上一切都正确

00:17:21.659 --> 00:17:27.329
连续发生的事情是，您将只能运送状态的一部分

00:17:27.329 --> 00:17:30.510
变化令人惊讶，它解决了基于状态的最大缺点之一

00:17:30.510 --> 00:17:37.320
co tt的另一个功能是不兼容但也很理想，那就是

00:17:37.320 --> 00:17:43.430
令人沮丧的是，我们实际上可以支持因果关系

00:17:43.430 --> 00:17:48.110
如果我们共享上下文，那么它将是一个非常大的嵌套crdt结构，因此如果我要通过

00:17:48.110 --> 00:17:52.730
通过一些嵌套的地图向下查看该上下文，然后向上备份

00:17:52.730 --> 00:17:56.840
实际上对改变的事物做了很多推理，

00:17:56.840 --> 00:18:03.800
支持非常复杂的数据结构非常容易，但并非易事

00:18:03.800 --> 00:18:08.420
目前与delta CRT T兼容，如果您

00:18:08.420 --> 00:18:14.260
放弃嵌套地图，我认为如果使用图形，这可能是可行的，但是我

00:18:14.260 --> 00:18:19.460
对此还没有足够的思考，大概需要一个星期的时间才能解决一个问题

00:18:19.460 --> 00:18:26.270
这些论文对我来说，你必须将其翻译成英文，所以如何或为什么

00:18:26.270 --> 00:18:35.210
你能用这些似乎很严格的限制，所以我的事情之一

00:18:35.210 --> 00:18:39.440
我真的很喜欢长生不老药社区，这是社区的很多价值观

00:18:39.440 --> 00:18:45.830
我们希望能够联系到您的地方，但您知道的是技能水平较低的人，而不是

00:18:45.830 --> 00:18:50.660
不仅如此，不仅如此，而且因为当我不必考虑时

00:18:50.660 --> 00:18:54.770
我可以将所有的精神精力集中在实际上很难的事情上

00:18:54.770 --> 00:19:01.700
我对CR dt感兴趣，这真的应该是一种手段，而不是目的，所以很多

00:19:01.700 --> 00:19:04.880
有时你会听到我知道如何解决我的问题我知道我可以解决我的问题

00:19:04.880 --> 00:19:11.090
使用crdt，但我不知道如何执行所有当前的crdt适配器

00:19:11.090 --> 00:19:15.110
他们中的许多人似乎只在面对强大的外部压力时才使用它们

00:19:15.110 --> 00:19:20.560
就像他们无法在一台机器上容纳所有数据一样，

00:19:20.560 --> 00:19:27.410
 SoundCloud关于他们如何实现观察者的演讲中的英语

00:19:27.410 --> 00:19:33.350
移动集没有墓碑，他们实现了删除风版本

00:19:33.350 --> 00:19:37.820
那样，他们为必须执行此操作而感到非常痛苦，他们实际上

00:19:37.820 --> 00:19:42.440
在Redis顶部的Lua中实施，因此他们不必做就可以了

00:19:42.440 --> 00:19:45.230
将不得不做最少的事情，他们将使用Redis

00:19:45.230 --> 00:19:49.950
我认为实际发送更新的操作

00:19:49.950 --> 00:19:55.860
我认为可以打破现状的策略之一是

00:19:55.860 --> 00:20:01.649
克里斯托弗·迈克尔·约翰斯（Christopher Michael Johns）最后说，但我们认为还有一些其他用途

00:20:01.649 --> 00:20:05.010
情况下，我们可以获得一些真正的快速胜利，而这不一定是最重要的。

00:20:05.010 --> 00:20:10.260
高效，但可以在大多数人的用例中使用，但是某些解决方案可以

00:20:10.260 --> 00:20:15.029
需要像单页应用程序本机应用程序等丰富的客户联系人

00:20:15.029 --> 00:20:18.240
必须跟踪客户端的状态并自己应用更新

00:20:18.240 --> 00:20:23.039
对于其中一些更复杂，更美好的东西，但好处是

00:20:23.039 --> 00:20:26.399
实际上可以推迟更新并在设备上本地应用操作

00:20:26.399 --> 00:20:29.190
或在单页应用程序中，而不等待服务器的响应

00:20:29.190 --> 00:20:33.059
获得真相的来源，以便您实际上可以在其中取得非常快的进步

00:20:33.059 --> 00:20:37.230
应用程序是一个很大的好处，所以这实际上是轻松的胜利之一

00:20:37.230 --> 00:20:43.760
那是我一周前想到的，从那时起，我就一直对我印象深刻，因为

00:20:43.760 --> 00:20:52.440
这简直让我震惊，因此我们可以在添加CRT的地方创建一些ecto支持

00:20:52.440 --> 00:20:59.960
在一个crdt领域，我从乐观主义中汲取了灵感

00:20:59.960 --> 00:21:07.950
乐观锁定支持无能为力哦，所以这实际上是在创建一个

00:21:07.950 --> 00:21:14.279
乐观锁，可以面对以下情况重试并重新应用操作

00:21:14.279 --> 00:21:21.480
ecto冲突并进入数据库，因此基本上基本上

00:21:21.480 --> 00:21:31.440
关于这条线的工作可能最简单，所以我们添加了一个crdt，我们只是叙述一下

00:21:31.440 --> 00:21:34.799
比赛代码，我们使用h mac对其进行签名，因此没有人可以对其进行编辑，并将其粘贴在

00:21:34.799 --> 00:21:42.720
表单中的隐藏字段，在phoenix中，当用户提交表单时，我们可以

00:21:42.720 --> 00:21:46.830
可以将新值从旧值备份到crdt中，然后再备份到

00:21:46.830 --> 00:21:50.130
服务器和Co TT可能已在数据库中更改，但我们使用的是副本

00:21:50.130 --> 00:21:55.399
与用户一起提交的之后发生的事情是我们可以做一个比较

00:21:55.399 --> 00:22:01.500
找到差异提取操作，然后将其重新应用到

00:22:01.500 --> 00:22:03.810
听起来很复杂，但是无论何时我们得到的都是

00:22:03.810 --> 00:22:09.780
第三条语句是一个更新，这是一个乐观主义者锁更新，如果

00:22:09.780 --> 00:22:12.750
违反了约束，我们实际上无法插入，因此您实际上无法

00:22:12.750 --> 00:22:17.130
如果其他人在您的旧crdt与

00:22:17.130 --> 00:22:22.110
当前，但您可以做的是选择有冲突的行合并crd挑逗和

00:22:22.110 --> 00:22:28.380
重新应用它，因此想象一个非常简单的情况，其中您真的很懒，而您却没有

00:22:28.380 --> 00:22:31.470
想考虑任何事情，您只需为每个单项添加最后的胜利

00:22:31.470 --> 00:22:35.670
字段，您可能会认为这是一种三价琐碎且无用的东西，但是您

00:22:35.670 --> 00:22:39.570
可以有一个非常大的表格，其中有很多不同的表格

00:22:39.570 --> 00:22:42.960
字段，某人只能编辑两个或三个，其他人可以编辑三个

00:22:42.960 --> 00:22:47.010
或四次，最后一次获胜的情况将是您

00:22:47.010 --> 00:22:50.820
保留这两组权利，因为没有改变的事物不会发生冲突

00:22:50.820 --> 00:22:56.670
实际上，如果您想做更多的工作，那么您就无法轻松地做到这一点。

00:22:56.670 --> 00:23:01.380
联系人，您实际上可以执行一些JavaScript逻辑并使用

00:23:01.380 --> 00:23:05.040
所谓的多值寄存器，我们处于冲突中，将保留

00:23:05.040 --> 00:23:09.900
两者都可以，然后您可以拉出最新的一个，并提示用户

00:23:09.900 --> 00:23:12.840
实际选择一个可能在以后某个时候与他们发生冲突的人

00:23:12.840 --> 00:23:16.410
及时处理，以便您仍然可以保留其中的一些内容并将其保存在

00:23:16.410 --> 00:23:20.900
简单非常简单的状态，这的真正好处是，如果我回去

00:23:20.900 --> 00:23:25.350
我仍然保留自己的领域，因此我仍然可以运行复杂的选择查询

00:23:25.350 --> 00:23:29.370
不要放弃任何事情，我仍然可以做所有我想做的事情

00:23:29.370 --> 00:23:34.650
我不能做的就是直接插入而不触碰所有内容

00:23:34.650 --> 00:23:38.280
否则尽管有了选择语句和复杂的报告，我明白了，这是

00:23:38.280 --> 00:23:45.780
太好了，这些对我来说是一些不错的短期目标，我希望

00:23:45.780 --> 00:23:52.890
在圣诞节中期目标之前可以完成的工作，我们可以做代理格子吗？

00:23:52.890 --> 00:24:02.100
来自jose演讲的crdt我认为在Erling用户会议上我们可以

00:24:02.100 --> 00:24:05.330
那样做

00:24:06.440 --> 00:24:14.149
因此，让我们看到很多crd挑逗只有在任何时候才有可能真正实现

00:24:14.149 --> 00:24:18.559
我们实际上有更多的合作，因为长生不老药被牢牢锁定在

00:24:18.559 --> 00:24:24.200
服务器，我们真的没有长生不老药的iPhone应用程序，但我们实际上要

00:24:24.200 --> 00:24:29.090
在我们真正采取行动之前，需要依靠其他一些技术来赶上

00:24:29.090 --> 00:24:35.179
用crd逗弄，所以我真正想要的东西在我的愿望清单上，我需要我

00:24:35.179 --> 00:24:40.159
我真的很想一个很好的八卦协议，它可以从另一个耳环中解放出来

00:24:40.159 --> 00:24:45.169
项目，并且没有非常复杂的依赖项，因此我不想包含

00:24:45.169 --> 00:24:50.750
整个项目只是为了获得其casa协议的外部表示形式

00:24:50.750 --> 00:24:55.100
这些crdt类型非常重要，并且很难推理，因为

00:24:55.100 --> 00:24:59.509
他们不适合Jason和其他很多更好的人

00:24:59.509 --> 00:25:04.340
他们并没有太多的序列化格式，所以我们可能不得不

00:25:04.340 --> 00:25:09.279
在Jason之上实现一些功能，我们将在该位置上运行一个快速映射

00:25:09.279 --> 00:25:14.509
能够将其转化为我们可以使用的东西，就像我说的其他语言一样

00:25:14.509 --> 00:25:18.139
使用这些crdt属性中的某些属性将需要支持，并且更大

00:25:18.139 --> 00:25:23.179
系统，因为我们都在制造非常异构的系统，我认为其中之一

00:25:23.179 --> 00:25:27.230
轻松获胜实际上可能是图书馆的支持，尤其是余烬和反应，

00:25:27.230 --> 00:25:31.460
实际图形化所有人都是做事的好方法，因为您可以

00:25:31.460 --> 00:25:36.639
在更新中包含crdt上下文，您可以实际应用

00:25:36.639 --> 00:25:41.539
而不是推断事件，您实际上可以直接从

00:25:41.539 --> 00:25:47.629
用户并处于状态，如果他们经过了良好的测试，状态将是

00:25:47.629 --> 00:25:50.899
保持警惕，让浏览器更具状态性，这在使用时更安全

00:25:50.899 --> 00:25:56.600
您随时随地都在哪里，为什么它们的数据类型为

00:25:56.600 --> 00:26:02.470
启示录

00:26:02.590 --> 00:26:13.909
是的，我在紧急情况下短时间工作

00:26:13.909 --> 00:26:20.179
操作不是紧急操作中心，但我正在与供应商合作

00:26:20.179 --> 00:26:26.390
谁把东西卖给了紧急行动中心他们使用的东西和这些东西

00:26:26.390 --> 00:26:32.360
签约用胶带固定在一起界面很差

00:26:32.360 --> 00:26:36.559
看起来他们大约15岁，也许我不认为我

00:26:36.559 --> 00:26:41.630
不要认为所有高级永久性程序员中的许多供应商都只是

00:26:41.630 --> 00:26:48.019
为了支持新版本的Windows，他们并不能很好地沟通

00:26:48.019 --> 00:26:52.070
假设您的紧急操作中心在线，并且如果您还记得

00:26:52.070 --> 00:26:56.029
卡特里娜飓风和我最近看过的一些回顾展

00:26:56.029 --> 00:26:59.960
希望最大的问题之一是该单元没有通信

00:26:59.960 --> 00:27:03.529
电话网络中断，他们会派人出去寻找

00:27:03.529 --> 00:27:06.350
发生，当他们帮助时，它会消失两三四天

00:27:06.350 --> 00:27:09.830
解决问题，但树上的决策者都不知道是什么

00:27:09.830 --> 00:27:13.610
发生在地面上，只是人们会消失的新奥尔良

00:27:13.610 --> 00:27:17.299
就像一个黑洞，只会吸引志愿者和政府官员

00:27:17.299 --> 00:27:21.559
而且三到四天没人会看到他们，您无法做出决定

00:27:21.559 --> 00:27:27.529
关于提供什么，如果您不知道他们需要什么，请发送给他们

00:27:27.529 --> 00:27:31.519
那真的很棒，那就是一旦您在电话上安装了DTS，您就可以

00:27:31.519 --> 00:27:34.940
点对点交流，如果您担心可以签名的安全性

00:27:34.940 --> 00:27:37.880
带有CA证书的所有内容，还有一个证书链，您可以

00:27:37.880 --> 00:27:41.779
解决这些问题，我们就可以从货架上抢库了

00:27:41.779 --> 00:27:45.860
缺少的部分实际上是crd t​​ee，实际上没有多少语言

00:27:45.860 --> 00:27:51.740
它们，它们是我们可能为人们省去很多痛苦的方法之一

00:27:51.740 --> 00:27:56.899
当自然灾害时，我们失去了很多技术优势

00:27:56.899 --> 00:28:01.519
之所以发生，是因为我们用来自动化物流的很多东西都依赖于

00:28:01.519 --> 00:28:06.590
大量依靠技术，实际上没有多少人试图做到这一点

00:28:06.590 --> 00:28:11.270
工作和一个断开的状态，这是我的意思，我们看到有多少

00:28:11.270 --> 00:28:14.809
您有手机应用程序，可以在手机上执行某些操作，

00:28:14.809 --> 00:28:18.650
浏览器应用程序，没有匹配的东西，您必须沉没

00:28:18.650 --> 00:28:24.110
有时您必须关闭浏览器接收器，然后像重新登录

00:28:24.110 --> 00:28:30.110
只是看到更新，所以我认为CRT可以提供很多可观的价值，我

00:28:30.110 --> 00:28:36.770
希望您能尝试使用它们，从而获得很大的弹性和速度，并且您

00:28:36.770 --> 00:28:41.780
可以将某些模型上的同步推迟几天，直到没有同步

00:28:41.780 --> 00:28:45.770
甚至是一个商业案例，如果您只有50或60个人，

00:28:45.770 --> 00:28:48.800
您的组织，一个星期都没有人沟通，然后

00:28:48.800 --> 00:28:54.710
每个人都进入办公室，每个人都同步在一起，你知道

00:28:54.710 --> 00:28:57.410
只有极少数的冲突需要您解决，所有的一切

00:28:57.410 --> 00:29:02.150
效果很好，您甚至不必担心真正的一致性

00:29:02.150 --> 00:29:08.360
您可以等待一两个星期的问题，还可以帮助网络连接那些

00:29:08.360 --> 00:29:11.390
想要在可能要通过身份验证的地铁上工作

00:29:11.390 --> 00:29:14.630
服务器登录，但一旦拥有了一段时间，您希望能够让

00:29:14.630 --> 00:29:18.890
用户在本地应用操作，并始终保留并始终拥有这些操作

00:29:18.890 --> 00:29:22.310
即使他们是别人或已经完成某件事，编辑也能够同步

00:29:22.310 --> 00:29:28.130
在浏览器中，我还可以使用帮助请求请求和讨论

00:29:28.130 --> 00:29:33.860
欢迎，我可以在很长一段时间内谈论这些东西

00:29:33.860 --> 00:29:41.240
可能已经意识到，所以这里有一些非常有趣的人和工作

00:29:41.240 --> 00:29:51.400
您可以查找Lindsey Cooper做了很多非常有趣的推理

00:29:51.400 --> 00:29:55.550
就像我实际上发现阅读她的一些博客文章之类的一件事

00:29:55.550 --> 00:30:02.000
您是否可以实际应用所谓的通货膨胀性通货膨胀更新

00:30:02.000 --> 00:30:06.470
无需实际进行任何同步，并且您不需要

00:30:06.470 --> 00:30:12.320
保留更新的可交换和关联属性，因此一个

00:30:12.320 --> 00:30:18.620
举例来说，在凤凰城（Phoenix）中，您想防止加入

00:30:18.620 --> 00:30:22.210
洪水泛滥，您每两到三秒钟就会沉没所有服务器，

00:30:22.210 --> 00:30:26.600
因此，您可以做的是，当我们的用户加入时，您可以拥有一个本地设置

00:30:26.600 --> 00:30:29.360
天真地添加和删除，然后

00:30:29.360 --> 00:30:34.370
三秒钟到了，您将所有这些折叠起来并合并到crdt集中

00:30:34.370 --> 00:30:40.610
如果有人加入频道10次并离开频道10，则此操作为一项操作

00:30:40.610 --> 00:30:44.870
发生的情况是，所有这些事件都通过添加删除来崩溃

00:30:44.870 --> 00:30:49.700
最多只能设置为一个，因此最多一次它们就可以淹没

00:30:49.700 --> 00:30:54.470
带有加入或离开消息的频道，这是一个非常不错的属性，因此

00:30:54.470 --> 00:31:01.910
我听说过克里斯托弗·迈克尔·约翰（Chris John）的故事，他每年大约有两次

00:31:01.910 --> 00:31:07.580
所以他发表了所有关于CRT茶的论文，

00:31:07.580 --> 00:31:12.620
卡洛斯·佩盖罗（Carlos Peguero）学术界，我真的很想念他一小时的特警

00:31:12.620 --> 00:31:18.679
他真的将反应性ET来源推到了非常有趣的程度，这是

00:31:18.679 --> 00:31:22.850
反应数据类型是当前库的另一个主要灵感

00:31:22.850 --> 00:31:27.290
这是用十六进制表示的织机，这是一份摘要文件，其中包含了更多内容

00:31:27.290 --> 00:31:31.760
细节，虽然它们有很多希腊希腊字母以及所有内容

00:31:31.760 --> 00:31:37.330
在纸上也有非常好的图表，差不多就可以了

