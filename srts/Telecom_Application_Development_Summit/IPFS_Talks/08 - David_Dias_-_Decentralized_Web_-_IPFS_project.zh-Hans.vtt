WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.620 --> 00:00:06.379
[音乐]

00:00:07.799 --> 00:00:12.269
大家好，正如Paula所说，这将是最后的记号，我们将去

00:00:12.269 --> 00:00:16.379
进入面板，但在进入面板之前，我想谈一谈

00:00:16.379 --> 00:00:21.869
分布式网络，所以我是谁我是David我在一家名为协议应用程序的公司工作

00:00:21.869 --> 00:00:25.590
我是点对点系统的软件工程师

00:00:25.590 --> 00:00:29.279
研究人员在那里的协议实验室，我们很好地开发技术

00:00:29.279 --> 00:00:33.690
改善网络的协议，正如我们在整篇文章中所看到的

00:00:33.690 --> 00:00:37.290
今天的演讲在网络上存在一些问题，例如身份

00:00:37.290 --> 00:00:41.270
通信互操作性在创建丰富的生态系统方面发挥了巨大作用

00:00:41.270 --> 00:00:47.219
人们可以在上面建立自己的业务，但是我们看到

00:00:47.219 --> 00:00:51.750
过去十年间像围墙花园一样，所以我破译了梅山，那里的人们只是

00:00:51.750 --> 00:00:57.329
控制用户信息，就像马克·安德森（Marc Andreessen）在2011年所说的那样

00:00:57.329 --> 00:01:00.989
软件正在吞噬世界，如今，即使您的软件

00:01:00.989 --> 00:01:07.460
业务应该在线，并且创造的就像今天一样

00:01:07.460 --> 00:01:13.409
每分钟都像吨级数据一样，例如TB级和TB级

00:01:13.409 --> 00:01:21.360
生成在线视频新闻图像消息等，因为它的方式

00:01:21.360 --> 00:01:25.290
阅读是设计出来的，这要归功于从一开始就要做的

00:01:25.290 --> 00:01:29.490
端到端原则以及我们不断通过的其他一些架构决策

00:01:29.490 --> 00:01:34.619
一遍又一遍地重复电线中的相同位以说明这一点，让我们

00:01:34.619 --> 00:01:38.189
看一个简单的例子，例如，如果我想在这样的平台上观看视频

00:01:38.189 --> 00:01:44.520
YouTube，想象我们离YouTube八个中心

00:01:44.520 --> 00:01:49.079
我在这个地方检查了40个旋钮，但为了简单起见，让我们

00:01:49.079 --> 00:01:53.430
考虑八个，所以如果我们想看一个简单的视频，也许

00:01:53.430 --> 00:01:58.079
像其他高清视频一样200兆字节，我们喜欢转身

00:01:58.079 --> 00:02:01.799
人在这里尝试下载此视频的机器，我们会像

00:02:01.799 --> 00:02:07.500
像跳频一样通过电缆传输48 GB数据的努力

00:02:07.500 --> 00:02:13.620
从YouTube到我们的用户我们的用户机器，但是就像

00:02:13.620 --> 00:02:18.599
在这张图片中是错误的，就像第一个用户获取数据以及他们是否

00:02:18.599 --> 00:02:23.430
与所有其他用户位于同一区域，为什么我们要去

00:02:23.430 --> 00:02:28.500
就像我们为什么要强迫网络转移相同的骨干网

00:02:28.500 --> 00:02:34.769
比特一遍又一遍，这些数字变得令人恐惧，例如，如果我们选择

00:02:34.769 --> 00:02:38.159
视频Gangnam风格的屏幕截图，我们在这里看到的更多

00:02:38.159 --> 00:02:41.970
比这部影片中观看次数最多的影片高出两倍半

00:02:41.970 --> 00:02:46.890
YouTube的餐馆，我们传递的数据量超过了EB级

00:02:46.890 --> 00:02:50.879
电线，也许其中许多视图实际上是来自同一台机器

00:02:50.879 --> 00:02:54.599
因为我相信每个人都有观看视频的经验

00:02:54.599 --> 00:02:58.769
在YouTube Vimeo或任何其他平台上，他们单击浏览器中的刷新

00:02:58.769 --> 00:03:03.859
突然又开始加载它又开始重新加载整个东西

00:03:03.859 --> 00:03:09.780
我们喜欢工程师就像网络工程师一样，就像软件工程师试图解决这个问题一样

00:03:09.780 --> 00:03:15.750
通过将CDMS放在中间，通过使内容更接近用户

00:03:15.750 --> 00:03:19.650
但这并不能真正解决问题，只是一个简单的补丁，我们仍然

00:03:19.650 --> 00:03:24.030
从我们的机器到目的地的跳数增加了延迟

00:03:24.030 --> 00:03:27.660
他们看到端头已经定位，并且电信也一直在尝试

00:03:27.660 --> 00:03:34.349
通过添加更大的管道（例如它们）来解决此问题

00:03:34.349 --> 00:03:39.540
不幸的是，他们增加了为用户提供的带宽

00:03:39.540 --> 00:03:44.370
即使付出了所有这些努力，例如，我们也看不到带宽增长如此之快，

00:03:44.370 --> 00:03:49.109
我们一想到就会看到这是一个投影或类似的数据

00:03:49.109 --> 00:03:54.359
从2007年到2012年，已经有点老了，但我们

00:03:54.359 --> 00:03:58.290
可以看到葡萄酒和平均连接速度几乎持平OK

00:03:58.290 --> 00:04:04.680
日本在日本的例外情况不是特殊情况，我们也看到了

00:04:04.680 --> 00:04:09.930
随着用户生成更多数据，存储变得更便宜，

00:04:09.930 --> 00:04:14.400
就像通过网络传递越来越多的数据一样

00:04:14.400 --> 00:04:17.910
带宽并没有在更快的地方稳定增长，而

00:04:17.910 --> 00:04:22.380
产生的速度真的非常快，互联网将给人以深刻的印象

00:04:22.380 --> 00:04:26.039
膨胀就像我们可以继续相同的行为，相同的体系结构一样

00:04:26.039 --> 00:04:30.660
互联网只会感觉缓慢，因为

00:04:30.660 --> 00:04:34.290
对于我们已经建立的管道来说，我们要转移的管道太大了，

00:04:34.290 --> 00:04:39.150
更糟的是，即使我们想要完美连接多个千兆光纤

00:04:39.150 --> 00:04:43.770
与每个家庭的连接并不能解决我们所承诺的每一个问题

00:04:43.770 --> 00:04:48.390
十年前，电信公司和我的大型软件公司认为，每个人都是

00:04:48.390 --> 00:04:52.770
即将建立联系，不必担心，例如，仅在以下位置构建您的应用程序即可

00:04:52.770 --> 00:04:56.910
网络，一切都会好起来的，但如果我们认为那不是现实，

00:04:56.910 --> 00:05:00.810
就像在低带宽的情况下一样，就像您在遥远的地方

00:05:00.810 --> 00:05:04.860
地区或发展中国家，您只是不喜欢这种连接

00:05:04.860 --> 00:05:08.880
你习惯在发展中国家经历像

00:05:08.880 --> 00:05:14.370
干扰越来越多，同一房间共享更多设备

00:05:14.370 --> 00:05:17.970
在相同的空间中，这些无线电信号中存在很多干扰，

00:05:17.970 --> 00:05:22.200
我们使用那里有交通拥堵的问题，还有像其他人一样的停运

00:05:22.200 --> 00:05:28.680
会像过去的大火一样倒下-就像力量正在

00:05:28.680 --> 00:05:31.710
切，我怀疑发件人会下降，而这种情况不会发生

00:05:31.710 --> 00:05:34.770
如果您的房屋有非常好的光纤连接，服务便是重要的

00:05:34.770 --> 00:05:43.020
刚刚消失了，我们看到的是，我们今天使用的所有这些服务

00:05:43.020 --> 00:05:48.570
曾经与我们经营业务所依赖的亲人交流

00:05:48.570 --> 00:05:52.860
假设我们将始终保持联系，并尽快

00:05:52.860 --> 00:05:57.990
与骨干网的分离就像万亿亿美元一样

00:05:57.990 --> 00:06:01.740
每次都像互联网知识一样，每年都会失去价值

00:06:01.740 --> 00:06:05.310
DDoS攻击就像是针对服务，然后所有人

00:06:05.310 --> 00:06:09.390
使用该服务的用户无法在两天内使用它，这是我们通常的情况

00:06:09.390 --> 00:06:14.970
而不是谈论其他我可以更深入探讨的问题，但是

00:06:14.970 --> 00:06:18.930
像安全性一样仍然是一个问题，我们一直在加强拉HTTP的能力

00:06:18.930 --> 00:06:23.190
到处都是，但实际上就像数据没有在静态加密一样，所以

00:06:23.190 --> 00:06:27.690
有人可以去那里更改数据，我们甚至无法分辨

00:06:27.690 --> 00:06:33.240
物联网的一个非常大的问题，例如网络模型，不适用于物联网，因此它是

00:06:33.240 --> 00:06:38.250
被排除在所有这些设备之外，人们正在构建自定义私有

00:06:38.250 --> 00:06:42.900
开发其物联网解决方案的协议存在永久性问题，例如

00:06:42.900 --> 00:06:48.419
保持机翼不断折断我们不断丢失数据，还有问题

00:06:48.419 --> 00:06:52.290
审查和控制各国政府可以关闭互联网的地方

00:06:52.290 --> 00:06:58.500
对于整个人口来说，就像一个杀戮开关，但是这有点

00:06:58.500 --> 00:07:02.699
具有讽刺意味的是，网络的发布方式与

00:07:02.699 --> 00:07:08.250
互联网被设计为可分配的ARPANET系统，最终

00:07:08.250 --> 00:07:12.720
进化了我们今天拥有的互联网，这是一个可以提供的交流平台

00:07:12.720 --> 00:07:18.479
美国政府和军方像整个设计一样抵抗核袭击

00:07:18.479 --> 00:07:22.110
系统就像整个国家都消失了一样，更坚固的房子可以

00:07:22.110 --> 00:07:26.370
仍然在这里工作，我们看到Robert可以展示其最初的设计

00:07:26.370 --> 00:07:29.820
ARPANET，他正在像这样解释自己的存储和转发技术

00:07:29.820 --> 00:07:36.660
在所有这些跃点上传输数据的技术，并且喜欢启用这些跃点

00:07:36.660 --> 00:07:41.120
足够聪明，如果发生中断，可以通过其他路径路由数据

00:07:41.120 --> 00:07:48.090
但是随着时间的流逝，尽管网络是从分布式开始的

00:07:48.090 --> 00:07:51.360
开始转向集中式架构

00:07:51.360 --> 00:07:55.979
可以理解，这是一种更多模型进行推理的方式，就像它更简单

00:07:55.979 --> 00:07:59.669
要了解，并且有一些机会成本和一些社交

00:07:59.669 --> 00:08:03.410
经济原因和压力使其迁移到集中式架构

00:08:03.410 --> 00:08:08.820
尽管如此，事实是它实际上根本不需要集中

00:08:08.820 --> 00:08:13.530
就像我们正在破坏大量价值或失去创造大量价值的能力

00:08:13.530 --> 00:08:20.310
如此集中的价值，我们需要将其带回成为

00:08:20.310 --> 00:08:24.570
分布，以便我们可以将我们的应用程序中的信息用于我们的服务

00:08:24.570 --> 00:08:28.949
现在不可能的地方，并且在此框架中

00:08:28.949 --> 00:08:35.820
请记住，我欢迎大家进入ipfs星际文件系统ipfs

00:08:35.820 --> 00:08:40.560
是一种内容寻址的文件系统，它从

00:08:40.560 --> 00:08:46.170
脆弱的位置将天气域名解析为IP，并将其解析为一个名称

00:08:46.170 --> 00:08:53.310
到-内容唯一标识符，这意味着更改模型是什么意思

00:08:53.310 --> 00:08:57.780
通过HTTP的传统网络，您正在寻找一些

00:08:57.780 --> 00:09:01.920
资源，然后执行域名解析，然后找到计算机

00:09:01.920 --> 00:09:06.990
负责该资源，是您联系的中心权限

00:09:06.990 --> 00:09:10.560
那台机器，然后您收回了资源，问题就好像有一个

00:09:10.560 --> 00:09:13.440
网络分裂，就像当您失去与该计算机的连接，甚至是断开连接时一样

00:09:13.440 --> 00:09:16.530
就像失去与NS的连接一样，然后您不知道哪台计算机

00:09:16.530 --> 00:09:22.050
拥有保留权，发生时就是网络中断但

00:09:22.050 --> 00:09:26.220
ipfs更改，因为我们正在请求联系人标识符

00:09:26.220 --> 00:09:30.600
谁为我提供内容无关紧要，我只需要触摸它作为网络

00:09:30.600 --> 00:09:35.310
谁拥有内容，然后我可以验证我是否收到了正确的内容

00:09:35.310 --> 00:09:39.630
如果网络分裂，没关系，只要内容在我的

00:09:39.630 --> 00:09:44.190
在网络的另一端，我的状况很好，甚至更好，就像我已经拥有

00:09:44.190 --> 00:09:47.910
满足我自己，为什么我应该首先进入网络

00:09:47.910 --> 00:09:50.730
就像关闭它一样，就像在跳动您喜欢的光速一样

00:09:50.730 --> 00:09:57.720
良好的纪律很容易，所以ipfs本质上是一个很棒的想法的集合

00:09:57.720 --> 00:10:02.940
从已经部署的生产就绪型系统以及很多想法

00:10:02.940 --> 00:10:08.010
出现在学术界，并一起蒸馏下来，以创造出更好的

00:10:08.010 --> 00:10:12.839
如今，对于Web的原语，我们有此协议的两种实现，

00:10:12.839 --> 00:10:17.790
被开发成一种，用javascript开发，一种用于

00:10:17.790 --> 00:10:21.720
希望使用ipfs构建系统并希望利用完整功能的用户

00:10:21.720 --> 00:10:30.150
系统资源以最大化数据分布和JavaScript

00:10:30.150 --> 00:10:34.710
实施的重点是将ipfs放在浏览器上，就像这样

00:10:34.710 --> 00:10:38.760
有可能在浏览器上运行完全分布式的协议

00:10:38.760 --> 00:10:42.839
完全不安装任何插件，这当然使用了点对点

00:10:42.839 --> 00:10:49.320
浏览器的传输在哪里接吻，所以ipfs里面是什么

00:10:49.320 --> 00:10:56.310
从我们自己开始描述所有数据类型，就像我们始终使用自己

00:10:56.310 --> 00:11:00.060
可描述的数据类型，使我们能够支持多种类型的密码

00:11:00.060 --> 00:11:05.550
灰化几种类型的地址几种类型的数据编码，例如from

00:11:05.550 --> 00:11:12.399
临时块到本机ipfs的任何块，我们也打包了

00:11:12.399 --> 00:11:16.660
内容的标识符不仅仅是内容本身的ash值

00:11:16.660 --> 00:11:27.910
而且还有一个编解码器，它描述了内容是什么类型的数据

00:11:27.910 --> 00:11:32.800
这对于解析器和查询引擎非常有用，因为它实际上是

00:11:32.800 --> 00:11:37.990
例如调出扩展名，然后选择文件中的所有数据

00:11:37.990 --> 00:11:42.249
ipfs是一种安全的数据结构，就像一切都表示为一个包和一个

00:11:42.249 --> 00:11:46.689
秘密图，每个链接都是默克尔链接默克尔链接意味着像它一样

00:11:46.689 --> 00:11:53.069
就像安全链接一样，您可以通过它的灰烬来检查它，就像安全链接一样

00:11:53.069 --> 00:11:57.399
我们将其称为merkel链接来自第一个创建者ralph merkle

00:11:57.399 --> 00:12:02.290
药用树，我们可能会熟悉默克尔树，因为您

00:12:02.290 --> 00:12:06.790
可能在git上使用过它们，甚至在区块链上甚至使用过它们

00:12:06.790 --> 00:12:10.809
如果使用BitTorrent之类的软件，或者您也在使用道德数据

00:12:10.809 --> 00:12:15.879
结构，顺便说一句，我需要像那些说那笔钱的人一样做笔记

00:12:15.879 --> 00:12:22.809
不会在树上生长，没想到硬币会如此直观地出现

00:12:22.809 --> 00:12:26.829
这是一个奇迹般的森林吗？

00:12:26.829 --> 00:12:31.870
可以作为参考，然后我们也打包了分布式命名

00:12:31.870 --> 00:12:36.040
自我认证的文件系统中的每一个灵感，基本上都是命名

00:12:36.040 --> 00:12:40.209
数字签名，因此这是一种更加安全的模型，他们不仅信任某些DNS

00:12:40.209 --> 00:12:45.579
点一些TTL值进行设计，然后我们的网络层

00:12:45.579 --> 00:12:49.449
可能成长为其他小组正在使用的独立项目

00:12:49.449 --> 00:12:55.179
称我们为点对点我们点对点是一种秘密调味料，使我们能够

00:12:55.179 --> 00:12:59.920
浏览器以及台式机本机应用程序中的ipfs，因为我们可以

00:12:59.920 --> 00:13:03.819
更改网络堆栈的属性，保持相同的原语相同

00:13:03.819 --> 00:13:07.149
解决，就像运行在最上面的应用程序一样，甚至都不必知道

00:13:07.149 --> 00:13:12.160
它改变了运行时间，所以我们听到很多开发人员说

00:13:12.160 --> 00:13:17.679
ipfs是我作为开发人员一直想要的层，这就是我的方式

00:13:17.679 --> 00:13:21.879
一直希望网络能够以用户身份运行，所以人们正在使用什么

00:13:21.879 --> 00:13:25.300
很好的分发似乎是一个很好的协议

00:13:25.300 --> 00:13:30.820
用于分发视频和流媒体之类的视频，因为像您一样，您甚至可以

00:13:30.820 --> 00:13:34.360
在网络上投放质量更高的视频，因为每个人都将

00:13:34.360 --> 00:13:38.140
正在流播此视频，它将变得更快，我们去记录人们

00:13:38.140 --> 00:13:41.560
之所以使用它，是因为因为您可以对每条数据进行身份验证

00:13:41.560 --> 00:13:45.550
您通过ipfs收到的邮件非常适合必须保存的类似文档

00:13:45.550 --> 00:13:52.450
他们有一些法律上的诚信，有像ipfs pics这样的应用程序，您可以去

00:13:52.450 --> 00:13:57.430
今天在线，喜欢拉你的照片这个活动的照片ipfs讲话和

00:13:57.430 --> 00:14:01.750
然后共享不仅拥有可共享的URL，而且您也拥有类似的内容-因此

00:14:01.750 --> 00:14:06.270
就像即使照片在线，您仍然可以获取这些照片

00:14:06.270 --> 00:14:10.990
显然3d模型和VR世界很大，因此ipfs就像完美的用法

00:14:10.990 --> 00:14:15.190
运输这些模型的案例涂鸦构建游戏科学数据

00:14:15.190 --> 00:14:18.670
就像移动数TB的科学研究数据一样，这是

00:14:18.670 --> 00:14:23.050
实际上是导致ipfs博客发展的主要动机之一

00:14:23.050 --> 00:14:28.780
和网站以及完全分布式的应用程序等等，因此我们已经开始

00:14:28.780 --> 00:14:31.780
就像对话仍在初期，但就像我们看到的很多

00:14:31.780 --> 00:14:36.250
兴趣喜欢在写作之间做一些交叉授粉

00:14:36.250 --> 00:14:40.060
项目和ipfs，我们认为我们可以相互学习并重用

00:14:40.060 --> 00:14:44.260
一些部分，并称为一些努力，例如我们点对点

00:14:44.260 --> 00:14:48.580
秘密调料，可以让您在浏览器或任何类型的浏览器中运行

00:14:48.580 --> 00:14:53.770
真正独立于设备功能的设备

00:14:53.770 --> 00:14:56.800
模块化，所以您不能只选择您想要运输的零件

00:14:56.800 --> 00:15:00.940
您想将其打包到您的应用程序中，如果有一些缺失的部分

00:15:00.940 --> 00:15:04.450
您可以随时将其插入，并使用

00:15:04.450 --> 00:15:08.740
您需要另一件也非常有趣的图片是IPL D，因此

00:15:08.740 --> 00:15:16.750
正如我们所看到的，我们认为级别利用了json模式规范和jason

00:15:16.750 --> 00:15:21.250
模式非常有用，因为它可以像我们一样为数据提供上下文

00:15:21.250 --> 00:15:25.030
关于内容的原因我们正在通过的数据只有严重

00:15:25.030 --> 00:15:29.470
json模式的问题在于，它需要一个URL，就像您可以看到的一样

00:15:29.470 --> 00:15:34.510
顶部有一个网址，就像我们无法解析此名称一样

00:15:34.510 --> 00:15:38.770
意思是像这样，不仅有ipfs，还可以抛出一个

00:15:38.770 --> 00:15:43.660
模式ID，那么您不仅可以更有效地兑现模式

00:15:43.660 --> 00:15:47.890
您还可以从本地网络的本地对等节点中检索它们

00:15:47.890 --> 00:15:52.060
因此，它使一切都能在不可能的情况下正常工作

00:15:52.060 --> 00:15:58.170
在您看到用户甚至更满意之前就可以确定

00:15:58.170 --> 00:16:05.260
因此，真正的总结是ipfs，这是升级我们不升级的网络的协议

00:16:05.260 --> 00:16:08.530
想创建一个替代的网站，这就是互联网的建立方式

00:16:08.530 --> 00:16:13.990
就像我们可以更换律师，如果我们采用EFS，最终如果是用户

00:16:13.990 --> 00:16:17.860
用户只会注意到他正在使用IP FS，因为网络可以在

00:16:17.860 --> 00:16:22.420
以前无法正常工作的场景，而且运行速度更快，因此这是使

00:16:22.420 --> 00:16:26.380
离线使用网络，使网络更智能，从而永久安全，尤其是

00:16:26.380 --> 00:16:31.600
更快的ipfs是一个非常大的开源项目，我们有350多个

00:16:31.600 --> 00:16:36.490
像Kadima这样的参与者每周都会来70人

00:16:36.490 --> 00:16:40.390
做研究审查，检查我们的规格，我们有来自

00:16:40.390 --> 00:16:45.010
业界尝试我们的api，就像我们拥有的点产品一样，

00:16:45.010 --> 00:16:49.870
只是来贡献自己喜欢的代码，甚至是我们的管理层

00:16:49.870 --> 00:16:53.440
我们对开发的冲刺管理是完全开放的，因此任何人都可以

00:16:53.440 --> 00:16:58.810
来参加这个过程，一切都开始了，IRC你可以走了

00:16:58.810 --> 00:17:03.449
冷静的Flash ipfs，我们将可以访问所有代码，而这一切都是MIT最明智的

00:17:03.449 --> 00:17:10.329
再次记录了一切，在那里我们作为一个分散的团队工作，所以我们

00:17:10.329 --> 00:17:16.150
写下所有内容，是的，这是我必须与您分享的有关ipfs的内容

00:17:16.150 --> 00:17:21.430
今天，我希望我能设法使您对ipfs感到兴奋，非常感谢

00:17:21.430 --> 00:17:27.870
再次邀请您成为我的一员，让我很兴奋，欢迎您提出问题

00:17:32.080 --> 00:17:45.050
所以在座谈会之前我们不是两个问题，我很好奇您是否会以充满活力的态度结束

00:17:45.050 --> 00:17:49.490
服务器端动态内容是服务器端的每条注释吗

00:17:49.490 --> 00:17:52.100
是服务器端，是的，因为我认为大多数网络

00:17:52.100 --> 00:17:58.250
如今，网页是在服务器上动态生成的，所以即使

00:17:58.250 --> 00:18:01.820
今天，好像有很多页面可以动态生成，但是像

00:18:01.820 --> 00:18:06.980
像现在这样，在客户端呈现了很多页面，所以它

00:18:06.980 --> 00:18:11.570
可以真的在任何时候，我可以在网络上的任何节点，但是

00:18:11.570 --> 00:18:16.970
我们处理得很好的方式让我跳到没有很多东西的幻灯片上

00:18:16.970 --> 00:18:20.960
有时间来解释这是一个行星际命名系统

00:18:20.960 --> 00:18:25.130
这里显示的是，就像我不是在指着你

00:18:25.130 --> 00:18:29.510
内容，就像将您指向我指向的数据模型上的固定点

00:18:29.510 --> 00:18:32.990
您是公钥的灰烬，而实际上公钥已解决

00:18:32.990 --> 00:18:40.040
在像DHT这样的系统中，您将获取数字化的记录

00:18:40.040 --> 00:18:45.320
在此DHT上签名，他们将拥有指向内容的实际灰烬的指针，因此

00:18:45.320 --> 00:18:48.860
我是内容制作人，还是内容制作人，例如，如果我有自己的博客或我的

00:18:48.860 --> 00:18:54.080
页面，我可以使用feed或某些东西，我可以更新数据模型，然后

00:18:54.080 --> 00:18:58.540
如果您想要比HT更快的速度，可以将这些记录发布到网络上

00:18:58.540 --> 00:19:04.040
因此，就像您希望您的供稿看起来像实时一样，

00:19:04.040 --> 00:19:09.320
 pub / sub进来，您可以订阅经过身份验证的提要的提要，例如

00:19:09.320 --> 00:19:12.470
您对该供稿有胃口，就始终可以验证数字签名

00:19:12.470 --> 00:19:16.250
评估您是否正在接收来自您信任的提供者的更新

00:19:16.250 --> 00:19:22.220
然后您就可以了解状态，然后获取该哈希值即可获取它

00:19:22.220 --> 00:19:27.530
来自网络的内容，我在想更多的事情，例如

00:19:27.530 --> 00:19:31.850
购物车，例如，如果我去亚马逊并且我有一个购物车，是的，这是货真价实的

00:19:31.850 --> 00:19:36.530
每次我重新加载页面时，服务器都会为我生成美国运通卡，这样您就可以

00:19:36.530 --> 00:19:43.909
可以同时包含动态内容和静态内容，所以在该模型中

00:19:43.909 --> 00:19:49.279
我们看到发生的事情就像您是否愿意将自己的网页投放到

00:19:49.279 --> 00:19:54.949
HDTV，以及是否将数据存储在网络中的某处以及是否

00:19:54.949 --> 00:19:59.179
总是喜欢混合搭配为用户服务的东西

00:19:59.179 --> 00:20:03.709
服务器上的ipfs和ipfs是一个可能正在获取资产的设备，例如我所知道的

00:20:03.709 --> 00:20:07.099
您要放入购物车但在购物车中的商品的图片

00:20:07.099 --> 00:20:11.899
最终您仍在构建，就像服务器端应用程序一样非常传统

00:20:11.899 --> 00:20:15.919
您只是在使用TFS，可能是为了更有效地将数据存储在您的

00:20:15.919 --> 00:20:21.249
数据中心或跨数据中心的制造购物车的方式

00:20:21.249 --> 00:20:26.299
分布式就像完全像该应用程序一样移动到前端

00:20:26.299 --> 00:20:32.899
结束客户端并让客户端在接触时更新网络本身

00:20:32.899 --> 00:20:38.779
像它穿过商店的购物车，你就像那些

00:20:38.779 --> 00:20:43.489
两种模式，又有类似的东西，分布式教育真的

00:20:43.489 --> 00:20:46.369
重要，因为就像您想确保用户可以告诉世界一样

00:20:46.369 --> 00:20:50.690
嘿，我想决定他们，就像我要购买make

00:20:50.690 --> 00:20:54.199
确保我只是购买了购物车中的东西

00:20:54.199 --> 00:21:00.099
但是，是的，所以您可以同时使用这两种模型，我认为您将从中受益更多

00:21:00.099 --> 00:21:07.339
在客户端然后在服务器上呈现所有内容，谢谢您再说一遍

00:21:07.339 --> 00:21:09.549
问题

00:21:13.070 --> 00:21:23.240
嗨，所以我实际上有两个问题，第一个是

00:21:23.240 --> 00:21:31.850
您的方法是PFS，您的意思是将数据复制到一系列跃点上，因为它是

00:21:31.850 --> 00:21:37.090
不是集中在一台服务器上，而是复制到很多服务器上

00:21:37.090 --> 00:21:46.750
分布在整个网络中这样做是因为您正在玩交流

00:21:46.750 --> 00:21:53.720
通过仅在整个过程中复制数据来增加延迟

00:21:53.720 --> 00:21:58.399
网络，而不仅仅是从服务器的一侧进行推送，因此

00:21:58.399 --> 00:22:03.529
是第一个问题，第二个问题是，谁来支付所有存储空间的费用

00:22:03.529 --> 00:22:07.789
因为没有集中的卡提供商，是的，他持有

00:22:07.789 --> 00:22:11.720
那个存储空间，当然要花很多钱来保存它

00:22:11.720 --> 00:22:19.250
数据还不错，谢谢优秀问题，我们确实得到了很多，所以ipfs

00:22:19.250 --> 00:22:24.200
他说运输是一种协议，可以作为一种运输工具，因此我们不会强迫

00:22:24.200 --> 00:22:28.879
与该领域中存在的其他迫使用户进行以下操作的协议相反

00:22:28.879 --> 00:22:33.049
存储其他用户的数据，我们不强迫任何人存储任何数据

00:22:33.049 --> 00:22:36.799
在这种情况下，我们像其他用户一样在这里看到的数据只有

00:22:36.799 --> 00:22:40.730
他们自己先提出要求，这样我也可以与其他人分享

00:22:40.730 --> 00:22:44.960
网络的基础，尽管我们再次在ipfs上构建了我们在IP FS之上构建的网络

00:22:44.960 --> 00:22:49.279
不会在没有用户要求的情况下将数据推送到任何人的计算机中

00:22:49.279 --> 00:22:53.149
重要的部分，因为我们不希望人们对数据负责

00:22:53.149 --> 00:22:56.870
其他人就像试图将网络存储在我们正在构建的文件中

00:22:56.870 --> 00:23:02.600
Bob ipfs上的另一个协议称为Falcone，而Falcone是加密货币

00:23:02.600 --> 00:23:07.460
货币激励的坚实网络，我可以支付两个节点

00:23:07.460 --> 00:23:12.440
像Amazon s3一样在网络中担任志愿者，但采用的是规范的方式

00:23:12.440 --> 00:23:16.759
联系提供网络存储的节点，我可以说我有这些文件，

00:23:16.759 --> 00:23:21.559
我有这笔钱，我想付给自愿者20年薪水的人

00:23:21.559 --> 00:23:25.549
对我来说像做一段时间一样存储这些文件

00:23:25.549 --> 00:23:29.059
然后我们有一个耐用性证明，我们将检查加班时间

00:23:29.059 --> 00:23:32.960
如果文件仍然像来自网络的蔬菜，并且对于

00:23:32.960 --> 00:23:35.330
就像在那个时间段内投放该文件一样

00:23:35.330 --> 00:23:40.250
我们会因为我存储文件而获得补偿，因此这使任何人都能

00:23:40.250 --> 00:23:46.429
光盘将其插入网络中，而像经济这样的部分，我们可以

00:23:46.429 --> 00:23:52.070
就像支付很多副本一样，我们可以支付很快获得副本的费用

00:23:52.070 --> 00:23:56.720
我们可以支付的费用，以在网络中拥有副本

00:23:56.720 --> 00:24:02.360
很难再次在偏远地区提供数据

00:24:02.360 --> 00:24:06.409
发展中国家那里没有数据中心，而延迟只是

00:24:06.409 --> 00:24:12.799
如此庞大，所以我们可以付钱给本地偏远地区的用户来存储内容，因此

00:24:12.799 --> 00:24:17.350
他们在要求内容时离他们很近

00:24:22.930 --> 00:24:26.049
[音乐]

