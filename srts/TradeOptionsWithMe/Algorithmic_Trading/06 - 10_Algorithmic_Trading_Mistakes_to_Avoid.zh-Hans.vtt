WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:03.990
算法交易可能很难，尤其是当您刚开始时

00:00:03.990 --> 00:00:08.670
因为在这个视频中似乎有很多事情需要我们注意

00:00:08.670 --> 00:00:12.450
将涵盖一些最大和最常见的算法交易错误

00:00:12.450 --> 00:00:16.800
避免所有这些错误可以显着改善您的

00:00:16.800 --> 00:00:22.320
话虽如此，但在开发时，让我们立即了解一下它的交易性能

00:00:22.320 --> 00:00:26.880
使用历史数据来测试算法并进行分析的交易算法

00:00:26.880 --> 00:00:31.170
它过去的表现为您提供了关于好坏的重要反馈

00:00:31.170 --> 00:00:35.850
即使返回，您的算法也会在选定的时间范围内执行

00:00:35.850 --> 00:00:39.719
测试是任何算法交易者都必不可少的重要工具

00:00:39.719 --> 00:00:44.820
如果做不正确的回测还可以做更多的事情，那也很危险。

00:00:44.820 --> 00:00:48.450
弊大于利是第一个算法交易错误

00:00:48.450 --> 00:00:52.949
我们要看的是一个经典的回测错误，这是最大的错误之一

00:00:52.949 --> 00:00:58.410
最常见的回测错误是过度拟合过度拟合是

00:00:58.410 --> 00:01:02.430
针对测试数据过度优化算法，让我给您一个具体的

00:01:02.430 --> 00:01:08.130
为了说明这一点的示例，这是选定的XYZ的价格图表

00:01:08.130 --> 00:01:13.200
从此定价数据开始，您可以创建一个购买XY的交易算法

00:01:13.200 --> 00:01:18.090
周一的Z表示XYZ的周二偏差，最后是的销售量

00:01:18.090 --> 00:01:23.070
在本周的星期四，此算法可能是效果最好的算法之一

00:01:23.070 --> 00:01:27.540
存在的算法，但是如果您再看其他一周的算法，

00:01:27.540 --> 00:01:31.770
可能执行得很糟糕，因为此算法的整个思想是

00:01:31.770 --> 00:01:36.990
根据这一周的定价数据，换句话说，该算法已结束

00:01:36.990 --> 00:01:42.090
即使在本周回测试此算法，也适合本周

00:01:42.090 --> 00:01:45.860
显示出巨大的回报，该算法完全没有用

00:01:45.860 --> 00:01:51.240
因此，在进行反向测试时，基本的原则是不要过度优化算法以

00:01:51.240 --> 00:01:56.130
历史数据避免过度拟合的最佳方法之一是保留良好的

00:01:56.130 --> 00:02:01.469
未使用的可用测试数据的百分比，例如您只能使用

00:02:01.469 --> 00:02:06.869
尽快开发您的ergo时，约有60％的可用历史数据

00:02:06.869 --> 00:02:10.530
当您认为Elega处于足够的阶段时，您可以在

00:02:10.530 --> 00:02:14.770
如果在以下情况下性能明显较差，则保留未修改的数据

00:02:14.770 --> 00:02:18.850
原始数据，而不是他用来开发数据的数据

00:02:18.850 --> 00:02:22.300
适合它另一种常见的算法交易

00:02:22.300 --> 00:02:26.440
错误是在算法中使用了实际无法获得的数据

00:02:26.440 --> 00:02:31.360
时间最简单的例子是每日的高点或低点以及算法

00:02:31.360 --> 00:02:35.380
在每日低点买入，并说每日高点将有惊人的

00:02:35.380 --> 00:02:40.030
历史表现，但实际上它不会真正起作用，因为您不知道

00:02:40.030 --> 00:02:45.370
事先在您的算法中使用每日高点和低点预先设定每日高点或低点

00:02:45.370 --> 00:02:49.930
似乎是一个明显的错误，但有些情况并非如此

00:02:49.930 --> 00:02:55.030
很明显，因此请务必确保您的算法仅使用以下信息：

00:02:55.030 --> 00:02:59.920
实际上在他们使用它之前就已经知道了，关于这个错误的最糟糕的部分是

00:02:59.920 --> 00:03:04.060
可能很难注意到它，因为反向测试无法帮助您意识到

00:03:04.060 --> 00:03:08.500
您正在将这个错误当作一种算法，该算法会使用未来的数据来做出决策

00:03:08.500 --> 00:03:13.569
在反向测试中会很好用，但是对实时数据却很糟糕，因为它不能

00:03:13.569 --> 00:03:18.459
实际访问未来数据避免此错误的一种方法是前行

00:03:18.459 --> 00:03:22.660
测试前向测试基本上与后向测试相反

00:03:22.660 --> 00:03:27.610
而不是使用过去的数据来测试您的算法，而是使用实时数据来对其进行测试

00:03:27.610 --> 00:03:32.470
但实际上并没有冒任何钱的风险，因此向前测试基本上是

00:03:32.470 --> 00:03:36.610
算法交易的纸面交易将我们带入下一个

00:03:36.610 --> 00:03:41.680
人为交易错误，他们不需要向前测试您的算法

00:03:41.680 --> 00:03:47.049
后退测试前行测试可能非常乏味而无聊的测试

00:03:47.049 --> 00:03:50.680
允许您在几分钟内对数年的数据进行算法测试

00:03:50.680 --> 00:03:55.900
而向前走测试需要一天的时间进行一天的交易数据，这是因为

00:03:55.900 --> 00:04:01.090
这种前瞻性测试通常被完全忽略或忽略，这是

00:04:01.090 --> 00:04:03.940
这是一个巨大的错误，因为前行测试是其中的一项

00:04:03.940 --> 00:04:08.200
测试算法的最佳方法，而不会冒被捕食的风险

00:04:08.200 --> 00:04:12.850
测试错误重要的向前测试结果远比

00:04:12.850 --> 00:04:17.709
出色的背部测试结果背部测试结果可以很好地适应各种

00:04:17.709 --> 00:04:22.720
除了您的算法实际上是很好的过度拟合或使用之外的其他原因

00:04:22.720 --> 00:04:26.150
预测未来的未来数据只是两个例子

00:04:26.150 --> 00:04:31.040
可能会导致大量的反向测试结果向前测试不会受到此类错误的影响

00:04:31.040 --> 00:04:35.960
据说这是测试您的策略的好工具

00:04:35.960 --> 00:04:40.669
重要的是要有耐心，不要在每天的一天或一周内得出任何结论

00:04:40.669 --> 00:04:45.310
单靠测试结果还不足以说明您的算法是好是坏

00:04:45.310 --> 00:04:50.840
下一个经常发生的主要算法交易错误不是会计

00:04:50.840 --> 00:04:53.570
测试算法时的交易成本

00:04:53.570 --> 00:04:57.169
大多数人会承担明显的交易成本，例如交易佣金

00:04:57.169 --> 00:05:01.520
和饲料，但除了这些成本外，还有其他各种交易成本可以

00:05:01.520 --> 00:05:05.630
对您的底线有很大的影响，让我给您一些

00:05:05.630 --> 00:05:09.770
首先，重要的是要考虑与之相关的成本

00:05:09.770 --> 00:05:14.090
流动性取决于您的交易，一个很好的假设是说您

00:05:14.090 --> 00:05:18.070
开立或平仓交易时总是要支付买卖差价

00:05:18.070 --> 00:05:21.740
此外，根据您的交易量，您还应该考虑

00:05:21.740 --> 00:05:26.690
如果证券交易稀少且您使用的是限价单，则会出现滑点

00:05:26.690 --> 00:05:31.250
如果有时候有时候根本无法进入或离开这个位置

00:05:31.250 --> 00:05:34.789
回测引擎没有考虑到这一点，这可能导致不切实际

00:05:34.789 --> 00:05:39.169
结果最后但并非最不重要的取决于您所交易的内容

00:05:39.169 --> 00:05:43.669
与您的交易相关的额外费用，例如，如果您卖空

00:05:43.669 --> 00:05:48.080
在给定的安全性的基础上，重要的是要考虑做空的成本

00:05:48.080 --> 00:05:51.530
计入借贷费用时，您还应考虑以下事实：

00:05:51.530 --> 00:05:55.610
有时甚至没有什么份额太短，请记住，不是每个

00:05:55.610 --> 00:06:00.949
总是可以缩短安全性，这些示例可以使您对以下方面有所了解

00:06:00.949 --> 00:06:04.760
开发时应考虑哪些交易成本和限制，以及

00:06:04.760 --> 00:06:09.110
测试您的交易算法，某些回测引擎已经解决了

00:06:09.110 --> 00:06:13.550
其中一些交易成本，因此，如果您使用的是商用手提袋测试仪，则可以

00:06:13.550 --> 00:06:18.260
一个好主意，以不同的算法检查如何处理贸易成本

00:06:18.260 --> 00:06:22.760
算法执行后，交易错误过早地变得太大

00:06:22.760 --> 00:06:26.690
在回测中很有用，您可能会兴奋并渴望通过以下方式进行测试

00:06:26.690 --> 00:06:30.530
真钱，但通常您的算法尚未真正为此做好准备

00:06:30.530 --> 00:06:35.090
相反，您应该继续完善它，并添加一些安全措施来对它进行压力测试

00:06:35.090 --> 00:06:39.490
完成所有这些操作之后，进行前向测试

00:06:39.490 --> 00:06:43.180
和您的attagirls通过了所有应该开始的必要测试

00:06:43.180 --> 00:06:46.870
为它分配真钱，但即使如此，您也不应该从任何开始

00:06:46.870 --> 00:06:52.470
相反，大量的资本开始时风险很小

00:06:52.470 --> 00:06:56.800
取决于实现和代理集成，可能会出现一些问题

00:06:56.800 --> 00:06:59.470
弹出并相信我，您非常想找到这些

00:06:59.470 --> 00:07:03.160
几千美元的风险比几千美元的问题

00:07:03.160 --> 00:07:06.520
该行的另一个大交易错误不是

00:07:06.520 --> 00:07:10.600
如果您已完成所有刚才提到的步骤，请信任您的算法，没有

00:07:10.600 --> 00:07:14.020
您不相信自己的过失的原因并不意味着您应该

00:07:14.020 --> 00:07:17.890
盲目地把钱扔给它，让它做它的事，但你不应该经常

00:07:17.890 --> 00:07:22.360
如果您介入手动更改交易，将会干扰其操作

00:07:22.360 --> 00:07:26.320
每隔一天，您将无法分析算法的真实性能

00:07:26.320 --> 00:07:30.190
因为它永远都没有机会进行实际交易，所以请务必给您

00:07:30.190 --> 00:07:34.300
有人说你应该继续闭上眼​​睛

00:07:34.300 --> 00:07:38.290
关于它开始进行似乎没有任何意义的交易时的操作

00:07:38.290 --> 00:07:41.950
最好是仔细检查并可能介入并

00:07:41.950 --> 00:07:46.810
覆盖它，我要谈的下一个错误是复制别人的

00:07:46.810 --> 00:07:51.010
代码有时您可能会倾向于只使用别人的代码

00:07:51.010 --> 00:07:55.210
如果您只是刚入门，那是入门和入门的最佳方法之一

00:07:55.210 --> 00:07:59.380
知道人机交易的基础知识，但除了使用他人的代码来

00:07:59.380 --> 00:08:02.860
学习或作为入门的粗略模板，应远离

00:08:02.860 --> 00:08:07.150
复制不是您自己的粘贴代码，复制别人的问题

00:08:07.150 --> 00:08:11.140
代码是您可能不完全了解实际情况，因此

00:08:11.140 --> 00:08:14.680
除非您真正了解正在发生的事情并完全了解该想法

00:08:14.680 --> 00:08:19.210
在代码后面，您不应该只是使用别人的代码，而应尝试

00:08:19.210 --> 00:08:22.780
开发自己的交易算法，这也会给您带来更好的结果

00:08:22.780 --> 00:08:27.460
学习经验，只是要确保我想再次强调

00:08:27.460 --> 00:08:30.730
并不意味着您不能使用其他人的代码来帮助您

00:08:30.730 --> 00:08:34.330
了解概念或学习如何做某些您不应该做的事情

00:08:34.330 --> 00:08:38.970
复制粘贴别人的整个交易算法，并期望它能为您工作

00:08:38.970 --> 00:08:43.630
下一个算法交易错误是一般的编程错误，即

00:08:43.630 --> 00:08:47.710
在新手程序员中尤其常见，即不评论您的

00:08:47.710 --> 00:08:50.690
编码交易算法时的代码

00:08:50.690 --> 00:08:54.410
关于此事的其他事项，您应该始终留下赞美的评论，

00:08:54.410 --> 00:08:58.190
帮助您了解编程时代码在做什么

00:08:58.190 --> 00:09:01.460
这似乎有些不必要，因为到那时您可能会

00:09:01.460 --> 00:09:05.480
理解一切，但是如果您仅仅两个或两个以上就不接触这段代码，

00:09:05.480 --> 00:09:09.320
三个星期，要掌握实际情况已经变得更加困难

00:09:09.320 --> 00:09:13.940
代码越高级，这个问题就越大，这就是为什么

00:09:13.940 --> 00:09:17.840
在SATA代码中留下注释的基本知识，这将有助于您的未来

00:09:17.840 --> 00:09:22.640
了解编写代码时发生的情况尝试留下注释，以便

00:09:22.640 --> 00:09:28.040
即使是从未见过您的代码的人也可以理解它ix

00:09:28.040 --> 00:09:31.910
算法交易错误只关注总收益

00:09:31.910 --> 00:09:36.470
开发分析和比较您的总交易量时的算法

00:09:36.470 --> 00:09:40.430
需要一些方法来评估他们最明显的表现，

00:09:40.430 --> 00:09:44.840
评估算法性能的最简单方法是在

00:09:44.840 --> 00:09:49.460
一天结束时，你想尽可能多地赚钱我认为

00:09:49.460 --> 00:09:53.570
您赚钱的方式同样重要让我给您一个非常简单的方法

00:09:53.570 --> 00:09:57.860
在这个例子中，我们将比较两个交易的表现

00:09:57.860 --> 00:10:02.780
算法，这是第一个算法在一个算法上的百分比收益图

00:10:02.780 --> 00:10:08.510
如您所见，它的年总回报率为40％，这是

00:10:08.510 --> 00:10:13.280
第二年前的图表，该图表的年收益率只有30％

00:10:13.280 --> 00:10:17.480
算法，您宁愿将钱分配给哪一个，即使第一个

00:10:17.480 --> 00:10:21.590
在减少水的总收益方面，胜过第二个

00:10:21.590 --> 00:10:26.720
在某个时候80％的大多数交易者不会继续使用错误

00:10:26.720 --> 00:10:31.730
在几个月内损失了80％，这意味着他们永远都不会经历

00:10:31.730 --> 00:10:36.980
复苏很有希望，这个例子表明交易的总收益

00:10:36.980 --> 00:10:41.350
策略是评估和比较不同算法的最佳方法

00:10:41.350 --> 00:10:45.770
因此，除了返回一些指标外，查看其他指标也很重要

00:10:45.770 --> 00:10:50.390
有用的措施是收益的风险波幅，最大回撤期

00:10:50.390 --> 00:10:55.970
而更多特定指标则包含诸如波动性风险和

00:10:55.970 --> 00:11:01.560
绩效成为衡量指标之一是夏普比率

00:11:01.560 --> 00:11:05.610
这是一个很好的指标，可让您轻松快速地进行Gorge和

00:11:05.610 --> 00:11:10.170
比较算法的性能我想要的最后一个错误

00:11:10.170 --> 00:11:13.980
在创建交易算法时要谈论的是没有策略

00:11:13.980 --> 00:11:18.300
在创建交易之前，您需要执行一个非常重要的步骤

00:11:18.300 --> 00:11:22.500
算法，并且正在开发一种交易策略，一种交易算法

00:11:22.500 --> 00:11:27.810
仅仅是抽象交易策略的具体实现

00:11:27.810 --> 00:11:31.790
策略可以被认为是想法和算法的执行

00:11:31.790 --> 00:11:35.460
制定交易策略就是想出很多主意

00:11:35.460 --> 00:11:41.460
测试它们的有效性并继续前进，让我给您举个例子，一个可能的想法

00:11:41.460 --> 00:11:46.680
可能是两个主要的市场ETF的spui和QQQ紧密相关，并且

00:11:46.680 --> 00:11:51.150
临时价格差异周围的交易可能存在优势

00:11:51.150 --> 00:11:55.050
下一步将是通过查看SP明智地部分检验该假设

00:11:55.050 --> 00:11:59.370
和QQ的历史关联，如果一切看起来都不错，您就可以开始

00:11:59.370 --> 00:12:03.870
如果您想看到一些想法，尝试围绕该想法制定某种策略

00:12:03.870 --> 00:12:07.920
我强烈推荐更详细的可能交易策略示例

00:12:07.920 --> 00:12:11.370
查看我最近关于不同类型的算法交易的视频

00:12:11.370 --> 00:12:16.830
现有的策略让我们现在快速总结算法交易错误

00:12:16.830 --> 00:12:20.880
首先请确保此视频不适合您

00:12:20.880 --> 00:12:25.080
回测数据的算法避免这样做的一种方法是通过保留一个

00:12:25.080 --> 00:12:30.690
一定比例的可用反向测试数据保持不变，稍后再进行

00:12:30.690 --> 00:12:35.010
确保您的算法使用的所有信息实际上在

00:12:35.010 --> 00:12:38.970
它使用的时间仅用未来的信息来预测未来

00:12:38.970 --> 00:12:44.160
如果将来是过去，那么可以工作，请确保充分利用

00:12:44.160 --> 00:12:48.540
向前测试的好处为您的eligos提供了向前测试

00:12:48.540 --> 00:12:53.130
是对回测的重要补充，否则对

00:12:53.130 --> 00:12:57.060
除明显的交易外，还应正确考虑交易成本和限制

00:12:57.060 --> 00:13:00.779
佣金此外，请确保不要做得太大

00:13:00.779 --> 00:13:04.980
准备适合您的算法为时过早，请确保开始

00:13:04.980 --> 00:13:10.080
如果一切正常，则将其缩小，然后慢慢扩大规模

00:13:10.080 --> 00:13:14.650
一遍又一遍地证明自己，您应该相信这一点，这意味着您

00:13:14.650 --> 00:13:18.760
每秒都会干扰它，否则您将永远不知道自己要做什么

00:13:18.760 --> 00:13:23.080
算法在开发自己的交易算法时实际上是有能力的

00:13:23.080 --> 00:13:27.730
确保充分理解和思考它的各个方面，这意味着

00:13:27.730 --> 00:13:32.320
您不应该只复制别人的代码，并希望获得最好的代码

00:13:32.320 --> 00:13:36.310
彻底注释掉您的代码很重要，这样您就可以

00:13:36.310 --> 00:13:40.660
总是以后再回来，仍然了解第九次发生了什么

00:13:40.660 --> 00:13:44.230
算法交易错误无法评估您的风险

00:13:44.230 --> 00:13:48.100
算法性能显然，该算法的总回报为

00:13:48.100 --> 00:13:52.300
重要，但了解您的Agger如何做到这一点也同样重要

00:13:52.300 --> 00:13:57.400
最后返回，但同样重要的是，请务必在制定交易策略之前

00:13:57.400 --> 00:14:01.750
尝试创建一个交易算法交易算法只是一个具体的例子

00:14:01.750 --> 00:14:05.710
实施交易策略的方法我强烈建议您结帐

00:14:05.710 --> 00:14:10.450
我的视频和Egger是交易策略，可以从中获得一些灵感

00:14:10.450 --> 00:14:13.720
话虽如此，我真的希望您喜欢这个视频并学到一些新的东西，如果

00:14:13.720 --> 00:14:17.440
您对以后的视频有任何建议，一定要让我

00:14:17.440 --> 00:14:21.250
在下面的评论部分知道，否则请确保粉碎类似

00:14:21.250 --> 00:14:24.580
按钮订阅并打开通知帐单以获取更多内容，例如

00:14:24.580 --> 00:14:28.290
感谢您的收看

00:14:28.640 --> 00:14:30.700
你

