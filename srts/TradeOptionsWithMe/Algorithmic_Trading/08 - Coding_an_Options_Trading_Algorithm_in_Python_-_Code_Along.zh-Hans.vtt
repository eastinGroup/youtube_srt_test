WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.480 --> 00:00:04.000
欢迎回到本视频中的另一个视频，我们将开发和

00:00:04.000 --> 00:00:07.680
在Quantum Connect平台内实施期权交易算法

00:00:07.680 --> 00:00:11.200
如果要一起使用python，请确保先创建一个免费的

00:00:11.200 --> 00:00:14.080
quantconnect帐户的描述框中有一个链接

00:00:14.080 --> 00:00:17.119
下面否则我想以简短的免责声明开始

00:00:17.119 --> 00:00:20.720
也就是说，该视频的主要目的是向您概述

00:00:20.720 --> 00:00:25.279
交易算法开发过程中的量化连接平台及其API

00:00:25.279 --> 00:00:28.400
因此，我并不是在说我们要采用的策略

00:00:28.400 --> 00:00:32.239
实施一定是非常好的或有利可图的策略

00:00:32.239 --> 00:00:36.079
所以在观看这段视频时，请记住这一点

00:00:36.079 --> 00:00:39.760
让我们切入正题，开始制定我们的交易策略

00:00:39.760 --> 00:00:43.360
在我们开始实际执行任何操作之前，尽管让我先介绍一下

00:00:43.360 --> 00:00:47.039
概念层面的策略，以便您更好地了解我们的代码是什么

00:00:47.039 --> 00:00:49.520
应该去做我们要去做的策略

00:00:49.520 --> 00:00:54.160
实施不是一个非常积极的策略，该策略的目标是减少

00:00:54.160 --> 00:00:58.079
波动性并防止现有多头股票出现下行趋势

00:00:58.079 --> 00:01:01.039
要做到这一点，我们需要投资

00:01:01.039 --> 00:01:04.000
与我们的多头头寸成反比

00:01:04.000 --> 00:01:07.520
为此，由于多种原因，我们将使用put选项

00:01:07.520 --> 00:01:10.799
首先，他们有一个负增量，这意味着他们从中获利

00:01:10.799 --> 00:01:15.119
其次，标的资产向下移动，它们具有正的维加值，

00:01:15.119 --> 00:01:18.479
意味着他们从隐含波动率的增加中获利，这

00:01:18.479 --> 00:01:22.880
很好，因为当价格下跌时，隐含波动率通常会上升

00:01:22.880 --> 00:01:26.560
换句话说，隐含波动率通常与

00:01:26.560 --> 00:01:29.759
基础资产最后但并非最不重要的看跌期权具有

00:01:29.759 --> 00:01:33.040
风险有限，同时还有很大的上升潜力

00:01:33.040 --> 00:01:36.960
迄今为止，该策略的问题在于，不断购买认沽期权作为

00:01:36.960 --> 00:01:40.240
保护可能会非常昂贵，并且会对整体产生负面影响

00:01:40.240 --> 00:01:43.439
这就是为什么我们只想购买看跌期权的原因

00:01:43.439 --> 00:01:46.479
如果我们怀疑即将到来的市场下跌，该如何选择

00:01:46.479 --> 00:01:50.079
我们通过查看标准化的隐含波动率来衡量

00:01:50.079 --> 00:01:53.439
如果隐含波动率较高，则为过去半年

00:01:53.439 --> 00:01:57.520
我们购买看跌期权作为保护通常会意味着市场

00:01:57.520 --> 00:02:01.439
已经下降了一定数量，但从长远来看，我们希望购买

00:02:01.439 --> 00:02:04.479
稍晚一点的保护比浪费金钱更好

00:02:04.479 --> 00:02:07.119
持续不必要的保护

00:02:07.119 --> 00:02:10.640
在我们转到quan connect平台之前，让我快速回顾一下

00:02:10.640 --> 00:02:14.640
再策略一次，策略的目标是减少

00:02:14.640 --> 00:02:18.080
现有多头头寸的下行风险和波动性

00:02:18.080 --> 00:02:21.599
不会在不必要的保护上浪费太多钱

00:02:21.599 --> 00:02:25.840
我们通过在波动性相对较高时购买看跌期权来实现这一目标

00:02:25.840 --> 00:02:29.680
我们使用这种高水平的隐含波动率作为潜在的迹象

00:02:29.680 --> 00:02:34.239
话要说，即将到来的市场下滑

00:02:34.239 --> 00:02:37.599
到quantconnect平台并开始编写一些Python代码

00:02:37.599 --> 00:02:40.800
如果您还没有这样做，请先确保快速创建一个免费帐户

00:02:40.800 --> 00:02:45.120
继续观看此视频（如果已这样做），请导航至实验室

00:02:45.120 --> 00:02:49.200
标签，然后单击创建新算法，然后单击模板模块集合

00:02:49.200 --> 00:02:52.560
将会弹出，但我们不会在此视频中使用它们中的任何一个

00:02:52.560 --> 00:02:56.160
相反，我们单击“创建算法”以创建新算法

00:02:56.160 --> 00:02:59.440
现在您应该看到一个on数据并初始化方法

00:02:59.440 --> 00:03:03.040
我们将在算法中使用这两种方法，但在开始之前

00:03:03.040 --> 00:03:07.599
实施它们，让我们首先导入两件事

00:03:13.519 --> 00:03:17.120
首先，我们必须从日期时间导入时间增量

00:03:17.120 --> 00:03:24.640
然后我们将从quantconnect.data.custom.cboe模块中导入所有内容

00:03:27.200 --> 00:03:32.480
我们将使用此自定义cboe数据获取波动率指数的定价数据

00:03:32.480 --> 00:03:35.680
或vix来衡量sp的隐含波动率

00:03:35.680 --> 00:03:40.080
500索引，我们将使用此数据来创建指标

00:03:40.080 --> 00:03:43.120
衡量隐含波动率的高低

00:03:43.120 --> 00:03:47.760
与最近的历史相比，但在得出波动率指标之前

00:03:47.760 --> 00:03:52.560
让我们首先实现我们的initialize方法，我们将首先设置一个开始和结束

00:03:52.560 --> 00:03:56.480
我们的背部测试日期，我们将选择2017年10月1日

00:03:56.480 --> 00:03:59.599
作为开始日期，并于2020年10月1日作为结束

00:03:59.599 --> 00:04:04.640
约会，但如果您愿意，可以尝试不同的时间段

00:04:10.879 --> 00:04:14.400
接下来，我们将为手提袋测试设置初始现金余额

00:04:14.400 --> 00:04:19.680
我现在将使用100 000，然后我们必须添加基础

00:04:19.680 --> 00:04:24.400
我们将要为此视频进行交易的安全性，我将选择etf间谍

00:04:24.400 --> 00:04:28.560
作为基础证券，因为它可以跟踪sp 500索引，并且具有出色的

00:04:28.560 --> 00:04:32.320
期权的流动性，我们将从开始添加每分钟的数据

00:04:32.320 --> 00:04:36.880
目前，Quant Connect API仅支持选项的详细数据

00:04:36.880 --> 00:04:39.840
此外，仅支持原始定价数据

00:04:39.840 --> 00:04:44.000
选项，这意味着历史数据不会调整库存价格

00:04:44.000 --> 00:04:47.440
分裂或其他类似事件，但这不会造成任何问题

00:04:47.440 --> 00:04:49.759
为我们

00:04:55.120 --> 00:04:58.759
最后，我们将基础资产的符号保存到变量中

00:04:58.759 --> 00:05:01.759
自我符号

00:05:03.680 --> 00:05:07.600
然后我们还想添加vic的价格数据，我们可以通过添加

00:05:07.600 --> 00:05:12.080
数据方法，我们将符号保存在self.wix中，以便以后可以访问

00:05:12.080 --> 00:05:14.560
数据

00:05:18.240 --> 00:05:21.680
然后我们将波动率指标初始化为零

00:05:21.680 --> 00:05:26.960
我们稍后将使用该指标作为我们期权头寸的输入信号

00:05:26.960 --> 00:05:30.720
除此之外，我们还必须初始化一些其他变量

00:05:30.720 --> 00:05:34.479
首先我们将self.contract初始化为一个空字符串

00:05:34.479 --> 00:05:40.479
和self.contract添加到一个空集self.contract将跟踪

00:05:40.479 --> 00:05:43.919
我们添加了哪些期权合约，这样我们就不必不必要地添加

00:05:43.919 --> 00:05:48.960
下一次多次选择数据，我们将初始化大多数

00:05:48.960 --> 00:05:52.160
参数第一个参数称为自点

00:05:52.160 --> 00:05:56.319
x之前的天数，它表示到期前的天数

00:05:56.319 --> 00:05:59.840
我们将关闭我们的期权头寸。

00:05:59.840 --> 00:06:02.479
到期，以便我们不行使任何

00:06:02.479 --> 00:06:06.720
选项，这意味着到期前两天我们将关闭我们的多头看跌期权

00:06:06.720 --> 00:06:09.919
如果我们有一个位置

00:06:10.000 --> 00:06:14.880
我引用下一个参数self.dte，它表示我们的目标时间

00:06:14.880 --> 00:06:19.280
以天为单位的有效期限，因此值25表示我们的目标是

00:06:19.280 --> 00:06:24.639
在到期前约25天购买看跌期权

00:06:27.319 --> 00:06:32.160
self.ocm是我们的选择应该超出预算的目标百分比

00:06:32.160 --> 00:06:35.919
所以0.01表示我们要购买一个看跌期权

00:06:35.919 --> 00:06:39.440
钱减少百分之一

00:06:41.360 --> 00:06:46.240
接下来，我们有self.look iv代表我们的天数

00:06:46.240 --> 00:06:51.039
波动率指标回顾了过去，因此150表示它比较了

00:06:51.039 --> 00:06:55.800
当前的vix水平到过去150天的水平

00:06:55.800 --> 00:06:59.680
self.iv水平是波动率指标的水平

00:06:59.680 --> 00:07:03.440
在此之上，我们想购买看跌期权，以防止潜在的损失。

00:07:03.440 --> 00:07:09.199
换句话说，市场崩溃是信号线

00:07:10.800 --> 00:07:14.720
然后我们指定投资组合的百分比将用于基础

00:07:14.720 --> 00:07:16.800
资产，因为此策略是被动的

00:07:16.800 --> 00:07:20.240
策略，我将将此变量初始化为0.9

00:07:20.240 --> 00:07:25.280
这意味着我们约90％的投资组合将用于间谍活动

00:07:25.280 --> 00:07:30.000
最后但并非最不重要的自我点期权日志指定了多少期权合约

00:07:30.000 --> 00:07:33.919
与我们拥有的基础资产的股份数量相比，我们购买

00:07:33.919 --> 00:07:38.639
因此，这里的90值意味着我们每90股可购买一个期权

00:07:38.639 --> 00:07:42.000
拥有一份涵盖100个标准期权合约

00:07:42.000 --> 00:07:45.759
基础股票的份额，因此这里的值90意味着当我们

00:07:45.759 --> 00:07:49.440
购买看跌期权作为保护，我们购买的股票足以覆盖全部

00:07:49.440 --> 00:07:52.160
投资组合，此值越低越多

00:07:52.160 --> 00:07:56.879
保护我们买，我知道初始化方法可以是

00:07:56.879 --> 00:08:00.000
有点无聊，但我们快完成了，所以坚持下去

00:08:00.000 --> 00:08:03.440
我们只需要快速安排要在一个上调用的两个方法

00:08:03.440 --> 00:08:07.120
首先我们定期安排所谓的绘图

00:08:07.120 --> 00:08:13.840
我们用来创建自定义图表的功能

00:08:18.400 --> 00:08:23.520
我们希望将其称为间谍交易的每个市场

00:08:25.759 --> 00:08:31.520
或更具体地说，我们希望在每个市场出现30分钟后将其称为

00:08:38.839 --> 00:08:41.839
打开

00:08:42.320 --> 00:08:45.920
然后，我们以完全相同的方式安排vix rank方法

00:08:45.920 --> 00:08:55.839
该方法将用于计算我们的波动率指标值

00:08:58.880 --> 00:09:02.480
最后但并非最不重要的一点是，我们必须为算法设置预热时间，以便

00:09:02.480 --> 00:09:05.760
波动率指标有足够的数据可以正确使用

00:09:05.760 --> 00:09:09.839
从一开始就

00:09:16.399 --> 00:09:19.839
现在我们已经完成了实现initialize方法的操作，让我们创建和

00:09:19.839 --> 00:09:23.680
实施vxrank方法，以便我们可以将波动率指标用于

00:09:23.680 --> 00:09:26.560
进入信号

00:09:29.440 --> 00:09:33.200
要创建和更新波动率指标，我们首先需要查看

00:09:33.200 --> 00:09:36.160
过去的固定价格数据，我们可以访问wix的

00:09:36.160 --> 00:09:39.279
通过调用历史记录方法的价格历史记录

00:09:39.279 --> 00:09:44.640
然后，我们指定符号时间范围和所请求数据的分辨率

00:09:44.640 --> 00:09:48.160
对于符号，我们使用self.wix并在时间范围内

00:09:48.160 --> 00:09:54.720
我们使用self.lookback变量获取过去150天的价格历史记录

00:09:54.720 --> 00:09:58.240
此外，由于我们只感兴趣，因此我们需要每日数据

00:09:58.240 --> 00:10:04.000
在此时间段内的高价，低价和当前价

00:10:04.000 --> 00:10:07.279
然后，history方法将返回一个具有高

00:10:07.279 --> 00:10:12.160
在指定时间内每天的低开仓收盘价和交易量

00:10:12.160 --> 00:10:15.920
下一步是实际计算波动率指标的值

00:10:15.920 --> 00:10:20.160
我们将其称为self.rank以计算此值，我们必须

00:10:20.160 --> 00:10:23.040
通过查看其高值来规范当前的vix水平

00:10:23.040 --> 00:10:26.560
并以低廉的价格使用我们要使用的确切公式

00:10:26.560 --> 00:10:29.680
是当前的iv水平减去低价

00:10:29.680 --> 00:10:33.839
除以价格范围

00:10:48.560 --> 00:10:52.800
简单来说，vxrank方法可计算电流的高低

00:10:52.800 --> 00:10:56.800
修复级别与最近的价格历史记录进行了比较，因此

00:10:56.800 --> 00:10:59.519
值1表示当前的vix价格为

00:10:59.519 --> 00:11:04.160
处于新的高点，而零值意味着它处于新的低点

00:11:04.160 --> 00:11:09.519
而值0.5表示当前的vix价格在中间

00:11:09.519 --> 00:11:13.360
现在我们完成了vix rank方法，这意味着我们可以移动

00:11:13.360 --> 00:11:16.079
转到每次调用的on数据方法

00:11:16.079 --> 00:11:20.800
我们的算法收到新数据，应该每分钟差不多

00:11:20.800 --> 00:11:25.360
因为我们在initialize方法中请求了微小的间谍数据

00:11:25.360 --> 00:11:28.720
我们要做的第一件事是确保算法完成

00:11:28.720 --> 00:11:31.040
热身，我们可以用一个简单的如果

00:11:31.040 --> 00:11:36.800
声明，如果尚未完成预热，我们只是返回而无所事事

00:11:36.800 --> 00:11:43.600
接下来，我们检查我们是否已经投资了基础资产

00:11:43.600 --> 00:11:47.920
如果不是，我们会使用self.set持股购买股票，直到我们的投资组合

00:11:47.920 --> 00:11:50.720
该资产的持有量约为百分比

00:11:50.720 --> 00:11:57.839
自我百分比

00:12:00.560 --> 00:12:04.639
下一步是检查我们的波动率指标是否为self.rank

00:12:04.639 --> 00:12:08.480
高于我们初始化为0.5的输入信号电平

00:12:08.480 --> 00:12:11.680
如果是，则意味着间谍的隐含波动率

00:12:11.680 --> 00:12:15.519
相对较高，因此我们想购买看跌期权作为保护

00:12:15.519 --> 00:12:19.760
我们通过调用self.buy put方法来做到这一点，

00:12:19.760 --> 00:12:24.480
在几分钟内实施，现在只剩下一件事了

00:12:24.480 --> 00:12:27.920
在on data方法中实现，即检查我们是否距离太近

00:12:27.920 --> 00:12:31.519
到到期日，如果我们要关闭任何现有的

00:12:31.519 --> 00:12:35.440
放仓显然我们只想在以下情况下这样做

00:12:35.440 --> 00:12:38.160
已经被投资了，这就是为什么我们首先检查是否

00:12:38.160 --> 00:12:42.079
self.contract是非空的，如果不为空，我们应该进行投资

00:12:42.079 --> 00:12:45.120
在看跌期权中，我们然后检查

00:12:45.120 --> 00:12:53.839
该选项在今天的两天内

00:12:56.720 --> 00:13:07.839
如果是的话，我们要关闭它，使其不会过期并被行使

00:13:07.920 --> 00:13:12.079
要关闭该选项，我们使用self.liquidate之后，我们记录下

00:13:12.079 --> 00:13:21.839
关闭该选项并将self.contract重置为空字符串

00:13:28.639 --> 00:13:32.320
既然我们已经完成了on data方法，那么我们就实现买入看跌期权

00:13:32.320 --> 00:13:36.720
实际购买看跌期权的方法

00:13:37.200 --> 00:13:41.199
但在此方法可以购买任何期权之前，它首先必须获取以下数据：

00:13:41.199 --> 00:13:43.760
这些选项，因此，如果您当前没有

00:13:43.760 --> 00:13:47.760
交易合约，我们首先通过调用期权过滤器来获得

00:13:47.760 --> 00:13:51.600
我们必须在这里实现的方法

00:13:56.880 --> 00:14:02.079
将合同保存为self.contract后，我们返回

00:14:02.079 --> 00:14:05.519
我们这样做是因为添加新的选项数据通常至少需要一个

00:14:05.519 --> 00:14:08.880
算法的迭代

00:14:11.279 --> 00:14:15.040
如果我们已经有交易合同，我们还没有投资

00:14:15.040 --> 00:14:19.760
数据准备就绪，我们想购买该看跌期权

00:14:23.279 --> 00:14:26.720
这可以通过self.buy完成，需要两个

00:14:26.720 --> 00:14:30.079
论据第一个是实际安全性的象征

00:14:30.079 --> 00:14:34.800
第二个是数量，因为我们要购买较早的指定看跌期权

00:14:34.800 --> 00:14:37.760
选项，我们使用self.contract作为第一个参数

00:14:37.760 --> 00:14:41.120
对于数量，我们除以基础股票的数量

00:14:41.120 --> 00:14:44.560
我们由self.options参数拥有

00:14:44.560 --> 00:14:47.600
较早初始化

00:14:52.560 --> 00:14:57.120
但在使用此值之前，我们必须将其四舍五入到最接近的整数

00:14:57.120 --> 00:15:01.199
现在，此方法将为基础股票的每90股购买一个看跌期权

00:15:01.199 --> 00:15:05.480
我们拥有的证券注意到90股是

00:15:05.480 --> 00:15:10.320
我们在开始时初始化的self.optionsaloc

00:15:10.320 --> 00:15:14.320
接下来，让我们实现用于发现的选项过滤器方法

00:15:14.320 --> 00:15:18.000
我们要交易哪个期权并为此期权添加正确的数据

00:15:18.000 --> 00:15:21.920
Quantum Connect API有多种交易期权的方式

00:15:21.920 --> 00:15:25.199
交易期权的最简单方法是使用设置过滤器

00:15:25.199 --> 00:15:28.880
并通过遍历期权链对象的问题

00:15:28.880 --> 00:15:32.639
是它不必要地添加了大量的期权数据，这使得

00:15:32.639 --> 00:15:36.959
算法非常低效，实际上它是如此低效，以至于

00:15:36.959 --> 00:15:40.399
您可能需要花费数小时来对任何算法进行回测

00:15:40.399 --> 00:15:44.560
值得注意的时间长度，这就是为什么我们不会这样做的原因

00:15:44.560 --> 00:15:48.320
取而代之的是，我们将使用所谓的期权链提供商

00:15:48.320 --> 00:15:52.560
手动仅为您实际想要交易的那些期权添加数据

00:15:52.560 --> 00:15:56.079
通过这种方式，您可以回测通常需要采取的策略

00:15:56.079 --> 00:16:00.560
在几秒钟或几分钟内花费几个小时，但期权链的一个缺点

00:16:00.560 --> 00:16:04.240
提供程序是它当前不允许您使用选项希腊语和

00:16:04.240 --> 00:16:08.160
幸运的是，隐含波动率值我们不需要

00:16:08.160 --> 00:16:11.440
算法，但对于许多其他选项算法，我们将希望使用

00:16:11.440 --> 00:16:13.600
欢迎选择期权合约进行交易

00:16:13.600 --> 00:16:17.120
因此，如果这是您的目标，那么期权链提供商目前不是最佳方法

00:16:17.120 --> 00:16:20.880
这样做，但这是另一个视频的主题

00:16:20.880 --> 00:16:23.279
让我们实现选项过滤器方法

00:16:23.279 --> 00:16:26.399
我们将首先为我们添加当前可用的期权合约

00:16:26.399 --> 00:16:29.600
使用自点期权链提供程序的基础

00:16:29.600 --> 00:16:37.839
点获得期权合约清单

00:16:40.880 --> 00:16:44.560
我们现在可以按行使价手动过滤此合约清单

00:16:44.560 --> 00:16:49.920
到期选项类型和选项样式，但在此之前，让我们快速保存

00:16:49.920 --> 00:16:53.680
标的资产的当前价格对自身的价格

00:16:53.680 --> 00:16:58.800
我们可以用self.securities.price做到这一点

00:16:59.759 --> 00:17:03.680
现在我们首先过滤掉所有到期的货币看跌期权关闭

00:17:03.680 --> 00:17:06.880
到我们想要的到期日期并将其保存到otm中

00:17:06.880 --> 00:17:12.640
仅对过滤器输出选项进行过滤，我们检查选项权是否等于

00:17:12.640 --> 00:17:19.839
为每个选项放

00:17:22.799 --> 00:17:26.319
只选择足够的货币选择，我们确保

00:17:26.319 --> 00:17:29.679
基础价格减去每个期权的行使价为

00:17:29.679 --> 00:17:33.120
大于基础价格乘以我们想要的金额

00:17:33.120 --> 00:17:36.400
没钱的选择

00:17:44.080 --> 00:17:50.480
在initialize方法中，此数量self.ota已初始化为百分之一

00:17:50.480 --> 00:17:54.320
接下来，我们检查了从现在到到期日期的天数

00:17:54.320 --> 00:17:58.840
每个选项的有效期都在我们期望的有效期的正负八天之内

00:17:58.840 --> 00:18:01.840
日期

00:18:26.720 --> 00:18:31.679
如果otm投放清单现在不为空，我们将以某种方式进行排序，以便

00:18:31.679 --> 00:18:43.840
最接近我们期望的警示，期望的失效日期排在最前面

00:19:05.200 --> 00:19:08.320
之后，我们选择此排序列表的第一个选项

00:19:08.320 --> 00:19:12.160
这是我们要交易的选择

00:19:20.160 --> 00:19:24.559
但是在实际交易之前，必须先将其数据添加到算法中

00:19:24.559 --> 00:19:29.360
我们只会这样做，但是如果我们还没有这样做的话

00:19:36.080 --> 00:19:40.400
如果没有，则使用添加选项合约来订阅指定数据

00:19:40.400 --> 00:19:42.960
合同

00:19:51.520 --> 00:19:56.960
然后我们退回该合约，以便买入卖出方式可以买入

00:19:56.960 --> 00:20:01.520
如果ocm puts列表为空，我们将返回一个空字符串，因为没有

00:20:01.520 --> 00:20:08.559
符合我们标准的选项，现在我们已经完成了很多工作

00:20:08.559 --> 00:20:11.760
实现此交易算法的功能

00:20:11.760 --> 00:20:14.960
尽管如此，我们想再添加两个小东西

00:20:14.960 --> 00:20:18.640
首先，我们执行绘图方法，将创建两个图表，这些图表可以

00:20:18.640 --> 00:20:21.440
帮助我们了解算法的性能

00:20:21.440 --> 00:20:26.080
要创建一个自定义图，我们使用self.plot，它需要三个参数

00:20:26.080 --> 00:20:29.679
第一个是我们要创建的图表的名称，第二个是

00:20:29.679 --> 00:20:33.440
是此图表上特定图的名称以及最后一个参数

00:20:33.440 --> 00:20:37.280
是该图的实际数据

00:20:38.480 --> 00:20:41.840
我们将创建两个每个都有两个图的自定义图表

00:20:41.840 --> 00:20:45.840
第一个将绘制我们的iv指示器以及进入信号线

00:20:45.840 --> 00:20:49.440
第二张图表将标出标的资产的价格以及

00:20:49.440 --> 00:21:03.840
任何未平仓合约的执行价格

00:21:07.360 --> 00:21:11.360
要绘制未平仓合约的行使价，我们必须首先检查我们是否

00:21:11.360 --> 00:21:14.480
投资我们通过创建所有列表来做到这一点

00:21:14.480 --> 00:21:33.600
如果此列表不为空，则我们的投资组合中的期权头寸

00:21:33.600 --> 00:21:36.559
开仓位置

00:21:42.400 --> 00:21:59.840
如果是这种情况，我们使用self.plot绘制该期权的行使价

00:22:07.600 --> 00:22:12.240
最后但并非最不重要的一点是，我们将对另一种微小的东西使用另一种方法来命名

00:22:12.240 --> 00:22:15.600
该方法的含义是在订单事件上，并且顾名思义

00:22:15.600 --> 00:22:20.080
在每个订单事件上都会自动调用它

00:22:23.760 --> 00:22:29.520
我们要做的就是使用self.log锁定每个订单事件

00:22:32.080 --> 00:22:35.520
这非常适合回测调试和实时交易目的

00:22:35.520 --> 00:22:40.480
因为它可以为您很好地概述正在发生的订单事件

00:22:40.480 --> 00:22:43.919
话虽如此，我们现在已经成功创建了我们的期权交易

00:22:43.919 --> 00:22:46.320
现在剩下要做的就是

00:22:46.320 --> 00:22:48.559
点击右上角的后退测试按钮

00:22:48.559 --> 00:22:51.760
然后，这将在我们确定的时间范围内对我们的交易策略进行回测

00:22:51.760 --> 00:22:56.640
在初始化方法中指定，因为我将时间范围指定为

00:22:56.640 --> 00:22:59.760
最近三年的结果将是

00:22:59.760 --> 00:23:02.799
此数据请记住，取决于

00:23:02.799 --> 00:23:05.440
您选择在哪个时间范围内对该算法进行回测

00:23:05.440 --> 00:23:08.880
结果可能会明显不同，甚至可能更糟

00:23:08.880 --> 00:23:13.120
比回溯测试完成后的这段时间更长的时间

00:23:13.120 --> 00:23:15.760
效果概览和报告将生成

00:23:15.760 --> 00:23:19.440
供您分析策略及其效果

00:23:19.440 --> 00:23:23.360
我将选择数据图表和薄纱图表，因为这些是自定义图表

00:23:23.360 --> 00:23:27.919
我们为此算法创建的代码，因为我们没有使用其他大多数代码

00:23:27.919 --> 00:23:32.880
图表，我希望您能在这段时间内取消选中它们

00:23:32.880 --> 00:23:35.120
这些策略似乎效果很好

00:23:35.120 --> 00:23:39.039
我们可以直接比较我们的策略和间谍的性能

00:23:39.039 --> 00:23:42.559
通过查看此资产图表下方的数据图表

00:23:42.559 --> 00:23:46.960
正如您从数据图表中看到的那样，间谍也设法生成了相当可靠的

00:23:46.960 --> 00:23:50.240
返回，但是这里的关键区别是

00:23:50.240 --> 00:23:54.240
间谍以极高的波动率获得了这些回报

00:23:54.240 --> 00:23:57.440
在这三年中，间谍有多次

00:23:57.440 --> 00:24:01.360
另一方面，实际上降低了我们的策略

00:24:01.360 --> 00:24:06.159
在整个过程中几乎都是盈利的，尤其是

00:24:06.159 --> 00:24:10.960
总体而言，看跌期权在2020年初处理得很好

00:24:10.960 --> 00:24:13.919
最好地保护我们免受短期和快速崩溃的影响

00:24:13.919 --> 00:24:17.760
在长期障碍市场（例如

00:24:17.760 --> 00:24:22.159
一项是在2007年和2008年。在数据图表下方，我们可以

00:24:22.159 --> 00:24:25.919
请参阅自定义电压图表，其中显示了我们的自定义vix指示器

00:24:25.919 --> 00:24:31.200
以及该图下方的进入信号水平，我们可以看到一个概览

00:24:31.200 --> 00:24:34.960
更多的指标，在​​分析和评估交易时可能会有所帮助

00:24:34.960 --> 00:24:39.600
策略及其效果在这里，您还可以查看所有

00:24:39.600 --> 00:24:44.880
算法放置的命令访问日志代码以及更多内容

00:24:44.880 --> 00:24:48.000
如果您想学习如何最好地评估交易策略，

00:24:48.000 --> 00:24:51.440
这些指标图表的帮助以及更多我强烈推荐的指标

00:24:51.440 --> 00:24:54.400
查看我最新的视频，其中我谈到了如何做到最好

00:24:54.400 --> 00:24:59.440
否则，请评估您的交易策略，如果您想复制代码

00:24:59.440 --> 00:25:02.240
从这个视频中自己玩这个算法

00:25:02.240 --> 00:25:05.200
请务必查看下面描述框中的链接以克隆此链接

00:25:05.200 --> 00:25:07.919
算法，我强烈建议您通过

00:25:07.919 --> 00:25:11.440
每行代码，并尝试真正了解发生了什么

00:25:11.440 --> 00:25:15.120
如果您愿意，也可以尝试添加一些改进或仅更改一些改进

00:25:15.120 --> 00:25:17.919
我认为这是最好的之一

00:25:17.919 --> 00:25:21.840
学习和熟悉新api的方法

00:25:21.840 --> 00:25:25.600
我知道这段视频中介绍的策略相对简单

00:25:25.600 --> 00:25:30.159
但是Quant Connect选项API可能会令人困惑，特别是对于新手

00:25:30.159 --> 00:25:33.440
这就是为什么我想从一个相对简单的例子开始

00:25:33.440 --> 00:25:36.720
但是如果您要我制作类似的视频，在其中我可以实现更多

00:25:36.720 --> 00:25:40.640
复杂的多腿期权策略或其他交易算法

00:25:40.640 --> 00:25:44.480
如果您喜欢这部影片，请务必在下面的评论部分中告诉我

00:25:44.480 --> 00:25:47.120
您还应该查看我最近的其他视频之一

00:25:47.120 --> 00:25:50.880
在其中我使用python实现了量化连接中的股票交易策略

00:25:50.880 --> 00:25:53.919
否则下面的说明框中有一个链接

00:25:53.919 --> 00:25:57.360
一定要确保喜欢这部影片订阅我的频道并打开

00:25:57.360 --> 00:25:59.919
通知铃以获取更多类似内容

00:25:59.919 --> 00:26:08.720
谢谢收看

